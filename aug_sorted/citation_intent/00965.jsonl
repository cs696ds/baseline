{"text": "They involve fewer primitives , and they permit a grammar to be combined with the lexicon of a language , rather than being represented as a structure separate from the lexicon .They can represent any context - free grammar , and in addition they can be augmented like ATNs with arbitrary computational tests and actions which are to be performed as utterances are parsed .", "label": "", "metadata": {}, "score": "41.615074"}
{"text": "They involve fewer primitives , and they permit a grammar to be combined with the lexicon of a language , rather than being represented as a structure separate from the lexicon .They can represent any context - free grammar , and in addition they can be augmented like ATNs with arbitrary computational tests and actions which are to be performed as utterances are parsed .", "label": "", "metadata": {}, "score": "41.615074"}
{"text": "Whereas the grammar description is quite easy to describe , the parser behaviour is somewhat complex .This is due to the fact that every input string should derive to the most - likely result , even if it contains syntax errors .", "label": "", "metadata": {}, "score": "49.935913"}
{"text": "More recent prominent proponents of the approach are Jacobson and Baldridge .One of the key publications of CCG is ' 'The Syntactic Process ' ' by Mark Steedman .There are various efficient parsers available for CCG .One of the key publications of CCG is ' '", "label": "", "metadata": {}, "score": "55.395065"}
{"text": "In terms of language recognition , this can be easily avoided just considering a precedence in the rules ( pretty much like the precedence rules in computer language 's mathematical expressions ) .Parsers normally use grammars to analyze or recognize strings of a certain language .", "label": "", "metadata": {}, "score": "55.641586"}
{"text": "ATN networks require a representation for the grammar that is separate from the lexicon .I have implemented efficient ASD parsers in several programming languages , including Java , LISP and Smalltalk .I have also implemented graphical editors for ASD grammars which run in Java , and in Smalltalk / V or Visual Smalltalk under Microsoft Windows .", "label": "", "metadata": {}, "score": "56.723495"}
{"text": "ATN networks are more suitable for top - down parsing .So the label for the phrase that is recognized by a part of the network is placed after a final node in an ASD network , but in an initial node in an ATN .", "label": "", "metadata": {}, "score": "57.84941"}
{"text": "[ Pereira & Warren 80].In this paper , we identify the characteristics of FDG that we find useful for generation and contrast these with characteristics of the parsing formalisms and with other formalisms that are typically used for generation .", "label": "", "metadata": {}, "score": "58.493454"}
{"text": "Over the course of the past 5 years we have also explored the use of various off - the - shelf parsing formalisms , including an Augmented Transition Network ( ATN ) [ Woods 70].a Bottom - Up Chan Parser ( BUP )", "label": "", "metadata": {}, "score": "58.86198"}
{"text": "ASD networks have null or dummy nodes as the counterpart to JUMP arcs in ATN grammars .Both match empty strings in the utterance being parsed .ASD networks require only three kinds of node labels : ( 1 ) terminal vocabulary elements , ( 2 ) non - terminal vocabulary elements which represent phrase types , and ( 3 ) a special symbol , $ $ , to represent dummy nodes .", "label": "", "metadata": {}, "score": "59.05117"}
{"text": "Contrary to what could be intuitive , context - sensitive grammars can have more restrictive rules .Not in vain , Chomsky conceived context - sensitive grammars as a way to describe natural language .Natural languages are clearly more restrictive than classical context - free computer languages ( such as C or Java ) , for it is true that a word may or may not be appropriate in a certain place depending upon the context .", "label": "", "metadata": {}, "score": "60.034958"}
{"text": "The parser might be described using tools such as ANTLR .Also a data model for a parse tree can be defined .The data model should be representable in XML .An official XML schema for such a representation may or may not be defined .", "label": "", "metadata": {}, "score": "60.208366"}
{"text": "The first linguistic and psycholinguistic arguments for basing the grammar on combinators were put forth by Mark Steedman and Anna Szabolcsi .More recent prominent proponents of the approach are Jacobson and Baldridge .CCG relies on combinatory logic , which has the same expressive power as the lambda calculus , but builds its expressions differently .", "label": "", "metadata": {}, "score": "61.08532"}
{"text": "ASD networks have node labels but no edge labels .In contrast , ATN networks require both node ( state ) labels and edge ( arc ) labels .The node labels of an ASD grammar correspond to the edge labels of an ATN .", "label": "", "metadata": {}, "score": "61.992065"}
{"text": "References .Bates , M. , The theory and practice of augmented transition network grammars .In Natural Language Communication with Computers , L. Bolc , Ed . , Springer - Verlag , 1978 , pp .191 - 259 .Goldberg , A. and Robson , D. , Smalltalk-80 : The Language and its Implementation , Addison - Wesley , 1983 .", "label": "", "metadata": {}, "score": "62.230576"}
{"text": "It is also possible to output FOL formulas translated from the DRSs .CCGbank pairs syntactic derivations with sets of word - word dependencies which approximate the underlying predicate - argument structure .The translation process and linguistic analyses are explained in the manual .", "label": "", "metadata": {}, "score": "62.628387"}
{"text": "ASD networks have node labels but no edge labels ; .ATN networks require both node ( state ) labels and edge ( arc ) labels .The node labels of an ASD grammar correspond to the edge labels of an ATN .", "label": "", "metadata": {}, "score": "63.382732"}
{"text": "Augmented Syntax Diagram .Augmented Syntax Diagrams ( abbreviated ASD ) are a cross between Augmented Transition Networks ( ATNs ) ( Woods , 1970 ; Bates , 1978 ) and syntax diagrams ( Goldberg & Robson , 1983 ; Jensen & Wirth , 1975 ) .", "label": "", "metadata": {}, "score": "63.41941"}
{"text": "The LDC distribution also contains machine - readable versions of the data , which contain the syntactic derivations and the corresponding lists of word - word dependencies , as well as a file that is searchable by Doug Rohde 's TGrep2 ( version 1.15 ) .", "label": "", "metadata": {}, "score": "63.47245"}
{"text": "The grammar is saved to ( and read from ) data files using pure - Java mechanisms .The built - in scanner can also be customized for the application via the GUI .Your use of this web site or any of its content or software indicates your agreement to be bound by these Terms of Participation .", "label": "", "metadata": {}, "score": "63.477703"}
{"text": "Errors in the grammar are indicated by adorning the affected icons as the rule - tree is edited , and the generated parser code is displayed in an adjacent pane so the effect of edits on the rule - tree can be immediately verified .", "label": "", "metadata": {}, "score": "64.05726"}
{"text": "There might be a many - to - one relationship between source code and parse trees , but the canonical transformation from parse tree to source code should always parse back to the same parse tree .It has been broadly asserted that the Wiki Markup is a context - sensitive language , and therefore that it can not be expressed with a context - free grammar ( such as the those defined with BNF or EBNF ) .", "label": "", "metadata": {}, "score": "64.12811"}
{"text": "Produce a specification of MediaWiki 's markup format that is sufficiently complete and consistent .Future parser implementations can be built from it .Also , features that are currently either Not Possible or Very Hard ( e.g. WYSIWYG editing ) could benefit from such a specification .", "label": "", "metadata": {}, "score": "64.450676"}
{"text": "Therefore , a context - free grammar suffices for Wikicode description .The fact that Wikicode uses the same characters for different tokens leads to strings that can be interpreted in many different ways .This does not mean , however , that the language is not context - free , but instead that there are many different combinations of rules in the grammar that reach to the same final string .", "label": "", "metadata": {}, "score": "64.67583"}
{"text": "I n a bison grammar , the situation where two or more rules match the same string of tokens .Bison resolves the conflict by reducing the rule that occurs earlier in the grammar . regular expression .A language for specifying patterns that match a sequence of characters .", "label": "", "metadata": {}, "score": "65.95352"}
{"text": "In both cases only the networks are shown , not the augmentations .In both kinds of network , initial nodes are shown with bold outlines .S stands for \" Sentence \" , NP for \" Noun Phrase \" , VP for \" Verb Phrase \" , PP for \" Prepositional Phrase \" , DET for \" Determiner \" , and ADJ for \" Adjective \" .", "label": "", "metadata": {}, "score": "66.40071"}
{"text": "Compare to compiler .LALR(1 ) .L ook A head L eft to R ight ; the parsing technique that bison normally uses .The ( 1 ) denotes that the lookahead is limited to a single token .language .", "label": "", "metadata": {}, "score": "66.53325"}
{"text": "In both cases they match empty strings in the utterance being parsed .ASD networks use numeric subscripts , or instance numbers , in node labels to distinguish between different nodes that are labeled with the same vocabulary element .ATN networks require five kinds of arc labels : ( 1 ) PUSH arcs , ( 2 ) CAT arcs , ( 3 ) WORD arcs , ( 4 ) JUMP arcs , and ( 5 ) POP arcs , in addition to node labels .", "label": "", "metadata": {}, "score": "67.16113"}
{"text": "An error within the bison grammar in which two ( or more ) parsing actions are possible when parsing the same input token .There are two types of conflicts : shift / reduce and reduce / reduce .( See also ambiguity . ) context - free grammar .", "label": "", "metadata": {}, "score": "67.57942"}
{"text": "The encrypted messages are sent to all mover locations .The intended recipient uses their key to decrypt the message .MathMod is mathematical software for visualizing and animating parametric and implicit surfaces .It is an extension / rewrite of the K3DSurf project .", "label": "", "metadata": {}, "score": "67.84944"}
{"text": "A program that translates a dialect of BNF into LALR(1 ) or GLR parsers .BNF .B ackus- N aur F orm ; a method of representing context - free grammars .It is commonly used to specify formal grammars of programming languages .", "label": "", "metadata": {}, "score": "68.11444"}
{"text": "However , a regular grammar can only express nesting if it also defines a known maximum nesting level , while Wikicode does not have one .In short , Wikicode does not need context - sensitive grammar rules , for any token can be placed anywhere ( with few restrictions such as # REDIRECT , include modes and similar structures ) .", "label": "", "metadata": {}, "score": "68.202225"}
{"text": "In contrast , ATN networks require a representation for the grammar that is separate from the lexicon .Whom did you write to yesterday ?This is the robot a guy I know built .Two Theorems Theorem 01 : For every RTN , there is a PDA that accepts the same language Theorem 02 : For every Turing machine M , there exists an ATN that accepts the same language Moll , R. , Arbib , M. , Kfoury .", "label": "", "metadata": {}, "score": "69.525246"}
{"text": "In contrast , ATN networks require five kinds of arc labels : ( 1 ) PUSH arcs , ( 2 ) CAT arcs , ( 3 ) WORD arcs , ( 4 ) JUMP arcs , and ( 5 ) POP arcs , in addition to node labels .", "label": "", "metadata": {}, "score": "69.77696"}
{"text": "Although none of the descriptions seems to be complete , some have achieved to describe a good part of the language .Current parser descriptions tried to do its best to follow the MediaWiki 's parser behaviour .The parser translates these tokens into ( X)HTML as closely as semantically possible .", "label": "", "metadata": {}, "score": "70.00165"}
{"text": "Each token in a bison grammar has both a syntactic and a semantic value ; its semantic value is the actual data contents of the token .For instance , the syntactic type of a certain operation may be INTEGER , but its semantic value might be 3 . yacc .", "label": "", "metadata": {}, "score": "70.57019"}
{"text": "An ambiguous grammar is one with more than one rule or set of rules that match the same input .In a bison grammar , ambiguous rules cause shift / reduce or reduce / reduce conflicts .The parsing mechanism that bison normally uses can not handle ambiguous grammars .", "label": "", "metadata": {}, "score": "70.69493"}
{"text": "A program that translates a set of instructions ( a program ) in one language into some other representation ; typically , the output of a compiler is in the native binary language that can be run directly on a computer .", "label": "", "metadata": {}, "score": "71.00109"}
{"text": "Springer - Verlag .ATN Specification 1 .ATN Specification 3 .Parenthesized Representation of Parse Trees S VP NP N NP V cleans DET N the robot floor ( S ( NP ( N robot ) ) ( VP ( V cleans ) ( NP ( DET the ) ( N floor ) ) ) .", "label": "", "metadata": {}, "score": "71.183914"}
{"text": "Qmonix is a quantitative software monitoring and analysis SDK .It is intended for IoT and BigData applications .Synth is a C++ template framework - a set of components that can be mixed and matched to build the right functionality ; furthermore , components are loosely - coupled , designed to be both extensible and replaceable .", "label": "", "metadata": {}, "score": "71.75395"}
{"text": "GLR .G eneralized L eft to R ight ; a powerful parsing technique that bison can optionally use .Unlike LALR(1 ) , it can parse grammars that are ambiguous or need indefinite lookahead by maintaining all possible parses in parallel of the input read so far .", "label": "", "metadata": {}, "score": "72.35038"}
{"text": "Transition Network Grammars for Natural Language Analysis .Communications of ACM , Vol . 13 , Number 10 , Oct. 1970 , pp .591 - 606 .Language generation systems have used a variety of grammatical formalisms for producing syntactic structure and yet , there has been little research evaluating the formalisms for the specifics of the generation task .", "label": "", "metadata": {}, "score": "72.37443"}
{"text": "Given a sentence , the system assigns to it a syntactic structure , which consists of a set of labelled links connecting pairs of words .The parser also produces a \" constituent \" ( Penn tree - bank style phrase tree ) representation of a sentence ( showing noun phrases , verb phrases , etc . ) .", "label": "", "metadata": {}, "score": "72.42722"}
{"text": "A set of rules that together define a language . input .A stream of data read by a program .For instance , the input to a flex scanner is a sequence of bytes , while the input to a bison parser is a sequence of tokens . interpreter .", "label": "", "metadata": {}, "score": "72.44349"}
{"text": "There are many documents aiming at creating a formal representation of the MediaWiki markup and the parser behaviour .So far , none of them are complete , but there are a number of drafts in different syntaxes such as BNF , EBNF or ANTLR .", "label": "", "metadata": {}, "score": "72.71743"}
{"text": "A bison parser shifts an input symbol , placing it onto the parser stack in expectation that the symbol will match one of the rules in the grammar . shift / reduce conflict .In a bison grammar , the situation where a symbol completes the RHS of one rule , which the parser needs to reduce , and is an intermediate symbol in the RHS of other rules , for which the parser needs to shift the symbol .", "label": "", "metadata": {}, "score": "72.82886"}
{"text": "In the rules for the grammar , any name found on the right - hand side of a rule is always a symbol .In bison terminology , tokens or terminals are the symbols provided to the parser by the scanner .", "label": "", "metadata": {}, "score": "72.89227"}
{"text": "Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .It has a completely transparent interface between surface syntax and underlying semantic representation , including predicate - argument structure , quantification and information structure .", "label": "", "metadata": {}, "score": "73.07146"}
{"text": "symbol table .A data structure containing information about names occurring in the input so that all references to the same name can be related to the same object .tokenizing .The process of converting a stream of characters into a stream of tokens is termed tokenizing .", "label": "", "metadata": {}, "score": "73.563065"}
{"text": "As it can be seen in the rule description of each one of the grammars , regular grammars have very relaxed rules , whereas unrestricted grammars are allowed to describe very restraining rules .Relaxed in this context means that symbols can be generated in regular grammars without taking into account what has been produced so far .", "label": "", "metadata": {}, "score": "73.68239"}
{"text": "Contrast to tokenizing . parser stack .In a bison parser , the symbols for partially matched rules are stored on an internal stack .Symbols are added to the stack when the parser shifts and are removed when it reduces . parsing .", "label": "", "metadata": {}, "score": "73.862335"}
{"text": "Boxer produces standard DRS syntax , uses a neo - Davidsonian analysis for events ( with thematic roles from VerbNet ) , incorporates Van der Sandt 's algorithm for presupposition , is 100 % compatible with first - order logic ( FOL ) , and normalises cardinal and date expressions .", "label": "", "metadata": {}, "score": "74.687454"}
{"text": "The Wikicode is composed of many tokens for formatting , title description , text linking or list representation .Some of the tokens need to be placed in a certain place ( such as those which need to go at the beginning of a line ) , but otherwise tokens may appear in any place of the document , regardless of the context .", "label": "", "metadata": {}, "score": "75.1583"}
{"text": "Main Menu .The code in this project has been superceded by a new version that has numerous additional features but retains the simplicity of use .The code in this project is not being maintained or upgraded any more .A Visual IDE - Style LL(k ) Parser Generator that uses an editable tree with icons for tokens and non - terminals to represent the grammar symbols and grammar rules .", "label": "", "metadata": {}, "score": "75.29099"}
{"text": "The first linguistic and psycholinguistic arguments for basing the grammar on combinators were put forth by Mark Steedman and Anna Szabolcsi .More recent prominent proponents of the approach are Jacobson and Baldridge .One of the key publications of CCG is The Syntactic Process by Mark Steedman .", "label": "", "metadata": {}, "score": "75.40646"}
{"text": "A set of instructions that perform a certain defined task . reduce .In a bison parser , when the input matches the list of symbols on the RHS of a rule , the parser reduces the rule by removing the RHS symbols from the parser stack and replacing them with the LHS symbol .", "label": "", "metadata": {}, "score": "75.8114"}
{"text": "Concerning the grammar description , the specification might use a standard notation such as BNF or EBNF .In order to avoid breaking existent pages , the specification should preserve present parser behavior that is reasonable and well - defined .Adding requirements for new behaviour must be well - considered in that respect .", "label": "", "metadata": {}, "score": "76.69003"}
{"text": "In a flex scanner , a regular expression that the scanner matches against the input .precedence .The order in which some particular operation is performed ; for example , when interpreting mathematical statements , multiplication and division are assigned higher precedence than addition and subtraction . production .", "label": "", "metadata": {}, "score": "77.821"}
{"text": "In a flex specification , patterns can be tagged with start states .At any point one start state is active , and patterns tagged with that start state can match the input .In an exclusive start state , only tagged patterns can match , while in an inclusive state , untagged patterns can also match the input . symbol .", "label": "", "metadata": {}, "score": "78.759705"}
{"text": "Figure 2 .Both of the figures are incomplete in that they involve non - terminal vocabulary elements PP and VP which represent phrase types , but they do not show the grammar networks for recognizing those phrase types .Those parts of the grammar networks have been omitted here for brevity .", "label": "", "metadata": {}, "score": "78.93091"}
{"text": "There are various efficient parsers available for CCG .Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .It has a completely transparent interface between surface syntax and underlying semantic representation , including predicate - argument structure , quantification and information structure .", "label": "", "metadata": {}, "score": "80.29102"}
{"text": "A program that produced lexical analyzers that match patterns defined by regular expressions to a character stream .Now superseded by flex , which is more reliable and more powerful .lexical analyzer .A program that converts a character stream into a token stream .", "label": "", "metadata": {}, "score": "80.8987"}
{"text": "ASCII .A merican S tandard C ode for I nformation I nterchange ; a collection of 128 symbols representing the common symbols found in the American alphabet : lowercase and uppercase letters , digits , and punctuation , plus additional characters for formatting and control of data communication links .", "label": "", "metadata": {}, "score": "81.334206"}
{"text": "When the pattern or rule matches an input sequence , the action code is executed . alphabet .A set of distinct symbols .For example , the ASCII character set is a collection of 128 different symbols .In a flex specification , the alphabet is the native character set of the computer .", "label": "", "metadata": {}, "score": "81.34799"}
{"text": "Demo output : .Marpa 's homepage .Articl ... .For a given BNF , process the cooked tree output by MarpaX::Grammar::Parser , and turn it into an image .The tree holds a representation of the user 's BNF ( SLIF - DSL ) , and is managed by Tree::DAG_Node .", "label": "", "metadata": {}, "score": "82.54254"}
{"text": "The ' ' ' quick ' ' brown ' ' ' fox .where the opening bold mark is inside an italics structure , and the closed bold mark is outside .For a valid output to be produced , the parser closes the italics structure and opens it again , producing an output where the two structures are properly nested .", "label": "", "metadata": {}, "score": "82.57774"}
{"text": "Form elements are also not accepted in wiki source code : ' form ' , ' input ' , ' button ' , ' textarea ' , ' label ' ( as well as old gopher -like menu elements ) .It will then close some elements implicitly and convert XHTML syntax to valid HTML / SGML , recognizing also elements that ca n't have no content in the HTML DOM ( such as ' br ' ) .", "label": "", "metadata": {}, "score": "83.54872"}
{"text": "Bison rules are also called productions .A rule is a single nonterminal called the LHS , a colon , and a possibly empty set of symbols called the RHS .Whenever the input matches the RHS of a rule , the parser reduces the rule . semantic meaning .", "label": "", "metadata": {}, "score": "85.00623"}
{"text": "The name is an allusion to this synthesis process , which combines values to generate new ones ( streams , files , strings , numbers , etc . ) .HHVM ( aka the HipHop Virtual Machine ) is a virtual machine designed for executing programs written in Hack and PHP .", "label": "", "metadata": {}, "score": "85.00777"}
{"text": "Current development efforts , led by Michael White , are focused on making the realizer practical to use in dialogue systems .For the latest news about OpenCCG , check out the SourceForge project page .The C&C Parser and Supertagger .", "label": "", "metadata": {}, "score": "86.73085"}
{"text": "Bison resolves the conflict by doing the shift . specification .A flex specification is a set of patterns to be matched against an input stream .Flex turns a specification into a scanner . start .The single symbol to which a bison parser reduces a valid input stream .", "label": "", "metadata": {}, "score": "88.226974"}
{"text": "finite automaton .An abstract machine that consists of a finite number of instructions ( or transitions ) .Finite automata are useful in modeling many commonly occurring computer processes and have useful mathematical properties .Flex and bison create scanners and parsers based on finite automata . flex .", "label": "", "metadata": {}, "score": "88.477974"}
{"text": "Software .OpenCCG : The OpenNLP library .OpenCCG , the OpenNLP CCG Library , is an open source natural language processing library written in Java , which provides parsing and realization services based on Mark Steedman 's Combinatory Categorial Grammar ( CCG ) formalism .", "label": "", "metadata": {}, "score": "90.23558"}
{"text": "All rights reserved .Oracle and Java are registered trademarks of Oracle and/or its affiliates .Other names may be trademarks of their respective owners .Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .", "label": "", "metadata": {}, "score": "91.64052"}
{"text": "Also called a lexer or scanner . lookahead .Input read by a parser or scanner but not yet matched to a pattern or rule .Bison parsers have a single token of lookahead , while flex scanners can have indefinitely long lookahead . nonterminal .", "label": "", "metadata": {}, "score": "92.13158"}
{"text": "The ' ' ' ' ' dog ' ' ' ' ' 's bone .Being the word dog enclosed in cursive marks ( two apostrophes ) and bold marks ( three apostrophes ) , with an additional apostrophe to indicate a saxon genitive .", "label": "", "metadata": {}, "score": "93.031296"}
{"text": "To date , HHVM ( and its predecessor HPHPc before it ) has realized over a 9x increase in Web request throughput and over a 5x reduction in memory consumption for Facebook compared with the PHP 5.2 engine + APC .HHVM should be used together with a FastCGI - based Web server like Nginx or Apache .", "label": "", "metadata": {}, "score": "93.81291"}
{"text": "Also called a phrase structure grammar .Context - sensitive grammars , containing rules with several symbols on the LHS , are not practical for parsing computer languages .empty .The special case of a string with zero symbols , sometimes written as a Greek epsilon .", "label": "", "metadata": {}, "score": "95.18014"}
{"text": "This module implements a parser for \" DASH \" ( below ) , a wrapper language around Graphviz 's DOT .That is , the module is a pre - processor for the DOT language .Specifically , this module demonstrates how to use Ma ... .", "label": "", "metadata": {}, "score": "95.19457"}
{"text": "leading : allows link to image page rather than inline image , or similarly to category or template page .interwiki links : . different project , same language : w : for Wikipedia , wikt : for Wiktionary , m : for Meta , etc . -- see m : Help : Interwiki_linking for more information ( especially when using in templates ; transwiki transclusion , iw_trans ) .", "label": "", "metadata": {}, "score": "95.56147"}
{"text": "Mover is a system designed to move mail while eliminating as much metadata as possible .In fact , it eliminates virtually all metadata , except for the order and possibly the time that a message arrives at a given site .", "label": "", "metadata": {}, "score": "95.74155"}
{"text": "Boxer is developed by Johan Bos and generates formal semantic representations for CCG grammars .Boxer takes as input CCG ( Combinatory Categorial Grammar ) derivations and produces DRSs ( Discourse Representation Structures , from Hans Kamp 's Discourse Representation Theory ) as output .", "label": "", "metadata": {}, "score": "99.04257"}
{"text": "The tools are written in C++ and have been designed to be efficient enough for large - scale NLP tasks .StatCCG .StatCCG is a statistical CCG parser ( trained on CCGbank ) written by Julia Hockenmaier .Executables are available here .", "label": "", "metadata": {}, "score": "102.16768"}
{"text": "The quick ' ' brown fox .the parser will add the mismatched closing tags .The huge number of recovery rules make the language recognizer hard to describe , for every single rule should be reflected in the specification .Since there is not such thing as right or wrong Wikicode , an extensive list of recovery rules is as important as the own grammar when aiming at creating a complete description of the wiki language interpretation .", "label": "", "metadata": {}, "score": "102.34428"}
{"text": "The left - hand side or LHS of a bison rule is the symbol that precedes the colon .During a parse , when the input matches the sequence of symbols on the RHS of the rule , that sequence is reduced to the LHS symbol .", "label": "", "metadata": {}, "score": "104.88843"}
{"text": "You 'll find revised tutorials for novices and references for advanced users , as well as an explanation of each utility 's basic usage and simple , standalone applications you can create with them .With flex & bison , you 'll discover the wide range of uses these flexible tools offer .", "label": "", "metadata": {}, "score": "107.09359"}
{"text": "Mason , J.A. , Software to Understand English , York University , 1995 , 282pp .Glossary - flex & bison .If you need to parse or process text data in Linux or Unix , this useful book explains how to use flex and bison to solve your problems quickly . flex & bison is the long - awaited sequel to the classic O'Reilly book , lex & yacc .", "label": "", "metadata": {}, "score": "112.25261"}
{"text": "right - hand side ( RHS ) .The right - hand side or RHS of a bison rule is the list of symbols that follow the colon .During a parse , when the input matches the sequence of symbols on the RHS of the rule , that sequence is reduced to the LHS symbol . rule .", "label": "", "metadata": {}, "score": "117.69504"}
{"text": "ATN Example Does BOT_103 clean rooms ?REGISTER CONTENTS : TYPE : AUX : SUBJ : V : VP : Q BOT_103 ( NP BOT_103 ) clean ( VP ( V clean ) ( NP rooms ) .ATN Example Does BOT_103 clean rooms ?", "label": "", "metadata": {}, "score": "123.84466"}
{"text": "ATN Example Does BOT_103 clean rooms ?ATN Example Does BOT_103 clean rooms ?ATN Example Does BOT_103 clean rooms ?REGISTER CONTENTS : TYPE : Q AUX : BOT_103 SUBJ : ( NP BOT_103 ) .ATN Example Does BOT_103 clean rooms ?", "label": "", "metadata": {}, "score": "131.60509"}
