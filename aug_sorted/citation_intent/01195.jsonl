{"text": "Start by noticing that the logarithm in Eq .( 3 ) corresponds to the number of leading zeros in the fractional part of .x .i .S . x .j .S .Intuitively , these leading zeros , say L , represent a match between S 1 [ i - L + 1 ... i ] and S 2 [ j - L + 1 ... j ] .", "label": "", "metadata": {}, "score": "28.465355"}
{"text": "Let S denote a string of size N .Moreover , S [ i .The length of substring S [ i ..Furthermore , S [ i . .] denotes the suffix of S that starts at the i ' th position , i.e. , S [ i . . ]", "label": "", "metadata": {}, "score": "31.576725"}
{"text": "Let Q be the set of base clusters ; .This function S(q ) may then be used in the combining of clusters outlined below .Some embodiments may include sorting the compacted trie so as to order the nodes within the trie .", "label": "", "metadata": {}, "score": "32.51197"}
{"text": "Given a string S with size N , at most N nodes are stored in the quadtree as follows : for each prefix S [ 1 . i ] of S , we start inserting its reverse on the quadtree until we reach a leaf , where we insert a new node and stop .", "label": "", "metadata": {}, "score": "34.918915"}
{"text": "[ 1 ] .Once the suffix array of a string has been computed , a simple linear - time algorithm [ 2 ] will compute the length of the longest common prefix of each pair of adjacent suffixes in the suffix array .", "label": "", "metadata": {}, "score": "34.946297"}
{"text": "( 4 ) we achieve a sufficient and necessary condition to compute longest common suffixes in constant time .Theorem .Let S 1 and S 2 denote two strings of size N. We have that .x .i .S . x .", "label": "", "metadata": {}, "score": "35.14615"}
{"text": "Suppose there exists a palindromic substring , , of length greater than or equal to that of , centered at .Certainly the last character of lies to the right of the last character of , since is centered further to the right and is longer .", "label": "", "metadata": {}, "score": "35.583862"}
{"text": "Therefore , if k mismatches are allowed , k + 1 extensions may be performed to match a pattern P of size L in a substring S [ i .Roughly speaking , match operations are as follows : ( i ) perform a LCE query to match P [ 1 .", "label": "", "metadata": {}, "score": "35.8053"}
{"text": "( 1 ) ) and the LEFT DELETION operation described in Eq .If one uses directly the coordinates of the last symbol of the first L -tuple to compute the first hash value we have that .h .S . [ .", "label": "", "metadata": {}, "score": "35.841946"}
{"text": "The position pair ( i , j ) needs to be updated accordingly , to ( N - i + 1 , M - j + 1 ) , in order to reference the correct positions in the reverse strings .With suffix / prefix duality problem solved we resort on CGR maps embedded in the Cantor set to perform LCE queries .", "label": "", "metadata": {}, "score": "36.497776"}
{"text": "In fact , this result is achieved by using a similar recursive expression as the one given by Eq .x .x .i .x .i .y .i .x .i .i .N . where .", "label": "", "metadata": {}, "score": "36.932655"}
{"text": "S .To see why Eq .Clearly , the longest common suffix between S 1 and S 2 is 0 , as they share no common suffix .However , using Eq .( 3 ) we obtain . log .", "label": "", "metadata": {}, "score": "37.036156"}
{"text": "If a standard CGR index is used , the occurrences of P in S can be found by scanning S with LCE queries to match P in each suffix S [ i . .] More precisely , if the LCE query of S and P for a given position pair ( i , 1 ) returns L then P matches S [ i .", "label": "", "metadata": {}, "score": "37.138504"}
{"text": "Other common operations on strings include LONGEST COMMON SUFFIX , IS PREFIX and IS SUFFIX .The LONGEST COMMON SUFFIX was addressed in the Cantor set description , achieving constant time complexity as LCE .This can be done by computing the LCE for coordinates .", "label": "", "metadata": {}, "score": "37.15352"}
{"text": "Longest common extension . .] that matches a prefix of S 2 [ j . .]This problem is directly related with the longest common suffix described in the previous section , up to an inversion of the strings .", "label": "", "metadata": {}, "score": "37.21608"}
{"text": "The algorithm for computing all matches of a pattern P in a string S is given as Algorithm 2 .Recall that we need to use the reserve CGR indexes of S and P to tackle suffix / prefix duality and all CGR coordinates are embedded in the Cantor set , thus , defined as in Eq . for ( i from 1 to N - L + 1 ) .", "label": "", "metadata": {}, "score": "37.292507"}
{"text": "Therefore , if we iterate through all positions of the string , and for each one determine the longest palindromic substring centered on that position , then one of these is the longest palindromic substring of the whole string .Being a bit clever in determining the longest palindromic substring centered about a given string improves the running time over the naive solution dramatically .", "label": "", "metadata": {}, "score": "37.80795"}
{"text": "We start this section by introducing some notation and recalling the definition and relevant properties concerning CGR .Thereafter , we embed CGR maps in the Cantor set in order to elicit longest common suffixes in an efficient and unambiguous way .", "label": "", "metadata": {}, "score": "38.54982"}
{"text": "In this case we can write the CGR coordinates . and .x .S . in base 2 as .x .S . and .x .S .When computing the difference .x .S . x .", "label": "", "metadata": {}, "score": "38.786564"}
{"text": "This is a mandatory practice for the base-3 logarithm . log .x .S . x .S . correctly identifying the first bit where the difference between the coordinates is found .In the following , we show this fact in detail .", "label": "", "metadata": {}, "score": "38.80305"}
{"text": "For this purpose , consider a quadtree for the CGR map of S .Given a pattern P , we take its reverse P r and we descend on the quadtree until we either reach the end of P r or a leaf of the quadtree .", "label": "", "metadata": {}, "score": "39.078793"}
{"text": "In this implementation , a string S of size N is represented in memory by a floating - point matrix of size N \u00d7 2 .This corresponds to a N -size array of pairs , denoted by .x .S . x .", "label": "", "metadata": {}, "score": "39.153175"}
{"text": "In this section we address this shortcoming aiming at finding an efficient procedure to elicit longest common suffixes within CGR maps .Intuitively , having not noticed that the aforementioned condition is only necessary , we would believe that the size of the longest common suffix of S 1 [ .", "label": "", "metadata": {}, "score": "39.422768"}
{"text": "N . . .( 4 ) .In this case , the difference .x .S . x .S . in the previous example becomes . indicating , as expected , that strings S 1 and S 2 mismatch in the first symbol .", "label": "", "metadata": {}, "score": "39.87047"}
{"text": "We start with a generalized suffix tree for sequences $ S$ and $ T$. Each internal node with suffixes of both $ S$ and $ T$ in its subtree corresponds to some common substring of the sequences .Let us call such nodes non - trivial .", "label": "", "metadata": {}, "score": "39.9412"}
{"text": "FIG .7 is a diagram of an example compacted suffix tree 700 .This compacted suffix tree 700 may have a number of properties .A further property of this compacted suffix tree 700 may be that the path from a leaf node to the root node , and the edges along this path , may be combined to form a string or substring .", "label": "", "metadata": {}, "score": "40.34219"}
{"text": "The first panel represents the original CGR proposal with contraction parameter .p .and the superimposed sub - quadrants of the suffix labels .The second represents the same sequence but with .p .More generally , in order to extract transition probability estimates for an L -order Markov chain , the interval [ 0,1 ] should be divided in 2 L +1 subintervals .", "label": "", "metadata": {}, "score": "40.622795"}
{"text": "Lemma ( Second observation ) : If is the longest palindrome centered at the current position , and is the longest palindromic proper suffix of , then all positions between the current position and the centre of may safely be denoted uninteresting .", "label": "", "metadata": {}, "score": "40.6857"}
{"text": "x .S . x .S . are similar we have that .b .b . k .b .b . k . and .b .b . k .b .b . k . correctly concluding that a mismatch occurs at the ( k + 1)'th bit of the difference and , therefore , S 1 and S 2 have a longest common suffix of size k .", "label": "", "metadata": {}, "score": "40.755337"}
{"text": "If the string S rc is reversed once again , the complement string S c is obtained .Finally , given a string S , we call the CGR map x S the direct CGR index , the CGR map .x .", "label": "", "metadata": {}, "score": "40.841118"}
{"text": "Furthermore , our original string , of length , has substrings each of length .Therefore , we conclude , by enumerating all substrings of our original string , checking whether each is a palindrome , and finding the longest one which is , we obtain an solution .", "label": "", "metadata": {}, "score": "40.91993"}
{"text": "In the odd case , we are centered at some character of the original string .In this case , we examine the suffix starting at the character in the original string immediately following it , and the suffix in the reversed string starting at the character immediately preceding it .", "label": "", "metadata": {}, "score": "41.01241"}
{"text": "[ 6 ] [ 7 ] Again we will compute the longest palindromic substring centered around each possible position ( so that returning all longest palindromic substrings is as easy as simply finding the maximum possible length for a palindromic substring ) .", "label": "", "metadata": {}, "score": "41.147026"}
{"text": "Given the last CGR coordinate of S , denoted by .x .N .S . , the new CGR coordinate corresponding to the LEFT INSERTION of \u03b1 in S becomes .x .N .Q .x .N .", "label": "", "metadata": {}, "score": "41.336075"}
{"text": "Every palindromic substring has a centre .For an odd - length substring , this is its middle character ; for an even - length substring , this is the imaginary space between its two middle characters .Call each character and each space in the original string a position .", "label": "", "metadata": {}, "score": "41.519638"}
{"text": "The key feature here ( and which is missing from the tree you are using ) is that each leaf node corresponds to a suffix of the string .The deepest node with at least two leaf descendants is at path AB ( the depth is the substring length needed to reach that node from the root , in this case 2 ) , and that is indeed the longest repeated substring .", "label": "", "metadata": {}, "score": "41.52597"}
{"text": "Let us assume the document d x of Cluster C i has a collection of m phrases P x1 , P x2 , . . ., P xn which are strongly present .In some embodiments , a CLE Tags approach is implemented wherein tags or phrases are extracted that represent important concepts within a cluster .", "label": "", "metadata": {}, "score": "41.631058"}
{"text": "L .L .i . )L . . .This concludes the proof .Interestingly , this representation corresponds to a variant of CGR that uses a contraction ratio of .r . , instead of the original .r . , and an initial point in the set attractor .", "label": "", "metadata": {}, "score": "42.170395"}
{"text": "L ] in S [ i + j + 1 . i + L + 1].This procedure must be undertaken recursively until k mismatches are reached or the end of P is reached .If the extensions does not reach the end of P then more than k mismatches are needed .", "label": "", "metadata": {}, "score": "42.28009"}
{"text": "A suffix trie is a rooted directed tree ; .Each internal node has at least 2 children ; .Trie : Each edge is labeled with a non - empty substring of S. The label of a node is a concatenation of the labels of the edges on the path from the root to that node ; .", "label": "", "metadata": {}, "score": "42.36131"}
{"text": "S . [ .i .L . ] i .N .L . . .( 7 ) .Even though this expression uses vectors and is therefore slightly more sophisticated than the most common expressions , CGR function is essentially a hash , except for the fact the we are not using remainders as in the original proposal .", "label": "", "metadata": {}, "score": "42.851135"}
{"text": "9 .Once received , an operation 1502 is executed that determines how to label each node of the graph using , for example , a CLE BD or , for example , a CLE Tags approach .Next , an operation 1503 is executed that extracts phrase data ( e.g. , strings or substrings ) from documents associated with nodes .", "label": "", "metadata": {}, "score": "42.86124"}
{"text": "After adding a word to the list of words ( step 1125 ) , the node - processing procedure saves the score associated with the word as a reseeding score for use in reseeding the tree ( step 1130 ) .Production of a word by the lexical tree means that the current frame may correspond to the last frame of the word ( with the probability of such a correspondence being reflected by the score associated with the word ) .", "label": "", "metadata": {}, "score": "42.91889"}
{"text": "i ] have a common L -length suffix .This part of the proof follows by contradiction .Thus , assume that .x .i .S . x .i .S .L . and that S 1 [ i - L + 1 . i ] .", "label": "", "metadata": {}, "score": "43.135002"}
{"text": "( Note that this algorithm also gives all longest palindromic substrings : if the length of the palindrome centered around a given position is maximal , then we output the longest palindromic substring centered at this position . )Thus , the best possible worst - case running time lies between and .", "label": "", "metadata": {}, "score": "43.53182"}
{"text": "L .P . and .x .N .S .The answer to IS SUFFIX is true if and only if the LCE query returns L , otherwise the answer is false .The IS PREFIX operation consists in checking if P appears as prefix of S and it can be easily done by reversing both S and P and applying the previous operation .", "label": "", "metadata": {}, "score": "43.691467"}
{"text": "Next , the node - processing procedure determines whether a word is to be added to a list of words ( step 1120 ) .A word is added to the list of words when the node being processed corresponds to the last phoneme of a word , a score has been propagated out of the last state of the node , and the score is less than a list threshold .", "label": "", "metadata": {}, "score": "43.979004"}
{"text": "In one embodiment , a Suffix Tree Clustering ( STC ) algorithm is implemented .Example embodiments may include an implementation of an STC algorithm building a suffix trie using the terms in documents that are to be divided into groups of clusters based upon the commonality of phrases in the documents .", "label": "", "metadata": {}, "score": "44.157112"}
{"text": "Hence , it is possible to sort all the CGR coordinates in O ( N log N ) time .To obtain the longest common substring from the CGR representation we join the CGR coordinates from S 1 and S 2 and sort them all together , according to the previous procedure .", "label": "", "metadata": {}, "score": "44.364155"}
{"text": "The minimum value in this array , 1 , is the answer .To solve the problem at hand , we will concatenate our string with a unique separator and a reversed copy of itself , so that rearrangement becomes , for example , rearrangement#tnemegnarraer , and then build the suffix array and longest common prefix array for the new string .", "label": "", "metadata": {}, "score": "44.366657"}
{"text": "L +1].This coordinate .x .L .S . [ .L . 1 . ] can be computed from .x .L .S . [ .L . ] x .L .S . by performing a LEFT DELETION and applying a new CGR iteration .", "label": "", "metadata": {}, "score": "44.448643"}
{"text": "Suppowe we want to determine the length of the longest common prefix of the suffixes ter ( 9 ) and tter ( 8) , which are not adjacent in the suffix array ( it is irrelevant that they are adjacent in the string itself ) .", "label": "", "metadata": {}, "score": "44.66293"}
{"text": "The backward query corresponds , actually , to a forward query over the reverse complement of S .The detailed pseudo - code of this algorithm can be found in Addition file 2 .Since each of the aforementioned extensions can be performed over a reverse and a complement CGR indexes in constant time , the algorithm takes O ( N ) time , corresponding to the time needed to cover all string S .", "label": "", "metadata": {}, "score": "44.71531"}
{"text": "We achieve this by embedding the CGR coordinates in the Cantor set [ 30 , 31 ] .For that , we use base 3 , instead of base 2 , admitting a numeral representation consisting entirely of 0 's and 2 's ( never using the digit 1 ) .", "label": "", "metadata": {}, "score": "44.7637"}
{"text": "( Note that the parities of elements in the longest palindrome array alternate . )The algorithm processes the string from left to right , and fills in the longest palindrome array in the same order , so that when any given position is being considered , the longest palindromes centered around all positions to the left are already known .", "label": "", "metadata": {}, "score": "44.803185"}
{"text": "In one embodiment , threshold \" t \" is computed by taking the weighted average of the relevancy scores of all the clusters and keeps only the clusters whose relevancy score is less than the threshold \" t \" .In a further embodiment , the clusters are sorted in ascending order based on the relevancy score and the top \" N \" clusters based on the relevancy score are kept and remaining clusters are removed from consideration .", "label": "", "metadata": {}, "score": "44.951103"}
{"text": "S . x .N .S . ) , where the i ' th entry .x .i .S . x .i .S . x .i .S . )This data structure is built in optimal time , that is , in time linear in the length of the string S .", "label": "", "metadata": {}, "score": "45.1082"}
{"text": "where name is a character .Iterate through your strings letter by letter .Keep track of which letter you 're on .At each letter , try to use the next few letters to traverse the tree .If you 're successful , your letter number will be the position of the substring , and your traversal order will indicate the substring that was found .", "label": "", "metadata": {}, "score": "45.1401"}
{"text": "A study of the time complexity attained by these algorithms is given throughout this section and a summary in provided in Table 1 .This time complexity analysis does not include the pre - processing step of building the required indexes , as all depend solely in the size N of the input string S .", "label": "", "metadata": {}, "score": "45.227165"}
{"text": "N .i .S .r .x .L .P .r . )//longest common prefix of S [ i . . ]and P [ 1 . .] i + L - 1 ] .Although standard CGR indexes can be space efficient , as we only need to store a coordinate for each text position , the MATCHES operation is not as efficient as with suffix tree indexes .", "label": "", "metadata": {}, "score": "45.264267"}
{"text": "FIG .5 .At position 604 in a hash table 600 , the substring \" Opener \" is illustrated as is the set containing documents 1 , 0 , and the set containing documents 4 , 1 .This substring opener roughly corresponds to node 16 referenced as 515 in .", "label": "", "metadata": {}, "score": "45.407127"}
{"text": "One may , for example , compute a relevancy score for each cluster , and keep those clusters that are appropriate for the current input query .This concept of pruning may be illustrated in the following manner .For a phrase P , several demand attributes may be used for demand factor analysis .", "label": "", "metadata": {}, "score": "45.45936"}
{"text": "In some applications it may be necessary to return all maximal - length palindromic substrings , in some , only one , and in some , only the maximum length itself .This article discusses algorithms for solving these problems .The worst - case running time of any correct algorithm must be at least , where is the length of the string .", "label": "", "metadata": {}, "score": "45.462685"}
{"text": "Similarly , S [ .i ] denotes the prefix of S that ends at the i ' th position , i.e. , S [ .i ] .Chaos Game Representation ( CGR ) definition .The CGR iterative algorithm is constructed on a square in IR 2 where each of its vertex is assigned to a DNA symbol or base ( A , C , G , T ) .", "label": "", "metadata": {}, "score": "45.575977"}
{"text": "( 5 ) .The graphical comparison between these two versions is given in Figure 1 .The sub - quadrants in the first case are contiguous and , therefore , the closeness in this representation is a necessary but not a sufficient condition for sharing the same suffix .", "label": "", "metadata": {}, "score": "45.70904"}
{"text": "If this check is true , we must report an occurrence .If we reach the end of P r and we are at node n with children , we must also check every node in the subtree rooted at n as each one matches the pattern .", "label": "", "metadata": {}, "score": "45.91208"}
{"text": "If is after the last position in the string , we have computed all entries in the longest palindrome array , and the algorithm halts .( This always happens eventually . )Otherwise , if the longest palindrome centered at has its first character to the right of the first character of the longest palindrome centered at our current position , then its length is also the length of the longest palindrome centered at .", "label": "", "metadata": {}, "score": "45.967606"}
{"text": "( 1 ) from an original data set including XML documents , constructing a partition - based histogram that is smaller in size than the original data set , the histogram - constructing comprising : .( A ) in an XML document , counting each path - value pair and outputting a collection of path - value - count triples sorted by count ; .", "label": "", "metadata": {}, "score": "45.988674"}
{"text": "A detailed discussion of the structure of the suffix tree is given in the article .There exist linear - time algorithms [ 3 ] for construction of suffix trees , as well .There are two possible approaches here : we can either concatenate the string with a unique separator and a reversed copy of itself , as with the suffix array , or we can build a generalized suffix tree of the string and its reverse .", "label": "", "metadata": {}, "score": "46.0472"}
{"text": "x .N .S . , the new CGR coordinate corresponding to the LEFT DELETION of S is given by .x .N .P .x .N .S .r .r . )N .y .", "label": "", "metadata": {}, "score": "46.12317"}
{"text": "Note that quadtrees as described are just compressed tries of S prefixes , also known as CGR - trees , described as quaternary trees related to digital search trees proposed by Cenac et al .[ 33 ] .Moreover , the use of a quadtree to index the CGR coordinates is equivalent to a suffix tree , up to an inversion of the text ( because of the prefix / suffix duality ) .", "label": "", "metadata": {}, "score": "46.338696"}
{"text": "If there is no overlap in tags , then cluster quality is 1 .If cluster themes overlap then the tags are shared .Some embodiments may include cluster quality as defined in terms of the category distribution of the items in a cluster .", "label": "", "metadata": {}, "score": "46.50227"}
{"text": "For substring match queries , step 450 computes for each bucket b , the estimated number of times N(BKT ) the substring query occurs in the bucket BKT .Step 460 uses these occurrence counts or frequencies to compute a weighted sum of the frequency N(BKT ) and the average selectivity sel(BKT ) of the bucket BKT .", "label": "", "metadata": {}, "score": "46.609116"}
{"text": "Theorem : Manacher 's algorithm runs in linear time .Proof : .The outer loop runs times .Step 1 takes constant time and is executed once .Step 2 contains a loop .Each iteration of the loop takes constant time and examines two characters of the string , one on the left of the current palindrome and one on the right .", "label": "", "metadata": {}, "score": "46.646915"}
{"text": "Overall our goal is to determine the pair that has the largest LCE value , as this corresponds the longest common substring among the two strings .Rabin - Karp string matching algorithm .The procedure for calculating the CGR coordinates ( Eq .", "label": "", "metadata": {}, "score": "46.744232"}
{"text": "This allows the retrieval of Markov Chain transition probability tables [ 15 ] , as exemplified graphically in Figure 1a .This result is not sensitive to the initial condition or point x 0 chosen , since the Lyapunov exponent is negative .", "label": "", "metadata": {}, "score": "47.012913"}
{"text": "It is possible to execute LCA queries on a tree with nodes in time using a technique due to Gabow and Tarjan .[ 4 ] This shows that a linear - time solution exists , which puts to rest the question of the best possible efficiency for a solution to the longest palindromic substring problem .", "label": "", "metadata": {}, "score": "47.066772"}
{"text": "Given a string S of size N and a pattern P of size L , searching for occurrences of P within S is probably the most common operation on strings .This problem , named MATCHES , has been utterly studied and there are well known algorithms to solve it in linear time on the length of S and P .", "label": "", "metadata": {}, "score": "47.24225"}
{"text": "We see that the longest common prefix has length 1 , and we reflect the e in the reversed half back onto its position in the first half , hence , rearrang eme nt#tnemegnarraer is the longest palindromic substring centered at the m .", "label": "", "metadata": {}, "score": "47.24476"}
{"text": "A word produced by the lexical tree is added to the list of words corresponding to the start time of the word and to lists of words corresponding to times that precede and follow the start time of the word .It is for this reason that the pre - filtering procedure waits until there are no active nodes in the tree corresponding to speech that started slightly after the start time for the list of words .", "label": "", "metadata": {}, "score": "47.24709"}
{"text": "In some embodiments , not only may a plurality of nodes make up a subtree , but also a singular node may make up a subtree .For example , node 19referenced as 712 is connected to the root node via an edge labeled \" Cap , \" such that documents 0 and 3 contain the substring \" Cap . \"", "label": "", "metadata": {}, "score": "47.295067"}
{"text": "In particular , these structures can be used to locate substrings within the index sequence , which in turn yields efficient algorithms for complex problems such as the longest common substring , initially thought to have no linear time solution .Unfortunately , the speed up obtained from these structures comes with an heavy memory cost .", "label": "", "metadata": {}, "score": "47.40039"}
{"text": "For example , a node 20 referenced as 907 is connected to node 4 via a bidirectional edge , such that the substring \" Bottle Opener \" may be generated via the edge connecting node 4 ( e.g. , 904 ) and node 20 ( e.g. , 907 ) .", "label": "", "metadata": {}, "score": "47.525745"}
{"text": "Referring to .FIGS .5 and 6 , the pre - filtering procedure 240 uses a lexical tree 500 that is initialized before processing begins .The lexical tree represents the active vocabulary 230 based on the phonetic relationships between words in the vocabulary .", "label": "", "metadata": {}, "score": "47.529922"}
{"text": "and S 2 [ j . .]Algorithm 1 Longest common extension ( LCE ) of S 1 and S 2 for position pair ( i , j ) .LCE(standard CGR index entry .x .N .i .", "label": "", "metadata": {}, "score": "47.70195"}
{"text": "We conclude this section by discussing four new operations that are specific to CGR but related with relevant operations in suffix trees ( namely , SLINK and WEINERLINK ) .As we shall see later these operations provide a way for performing incremental hashing , an approach used for Rabin - Karp string matching algorithm .", "label": "", "metadata": {}, "score": "47.705894"}
{"text": "On - line construction of suffix trees .Algorithmica 14 ( 3):249 - 260 .A New Linear - Time \" On - Line \" Algorithm for Finding the Smallest Initial Palindrome of a String .J. ACM 22 , 3 ( July 1975 ) , 346 - 351 .", "label": "", "metadata": {}, "score": "47.731224"}
{"text": "r . , which means that each iteration transforms the whole square into a sub - quadrant with length half the size .More generally , this value can be any number from .r . to preserve bijectivity .An alternative and non - recursive expression for x i as a function of all symbols y 1 , ... , y i , contraction ratio r , and initial point x 0 , is given by .", "label": "", "metadata": {}, "score": "47.82785"}
{"text": "The resulting XMLSchema object is a set ( infoset ) of objects ( top - level input elements ) .Object 's contents is a tree with nodes corresponding to low - level element / group decls / refs preceded by node / object of type SNode containing cardinality info ( min / maxOccurs ) .", "label": "", "metadata": {}, "score": "47.976364"}
{"text": "Then , however , we explore the remaining unclustered documents and check if each of them can be added to the clusters formed by not taking the order of the words into account .Labeling Algorithm .In some embodiments , cluster labels are used to depict compact information about the type of documents present in the cluster .", "label": "", "metadata": {}, "score": "48.18753"}
{"text": "c .S . d . k . k . . ., concluding this part of the proof .We now proceed to prove that if S 1 [ .i ] and S 2 [ .i ] have a common L -length suffix then .", "label": "", "metadata": {}, "score": "48.355003"}
{"text": "S . [ . i . ]G . if .S . [ . i . ]T . . .( 1 ) .The initial point x 0 in the original formulation [ 10 ] was taken as the square center , i.e. , . x .", "label": "", "metadata": {}, "score": "48.434097"}
{"text": "A path is a sequence of tag names that specify a navigational trajectory to a set of nodes in the XML tree .A rooted path is one that begins at the root node of the XML tree .For efficient processing , complex path expressions in XML queries are often preprocessed into a set of candidate ( path , pred ) pairs , where \" path \" is a linear rooted path and \" pred \" is a string predicate on the leaf value reachable via path .", "label": "", "metadata": {}, "score": "48.44606"}
{"text": "A value space is the set of values for a given datatype .A lexical space is the set of valid literals for a datatype .Enumeration constrains the value space to a specified set of values .Each value in the value space of a datatype is denoted by one or more literals in its lexical space .", "label": "", "metadata": {}, "score": "48.539627"}
{"text": "A detailed explanation , as well as the pseudo - code of the algorithm , can be found in Additional file 2 .This procedure needs only the reverse CGR index of S , without using any special index data structure .", "label": "", "metadata": {}, "score": "48.694366"}
{"text": "The reason for that is simple .Internal nodes correspond to prefixes of suffixes ( ie substrings ) that occur in multiple suffixes .In reality , this is fairly complex .So the approach you are taking is good enough .", "label": "", "metadata": {}, "score": "48.71833"}
{"text": "L .S .r .r . )L .y .S . x . . . .Then , to obtain the intended coordinate .x .L .S . [ .L . 1 . ] a CGR iteration is applied and we get .", "label": "", "metadata": {}, "score": "48.844406"}
{"text": "If the noted conditions are met , the node - processing procedure adds the word or words to the list ( step 1125 ) .A word is stored in the list of words along with the score propagated out of the last state .", "label": "", "metadata": {}, "score": "48.90559"}
{"text": "In contrast , CLE Tags and CLE BD address how to extract labels using these statistics .Some embodiments may include defining the Cluster Term Frequency ( CTF i ) of phrase p , with respect to cluster C i , as the number of documents or titles that contain the phrase p. In some embodiments , we would ignore common stop words and also duplicate occurrences of the same word or phrase in any document or title .", "label": "", "metadata": {}, "score": "49.022305"}
{"text": "I am trying to use suffix trees to compare string sequences .I have found implementations / theory for the longest common sub string problem using suffix trees .However , What i am looking for is a discussion of the related problem - \" all common substrings \" .", "label": "", "metadata": {}, "score": "49.180496"}
{"text": "The clustered results are then sent to the labeling algorithm .The labeling algorithm uses some statistical measure to provide descriptive tags that represent the clusters on the whole , such that the clusters have meaning for the person performing the search .", "label": "", "metadata": {}, "score": "49.196033"}
{"text": "First , the coordinate .x .L .S . [ .L . ] is obtained by canceling symbol S [ 1 ] from .x .L .S . , i.e. , .x .L .S . [ .", "label": "", "metadata": {}, "score": "49.1998"}
{"text": "Possible extensions to be explored numerically include sequence alignment , which can be implemented using a dynamic programming approach in a matrix of all the pairwise distances between the CGR coordinates .The longest common subsequence can also be addressed in the future using numerical reasoning .", "label": "", "metadata": {}, "score": "49.201797"}
{"text": "S . x .S . log . log .x .N .S . and .x .N .S . will further approximate each other in the map and Eq .We refer the intended reader to Additional file 1 where details on this analysis can be found .", "label": "", "metadata": {}, "score": "49.270294"}
{"text": "If so , a carry - on may , or may not , take place just before moving to the second digit of the difference .Either way we end up with the same base-3 logarithm , as in both cases the first digit of the difference is greater than 0 ( highlighted in bold ) , i.e. , . and .", "label": "", "metadata": {}, "score": "49.3067"}
{"text": "Consult the references of this .If you really insist on running the whole thing in linear time , then you can construct the suffix array in linear time .I am sure if you search around a bit , you can easily find pointers .", "label": "", "metadata": {}, "score": "49.351334"}
{"text": "Construct a suffix tree / array from this text .It 's easy now to traverse this suffix data structure to collect all right maximal repeats .By examining the left context , filter out the non - left maximal repeats .", "label": "", "metadata": {}, "score": "49.36744"}
{"text": "We want to couple the suffix array with the $ LCPs$ , the longest common prefixes .We can construct the array of $ LCPs$ in linear time as mentioned in the paper by Kasai et al .The length is of course the value in the lcp array .", "label": "", "metadata": {}, "score": "49.576904"}
{"text": "I have implemented a solution by comparing the suffixes of a string after sorting the suffix list .Is there any linear time algorithm that performs better than this piece of code ? 1 Answer 1 .You can build a suffix tree in linear time ( see this ) .", "label": "", "metadata": {}, "score": "49.63367"}
{"text": "Do not create substrings , substrings can be denoted by a pair of numbers .When you need the actual characters , look up the original string .In fact suffixes , correspond to a single index ( the start index ) .", "label": "", "metadata": {}, "score": "49.659317"}
{"text": "I would recommend some sort of tree structure .Start with a root , then add an ' a ' node if any substrings start with ' a ' , add a ' b ' node if any substrings start with ' b ' , and so on .", "label": "", "metadata": {}, "score": "49.753777"}
{"text": "FIG .6 , leaf nodes may appear at different levels within the lexical tree .Leaf nodes also may correspond to commands .For example , a leaf node may correspond to the word \" select \" and to the command \" SELECT \" .", "label": "", "metadata": {}, "score": "49.758022"}
{"text": "The procedure also deletes any lists of words for times prior to the requested start time .Each node of the lexical tree 500 ( .FIG .5 ) represents a sequence of states for a particular phoneme .For example , .", "label": "", "metadata": {}, "score": "49.80069"}
{"text": "Is this problem solvable by constructing the Generalized suffix tree ( GST ) only once for the two sequences .I know it can be solved by repeatedly constructing a GST after every iteration of finding and removing the LCS .But , I am wondering if i am missing a neat trick where in the GST is constructed only once .", "label": "", "metadata": {}, "score": "49.830482"}
{"text": "The algorithm \" hops \" from each interesting position to the one immediately to the right .It spends amortized constant time on each interesting position .Interesting positions are so named because any maximal - length palindromic substring overall must be centered at one of them .", "label": "", "metadata": {}, "score": "49.916386"}
{"text": "The pre - filtering procedure reseeds the tree ( step 730 of .FIG .7 ) to account for this possibility .For a given frame , multiple nodes may produce words .However , the tree only needs to be reseeded once .", "label": "", "metadata": {}, "score": "49.936478"}
{"text": "In some cases , however , the title information alone may not suffice for retrieving .Additional factors may need to be taken into consideration during the clustering process .For instance , one factor to be used could be the demand factor which , in one embodiment , is the relationship of items and categories to the query terms .", "label": "", "metadata": {}, "score": "50.00682"}
{"text": "However , for most actually existing attribute - string databases , such as XML , the number of distinct string values at the leaf nodes is orders of magnitude larger than the set of distinct rooted tag paths .A significant challenge therefore exists in accurately estimating the selectivity of string predicates on the leaf values reachable via a given path .", "label": "", "metadata": {}, "score": "50.019726"}
{"text": "L .S .r . )L .x .r . k .L .r . )L . k .y . k .S . . .The next hash value h ( S [ 2 .", "label": "", "metadata": {}, "score": "50.04779"}
{"text": "Some embodiments may include demand data that is utilized in an additional approach to improve the relevancy of clusters extracted and prune the irrelevant clusters or phrases for the given query Q ( e.g. , query 108 ) .In some cases , there could be some phrases in the search results that occur frequently , but might not be very relevant to the current input query from the user .", "label": "", "metadata": {}, "score": "50.058052"}
{"text": "In the case of XML , the data consists of path - string pairs , where each string is associated with exactly one attribute that is a path .In other cases , each string can be associated with any number ( including zero ) of attributes .", "label": "", "metadata": {}, "score": "50.068207"}
{"text": "r .r . )N .y .Q .x . . . .Clearly , this operations are computed in constant time .Finally , we recall that symmetric operations of RIGHT INSERTION and RIGHT DELETION can be straightforwardly computed from the iterative definition of CGR in Eq .", "label": "", "metadata": {}, "score": "50.073364"}
{"text": "For exact match queries , step 430 computes the a posterior probability of each bucket given the query , using the synopsis in the histogram from .FIG .3 , and finds the bucket bkt that maximizes the a posteriori probability .", "label": "", "metadata": {}, "score": "50.107502"}
{"text": "Moreover , words with weights closer to 2 are words that are most relevant to the query , and words with weighting lower than 1 are words that are irrelevant to the query .Here , for the purpose of simplicity , the relevance weights have been normalized to range from 0 to 2 .", "label": "", "metadata": {}, "score": "50.26359"}
{"text": "In other cases , each string can be associated with any number ( including zero ) of attributes .Referring again to .FIG .2 , block 220 shows the selectivity of all of the exact string match path - value pairs entailed by the exemplary XML document of 210 .", "label": "", "metadata": {}, "score": "50.29599"}
{"text": "This algorithm is my own invention .I would not classify it as very clever , but it ought to work .A really simple solution : Build a suffix tree for the first string , $ S$ , and annotate all nodes with $ s$. Then insert all suffixes of the second string , $ T$. Annotate nodes you pass through or create with $ t$. The path label for any node that is annotated with both $ s$ and $ t$ is a substring of both $ S$ and $ T$. ( See , for example , these lecture notes a quick web search turned up . )", "label": "", "metadata": {}, "score": "50.37305"}
{"text": "If the gap between the two halves of the palindrome is fixed , it happens to be a simple variant of the previous problem .Therein , forward and backward extensions are performed in positions apart of each other ( Additional file 2 ) , a procedure that is again solved in linear time .", "label": "", "metadata": {}, "score": "50.542263"}
{"text": "The table depicted below shows for each intermediate node , the base cluster under that node , and the phrases ( e.g. , strings ) and the documents that belong to the base cluster identified by these nodes .In some embodiments , each base cluster is assigned a score that is a function of the number of documents it contains and the words that make up its title .", "label": "", "metadata": {}, "score": "50.580154"}
{"text": "Constant - time longest common suffix via Cantor set embedding .As discussed previously CGR coordinates of prefixes sharing an L -long suffix are located within 2 - L distance of each other .However , there are prefixes not sharing an L -long suffix that are also located within the same distance .", "label": "", "metadata": {}, "score": "50.584816"}
{"text": "Some embodiments may include the use of a relevance - weighting factor to generate a purely statistical measure to produce a list of keywords ( e.g. , corresponding to a particular query ) that may appear in search results .This factor may , for example , be applied just before the generation of the merged cluster map .", "label": "", "metadata": {}, "score": "50.759674"}
{"text": "In some embodiments , a mechanism is provided to measure and validate the clustering system .One measure that may be provided for evaluating the clustering system is to determine coverage and precision for the clustering system .Further , in an extreme situation , one could define a single cluster with all the result documents in it to achieve coverage of 1 .", "label": "", "metadata": {}, "score": "50.779465"}
{"text": "This means we can fill in the corresponding position in the longest palindromic array immediately , and also that there is no palindromic prefix of centered at as , and hence no corresponding palindromic suffix at the position obtained by reflecting across the current centre .", "label": "", "metadata": {}, "score": "50.826736"}
{"text": "9 .Next , an operation 1408 is executed that receives the merged cluster map and applies various factors including , for example , the relevancy weighting factor , selling factor , price factor , category factor , and image factor .", "label": "", "metadata": {}, "score": "50.843822"}
{"text": "For example , both the word .Referring to .FIG .14 , the speech recognition system may process recognition results according to a procedure 1400 .Initially , the speech recognition system generates or receives recognition results for an utterance ( step 1405 ) .", "label": "", "metadata": {}, "score": "50.936707"}
{"text": "Since is now shorter than ( since its centre is to the right but both and extend equally far on the right ) , it is a palindromic proper suffix of .Since the centre of is to the left of the centre of , is longer than , a contradiction as is maximal by hypothesis .", "label": "", "metadata": {}, "score": "50.966015"}
{"text": "This order may be ascending or decending .Further , once ordering occurs , then further compaction may take place for certain nodes , and their new position may be duplicative of other nodes .Combining Clusters .Some embodiments may include strings that are common to more than one document .", "label": "", "metadata": {}, "score": "50.96852"}
{"text": "13015_2012_153_MOESM1_ESM.PDF Additional file 1 : Longest common extension queries .Additional file 1 presents in detail the problem of computing LCE queries with CGR maps that uses a contraction parameter ratio of .r .It also presents the solution by embedding the CGR coordinates in the Cantor set and shows that this corresponds to the CGR map with .", "label": "", "metadata": {}, "score": "51.038063"}
{"text": "( 2 ) applying the histogram to estimate selectivity for both exact / full string match queries and substring match queries in an XML database , comprising : . receiving a match query that is an exact match query or a substring match query ; .", "label": "", "metadata": {}, "score": "51.102394"}
{"text": "A method is described that corrects incorrect text associated with recognition errors in computer - implemented speech recognition .The method includes the step of performing speech recognition on an utterance to produce a recognition result for the utterance .The command includes a word and a phrase ....", "label": "", "metadata": {}, "score": "51.14122"}
{"text": "( 1 ) will eventually overflow , hence producing the same effect as explicitly computing the remainders .If this occurs for h ( P ) a spurious hit might be obtained , requiring a naive verification .Naturally , infinite precision techniques can be used to prevent this phenomena , which in turn yield powerful computation models .", "label": "", "metadata": {}, "score": "51.18857"}
{"text": "Since in its simplest form a CGR map is just a set of coordinates on a two - dimensional plan , we can use a quadtree to index such points [ 32 ] .For this index , a tree data structure is used where each node has at most four children .", "label": "", "metadata": {}, "score": "51.38439"}
{"text": "Depending on the application at hand we may need to build one or two standard CGR maps .These CGR maps may correspond to the direct DNA string as well as to its reverse .In addition , the complement or reverse complement may also be used .", "label": "", "metadata": {}, "score": "51.44074"}
{"text": "The computer system of .claim 12 , further comprising : . a receiver to receive a search query , the search query relating to item data ; and .an extractor to extract the item data from the merged cluster as a search result , the search result extracted based upon a similarity between the search query and the item data .", "label": "", "metadata": {}, "score": "51.49651"}
{"text": "If two points are in the same quadrant then they are sorted according to the second quadrant that they appear on , or iteratively by the first quadrant that they differ .The advantage of having LCE queries in constant time within CGR maps is that two CGR coordinates can be efficiently compared .", "label": "", "metadata": {}, "score": "51.50164"}
{"text": "Next , an operation 1202 is executed that generates a base cluster score using documents and phrases in a document for a particular cluster .Once the base cluster score is generated , an operation 1203 is executed that merges the base cluster scores to create a merged base cluster score .", "label": "", "metadata": {}, "score": "51.671734"}
{"text": "In some embodiments , hash clustering may be used as an alternative to the suffix tree as a data structure into which various substrings may be inserted .This hash table data structure may use standard hash clustering or may use bucket hashing depending upon the performance needs of a particular user or developer .", "label": "", "metadata": {}, "score": "51.91641"}
{"text": "For example , a subtree 507 contains a variety of nodes 508 - 514 .More to the point , a node 13 , referenced as 508 , is connected to a node 14 , referenced as 510 , via an edge labeled \" Bottle . \"", "label": "", "metadata": {}, "score": "52.02913"}
{"text": "The pre - filtering procedure does not reinitialize the lexical tree between requests for list of words .Accordingly , the state of the lexical tree when a list of words is requested corresponds to the state of the lexical tree after a previous list of words was returned .", "label": "", "metadata": {}, "score": "52.086746"}
{"text": "If you are using some form of suffix tree which has only two nodes for the string ABAB , then it wo n't work directly with the algorithm you quoted .This is what the suffix tree should look like , with O representing the nodes and $ used to mark the end of the string .", "label": "", "metadata": {}, "score": "52.252403"}
{"text": "7 is a diagram illustrating a compacted suffix tree , according to an example embodiment .FIG .8 is a diagram illustrating a hash table used to store base clusters of documents in the strings contained therein , according to an example embodiment .", "label": "", "metadata": {}, "score": "52.33535"}
{"text": "y . k . i .N . . .( 2 ) .The generalization of CGR to higher - order alphabets was defined , in a more natural way , by extending the original CGR square to an hypercube [ 24 ] , which can be bijectively mapped to 2D polygons by increasing the value of r [ 25 ] .", "label": "", "metadata": {}, "score": "52.417786"}
{"text": "These words are stored in vocabulary files for the user and for the dictation topic , and are available as part of the backup dictionary for the dictation topic regardless of user , and to the user regardless of which dictation topic is being used .", "label": "", "metadata": {}, "score": "52.42975"}
{"text": "In some embodiments , once the item data is retrieved by the operation 202 and the classification of the query 108 is determined , an uncompacted trie is built .Using these five retrieved titles , an uncompacted trie may be built .", "label": "", "metadata": {}, "score": "52.490707"}
{"text": "r . , the distance between the coordinates is decreased by a factor of 2 in each common symbol in their suffixes .One consequence of this result is that the distance between the coordinates being less that 2 -L constitutes a necessary condition for sharing a L -long suffix .", "label": "", "metadata": {}, "score": "52.504242"}
{"text": "The method of .claim 1 , further comprising : . receiving a search query , the search query relating to item data ; and .extracting the item data from the merged cluster as a search result , the search result extracted based upon a similarity between the search query and the item data .", "label": "", "metadata": {}, "score": "52.50697"}
{"text": "In some embodiments , this data structure may be , for example , a trie , a hash table , or some other data structure that provides for constant time ( e.g. , O(1 ) ) or near constant time performance for insertion and searching .", "label": "", "metadata": {}, "score": "52.652878"}
{"text": "The active vocabulary 230 uses a pronunciation model in which each word is represented by a series of phonemes that make up the phonetic spelling of the word .Each phoneme may be represented as a triphone that includes three nodes .", "label": "", "metadata": {}, "score": "52.680588"}
{"text": "Simple linear work suffix array construction .In Proceedings of the 30th international conference on Automata , languages and programming ( ICALP'03 ) , Jos C. M. Baeten , Jan Karel Lenstra , Joachim Parrow , and Gerhard J. Woeginger ( Eds . )", "label": "", "metadata": {}, "score": "52.81596"}
{"text": "The method includes the step of performing speech recognition on an utterance to produce a recognition result for the utterance .The command includes a word and a phrase .The method includes determining if a word closely corresponds to a portion of the phrase .", "label": "", "metadata": {}, "score": "52.825115"}
{"text": "In some embodiments , this operation 305 acts to receive the relevancy weighting score for various items related to the query 108 .Once received , an operation 306 is executed that transmits the relevancy weighting scores to the STC algorithm as reflected in operation 204 .", "label": "", "metadata": {}, "score": "52.97673"}
{"text": "FIG .4A illustrates an example of a constraint grammar for a \" select \" command used to select previously recognized text .As shown , a constraint grammar may be illustrated as a state diagram 400 .The \" select \" command includes the word \" select \" followed by one or more previously - recognized words , with the words being in the order in which they were previously recognized .", "label": "", "metadata": {}, "score": "53.0409"}
{"text": "In the CGR framework we propose an algorithm that does not achieve linear time complexity , as suffix tree does , but it is sufficiently close to warrant a careful analysis .We start this analysis by considering the simpler problem of finding duplicates in a list of numbers .", "label": "", "metadata": {}, "score": "53.091118"}
{"text": "If node $ v$ is non - trivial , we store the largest string - depth of a non - trivial node in its subtree as $ lcs(v)$.If $ r$ is the root , then $ lcs(r)$ is the length of the longest common substring of $ S$ and $ T$. Updating the tree after deleting a substring from one of the sequences should not be too hard .", "label": "", "metadata": {}, "score": "53.13"}
{"text": "FIG .15 , the speech recognition system processes the word - in - phrase command according to a procedure 1435 .After extraction , the system determines if is a substring of ( step 1505 ) .For example , the system may calculate a statistical difference between acoustic models for different words , and may designate words as being similar when this difference is less than a threshold amount .", "label": "", "metadata": {}, "score": "53.144093"}
{"text": "Start at the position right on the first character of the string .This is the first interesting position .Also , we need to keep track of the length of the currently longest known palindrome centered at the current position .", "label": "", "metadata": {}, "score": "53.35286"}
{"text": "Specifically , for each cluster we extract all the strongly present phrases in the cluster in which a TD score is less than a threshold term density score ( Th TD ) .Th TD may be defined as the NumOfClusters/4 ( e.g. , we pick all the strongly present phrases in the cluster C i which are not present in more than Th TD of the clusters globally ) .", "label": "", "metadata": {}, "score": "53.465084"}
{"text": "A synopsis is generated for the partition , having an average selectivity or count of the string - attribute - count triples in the partition and summary information representing the set of string - attribute pairs belonging to the bucket .Subsequent queries , both for exact and substring matches , use the synopsis to estimate the selectivity of buckets .", "label": "", "metadata": {}, "score": "53.534805"}
{"text": "When a score exceeds the pruning threshold , the likelihood that the word represented by the score was spoken is deemed to be too small to merit further consideration .For this reason , the procedure prunes the lexical tree by deactivating any state having a score that exceeds the pruning threshold ( step 1115 ) .", "label": "", "metadata": {}, "score": "53.70981"}
{"text": "The exploratory analysis described here consisted of selecting foundational string problems and refactoring them using CGR - based algorithms .We found that CGR can take the role of suffix trees and emulate sophisticated string algorithms , efficiently solving exact and approximate string matching problems such as finding all palindromes and tandem repeats , and matching with mismatches .", "label": "", "metadata": {}, "score": "53.790638"}
{"text": "The idea is always to perform an extension and jump over a mismatch to perform another extension until the number of allowed mismatches are attained .Consequently , the complexity of all k -mismatch palindromes is updated to O ( Nk ) time .", "label": "", "metadata": {}, "score": "53.795853"}
{"text": "Another common operation on strings is COUNTS .It consists on determining the number of occurrences of a given pattern P in a string S .This can be easily achieved by adapting the MATCHES operation , for both standard and quadtree - based CGR indexes , resulting in the same time complexity .", "label": "", "metadata": {}, "score": "53.811493"}
{"text": "That would still give a useless tree ( for this algorithm ) since it does n't actually represent suffixes .If you explicitly add an end - of - string marker ( i.e. run your algorithm on \" ABAB$ \" ) you should get a correct tree . - interjay Jun 3 ' 12 at 18:33 XML Schema can be used to define a class of XML documents .", "label": "", "metadata": {}, "score": "53.840008"}
{"text": "So after each iteration either or the current position is advanced , and thus total number of iterations of the loop in step 2 is no more than the sum of , the number of characters , and , the number of positions .", "label": "", "metadata": {}, "score": "53.876884"}
{"text": "i .S . x .i .S .L .Since by hypothesis S 1 and S 2 have a common L -length suffix we know that .x .i .S . x .i .S . k . i .", "label": "", "metadata": {}, "score": "53.891884"}
{"text": "So we scan backward from the current position .For each position to the left of the current position , we know the longest palindromic substring centered there .If the first character of is to the right of the first character of , then the longest palindromic substring centered at the position obtained by reflecting about the current position is identical to .", "label": "", "metadata": {}, "score": "53.92575"}
{"text": "One important property of CGR is the convergence of sequence coordinates in the space [ 0,1 ] 2 when the prefixes they represent share a common suffix .In fact , CGR maps prefixes with shared suffixes close to each other reflecting the property that , wherever the sequence context may be , the same suffix will be always mapped in the same region of CGR .", "label": "", "metadata": {}, "score": "54.016567"}
{"text": "This logical operation removes superfluous or redundant strings or substrings from the data .Next , an operation 1106 is executed that transmits the remaining query data ( e.g. demand data ) to the STC algorithm for clustering .FIG .12 is a flowchart illustrating an example execution of a method used to implement operation 205 .", "label": "", "metadata": {}, "score": "54.072746"}
{"text": "S . . .Thus , the Rabin - Karp CGR - based procedure starts by defining .h .S .L .x .L .S . and proceeds by computing iteratively the code for h ( S [ i + 1 . i + L ] ) as .", "label": "", "metadata": {}, "score": "54.09352"}
{"text": "It turns out that it does not , because there can only be up to linearly many substrings of any given length .Specifically , there can not be more than different palindromic substrings of maximal length , because there can not be more than substrings of any given length in the first place .", "label": "", "metadata": {}, "score": "54.28837"}
{"text": "In some embodiments , bidirectional edges are used to connect the various nodes that make up this merged cluster map .In addition to a bare overlap value , additional factors such as a relevancy weighting factor , a seller factor , a price factor , a category factor , an image factor or some other suitable factor may be used as a basis for merging clusters .", "label": "", "metadata": {}, "score": "54.298492"}
{"text": "The suffix tree based solution : . requires much code to implement .has a high constant factor on runtime .consumes a great deal of memory , and . is still with general alphabets .However , there exists a simpler , shorter , faster , less memory - hungry algorithm [ 5 ] which accesses the string only by comparing its characters for equality ( and hence has running time independent of alphabet size ) .", "label": "", "metadata": {}, "score": "54.68241"}
{"text": "In one embodiment , the cluster label acts as the label of the base cluster that contains the highest number of documents .In another embodiment , the labeling of the cluster is performed using the most frequent phrases in the cluster .", "label": "", "metadata": {}, "score": "54.705227"}
{"text": "Step 3 takes constant time and is executed once per iteration of the outer loop .Step 4 consists of some constant - time parts executed once per iteration of the outer loop , as well as an inner loop .The inner loop takes constant time per iteration can only run times in total , because each iteration fills in a previously unknown entry in the longest palindrome array , which has entries .", "label": "", "metadata": {}, "score": "54.767113"}
{"text": "Further illustrated is a position 808 that roughly corresponds to node 18 referenced as 711 containing the string \" Opener \" and also documents containing the substring \" Bottle Opener \" ( e.g. , 1234 ) .Additionally , a position 809 is illustrated containing the substring \" Cap \" wherein the substring \" Cap \" contains documents 0 and 3 .", "label": "", "metadata": {}, "score": "54.843376"}
{"text": "This algorithm uses a rolling hash function h , from strings to integers , allowing to reduce the problem of comparing strings to the problem of comparing integers , which can be computed much more efficiently in commodity hardware .Given a string S of size N and a pattern P of size L , the Rabin - Karp algorithm starts by computing the code h ( P ) .", "label": "", "metadata": {}, "score": "54.873337"}
{"text": "Finding palindromes and tandem repeats .This section presents two applications of CGR based on exact string matching that rely on LCE described above .A nucleotide sequence S is said to be a ( complemented ) palindrome if it is equal to its reverse complement .", "label": "", "metadata": {}, "score": "54.90558"}
{"text": "FIG .1 illustrates an importance of the selectivity estimation in a cost - based query optimizer of a database management system ; .FIG .2 illustrates the definition of string selectivity using an exeplary XML document ; .FIG .", "label": "", "metadata": {}, "score": "54.90821"}
{"text": "This algorithm requires overall O ( N log N ) time , where the sorting step is the bottleneck of the procedure .Our solution for determining the longest common substring with CGR is similar to this procedure .We sort the CGR coordinates according to the quadrant they appear on .", "label": "", "metadata": {}, "score": "54.917755"}
{"text": "The method may also include extracting the word and the phrase from the recognition result .Determining if the word closely corresponds to a portion of the phrase may include a determining if the word matches a substring of the phrase .", "label": "", "metadata": {}, "score": "55.00652"}
{"text": "The language model score corresponds to the difference between the language model score for the word and the incremental language model score that is already included in the score .In general , the list threshold has a lower value than the pruning threshold .", "label": "", "metadata": {}, "score": "55.006783"}
{"text": "Many string algorithms use LCE as a subtask that needs to be addressed efficiently and will therefore benefit from this result , as shown in the following sections .Common operations on strings .In this section , several common operations on strings are analyzed and a comparison between CGR and traditional data structures is given when appropriate .", "label": "", "metadata": {}, "score": "55.01571"}
{"text": "For larger alphabets higher order trees , such as octrees , can be considered .Web - based JavaScript implementation .Along with the Mathematica \u00ae implementation , a JavaScript version is also provided , where an efficient binary representation of CGR coordinates is used , thus eliminating floating point operations .", "label": "", "metadata": {}, "score": "55.03769"}
{"text": "For example , if you have a substring with the word \" ant \" , you should have a root node , a child node ' a ' , a grandchild node ' n ' , and a great grandchild node ' t ' .", "label": "", "metadata": {}, "score": "55.097855"}
{"text": "It is not too hard to see that this is a lowest common ancestor query on the tree .The depth of this node is the length of the longest common prefix of these two suffixes .Here it is 2 , so we know that the substrings underlined match : rear ra ngement#tnemegnar ra er , giving the palindromic substring re arra ngement#tnemegnarraer .", "label": "", "metadata": {}, "score": "55.15483"}
{"text": "S .j .S . j .A .j .m .j .A . m .with the boundary condition that S 0,0 equals zero .An even more general form , in which the scores are expressed as functions of the various parameters , is illustrated in .", "label": "", "metadata": {}, "score": "55.17136"}
{"text": "The recognizer determines that there are more frames to be considered when two conditions are met .First , more frames must be available .Upon receiving the list of words from the pre - filtering procedure , the recognizer uses the list of words to create hypotheses or to expand any hypothesis for which a word has ended ( step 1280 ) .", "label": "", "metadata": {}, "score": "55.18064"}
{"text": "Additionally , it is shown that CGR can be used as an hash function and its relation with Rarbin - Karp algorithm is highlighted .The chief advantage of CGR is its simplicity and easy implementation .In addition , a more complex placement of the CGR coordinates in memory actually provides an efficient way to solve more demanding problems , for example , through the use of quadtrees , here proposed to solve the longest common substring problem .", "label": "", "metadata": {}, "score": "55.187077"}
{"text": "1 is a diagram of a system for using search clustering , according to an example embodiment .FIG .2 is a flowchart illustrating a method used to implement a system for search clustering , according to an example embodiment .", "label": "", "metadata": {}, "score": "55.20931"}
{"text": "The pre - filtering procedure reseeds the tree whenever the silence node 512 is active or a word was produced by a leaf node of the lexical tree , regardless of whether the word was added to the list of words .", "label": "", "metadata": {}, "score": "55.289284"}
{"text": "r . , standard CGR index entry .x .M .j .S .r . ) return . log .x .N .i .S .r .x .M .j .S . r .", "label": "", "metadata": {}, "score": "55.43623"}
{"text": "Then we start processing the suffixes preceding the deleted substring .Let $ v$ be the lowest non - trivial ancestor of the current leaf .If $ k \\ge lcs(v)$ , we are done , as we are not interested in subtrees with trivial roots .", "label": "", "metadata": {}, "score": "55.440865"}
{"text": "2 .FIGS .4A and 4B are state diagrams of a constraint grammar .FIG .5 is a graph of a lexical tree .FIG .6 is a graph of a portion of the lexical tree of .FIG .", "label": "", "metadata": {}, "score": "55.44466"}
{"text": "2 is a flowchart illustrating an example method 200 showing the operational flow of the previously illustrated clustering system .Shown is a query 108 that is received by , for example , the application server 111 .Once received , an operation 201 is executed that sends an HTTP call to a relevancy weighting system .", "label": "", "metadata": {}, "score": "55.547234"}
{"text": "11 .The node - processing procedure determines whether the node should spawn additional active nodes and whether the node should be rendered inactive .If the node is a leaf node , the node - processing procedure also determines whether the word corresponding to the node should be added to a word list for a time associated with the node .", "label": "", "metadata": {}, "score": "55.629726"}
{"text": "The recognizer uses the results of these comparisons to generate scores for the hypotheses .Hypotheses having excessive scores are eliminated from further consideration .As noted above , hypotheses that comply with no active constraint grammar also are eliminated .When the recognizer determines that a word of a hypothesis has ended , the recognizer requests from the pre - filtering procedure a list of words that may have been spoken just after the ending - time of the word .", "label": "", "metadata": {}, "score": "55.64978"}
{"text": "8A illustrates a node 800 that includes a first state 805 , a second state 810 , and a third state 815 .A comparison with a frame of parameters may cause the score in a particular state to remain in the state ( through a path 820 ) .", "label": "", "metadata": {}, "score": "55.660587"}
{"text": "i + L - 1 ] ) are potential occurrences of P , which should be further checked naively .This algorithm was one of the firsts to achieve linear pattern matching efficiency , taking only O ( N ) time to scan a string of size N .", "label": "", "metadata": {}, "score": "55.750137"}
{"text": "when the query is a substring match query : . computing for each bucket , an estimated number of times that the substring query occurs in the bucket to produce occurrence counts or frequencies from which to compute a weighted sum of frequency and average selectivity of the bucket , and . returning the weighted sum as a selectivity estimate .", "label": "", "metadata": {}, "score": "55.770016"}
{"text": "Repeats occuring only in S or only in T should olso be eliminated at this point .Repeats that have n't been eliminated are then put on a priority queue , with priority defined by length .After the traversal , as recorded repeats are removed from the priority , the final filtering ( for substring containment ) can be carried out .", "label": "", "metadata": {}, "score": "55.770485"}
{"text": "Some embodiments may include a separating engine 1005 to filter item data from noise data based upon a frequency with which a word is used in a search as compared to a frequency another word is used in the search .Also , the suffix ordering may be stored in a data structure that includes at least one of a trie , a hash table , a binary search tree , a red - black tree , and a heap .", "label": "", "metadata": {}, "score": "55.912346"}
{"text": "FIG .7 is a flow chart of a pre - filtering procedure performed by the software of .FIG .2 . FIGS .8A , 8 B and 8 C are state graphs representing nodes of the lexical tree of .", "label": "", "metadata": {}, "score": "55.94291"}
{"text": "A CLE BD approach may be implemented , in some embodiments , where one would like to have the single best concept within the cluster rather than multiple tags that could occur within the cluster .The single best concept could be extracted by selecting the best document that best represents the majority of the other documents within the cluster .", "label": "", "metadata": {}, "score": "56.03274"}
{"text": "In some embodiments , the demand factor and the relationship of items and categories to the query terms may be represented using one or more Artificial Intelligence ( AI ) based structures and algorithms .The nodes of the network may then be traversed based upon the weighted values expressed in the edges .", "label": "", "metadata": {}, "score": "56.03847"}
{"text": "Commands may include words , phrases , or sentences .The recognizer 215 processes the frames 210 of an utterance in view of one or more constraint grammars 225 .A constraint grammar , also referred to as a template or restriction rule , may be a limitation on the words that may correspond to an utterance , a limitation on the order or grammatical form of the words , or both .", "label": "", "metadata": {}, "score": "56.05555"}
{"text": "Further , a second tier may be a logic tier that performs application processing in the form of logical / mathematical manipulations of data inputted through the interface level , and communicates the results of these logical / mathematical manipulations to the interface tier , and/or to a backend or storage tier .", "label": "", "metadata": {}, "score": "56.070587"}
{"text": "Such CGR coordinates can be computed similarly as in Eq .( 2 ) by .x .i .i . k . i . k .y .i . k . i . k . i . k . i .", "label": "", "metadata": {}, "score": "56.08367"}
{"text": "We now know the length of the longest palindrome centered at the current location .Fill this in .( Find next interesting position ) Let scan backward through the longest palindrome array and scan forward , so that and are reflections across the current position .", "label": "", "metadata": {}, "score": "56.09725"}
{"text": "Sequence representation plays a particular role in this regard , being the first step that both enables and conditions subsequent data processing , and has been the object of several analytical approaches over the last years [ 3 ] .The development of string processing algorithms based on different data structures , particularly suffix trees and suffix arrays , has been increasing steadily [ 1 , 4 ] .", "label": "", "metadata": {}, "score": "56.11065"}
{"text": "If you think it does , show the actual suffix tree , and where you find the suffix \" B \" on it . - interjay Jun 3 ' 12 at 16:06 .The suffix B is included in the BAB leaf , you can run it yourself using Mark Nelson 's program ( marknelson.us/1996/08/01/suffix-trees ) I think The anwser to my question is that I need to count the occurences of each letter .", "label": "", "metadata": {}, "score": "56.19038"}
{"text": "In generating the score for a hypothesis , the recognizer uses acoustic scores for words of the hypothesis , a language model score that indicates the likelihood that words of the hypothesis are used together , and scores provided for each word of the hypothesis by the pre - filtering procedure .", "label": "", "metadata": {}, "score": "56.368298"}
{"text": "Longest common substring .The retrieval of the longest common substring of two strings is a classical computer science problem .Such procedure takes O ( NM 2 ) time .By using linear time search algorithms , such as the Knuth - Morris - Pratt , this result can be improved to O ( NM ) .", "label": "", "metadata": {}, "score": "56.41333"}
{"text": "If the node is not the highest node , then the pre - filtering procedure goes to the next node having no unprocessed active subnodes ( step 720 ) and processes that node ( step 710 ) .When searching for the next node to process , the pre - filtering procedure considers inactive nodes having active subnodes or active siblings .", "label": "", "metadata": {}, "score": "56.42482"}
{"text": "Category Factor .Example embodiments may also include a category factor , wherein the association between items in a category in a database is taken into account when generating clusters .This factor may , for example , be applied just before the generation of the merged cluster map .", "label": "", "metadata": {}, "score": "56.43186"}
{"text": "For example , the speech recognition system may insert the text into a dictation window .If the top recognition candidate includes something other than text ( step 1410 ) , the speech recognition system determines whether the candidate includes a word - in - phrase command that permits active disambiguation of homophones so as to avoid homophone mistakes ( step 1420 ) .", "label": "", "metadata": {}, "score": "56.546623"}
{"text": "Given a set of documents in a language comprising strings associated with attributes , such as XML , a partition - based histogram is generated that is much smaller in size than the original data set .The generated histogram can support , for example , selectivity estimation for both exact / full string match queries and substring match queries in such string databases accurately .", "label": "", "metadata": {}, "score": "56.77205"}
{"text": "In some embodiments , a method is illustrated as implemented in a distributed or non - distributed software application designed under a three - tier architecture paradigm , whereby the various components of computer code that implement this method may be categorized as belonging to one or more of these three tiers .", "label": "", "metadata": {}, "score": "56.8218"}
{"text": "Is the list of substrings constant ?I 'm asking because using Regex type solutions usually involve some precomputations of the regular expression ( rsp .the list of substrings in your case ) .Would that precomputation be amortized over many searches ? -", "label": "", "metadata": {}, "score": "56.88182"}
{"text": "Successors of a node also may be referred to as subnodes of the node .When the lexical tree is initialized , the silence node 512 is the only active node .Next , the pre - filtering procedure processes the current node ( step 710 ) according to a node - processing procedure 1100 that is discussed below with reference to .", "label": "", "metadata": {}, "score": "56.915283"}
{"text": "This trie may be a suffix trie , or even a prefix trie .Further , as discussed above , other types of data structures may be used in lieu of a trie for the purpose of organizing item listing data for searching .", "label": "", "metadata": {}, "score": "56.923084"}
{"text": "Indexes have the advantage that they support subsequent string searches in much less time than searching over the all string S .However , their performance depend largely on the nature of the underlying hash .This is exactly what is attained when CGR is used to induce a rolling hash function for the Rabin - Karp procedure .", "label": "", "metadata": {}, "score": "56.979004"}
{"text": "These retrieval operations using ( path , pred ) pairs form the set of basic query processing operators .Accurate estimation of the selectivity of such ( path , pred ) pairs is therefore crucial for choosing an optimal execution plan in cost - based query optimization .", "label": "", "metadata": {}, "score": "57.0056"}
{"text": "9 is an example merger cluster map that may result from the combining of clusters based upon a \u03bc value set to be 0.5 .Illustrated is a merged cluster map 900 where nodes or , in some cases , data contained in hash table positions , are merged together based upon some type of predefined overlap value .", "label": "", "metadata": {}, "score": "57.009884"}
{"text": "In some embodiments , items have images attached to them .Image similarity can be used as a factor for clustering .This factor may , for example , be applied just before the generation of the merged cluster map , assuming , for example , that comparing similar items visually could also be a useful factor .", "label": "", "metadata": {}, "score": "57.014378"}
{"text": "In some embodiments , item listing data may be retrieved via the execution of the operation 202 from the item listing database 112 for the purpose of identifying and building a trie of possible search results based upon a particular search query , such as query 108 .", "label": "", "metadata": {}, "score": "57.079826"}
{"text": "We will proceed through a series of observations to derive the algorithm .First , the designation of interesting and uninteresting positions is not unique ; in particular , any uninteresting position can be relabelled interesting without affecting correctness or consistency .", "label": "", "metadata": {}, "score": "57.093674"}
{"text": "These weighted links may represent probability values for determining whether a word or combination of words appearing in a item listing are noise or key words .Some embodiments may include the populating of an item listing database 112 for the purpose of providing data upon which to conduct a search .", "label": "", "metadata": {}, "score": "57.13764"}
{"text": "The relevancy score of a cluster may be computed to determine how relevant the cluster is with respect to a given input query .Several factors may be utilized to compute the relevancy score of a cluster including demand attributes and category histogram match score .", "label": "", "metadata": {}, "score": "57.21772"}
{"text": "Each frame includes 24 parameters and represents a short portion ( for example , 10 milliseconds ) of the utterance .As shown in .FIG .3 , the front end processing module 200 produces a frame from digital samples according to a procedure 300 .", "label": "", "metadata": {}, "score": "57.228886"}
{"text": "As illustrated in .FIGS .4A and 4B , this notation indicates that \" select \" may be followed by any ordered sequence of previously - recognized words .This grammar does not permit optional or alternate words .Constraint grammars are discussed further in U.S. Pat .", "label": "", "metadata": {}, "score": "57.266754"}
{"text": "The language model components of the leaving penalties for all states in a particular node together represent a language model score for the phoneme associated with that node .The language model score represents the likelihood that a word including the phoneme will occur in speech .", "label": "", "metadata": {}, "score": "57.403545"}
{"text": "Furthermore , since we are scanning backward from the current centre , the first such we encounter is the centre of the longest palindromic proper prefix , so we have also found the longest palindromic proper suffix .These facts give us enough information to construct an algorithm : .", "label": "", "metadata": {}, "score": "57.483147"}
{"text": "The details of the algorithm , which requires the direct and reverse CRG indexes to be built in a pre - processing phase , are presented in Additional file 2 .Approximate string matching .The k - mismatch problem is an approximate matching problem where k mismatches are allowed .", "label": "", "metadata": {}, "score": "57.50998"}
{"text": "2 , a recognizer 215 receives and processes the frames of an utterance to identify text corresponding to the utterance .The recognizer entertains several hypotheses about the text and associates a score with each hypothesis .The score reflects the probability that a hypothesis corresponds to the user 's speech .", "label": "", "metadata": {}, "score": "57.524178"}
{"text": "FIG .11 is a flowchart illustrating an example method used to implement operation 203 .Illustrated is parsed query data 1101 that is received through the execution of an operation 1102 , wherein operation 1102 is initiated through receiving a call from an operation implementing the STC algorithm .", "label": "", "metadata": {}, "score": "57.54336"}
{"text": "( 7 ) it is possible to update the hash value in constant time and , therefore , obtaining all the hash values takes only O ( N ) for a string S of size N .Likewise a hash data structure that indexes all L -tuples of S can be built within this time .", "label": "", "metadata": {}, "score": "57.55304"}
{"text": "In a typical example , a topic may include approximately 30,000 words that are considered for normal recognition .A complete dictation vocabulary consists of the active vocabulary 230 plus a backup vocabulary 245 .The backup vocabulary may include files that contain user - specific backup vocabulary words and system - wide backup vocabulary words .", "label": "", "metadata": {}, "score": "57.61564"}
{"text": "1 .Like reference symbols in the various drawings indicate like elements .DETAILED DESCRIPTION .A speech recognition system uses a word - in - phrase command in a recognition candidate to disambiguate homophone errors .As background information for the discussion of disambiguation of homophones , a speech recognition system that does not use a word - in - phrase command is discussed with reference to .", "label": "", "metadata": {}, "score": "57.620075"}
{"text": "P .B . )P .A . )P .A .B . )P .B . )[ .Sum . over . all .B .P .A .B . ) . ]Step 430 then determines that bucket 0 maximizes the probability .", "label": "", "metadata": {}, "score": "57.672943"}
{"text": "5 is a diagram illustrating an uncompacted tree that may be generated through the execution of a suffix tree clustering algorithm , according to an example embodiment .FIG .6 is a diagram illustrating a hash table that may be generated through the execution of a suffix tree clustering algorithm , according to an example embodiment .", "label": "", "metadata": {}, "score": "57.68882"}
{"text": "Otherwise , the longest palindrome centered at is at least as long as the longest palindrome centered at . is the next interesting position .Go back to step 2 , setting the current position to and the length of the currently longest known palindrome centered there to .", "label": "", "metadata": {}, "score": "57.706963"}
{"text": "This may be achieved through an API call made to a search back end .Subsequently , a HTTP based method call is made to obtain relevance weighting for that particular query from a Relevance - Weighting System .In some embodiments , different queries return relevance weightings specific to that query .", "label": "", "metadata": {}, "score": "57.72208"}
{"text": "From the root node 505 , the tree expands to a group 510 of nodes that correspond to phonemes with which words start .A silence node 512 that represents silence also may be reached from the root node 505 .Each node in the group 510 represents a phoneme that appears at the beginning of one or more words .", "label": "", "metadata": {}, "score": "57.77361"}
{"text": "One or more vocabulary files may be associated with each user .The vocabulary files contain all of the words , pronunciations , and language model information for the user .Dictation and command grammars may be split between vocabulary files to optimize language model information and memory use , and to keep each single vocabulary file under a size limit , for example , 64,000 words .", "label": "", "metadata": {}, "score": "57.77819"}
{"text": "claim 12 , wherein the suffix ordering is stored in a data structure that includes at least one of a trie , a hash table , a binary search tree , a red - black tree , or a heap .The computer system of .", "label": "", "metadata": {}, "score": "57.816162"}
{"text": "The method of .claim 1 , further comprising merging the compact cluster representation based upon one or more of a relevance - weight factor , a seller factor , a price factor , a category factor , or an image factor .", "label": "", "metadata": {}, "score": "57.821003"}
{"text": "Additionally , this query 108 is also sent to an operation 202 which , when executed , makes an API based call to a search back end , such as the previously illustrated item listing database 112 .Once operations 201 and 202 are executed , a further operation 204 is executed wherein an STC algorithm is executed via an execution of operation 204 .", "label": "", "metadata": {}, "score": "57.85521"}
{"text": "and we come across a carry that masks the real dissimilarity between the last characters of string S 1 and S 2 ( highlighted in bold ) .Indeed , the difference .x .S . x .S . indicates that the first character of S 1 and S 2 match , which is not the case .", "label": "", "metadata": {}, "score": "58.02903"}
{"text": "When the last state of the node was active prior to updating the scores for the node , the node - processing procedure uses the score for the last state to generate scores for any inactive subnodes of the node .If the generated score for a subnode does not exceed a pruning threshold , then the node - processing procedure activates that subnode and provides the subnode with the generated score .", "label": "", "metadata": {}, "score": "58.035484"}
{"text": "L .S . [ .L . 1 . ]r . ) x .L .S . [ .L . ]r .y .L .S . which can be defined in terms of .x .", "label": "", "metadata": {}, "score": "58.06874"}
{"text": "For example , as indicated by the square marker , leaf node 615 of .FIG .6 corresponds to the word \" healing \" .An internal node of the tree also may represent a word of the vocabulary .For example , the node 520 might represent a particular vocabulary word in addition to representing the first two phonemes of other vocabulary words .", "label": "", "metadata": {}, "score": "58.093643"}
{"text": "XMLSchemaNode class sets top - level XMLSchema document declarations and definitions plus schema location and schema target namespace .XMLSchema objects are created by XSDBuilder as a result of processing XMLSchema documents .Builds an XMLSchema object from XMLSchema document .XMLSchema object is a set of objects ( infoset ) corresponding to top - level schema declarations and definitions .", "label": "", "metadata": {}, "score": "58.111748"}
{"text": "Ferreir\u00f3s J : Labyrinth of Thought : A History of Set Theory and Its Role in Modern Mathematics .2007 , Birkh\u00e4user Basel .Willard S : General Topology .2004 , Dover Publications .Samet H : The quadtree and related hierarchical data - structures .", "label": "", "metadata": {}, "score": "58.152275"}
{"text": "FIG .7 ) , the pre - filtering procedure activates the root node 505 and associates the minimum of the reseeding score ( S RS ) and the score for the silence node 512 with the root node .During processing of the next frame , the active root node 505 may be used to activate nodes in the group 510 or to activate the silence node 512 .", "label": "", "metadata": {}, "score": "58.300407"}
{"text": "In the preferred embodiment of the current invention , the synopsis in each bucket , where the bucket identifier is BKT , consists of two types of counts : . 1 ) Occurrence counts of paths that are associated with the bucket .", "label": "", "metadata": {}, "score": "58.412052"}
{"text": "FIG .6 , a node 610 corresponds to all words in the vocabulary that start with the phoneme \" H \" .Together , the nodes in the group 510 include representations of the starting phoneme of every word in the vocabulary .", "label": "", "metadata": {}, "score": "58.458733"}
{"text": "While the STC algorithm allows for overlapping clusters , its also may facilitate the creation of clusters that are fairly unique in their theme .We can say that the cluster independence measure is high when we can separate out clusters through their distinction from others .", "label": "", "metadata": {}, "score": "58.49796"}
{"text": "An Additional Approach to Multi - Factor Clustering .In some embodiments , an additional approach to multifactor clustering is implemented that supplements , or in some cases replaces the multi - factoring approach outlined above .This approach may be applied after , for example , a merged cluster map is built .", "label": "", "metadata": {}, "score": "58.631786"}
{"text": "If words can not be added to the word list ( step 735 ) , then the pre - filtering procedure returns the word list ( step 740 ) to the recognizer 215 .If the word list includes more than a predefined number of words , then the pre - filtering procedure removes words from the list prior to returning the list .", "label": "", "metadata": {}, "score": "58.646408"}
{"text": "In consequence , its performance is only O ( N ) in the expected case , and the worst case may be significantly worse , taking O ( N 2 ) time .Other linear time algorithms such as the Knuth - Morris - Pratt and the Boyer - Moore can guarantee linear time performance , even in the worst case [ 35 , 48 ] .", "label": "", "metadata": {}, "score": "58.711037"}
{"text": "Using the standard merge threshold ( e.g. , 0.5 ) , these two clusters may never have been merged if it did n't satisfy the basic merge criterion .Hence , a second measure that takes into account the overlap of sellers between clusters may be needed to enforce this necessary underlying relationship .", "label": "", "metadata": {}, "score": "58.745964"}
{"text": "To determine whether we can make it longer , we check the first character on either side , that is , the two b ' s. They match , so we know that bb is a palindromic substring centered at our current location .", "label": "", "metadata": {}, "score": "58.81829"}
{"text": "In general , the silence node is processed by comparing a frame to a model for silence and adding the resulting score to the minimum of the current score for the silence node and the score for the root node 505 .", "label": "", "metadata": {}, "score": "58.83982"}
{"text": "Knuth D , Morris J , Pratt V : Fast pattern matching in strings .SIAM Journal on Computing .10.1137/0206024 View Article .Aho A , Corasick M : Efficient string matching : an aid to bibliographic search .Communications of the ACM .", "label": "", "metadata": {}, "score": "58.86914"}
{"text": "Linear - Time Longest - Common - Prefix Computation in Suffix Arrays and Its Applications .In Proceedings of the 12th Annual Symposium on Combinatorial Pattern Matching ( CPM ' 01 ) , Amihood Amir and Gad M. Landau ( Eds . )", "label": "", "metadata": {}, "score": "58.871277"}
{"text": "Since our algorithm is designed with the sincere goal of achieving clustering based upon commonality of terms and other factors , we can define a measure based upon how much clusters overlap .Since we have n clusters , each pair C i , C j makes a contribution into the overall measure .", "label": "", "metadata": {}, "score": "58.99462"}
{"text": "In some embodiments , the weights are normalized to a sum of one over all the factors involved ( e.g. , 1/factors involved ) .New attributes can be added into the computation of relevancy score and the weights can be tuned so that appropriate relevancy can be achieved .", "label": "", "metadata": {}, "score": "59.012833"}
{"text": "claim 1 , further comprising labeling the at least one base cluster .The method of .claim 1 , further comprising evaluating the merged cluster to determine a coverage value for the merged cluster , and a second overlap value relating to the at least one documents contained within the merged cluster .", "label": "", "metadata": {}, "score": "59.05168"}
{"text": "FIG .9 provides a simplified example of how scores propagate through the lexical tree .Before the first frame is retrieved ( row 900 ) , state 840 ( which corresponds to silence ) has a score of 0 and no other nodes are active .", "label": "", "metadata": {}, "score": "59.05886"}
{"text": "The word - in - phrase command may be implemented in any language to correct or avoid recognition errors such as those due to homophone errors .The word - in - phrase command also may be implemented to correct other types of misrecognition results .", "label": "", "metadata": {}, "score": "59.070084"}
{"text": "FIG .3 , the histogram construction procedure for an exemplary embodiment of the current invention is illustrated .The histogram construction procedure consists of three steps , labeled 320 , 340 , and 360 , respectively .Step 320 counts each path - value pair in the example XML document 310 and outputs the collection of path - value - count triples sorted by count 330 .", "label": "", "metadata": {}, "score": "59.08853"}
{"text": "To do so , we mirror the current position across the centre of the string , and then take longest common prefixes .To determine the longest palindromic substring centered between the two r ' s ( which must be of even length ) , we consider the suffixes starting at the underlined locations : rear r angement#tnemegnar r aer .", "label": "", "metadata": {}, "score": "59.103962"}
{"text": "But because the second half is a reversed copy of the first half , we know the ra in the second half is actually the ar in the first half just before our current position : re arra ngement#tnemegnarraer .Thus we have determined that the longest palindromic substring here has length 4 .", "label": "", "metadata": {}, "score": "59.159637"}
{"text": "As shown in .FIG .13L also illustrates another feature of the interface .As an utterance is being recognized , the control / interface module 220 may display a partial recognition candidate 1365 for the utterance .This partial candidate represents the best scoring hypotheses for the utterance at a point in time before the recognizer completes processing of the utterance .", "label": "", "metadata": {}, "score": "59.15986"}
{"text": "Graph - based data structures such as suffix trees are heavily applied in sequence comparison and bioinformatics problems , having attained a high performance level .This optimization makes them the most common data structures for string - related operations .CGR has been , for more than two decades , a fruitful methodology for biological sequence comparison , providing a support for aligment - free analysis along with conveying an appealing pattern visualization capacity for whole genomes .", "label": "", "metadata": {}, "score": "59.29924"}
{"text": "In the two decades since its original proposal , CGR has been generalized beyond its original focus on genomic sequences and has been successfully applied to a wide range of problems in bioinformatics .This report explores the possibility that it can be further extended to approach algorithms that rely on discrete , graph - based representations .", "label": "", "metadata": {}, "score": "59.365936"}
{"text": "means for merging the compact cluster representation to generate a merged cluster , the merging based upon a first overlap value applied to the at least one document with common item data , the merged cluster being based at least in part on a the demand factor .", "label": "", "metadata": {}, "score": "59.404915"}
{"text": "We can do this if and only if these characters match .If they do not match , there is no hope of any longer palindromic substring centered here existing , so we are done .For example , suppose our current center is between the two b ' s in the word scabbards .", "label": "", "metadata": {}, "score": "59.404922"}
{"text": "Operation of the pre - filtering procedure 240 is illustrated in .FIG .7 .The pre - filtering procedure begins by retrieving the next frame of parameters for an utterance ( step 700 ) .Immediately after initialization , the next frame will be the first frame for the utterance .", "label": "", "metadata": {}, "score": "59.41634"}
{"text": "Therefore , by using a function of simple statistical measures like the mean , mode and variance , it may be possible to measure the cohesiveness of clusters .If , in applying one of these measures , the prices vary a little too much , this is may be an indication of a bad cluster , and the cluster may be dropped , or discarded .", "label": "", "metadata": {}, "score": "59.50397"}
{"text": "To assist in this selection we provide a summary of time complexities achieve by both data structures for a set of pertinent problems in string processing for molecular biology , showing the CGR parallelism with suffix trees in some of the problems addressed .", "label": "", "metadata": {}, "score": "59.587948"}
{"text": "Determining if the word closely corresponds to a portion of the phrase may include determining if the word sounds similar to a substring of the phrase .Producing the speech recognition result may include producing the substring of the phrase that sounds similar to the word .", "label": "", "metadata": {}, "score": "59.61566"}
{"text": "In the CLE Tags approach , an important multiple tags concepts within the cluster is applied , while in the CLE BD approach , the best document ( e.g. , a centroid or average ) that best represents the majority of the documents within the cluster is selected .", "label": "", "metadata": {}, "score": "59.74162"}
{"text": "Additionally , we show that CGR can be used as a rolling hash function within the Rabin - Karp algorithm .Conclusions .The analysis of biological sequences relies on algorithmic foundations facing mounting challenges , both logistic ( performance ) and analytical ( lack of unifying mathematical framework ) .", "label": "", "metadata": {}, "score": "59.754585"}
{"text": "Take the Python regex r\"(a+)b\\1 \" .This matches some number of a 's , a b , and then the same number of a 's as before .This is non - regular .RE engines that support backreferences actually use an NFA .", "label": "", "metadata": {}, "score": "59.80065"}
{"text": "By building this set of relevant words , the search process is benefited , as the relevancy of clusters / cluster tags may be enhanced , and the recall / retrieval process is benefited as noise words are eliminated , improving recall .", "label": "", "metadata": {}, "score": "59.824745"}
{"text": "( Test interesting position ) Check whether the palindrome we have so far centered at the current position can be extended ( that is , whether there exist identical characters immediately to the left and right of it ) .If so , extend it .", "label": "", "metadata": {}, "score": "59.83777"}
{"text": "XMLSchemaobject(as a group ) is loaded as a first state .Current element(event startElement ) is matched against current state group elements .If matched the element type element name and snode info are loaded as new state .In a case of group , a vector of counters(int ) is allocated in a parallel stack .", "label": "", "metadata": {}, "score": "59.871803"}
{"text": "16 is a flowchart illustrating a method used to implement or execute an operation that clusters the search results , according to an example embodiment .FIG .17 shows a diagrammatic representation of a machine in the example form of a computer system within which a set of instructions for causing the machine to perform any one or more of the methodologies discussed herein may be executed , according to an example embodiment .", "label": "", "metadata": {}, "score": "59.887413"}
{"text": "The recognizer then retrieves the next frame ( step 1210 ) and repeats the procedure .If there are no more speech frames to process , then the recognizer 215 provides the most likely hypotheses to the control / interface module 220 as recognition candidates ( step 1285 ) .", "label": "", "metadata": {}, "score": "59.916695"}
{"text": "As expected , an inverted repeat is a sequence of nucleotides that is the reverse complement of another sequence that is found further downstream the DNA sequence .These sequences are usually transposon boundaries [ 39 , 40 ] .Another major application that benefits from constant - time LCE queries is finding all tandem repeats in a nucleotide sequence .", "label": "", "metadata": {}, "score": "59.947926"}
{"text": "Then , an operation 1406 is executed that receives weighted scores , wherein these weighted scores are received through the execution of operation 201 .Upon the execution of operations 1406 , 1403 and 1405 , an operation 1407 is executed that generates a merged cluster map as is depicted in , for example , .", "label": "", "metadata": {}, "score": "60.05316"}
{"text": "\" UPDATE : It should be noted that the order of of things ORed together in the regex matters .Have a look at the following test inspired by TZOTZIOY : .This suggests the order matters : -/. I am not sure what this means for Rax 's application , but at least the behavior is known .", "label": "", "metadata": {}, "score": "60.053688"}
{"text": "The chosen query execution plan 170 is then executed by the query execution engine 180 , and the query result 190 is returned to the user .FIG .2 illustrates the definition of string selectivity in a database of string - attribute documents , such as XLM , using an exemplary XML document denoted by 210 .", "label": "", "metadata": {}, "score": "60.06415"}
{"text": "In some embodiments , a system and method is disclosed for building a searchable data structure wherein each node in the data structure contains clusters of data .These clusters are generated based upon a variety of factors , including , for example , relevancy weighting , seller factors , price factors , category factors , image factors , and other suitable factors .", "label": "", "metadata": {}, "score": "60.066418"}
{"text": "The system - wide backup vocabulary contains all the words known to the system , including words that may currently be in an active vocabulary .Referring again to .FIG .2 , the recognizer 215 may operate in parallel with a pre - filtering procedure 240 .", "label": "", "metadata": {}, "score": "60.07223"}
{"text": "If the recognizer determines that a word is ending ( step 1245 ) , the recognizer sets a flag that indicates that the next frame may correspond to the beginning of a word ( step 1250 ) .If there are additional hypotheses to be considered for the frame ( step 1255 ) , then the recognizer selects the next hypothesis ( step 1260 ) and repeats the comparison ( step 1225 ) and other steps .", "label": "", "metadata": {}, "score": "60.127594"}
{"text": "The words or phrases corresponding to the best matching acoustic models are referred to as recognition candidates .The processor may produce a single recognition candidate for an utterance , or may produce a list of recognition candidates .SUMMARY .In one general aspect , a method of computer - implemented speech recognition includes performing speech recognition on an utterance to produce a recognition result for the utterance , and determining if the word closely corresponds to a portion of the phrase .", "label": "", "metadata": {}, "score": "60.16201"}
{"text": "A base cluster may be a set of electronic documents ( e.g. , online transactions ) that share common phrases in their item titles , or other type of common string based data .A suffix trie is then constructed for the purpose of organizing these electronic documents so as to allow for the retrieval of relevant search results .", "label": "", "metadata": {}, "score": "60.17117"}
{"text": "FIG .10 is a block diagram of an example computer system such as the application server 111 .The various blocks illustrated herein may be implemented in hardware , firmware , or even software .In some embodiments , the item data includes at least one of an item title , an item category , and seller information .", "label": "", "metadata": {}, "score": "60.202446"}
{"text": "In this case , the preprocessing and indexing of S can greatly improve the search time as we just process S once , which is not the case if we use algorithms such as Knuth - Morris - Pratt [ 35 ] or Aho - Corasick [ 36 ] .", "label": "", "metadata": {}, "score": "60.209045"}
{"text": "XML is an example of a database of strings associated with attributes , and in native database management systems ( \" DBMSs \" ) of , for example , XML documents , the documents are stored as trees and queries are processed using either indexes or tree traversals .", "label": "", "metadata": {}, "score": "60.265354"}
{"text": "5 .FIGS . 9 and 10 are charts of scores corresponding to the states of the state graphs of .FIGS .8A , 8 B and 8 C. .FIG .11 is a flow chart of a procedure for processing nodes of a lexical tree .", "label": "", "metadata": {}, "score": "60.29379"}
{"text": "FIG .4B illustrates the state diagram 450 of the constraint grammar for the select command when a previously - recognized utterance is \" four score and seven \" .This state diagram could be expanded to include words from additional utterances .", "label": "", "metadata": {}, "score": "60.403713"}
{"text": "FIG .14 is a flowchart illustrating an example method used to implement or execute operation 204 .Illustrated is an operation 1401 that receives item data .This item data may be , for example , the previously illustrated data relating to a sale or advertisement for the sale of a good or service , where this advertisement is considered a document .", "label": "", "metadata": {}, "score": "60.471127"}
{"text": "This schema DOM tree is ' Schema ' parsed in a following order : ( if any ) builds a schema object and makes it visible .( if any ) is replaced by corresponding DOM tree .Top - level declarations and definitions are registered as a current schema infoset of items .", "label": "", "metadata": {}, "score": "60.479424"}
{"text": "Additional details with regard to each one of these operations will be more fully illustrated below .Document Preparation .In some embodiments , text in the form of strings are processed , wherein these strings are capable of reversible mapping to other strings .", "label": "", "metadata": {}, "score": "60.525566"}
{"text": "The property of being strongly present is boolean ( e.g. , a phrase is strongly present or not ) .Next , we define the Term Density ( TD ) score of a phrase p as the number of clusters in which phrase p is strongly present .", "label": "", "metadata": {}, "score": "60.56043"}
{"text": "FIG .8C , the root node 505 is represented by a single state 860 .Comparison with a frame causes the score in the node to be passed to one or more subsequent nodes ( including the silence node 512 ) through a path 865 .", "label": "", "metadata": {}, "score": "60.579987"}
{"text": "Results .In this section we present several exact and approximate string matching problems , along with their CGR solution .These include the longest common extension problem , as well as finding all palindrome and tandem repeats , exact and approximate string matching , and longest common substring .", "label": "", "metadata": {}, "score": "60.585403"}
{"text": "Cenac P , Chauvin B , Ginouillac S , Pouyanne N : Digital Search Trees And Chaos Game Representation .ESAIM - Probability and Statistics .View Article .Ukkonen E : On - line construction of suffix trees .Algorithmica .", "label": "", "metadata": {}, "score": "60.611042"}
{"text": "Next , the module determines log(X(f ) ) 2 ( step 310 ) .The module may then perform frequency warping ( step 315 ) and a filter bank analysis ( step 320 ) to achieve speaker normalization .See S. Wegmann et al . , \" Speaker Normalization on Conversational Speech , \" Proc .", "label": "", "metadata": {}, "score": "60.63275"}
{"text": "After each iteration of the inner loop , either it runs again immediately , moving one character to the right or step 3 and step 4 follow , which either terminate the algorithm or move the current position to the right , keeping fixed .", "label": "", "metadata": {}, "score": "60.715416"}
{"text": "The method of .claim 1 , wherein the item data includes at least one of an item title , an item category , or seller information .The method of .claim 1 , wherein the item data is part of a plurality of merged clusters organized into a hierarchy of merged clusters .", "label": "", "metadata": {}, "score": "60.74948"}
{"text": "The faster search results are returned , the more efficient and effective a website is viewed by users and customers .In some embodiments , efficient data structures are leveraged to generate aggregations of searchable item data using a suffix ordering .", "label": "", "metadata": {}, "score": "60.79643"}
{"text": "5,799,279 , titled \" CONTINUOUS RECOGNITION OF SPEECH AND COMMANDS \" and issued Aug. 25 , 1998 , which is incorporated by reference .Another constraint grammar 225 that may be used by the speech recognition software 124 is a large vocabulary dictation grammar .", "label": "", "metadata": {}, "score": "60.8333"}
{"text": "S .L . if and only if S 1 [ i - L + 1 .Proof : We start by showing that if .x .i .S . x .i .S .L .then S 1 [ .", "label": "", "metadata": {}, "score": "60.862865"}
{"text": "It will surely scan the string multiple times .Even a brute force approach where you manually use the string index ( ) method for each string you are searching for ( keeping track of the minimum on the fly ) is better than this . map ( ) can be a powerful function , but this is not example of such a case . -", "label": "", "metadata": {}, "score": "60.913757"}
{"text": "Next , the cluster label of C i is picked as a sequence of all the strongly present phrases in the selected best document .FIG .15 is a flowchart illustrating an example method used to execute operation 207 .Illustrated is an operation 1501 that receives a merged cluster map , such as that depicted in .", "label": "", "metadata": {}, "score": "60.946144"}
{"text": "In Chinese , the command may be implemented as , for example , \" . \" using a constraint grammar ( step 1420 ) .For Chinese , the constraint grammar requires \" .If the top recognition candidate includes a command other than the word - in - phrase command ( step 1420 ) , the speech recognition system processes the command ( step 1425 ) .", "label": "", "metadata": {}, "score": "61.053715"}
{"text": "The score represents the likelihood that a series of frames has placed the lexical tree in the state ( that is , the probability that the series of frames corresponds to the word or portion of a word to which the state corresponds ) .", "label": "", "metadata": {}, "score": "61.056637"}
{"text": "The actual category is chosen by the seller of the item .The categories themselves , however , may be pre - defined .A seller may try his / her best to put an item in the right leaf category .", "label": "", "metadata": {}, "score": "61.075584"}
{"text": "These factors may be applied at any one of the stages of filtering out noise , building an uncompacted trie ( e.g. , data structure ) , building a compacted trie ( e.g. , data structure ) , building the merged cluster map , or even after these stages .", "label": "", "metadata": {}, "score": "61.082943"}
{"text": "While increased computing power may be one solution , another solution is to generate a more effective sorting , and search algorithm .When determining what is an effective sorting and search algorithm , one place to begin is with the data structure and the ability of that data structure to process a set of data .", "label": "", "metadata": {}, "score": "61.09764"}
{"text": "Accordingly , a lower score indicates a better match ( a high probability ) while a higher score indicates a less likely match ( a lower probability ) , with the likelihood of the match decreasing as the score increases .After processing the utterance , the recognizer provides the best - scoring hypotheses to the control / interface module 220 as a list of recognition candidates , where each recognition candidate corresponds to a hypothesis and has an associated score .", "label": "", "metadata": {}, "score": "61.15958"}
{"text": "For example , we could use price information as an additional parameter into the clustering system , such that clusters that are closer to each other in the price range might contribute as additional factor for merging criteria .In some embodiments , the various clusters illustrated in .", "label": "", "metadata": {}, "score": "61.16338"}
{"text": "Block 120 denotes a plan enumeration process that takes as input the query 110 and outputs a collection of query execution plans 130 , each of which will generate the correct result .The query optimizer 140 uses the selectivity estimator 150 to evaluate each of the query execution plans 130 in order to output the most efficient plan 170 .", "label": "", "metadata": {}, "score": "61.22872"}
{"text": "JJ .In some embodiments , cluster quality is an important measure .Cluster quality may be defined as follows .For each cluster , we have defined cluster tags .Cluster tags aggregated define the theme of that cluster .If the cluster tags are fairly independent of each other that indicate that the cluster quality is good .", "label": "", "metadata": {}, "score": "61.28337"}
{"text": "In general , the speech recognition software analyzes the digital samples to produce a sequence of text , and provides this sequence to the interface software 140 .The interface software 140 then transfers the text and the associated time stamp , if any , to the parser 142 , which processes the text in conjunction with the time stamp to generate a parsed version of the action item .", "label": "", "metadata": {}, "score": "61.341843"}
{"text": "Correctness here may be understood as based upon certain norms related to the categorization of items for sale .Here a category factor could be used to mean that items belong to the same category and to indicate that the items in the cluster are homogeneous .", "label": "", "metadata": {}, "score": "61.343826"}
{"text": "The lexical tree pre - filtering procedure is discussed in detail in U.S. Pat .No .5,822,730 , titled \" LEXICAL TREE PRE - FILTERING IN SPEECH RECOGNITION \" and issued Oct. 13 , 1998 , which is incorporated by reference .", "label": "", "metadata": {}, "score": "61.357872"}
{"text": "After the word \" select \" , the constraint grammar permits a transition along a path 410 to a second state 415 that requires the next word in the command to be a previously - recognized word .A path 420 , which returns to the second state 415 , indicates that the command may include additional previously - recognized words .", "label": "", "metadata": {}, "score": "61.42283"}
{"text": "This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim .Rather , as the following claims reflect , inventive subject matter lies in less than all features of a single disclosed embodiment .", "label": "", "metadata": {}, "score": "61.459152"}
{"text": "5 is a diagram of an uncompacted tree 500 that may be generated through the execution of , for example , an STC algorithm , such as the one utilized in operation 204 .For example , subtree 501 contains nodes 3 through 7 wherein , for example , node 3 labeled herein as 502 , is linked to a node 4 labeled 503 through the edge labeled \" Pepsi . \"", "label": "", "metadata": {}, "score": "61.460693"}
{"text": "It is a divide and conquer algorithm that recursively break down the problem of finding tandem repeats into sub - problems , until these become simple enough to be solved directly .These simpler problems can be solved through two LCE queries to elicit the presence of a tandem repeat .", "label": "", "metadata": {}, "score": "61.546867"}
{"text": "The output of the partitioning algorithm is a collection of partitions , also referred to as \" buckets \" , of path - value - count triples 350 .In this example , two partitions or buckets are used .The generate synopsis step 360 extracts a synopsis for each partition .", "label": "", "metadata": {}, "score": "61.622414"}
{"text": "14 is a flowchart illustrating a method used to implement or execute a suffix tree cluster algorithm , according to an example embodiment .FIG .15 is a flowchart illustrating a method used to execute an operation that labels various clusters , according to an example embodiment .", "label": "", "metadata": {}, "score": "61.624954"}
{"text": "Distributed Computing Components and Protocols .Some example embodiments may include remote procedure calls being used to implement one or more of the above illustrated components across a distributed programming environment as distributed computing components .For example , an interface component ( e.g. , an interface tier ) may reside on a first computer system that is remotely located from a second computer system containing a logic component ( e.g. , a logic tier ) .", "label": "", "metadata": {}, "score": "61.640915"}
{"text": "The method of .The method of . claim 1 further comprising extracting the word and the phrase from the recognition result .The method of .claim 1 wherein determining if the word is similar to a portion of the phrase comprises determining if the word matches a substring of the phrase .", "label": "", "metadata": {}, "score": "61.644768"}
{"text": "Using this merged cluster map 113 , a search result 114 may be generated and provided to the user 101 via the search interface 107 .In some embodiments , the query 108 may be sent to more than one web server 110 .", "label": "", "metadata": {}, "score": "61.71173"}
{"text": "Abstract .Histogram construction and selectivity estimation for string and substring match queries in databases of data having strings associated with attributes .The histogram construction counts string - attribute pairs in the documents , and outputs string - attribute - count triples sorted by count .", "label": "", "metadata": {}, "score": "61.820023"}
{"text": "The computer readable medium of .claim 35 wherein the software instructions comprise a sixth code segment to insert the produced speech recognition result into the text at a predetermined location if text has not been selected .Description .TECHNICAL FIELD .", "label": "", "metadata": {}, "score": "61.83755"}
{"text": "Extensions of this property allowed the estimation of Variable Length Markov Models ( VLMM ) [ 26 , 27 ] and time series forecasting by Fractal Prediction Machines ( FPM ) [ 28 ] .For other ratios r and initial points x 0 these properties are all maintained .", "label": "", "metadata": {}, "score": "61.99783"}
{"text": "Referring to .A memory 118 stores data and programs such as an operating system 120 , an application program 122 ( for example , a word processing program ) , and speech recognition software 124 .A computer suitable for one implementation of the system includes a 700 MHz Pentium \u2122 processor , 128 MB memory , 12 GB of available hard drive space .", "label": "", "metadata": {}, "score": "62.107674"}
{"text": "The large vocabulary dictation grammar also indicates the frequency with which words occur .A language model associated with the large vocabulary dictation grammar may be a unigram model that indicates the frequency with which a word occurs independently of context , or a bigram model that indicates the frequency with which a word occurs in the context of a preceding word .", "label": "", "metadata": {}, "score": "62.149544"}
{"text": "This query 108 may be , for example , a search query generated for the purposes of searching some type of web accessible database .In one embodiment , the query 108 is sent across a network 109 to a web server 110 .", "label": "", "metadata": {}, "score": "62.19331"}
{"text": "After the second frame is retrieved , the state 810 becomes an active state .Similarly , leave C and leave D are leaving penalties for , respectively , states 810 and 815 .The sum of language model components of leave B , leave C and leave D represents the language model score for the phoneme represented by the node 800 .", "label": "", "metadata": {}, "score": "62.30301"}
{"text": "FIG .14 , if a result was not produced in processing the word - in - phrase command ( step 1440 ) , the speech recognition system takes no action and awaits further recognition results ( step 1405 ) .If a result was produced ( step 1440 ) , the speech recognition system determines if text has been selected ( step 1445 ) .", "label": "", "metadata": {}, "score": "62.482677"}
{"text": "The computer system of .claim 12 , further comprising a labeling engine to label the at least one base cluster .The computer system of .claim 12 , further comprising an evaluation engine to evaluate the merged cluster to determine a coverage value for the merged cluster , and a second overlap value relating to the at least one documents contained within the merged cluster .", "label": "", "metadata": {}, "score": "62.505196"}
{"text": "FIG .4 illustrates the procedure for estimating the selectivity for both exact string match queries and substring match queries using the partition - based histogram according to the present invention .DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS .FIG .1 illustrates the importance of the selectivity estimation , of which the present invention is a solution , in a cost - based query optimizer of a database management system .", "label": "", "metadata": {}, "score": "62.645622"}
{"text": "The starting time identifies the hypothesized time at which the user began to speak the word or words represented by the state .In particular , the starting time identifies the time at which the score associated with the state entered the lexical tree ( that is , the time at which the score was passed from the state 840 along the path 850 ) .", "label": "", "metadata": {}, "score": "62.757153"}
{"text": "This makes way for more relaxed versions of palindrome and other repeat problems .Landau and Vishkin [ 44 ] and Myers [ 45 ] were the first to present an O ( kN ) solution for the more general k -differences problems , where insertions and deletions are also considered .", "label": "", "metadata": {}, "score": "62.905872"}
{"text": "calculating a demand factor based on relationships of items and categories to query terms of search queries , the relationships established from user actions resulting from the search queries ; . calculating a relevance score using the demand factor , the relevance score calculated , in part , based on a comparison of a similarity of a demand category histogram and a supply category histogram ; . identifying noise data using the demand factor ; . retrieving , from a plurality of listings , item data filtered from the noise data ; . constructing , using a processor , at least one base cluster having at least one document with common item data stored in a suffix ordering ; . compacting the at least one base cluster to create a compacted cluster representation having a reduced duplicate suffix ordering amongst the clusters ; and .", "label": "", "metadata": {}, "score": "63.051666"}
{"text": "BACKGROUND .A speech recognition system analyzes a user 's speech to determine what the user said .Most speech recognition systems are frame - based .In a frame - based system , a processor divides a signal descriptive of the speech to be recognized into a series of digital frames , each of which corresponds to a small time increment of the speech .", "label": "", "metadata": {}, "score": "63.07567"}
{"text": "The output information is applied to one or more output devices .Each program is preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system .However , the programs can be implemented in assembly or machine language , if desired .", "label": "", "metadata": {}, "score": "63.106434"}
{"text": "An exact match query is specified by a ( path , string ) pair and retrieves all nodes reachable via path whose string value matches the query string exactly .A substring query is specified by a ( path , substring ) pair and retrieves all nodes reachable via path whose string value contains substring .", "label": "", "metadata": {}, "score": "63.14756"}
{"text": "The resulting statistical measure or score is achieved by looking at , among other things , the historical information of the query terms typed by the user , the set of results returned , and the set of results that the user actually clicked through .", "label": "", "metadata": {}, "score": "63.19325"}
{"text": "Histogram construction and selectivity estimation for string and substring match queries in databases of data having strings associated with attributes .The histogram construction counts string - attribute pairs in the documents , and outputs string - attribute - count triples sorted by count .", "label": "", "metadata": {}, "score": "63.196426"}
{"text": "FIG .6 corresponds to the words \" heal \" and \" heel \" while also corresponding to the first three phonemes of the words \" heals \" , \" heels \" and \" healing \" .Node 620 also illustrates that , since multiple words may have the same phonetic spelling , a leaf node may correspond to more than one word .", "label": "", "metadata": {}, "score": "63.281208"}
{"text": "A third , storage tier , may be a persistent storage medium or non - persistent storage medium .In some cases , one or more of these tiers may be collapsed into another , resulting in a two - tier architecture , or even a one - tier architecture .", "label": "", "metadata": {}, "score": "63.2929"}
{"text": "The recognizer 215 then retrieves a frame of parameters ( step 1210 ) and determines whether there are hypotheses to be considered for the frame ( step 1215 ) .The first frame always corresponds to silence so that there are no hypotheses to be considered for the first frame .", "label": "", "metadata": {}, "score": "63.30557"}
{"text": "No .5,794,189 , titled \" CONTINUOUS SPEECH RECOGNITION \" and issued Aug. 11 , 1998 , which is incorporated by reference .The constraint grammar also may be expressed in Backus - Naur Form ( BNF ) or Extended BNF ( EBNF ) .", "label": "", "metadata": {}, "score": "63.47875"}
{"text": "The speech recognition system also may require to be a single word ( that may be one or more characters long ) .The length , which corresponds to the number of characters in the word , may be constrained to be shorter than the length of .", "label": "", "metadata": {}, "score": "63.541954"}
{"text": "As shown in .The module 220 displays text 1305 ( \" When a justice needs a friend \" ) corresponding to a text portion of the utterance and implements the formatting command ( \" New - Paragraph \" ) included in the utterance .", "label": "", "metadata": {}, "score": "63.613228"}
{"text": "we have that .x .i .c .S .d . 0 . . .b .b . k . and .Then , . k . x .i .c .S .d .x .", "label": "", "metadata": {}, "score": "63.61921"}
{"text": "9 is a diagram illustrating a merged cluster map , according to an example embodiment .FIG .10 is a block diagram illustrating an application server , according to an example embodiment .FIG .11 is a flowchart illustrating a method used to implement a demand data engine , according to an example embodiment .", "label": "", "metadata": {}, "score": "63.69812"}
{"text": "Once transmitted , an operation 1405 is executed that receives a merged base cluster score from , for example , the execution of operation 205 .Next , an operation 1403 is executed that acts to compact the data structure as , for example , illustrated in .", "label": "", "metadata": {}, "score": "63.713028"}
{"text": "Moreover , this node 14 labeled as 510 is connected additionally to a node 16 labeled as 513 via an edge labeled \" Opener . \"Further , the node 13 labeled as 508 is connected to a node 17 labeled as 509 by an edge labeled \" Lighter .", "label": "", "metadata": {}, "score": "63.75889"}
{"text": "Seller Factor .In some embodiments , a factor that takes into account the overlap of sellers between clusters may enforce the sanctity or legitimacy of the merge .The use of seller information to influence the clustering process is based upon the assumption that sellers who sell similar items tend to appear in related clusters .", "label": "", "metadata": {}, "score": "63.760902"}
{"text": "These schemas may be normalized using certain normalization algorithms so as to avoid abnormalities such as non - additive joins and other problems .Additionally , these normalization algorithms may include Boyce - Codd Normal Form or some other normalization or optimization algorithm known in the art .", "label": "", "metadata": {}, "score": "63.844692"}
{"text": "9 can be shown as various numerical scores .For example , the clusters in .FIG .9 may be merged into five clusters as given below : .Multi - Factor Clustering .In some cases , the clustering search results with the standard STC algorithm do not take into account other factors that may influence the quality of clusters .", "label": "", "metadata": {}, "score": "63.957085"}
{"text": "probability . terms . . .C is derivable using , for example , Bayes 's Rule , as follows : .P .B .b .A . a . )C .P .A . a .B .", "label": "", "metadata": {}, "score": "63.993313"}
{"text": "The suffix array is a sorted list of the suffixes of a given string , indexed by first character .For example , the suffix array of bananas is [ 1 , 3 , 5 , 0 , 2 , 4 , 6 ] , corresponding to the suffixes [ ananas , anas , as , bananas , nanas , nas , s ] .", "label": "", "metadata": {}, "score": "64.00615"}
{"text": "The computer 110 may be used for traditional speech recognition .Under control of the operating system 120 and the speech recognition software 124 , the processor 112 identifies utterances in the user 's continuous speech .Utterances are separated from one another by a pause having a sufficiently large , predetermined duration ( for example , 160 - 250 milliseconds ) .", "label": "", "metadata": {}, "score": "64.01232"}
{"text": "Further , an evaluation engine 1008 may be implemented to evaluate the merged cluster to determine a coverage value for the merged cluster , and a second overlap value relating to the at least one documents contained within the merged cluster .", "label": "", "metadata": {}, "score": "64.015045"}
{"text": "x .x .i .x .i .y .i .x .i .i .N . where .y .i . if .S . [ . i . ]A . if .S . [ . i . ]", "label": "", "metadata": {}, "score": "64.093575"}
{"text": "A speech recognition result is produced if the word closely corresponds to a portion of the phrase .Implementations may include one or more of the following features .For example , the recognition result may include \" . \" in the Chinese language .", "label": "", "metadata": {}, "score": "64.12127"}
{"text": "Further , certain data structures may result in more accurate search results being produced for a given query .BRIEF DESCRIPTION OF THE DRAWINGS .Some embodiments are illustrated by way of example and not limitation in the figures of the accompanying drawings in which : .", "label": "", "metadata": {}, "score": "64.18239"}
{"text": "In the following description , we adopt the pinyin system of Romanization when transcribing Chinese characters and include this transcription in parenthesis following the Chinese characters .Additionally , each word in Chinese has an associated tone , which is represented by a number 1 , 2 , 3 , 4 , or 5 attached to the end of the word in the pinyin system .", "label": "", "metadata": {}, "score": "64.19875"}
{"text": "Penalizing these items for not in the right order would affect the recall of the algorithm .On the other hand , if we ignore the order of the words when the data is input to the algorithm , a large number of low quality clusters would be output .", "label": "", "metadata": {}, "score": "64.20988"}
{"text": "If the score exceeds the threshold value , then the recognizer 215 determines that the hypothesis is too unlikely to merit further consideration and deletes the hypothesis ( step 1240 ) .If the recognizer determines that the word or words corresponding to the hypothesis were likely to have been spoken by the user , then the recognizer determines whether the last word of the hypothesis is ending ( step 1245 ) .", "label": "", "metadata": {}, "score": "64.22958"}
{"text": "Additionally illustrated is a node 19 referenced as 908 that roughly corresponds to nodes 712 and 809 .Associated with this node 19 is the substring \" Cap \" which may appear in , for example , document 0 .Further illustrated is a node 14 referenced as 909 and node 15 referenced as 910 wherein this node 14and 15 are connected to a bidirectional edge .", "label": "", "metadata": {}, "score": "64.26607"}
{"text": "This call is provided to an item listing database 112 .Once operation 401 is executed , and the call made to the item listing database 112 , a further operation 402 is executed .This operation 402 transmits the search results as a form of item data to the previously illustrated STC algorithm , as embodied in operation 204 .", "label": "", "metadata": {}, "score": "64.45884"}
{"text": "S .An .S .An .A .An . m .n .A .Am . . .This expression assumes that the silence node 512 is not reseeded from the root node 505 .If reseeding occurs at a frame n , then the value of S An-1 would be replaced by the score in the root node 505 for the frame n-1 .", "label": "", "metadata": {}, "score": "64.534"}
{"text": "Additionally , a calculator 1012 may be implemented to calculate a relevance score using the demand factor , the relevance score calculated , in part , based on a comparison of a similarity of a demand category histogram , and a supply category histogram .", "label": "", "metadata": {}, "score": "64.6086"}
{"text": "Longest palindromic substring .The longest palindromic substring problem is exactly as it sounds : the problem of finding a maximal - length substring of a given string that is also a palindrome .For example , the longest palindromic substring of bananas is anana .", "label": "", "metadata": {}, "score": "64.60983"}
{"text": "The starting time for the state 805 is set equal the time associated with the first frame .This value for the starting time indicates that the score at state 805 represents a word that started at a time corresponding to the first frame .", "label": "", "metadata": {}, "score": "64.64205"}
{"text": "Text element contents(event characters ) is matched against simpleType ( method validateValue ) .End element ( event endElement ) is matched against last named state .XSDAny objects are used as Namespace frame descriptors ( see XMLSchema definition of ' any ' element ) .", "label": "", "metadata": {}, "score": "64.67035"}
{"text": "FIG .13E , the user causes the control / interface module 220 to generate the correction dialog box 1325 by saying the \" Correct That \" command 1331 .The correction dialog box 1325 includes a list 1332 of recognition candidates for the entire utterance 1329 .", "label": "", "metadata": {}, "score": "64.70317"}
{"text": "For illustrative purposes , several examples of the Chinese word - in - phrase command will now be discussed .Other embodiments are within the scope of the following claims .For example , the techniques described here are not limited to any particular hardware or software configuration ; they may find applicability in any computing or processing environment that may be used for speech recognition .", "label": "", "metadata": {}, "score": "64.75762"}
{"text": "For ease of discussion , this candidate is referred to as the top recognition candidate .As the first step in processing the top recognition candidate , the speech recognition system determines whether the top recognition candidate includes only text ( step 1410 ) .", "label": "", "metadata": {}, "score": "64.79892"}
{"text": "NBids : number of bids placed immediately after searching the phrase P ; .No . of View Item Counts : Number of items viewed by the user immediately after searching the phrase P ; .Category histogram of view item counts : Histogram of view item counts grouped by the category for the phrase P. Relevancy Score .", "label": "", "metadata": {}, "score": "64.81074"}
{"text": "Referring to .FIG . 8B , the node 512 that corresponds to silence is represented by a single state 840 .Each comparison with a frame of parameters may cause a score in the node to remain in the state 840 ( through the path 845 ) and also may cause the score to be passed to the root node 505 through a path 850 .", "label": "", "metadata": {}, "score": "64.84709"}
{"text": "Illustrated is a node 21 referenced as 901 that is connected bi - directionally to a node 22 labeled as 902 .This node 21 references the substring \" Lighter \" and the document that contains the substring \" Lighter \" which , in this case , is document 2 .", "label": "", "metadata": {}, "score": "64.879486"}
{"text": "Ignoring this factor ( e.g. , incorrect lists / mislabels ) , if one were to look at the distribution of items within a cluster across categories , it will give one an understanding of how well the items are clustered .", "label": "", "metadata": {}, "score": "65.09798"}
{"text": "Preferably , the techniques are implemented in computer programs executing on programmable computers that each include a processor , a storage medium readable by the processor ( including volatile and non - volatile memory and/or storage elements ) , at least one input device , and at least one output device .", "label": "", "metadata": {}, "score": "65.119125"}
{"text": "L ] matches S [ i .i + L - 1 ] with at most k mismatches .Concerning time complexity , each match operation takes at most O ( k ) time , since at most k + 1 extensions are tried and each extension takes O ( 1 ) .", "label": "", "metadata": {}, "score": "65.15045"}
{"text": "These various components may be implemented by a computer system on an as - needed basis .These components may be linked to other components via various APIs , and then compiled into one complete server , client , and/or peer software application .", "label": "", "metadata": {}, "score": "65.17566"}
{"text": "I.339-I.341 , which is incorporated by reference .From the normalized results , the module performs cepstral analysis to produce twelve cepstral parameters ( step 325 ) .The module generates the cepstral parameters by performing an inverse cosine transformation on the logarithms of the frequency parameters .", "label": "", "metadata": {}, "score": "65.19984"}
{"text": "The system of . claim 13 wherein the memory further comprises software instructions for extracting the word and the phrase from the recognition result .The system of . claim 13 wherein the software instruction for determining if the word is similar to a portion of the phrase comprises a software instruction for determining if the word matches a substring of the phrase .", "label": "", "metadata": {}, "score": "65.227356"}
{"text": "If I have 1000 substrings , will it still work ?Is there any significant performance degradation relative to the number of words ( i.e. that 's more than linear in the size of the list ) ?Regarding your other clarifications , my list of substrings is being update only once a day or so , I think it 's no issue to generate the regex definition and call \" compile \" at this frequency .", "label": "", "metadata": {}, "score": "65.23186"}
{"text": "The Abstract of the Disclosure is provided to comply with 37 C.F.R. \u00a7 1.72(b ) , requiring an abstract that will allow the reader to quickly ascertain the nature of the technical disclosure .It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims .", "label": "", "metadata": {}, "score": "65.25254"}
{"text": "Next , an operation 1409 is executed that receives the coverage and overlap rule set , wherein this information is received from , for example , the execution of operation 206 .Then , a decisional operation 1410 is executed that determines whether the coverage and overlap is sufficient for the purposes of facilitating , for example , broad coverage with minimal overlap .", "label": "", "metadata": {}, "score": "65.27112"}
{"text": "The system may also be considered to be implemented as a computer - readable storage medium , configured with a computer program , where the storage medium so configured causes a computer to operate in a specific and predefined manner .The user may be required to pause before and after the word - in - phrase command , but not necessarily within the word - in - phrase command .", "label": "", "metadata": {}, "score": "65.3951"}
{"text": "12 is a flowchart illustrating a method used to implement an operation that computes a base cluster score using the merged threshold data , according to an example embodiment .FIG .13 is a flowchart illustrating a method used to implement an operation that provides merged threshold data , according to an example embodiment .", "label": "", "metadata": {}, "score": "65.437225"}
{"text": "LR analyzed the CGR against string processing algorithm such as suffix trees and Rabin - Karp .JSA identified programming environment and contributed to the discussion of results .All authors contributed to the writing of the manuscript .All authors have read and approved the final manuscript .", "label": "", "metadata": {}, "score": "65.45718"}
{"text": "merging the compact cluster representation to generate a merged cluster , the merging based upon a first overlap value applied to the at least one document with common item data , the merged cluster being based at least in part on the demand factor .", "label": "", "metadata": {}, "score": "65.55034"}
{"text": "Presenting Clustered Search Results .FIG .16 is a flowchart illustrating an example method used to implement or execute operation 208 .Illustrated is an operation 1601 that receives phrase data .Next , an operation 1602 is executed that provides a Graphical User Interface ( GUI ) for display in user interaction .", "label": "", "metadata": {}, "score": "65.55177"}
{"text": "claim 23 wherein the memory further comprises a software instruction for inserting the produced speech recognition result into the text at a predetermined location if text has not been selected .A computer - readable medium , comprising software instructions for speech recognition , the software instructions comprising : . a first code segment to perform speech recognition on an utterance to produce a recognition result for the utterance , the recognition result including a command , a word , and a phrase ; . a second code segment to determine if the word is similar to a portion of the phrase ; and .", "label": "", "metadata": {}, "score": "65.6378"}
{"text": "Two comments : it does not discuss the scalability concerns that Rax had , and I do n't like the \" return \" statement , as it would prematurely exit if you had more sentences in sentences .Other than that , it 's short and to the point , and warrants some reputation . -", "label": "", "metadata": {}, "score": "65.7367"}
{"text": "Component Design .Some example embodiments may include the above - illustrated tiers , and their processes or operations , as being written as one or more software components .Common to many of these components is the ability to generate , use , and manipulate data .", "label": "", "metadata": {}, "score": "65.784744"}
{"text": "4 , the procedure for estimating the selectivity of exact and sub - string match queries according to the current invention is illustrated .Bock 410 denotes the input query Q that can either be an exact match query or a substring match query .", "label": "", "metadata": {}, "score": "65.85803"}
{"text": "r .the reverse CGR index , the CGR map .x .S . r .c .the reverse - complement CGR index , and the CGR map .x .S .c .the complement CGR index .", "label": "", "metadata": {}, "score": "65.94986"}
{"text": "This code ran basically instantaneously , and convinced me that I am able to search for 2000 words ( of size 10 ) , and that and of them will match appropriately .Here is the code : . group ( ) if index !", "label": "", "metadata": {}, "score": "66.035904"}
{"text": "The method may also include determining if previously recognized text has been selected .The method may further include replacing selected text with the produced speech recognition result if text has been selected .Moreover , the method may include inserting the produced speech recognition result into the text at a predetermined location if text has not been selected .", "label": "", "metadata": {}, "score": "66.1371"}
{"text": "Some embodiments may utilize the Open Systems Interconnection ( OSI ) model , or the Transmission Control Protocol / Internet Protocol ( TCP / IP ) protocol stack model for defining the protocols used by a network to transmit data .In the case of software having a three tier architecture , the various tiers ( e.g. , the interface , logic , and storage tiers ) reside on the application layer of the TCP / IP protocol stack .", "label": "", "metadata": {}, "score": "66.21415"}
{"text": "As shown in .FIG .13 M , the user again causes the control / interface module 220 to generate the correction dialog box 1325 by saying the \" Correct That \" command 1331 .The correction dialog box 1325 includes a list 1370 of recognition candidates for the entire utterance 1331 .", "label": "", "metadata": {}, "score": "66.26167"}
{"text": "In fact , CGR captures the patterns arising from distinct L -tuple compositions in DNA sequences [ 11 ] , enabling whole genome representation and visualization [ 12 ] .It was also shown that CGR represents a generalization of genomic signatures [ 13 , 14 ] , allowing to characterize different species by associating them with distinctive sequence statistics [ 12 ] .", "label": "", "metadata": {}, "score": "66.2735"}
{"text": "Once operation 204 successfully completes its execution , a further operation 207 is executed that labels the various clusters generated through the execution of the operation 204 .Then , in some cases , an operation 208 is executed that , in effect , clusters the search results .", "label": "", "metadata": {}, "score": "66.30823"}
{"text": "The node - processing procedure may deactivate a node or state by deleting a record associated with the node or state , or by indicating in the record that the node or state is inactive .Similarly , the node - processing procedure may activate a node or state by creating a record and associating the record with the node or state , or by indicating in an existing record that the node or state is active .", "label": "", "metadata": {}, "score": "66.30896"}
{"text": "Finally , the module performs an IMELDA linear combination transformation to select the twenty - four most useful parameters from the twelve cepstral parameters , the twelve cepstral differences , and the twelve cepstral second differences ( step 345 ) .Referring again to .", "label": "", "metadata": {}, "score": "66.42422"}
{"text": "For example , a constraint grammar may be associated with a particular application program 122 and may be activated when the user opens the application program and deactivated when the user closes the application program .The recognizer 215 discards any hypothesis that does not comply with an active constraint grammar .", "label": "", "metadata": {}, "score": "66.737946"}
{"text": "I do n't understand how you could extract all suffixes from that representation ( By your reasoning you could also say that \" ABA \" is included in the \" ABAB \" leaf , but ABA is not a suffix ) .", "label": "", "metadata": {}, "score": "66.75317"}
{"text": "Although CGR has been successfully applied to a wide range of problems , its strength for general string matching problems is , so far , mostly unexplored .In this work we propose CGR as a solution for exact and approximate string matching problems , showing that this representation might bring useful algorithmic tools for biological sequence analysis and more general applications .", "label": "", "metadata": {}, "score": "66.872345"}
{"text": "In some cases , similar clusters are identified , and those that are similar are merged .The idea is that clusters that have document sets that significantly overlap are probably related to the same theme and hence need to be merged .", "label": "", "metadata": {}, "score": "67.04031"}
{"text": "It works with three events : startElement , characters and endElement .If defined , default element and default attribute values are added to the events contents ( as XMLSchema additions to infoset ) and are propagated upwards .XSDValidator is implemented as stack based state machine .", "label": "", "metadata": {}, "score": "67.08139"}
{"text": "Strings in the form of advertisements appearing on web pages advertising the sale of goods or services may be one example of a document .These advertisements may contain titles , seller information , and other descriptive string based information .Example embodiments may include the populating of an item listing database 112 for the purpose of providing data upon which to conduct a search .", "label": "", "metadata": {}, "score": "67.22129"}
{"text": "I 'm only keeping this answer up in case your substring list changes often , in which case using a tree might be faster .Thanks , I completely understand the theory and practice of string indexing and searching , and can implement it myself , but I would expect Python to have a vehicle for this exact thing .", "label": "", "metadata": {}, "score": "67.22309"}
{"text": "As shown in .FIG .13N , the control / interface module 220 responds by placing the text 1372 in the dialog box 1310 .The various correction procedures are described in U.S. Pat .No .5,794,189 , issued Aug. 11 , 1998 and U.S. Pat .", "label": "", "metadata": {}, "score": "67.23358"}
{"text": "10.1007/BF02728525 View Article .Gusfield D : Algorithms on strings , trees , and sequences : computer science and computational biology .1997 , Cambridge England ; New York : Cambridge University Press View Article .Navarro G , M\u00e4kinen V : Compressed Full - Text Indexes .", "label": "", "metadata": {}, "score": "67.34314"}
{"text": "N .ba .B .N .b .B . and step 460 computes the estimate as the weighted sum , .N .A .B . bba .B .Average . selectivity . of . bucket .", "label": "", "metadata": {}, "score": "67.44409"}
{"text": "An utterance includes a variable number of frames and corresponds , for example , to a period of speech followed by a pause of at least a predetermined duration .The processor determines what the user said by finding acoustic models that best match the digital frames of an utterance , and by identifying text that corresponds to those acoustic models .", "label": "", "metadata": {}, "score": "67.47215"}
{"text": "The examples presented in this section illustrate the algorithmic equivalence between CGR and suffix tress .Graphically , this can be observed through the representation of both data structures , given in Figure 2 . CGR and Suffix Tree comparison .CGR and suffix tree comparison .", "label": "", "metadata": {}, "score": "67.51456"}
{"text": "The recognizer then compares the frame to acoustic models 235 for the last word of the hypothesis ( step 1225 ) and , based on the comparison , updates a score associated with the hypothesis ( step 1230 ) .After updating the score ( step 1230 ) , the recognizer determines whether the user was likely to have spoken the word or words corresponding to the hypothesis ( step 1235 ) .", "label": "", "metadata": {}, "score": "67.64117"}
{"text": "FIG .1 is a block diagram of a speech recognition system .FIG .2 is a block diagram of speech recognition software of the system of .FIG .1 .FIG .3 is a flow chart of a signal processing procedure performed by the software of .", "label": "", "metadata": {}, "score": "67.70177"}
{"text": "Alternatively , a speech recognition system may be a \" continuous \" system that can recognize spoken words or phrases regardless of whether the user pauses between them .Continuous speech recognition systems typically have a higher incidence of recognition errors in comparison to discrete recognition systems due to complexities of recognizing continuous speech .", "label": "", "metadata": {}, "score": "67.762985"}
{"text": "claim 12 , further comprising a separating engine to filter the item data from the noise data based upon a frequency with which a word is used in a search as compared to a frequency another word is used in the search .", "label": "", "metadata": {}, "score": "67.86331"}
{"text": "In some cases , internet refers to a network of networks .These networks may use a variety of protocols for the exchange of data , including the aforementioned TCP / IP , and additionally ATM , SNA , SDI , or some other suitable protocol .", "label": "", "metadata": {}, "score": "67.891464"}
{"text": "The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below .Other features , objects , and advantages of the invention will be apparent from the description and drawings , and from the claims .", "label": "", "metadata": {}, "score": "68.00363"}
{"text": "The second alternative corresponds to a transition from state 805 back to state 805 along path 820 .When the first alternative is the more likely , the starting time corresponding to the first frame that was stored previously for the state 805 is replaced by a value corresponding to the second frame .", "label": "", "metadata": {}, "score": "68.020935"}
{"text": "3 is a flowchart illustrating a method used to execute an operation that sends a Hyper Text Transfer Protocol ( HTTP ) call to a relevancy weighting system , according to an example embodiment .FIG .4 is a flowchart illustrating a method used to execute an operation that makes an Application Programming Interface ( API ) call to a search backend call , according to an example embodiment .", "label": "", "metadata": {}, "score": "68.05585"}
{"text": "4 is a flowchart illustrating an example method used to execute operation 202 .Shown is a query 108 that is provided and/or retrieved by an operation 401 .This operation 401 acts to parse the query 108 and generates a search back end call using the query data that is parsed from the query 108 .", "label": "", "metadata": {}, "score": "68.11212"}
{"text": "The method of .claim 1 wherein determining if the word is similar to a portion of the phrase comprises determining if the word sounds similar to a substring of the phrase .The method of .claim 7 wherein producing the speech recognition result comprises producing the substring of the phrase that sounds similar to the word .", "label": "", "metadata": {}, "score": "68.3378"}
{"text": "The recognizer may eliminate any hypothesis that is associated with a constraint grammar ( for example , a command hypothesis ) , but does not comply with the constraint grammar .Referring to .FIG .12 , the recognizer 215 operates according to a procedure 1200 .", "label": "", "metadata": {}, "score": "68.38618"}
{"text": "5 such that the string \" Pepsi Cola Bottle Opener \" may be generated through the clustering of various substrings within a hash table .At position 605 , the substring \" Coin \" is illustrated wherein the substring \" Coin \" roughly corresponds to node 18 referenced as 511 in .", "label": "", "metadata": {}, "score": "68.64912"}
{"text": "claim 1 , further comprising filtering the item data from the noise data based upon a frequency with which a word is used in a search as compared to a frequency another word is used in the search .The method of .", "label": "", "metadata": {}, "score": "68.665344"}
{"text": "The comparison also may cause the score to be passed to a subsequent state through a path 825 .A score is passed to a subsequent state when the score , after being adjusted based on a comparison with a model for the subsequent state , is better than the score in the subsequent state , or when no score is associated with the subsequent state .", "label": "", "metadata": {}, "score": "68.726585"}
{"text": "The recognizer then adds the modified list score to the score for the hypothesis and compares the result to a threshold value .If the result is less than the threshold value , then the recognizer maintains the hypothesis .Otherwise , the recognizer determines that the hypothesis does not merit further consideration and abandons the hypothesis .", "label": "", "metadata": {}, "score": "68.80184"}
{"text": "These various components may be written using the above illustrated object - oriented programming techniques and can be written in the same programming language or different programming languages .Various protocols may be implemented to enable these various components to communicate regardless of the programming language used to write these components .", "label": "", "metadata": {}, "score": "68.84052"}
{"text": "This TCP segment also contains port information for a recipient software application residing remotely .This TCP segment is loaded into the data load field of an IP datagram residing at the network layer .Next , this IP datagram is loaded into a frame residing at the data link layer .", "label": "", "metadata": {}, "score": "68.9158"}
{"text": "claim 25 wherein the second code segment comprises a code segment to determine if the word sounds similar to a substring of the phrase .The computer readable medium of .claim 31 wherein the third code segment comprises a code segment to produce the substring of the phrase that sounds similar to the word .", "label": "", "metadata": {}, "score": "69.0744"}
{"text": "A Computer System .FIG .17 shows a diagrammatic representation of a machine in the example form of a computer system 1700 within which a set of instructions for causing the machine to perform any one or more of the methodologies discussed herein may be executed .", "label": "", "metadata": {}, "score": "69.099815"}
{"text": "Now we find two a ' s , so we now know we have abba , a palindromic substring of length 4 , centered around our current location .Again we try to extend it , by checking one character on each side .", "label": "", "metadata": {}, "score": "69.10916"}
{"text": "claim 25 wherein the second code segment comprises a code segment to determine if the word matches a substring of the phrase .The computer readable medium of .claim 29 wherein the third code segment comprises a code segment to produce the word .", "label": "", "metadata": {}, "score": "69.15039"}
{"text": "FIG .13B , the correction dialog box 1325 includes a \" Train \" button 1328 .When the user selects this button , the control / interface module responds by prompting the user through a training session to obtain one or more samples from the user of the word or words to be trained .", "label": "", "metadata": {}, "score": "69.192535"}
{"text": "The leaving penalty is added to any score that exits the state , and includes a duration component and a language model component .The duration component is related directly to the length of the sound represented by the state and to the length of the phoneme represented by the node to which the state belongs .", "label": "", "metadata": {}, "score": "69.27854"}
{"text": "FIG .131 , the user then uses the mouse to select the words \" to meet this \" 1350 .Then , as shown in .FIG .13J , the user types the letters \" amicu \" , and the control / interface module 220 responds by producing an updated list 1351 of recognition candidates that start with the words \" those who pronounce \" and include a word starting with the letters \" amicu \" .", "label": "", "metadata": {}, "score": "69.29281"}
{"text": "This demand data may be data relating to how often a word has been used by all users , or a portion of users conducting a search .Attribute data may be data that defines some other piece of data such that the attribute is dependant upon this other piece of data .", "label": "", "metadata": {}, "score": "69.31999"}
{"text": "In a networked deployment , the machine may operate in the capacity of a server or a client machine in a server - client network environment or as a peer machine in a peer - to - peer ( or distributed ) network environment .", "label": "", "metadata": {}, "score": "69.37579"}
{"text": "c . k . w . k .N . k .c . k . ) where each w k is a mixture weight , . k . w . k .\u03bc k is a mean vector for the probability density function ( \" PDF \" ) N k , and c k is the covariance matrix for the PDF N k .", "label": "", "metadata": {}, "score": "69.42418"}
{"text": "6,064,959 , issued May 16 , 2000 , which are incorporated by reference .Word - In - Phrase Correction .Homophones are words that sound the same but differ in spelling or representation , origin , and meaning .A word is a sound or a combination of sounds that symbolizes and communicates a meaning and origin .", "label": "", "metadata": {}, "score": "69.61445"}
{"text": "( PDF 194 KB ) .13015_2012_153_MOESM2_ESM.PDF Additional file 2:Detailed algorithms .Additional file 2 presents in detail the algorithms sketched throughout the section that exploits LCE queries in constant time .( PDF 228 KB ) .Authors ' original submitted files for images .", "label": "", "metadata": {}, "score": "69.70875"}
{"text": "\" In this case , the speech recognition system determines which words in the transcript should be selected for replacement when \" rewrite all \" is recognized before \" as in .\" Once again , the words to be replaced may match or sound similar to .", "label": "", "metadata": {}, "score": "69.80687"}
{"text": "Annals of Statistics .10.1214/aos/1018031204 View Article .Tino P , Dorffner G , Schittenkopf C : Understanding state space organization in recurrent neural networks with iterative function systems dynamics .Hybrid Neural Systems , Volume 1778 of Lecture Notes in Artificial Intelligence .", "label": "", "metadata": {}, "score": "69.82266"}
{"text": "Some embodiments may also use price to measure the effectiveness of a cluster .This factor may , for example , be applied just before the generation of the merged cluster map .For example , in certain cases a fixed price exists for an item offered for sale ( e.g. , a \" buy it now \" price ) .", "label": "", "metadata": {}, "score": "69.98306"}
{"text": "The computer system of .claim 12 , wherein the item data includes at least one of an item title , an item category , or seller information .The computer system of .claim 12 , wherein the item data is part of a plurality of merged clusters organized into a hierarchy of merged clusters .", "label": "", "metadata": {}, "score": "69.98319"}
{"text": "x .i .S . x .j .S . max .b .x .i .b .s .x .j .b .S . log .x .i .S . x .", "label": "", "metadata": {}, "score": "69.99455"}
{"text": "12 is a flow chart of a speech recognition procedure .FIGS .13A - N are screen displays of a user interface of the speech recognition system of .FIG .1 .FIGS .14 and 15 are flow charts of procedures implemented by the speech recognition system of .", "label": "", "metadata": {}, "score": "70.12254"}
{"text": "The current invention can be used to estimate the selectivity for both exact / full string match queries and substring match queries in , for example , XML databases .It can be described as being composed of two parts : histogram construction and selectivity estimation .", "label": "", "metadata": {}, "score": "70.313446"}
{"text": "This document assumes familiarity with the W3C recommendations for XML Schema .The Oracle XML Schema Processor for Java is built on the Oracle XML Parser for Java v2 and includes these features : .Built - In Data Types : XML Schema specifies a set of built - in datatypes .", "label": "", "metadata": {}, "score": "70.418335"}
{"text": "An acoustic model also may represent a sound , or phoneme , that corresponds to a portion of a word .Collectively , the constituent phonemes for a word represent the phonetic spelling of the word .Acoustic models also may represent silence and various types of environmental noise .", "label": "", "metadata": {}, "score": "70.44203"}
{"text": "Algorithms for molecular biology : AMB .2006 , 1 : 18- 10.1186/1748 - 7188 - 1 - 18 PubMed PubMed Central View Article .Almeida JS , Vinga S : Universal sequence map ( USM ) of arbitrary discrete sequences .", "label": "", "metadata": {}, "score": "70.47605"}
{"text": "FIG .13 is a flowchart illustrating an example method used to implement operation 206 .Illustrated is a configuration instruction set 1301 that is received or processed through the execution of operation 1302 .Once operation 1302 is executed , and the configuration instruction set is received and parsed , an operation 1303 is executed that extracts merged threshold data .", "label": "", "metadata": {}, "score": "70.59039"}
{"text": "We further illustrate the similarities between these two data structures for biological sequence analysis , showing that numerical biosequence representations given by chaos game iterative function systems constitute an alternative and competitive approach for common string - matching problems .The applications presented in this work have focused on the longest common extension problem that , after linear time preprocessing of a standard CGR index , it is shown to be answered in constant time .", "label": "", "metadata": {}, "score": "70.67546"}
{"text": "CGR data structures and implementation .CGR was implemented using two different data structures , a standard floating - point matrix and a quadtree - like structure .In this section we describe these implementations along with the required notation .Standard CGR index .", "label": "", "metadata": {}, "score": "70.69261"}
{"text": "[International Workshop on Hybrid Neural Systems , DENVER , CO , DEC 04 - 05 , 1998 ] .Tino P , Dorffner G : Predicting the future of discrete sequences from fractal representations of the past .Machine Learning .", "label": "", "metadata": {}, "score": "70.9276"}
{"text": "If the silence node is inactive and no leaf node has produced a word , then the pre - filtering procedure replaces the score for the root node 505 with a bad score ( that is , a score having a value larger than a pruning threshold ) .", "label": "", "metadata": {}, "score": "71.05629"}
{"text": "The system of . claim 13 wherein the software instruction for determining if the word is similar to a portion of the phrase comprises a software instruction for determining if the word sounds similar to a substring of the phrase .The system of . claim 19 wherein the software instruction for producing the speech recognition result comprises a software instruction for producing the substring of the phrase that sounds similar to the word .", "label": "", "metadata": {}, "score": "71.06361"}
{"text": "The control / interface module receives the list of recognition candidates for each utterance from the recognizer .Recognition candidates may correspond to dictated text , speech recognition commands , or external commands .When the best - scoring recognition candidate corresponds to dictated text , the control / interface module provides the text to an active application , such as a word processor .", "label": "", "metadata": {}, "score": "71.10803"}
{"text": "As noted above , each of the scores corresponds to a negative logarithmic probability .Accordingly , adding scores together corresponds to multiplying the probabilities .Thus , the score for the state 840 ( S A2 ) equals the likelihood that both of the first and second frames correspond to silence .", "label": "", "metadata": {}, "score": "71.22099"}
{"text": "For example , when the speech recognition software is being used in conjunction with a particular application ( for example , Microsoft Word ) , the control / interface module updates the active vocabulary to include command words associated with that application and activates constraint grammars associated with the application .", "label": "", "metadata": {}, "score": "71.36365"}
{"text": "We choose JavaScript as underlying language so that our implementation can be used in the Web distributed computational environment .The JavaScript interpreters , such as those found on modern browsers , include high performance features such as runtime compilation , achieving performances usually associated with scientific computing environments .", "label": "", "metadata": {}, "score": "71.51985"}
{"text": "If the two halves of the palindrome are not adjacent it is said to be a separated palindrome .Moreover , the palindrome is said to have a radius correspondent to the size of each half .Palindromic sequences play an important role in molecular biology .", "label": "", "metadata": {}, "score": "71.58517"}
{"text": "As another example , if the top recognition candidate includes the command \" make that , \" then the speech recognition system performs the make that correction command .If the candidate includes a word - in - phrase command ( step 1420 ) , then the speech recognition system processes the word - in - phrase command ( step 1435 ) and determines whether a word - in - phrase result has been produced ( step 1440 ) .", "label": "", "metadata": {}, "score": "71.629715"}
{"text": "This parsing operation may , in some embodiments , remove ( e.g. , filter ) noise words from an electronic document in the form of , for example , an advertisement .These noise words may be duplicate words in the electronic document , or words that otherwise do not add meaning to the electronic document .", "label": "", "metadata": {}, "score": "71.68014"}
{"text": "An additional substring contains the terms \" Pepsi Cola Coin Bank , \" wherein this substring is contained in documents 0 and 3 ( see e.g. , node 19 referenced herein as 514 ) .FIG .6 is a diagram of an example hash table 600 illustrating a data structure that may be used to store item data in the form of strings or substrings that may appear in , for example , various documents .", "label": "", "metadata": {}, "score": "71.75214"}
{"text": "The scores for words in a list of words are returned along with the list of words .The recognizer 215 uses these scores in making the detailed match .Spreading the word across multiple lists ensures that these inaccuracies will not impinge on the accuracy of the speech recognition system .", "label": "", "metadata": {}, "score": "71.826645"}
{"text": "For example , the 2-grams of the value \" abbba \" are \" ab , bb , bb , ba \" .The paths and the q - grams on the values are counted independently .Referring now to .", "label": "", "metadata": {}, "score": "71.9252"}
{"text": "The enrollment program collects acoustic information from a user and trains or adapts a user 's models based on that information .The vocabulary customizer optimizes the language model of a specific topic by scanning user supplied text .The vocabulary manager is a developer tool that is used to browse and manipulate vocabularies , grammars and macros .", "label": "", "metadata": {}, "score": "71.94344"}
{"text": "Document preparation ; 2 .Identifying base clusters ; and 3 .Merging clusters .During the merging of clusters , various relevance weighing factors ( e.g. , multi - factor clustering ) may be utilized to merge the clusters in more or less desirable ways depending upon the selected factors .", "label": "", "metadata": {}, "score": "72.135735"}
{"text": "13B .The box 1325 displays a numbered list of words 1326 starting with the indicated letters ( \" kibi \" ) .Instead of using the mouse 110 to select the word \" cancer \" , the user could have verbally selected the word using a \" Select \" command by saying \" Select cancer \" .", "label": "", "metadata": {}, "score": "72.22725"}
{"text": "In some embodiments , the operation 401 interfaces with the item listing database 112 via an API such as Open Database Connectivity ( ODBC ) , Java Database Connectivity ( JDBC ) , or some other type of database API .Some embodiments may include the various databases ( e.g. , 112 ) being relational databases , or , in some cases , On - Line Analytical Processing ( OLAP ) based databases .", "label": "", "metadata": {}, "score": "72.48838"}
{"text": "Example stochastic algorithms include : genetic algorithms , ant algorithms , tabu search algorithms , or monte carlo algorithms ( e.g. , simulated annealing ) .Common to these algorithms is the use of randomness ( e.g. , randomly generated numbers ) to avoid the problem of being unduly wedded to a local minima or maxima .", "label": "", "metadata": {}, "score": "72.49574"}
{"text": "2002 , 3 : 6- 10.1186/1471 - 2105 - 3 - 6 PubMed PubMed Central View Article .Almeida J , Vinga S : Biological sequences as pictures - a generic two dimensional solution for iterated maps .BMC Bioinformatics .2009 , 10 : 100- 10.1186/1471 - 2105 - 10 - 100 PubMed PubMed Central View Article .", "label": "", "metadata": {}, "score": "72.51239"}
{"text": "This node 16 referenced as 709 is connected to a node 17 referenced as 710 and a node 18 referenced as 711 .Node 17 referenced as 710 is a leaf node , such that documents 0 and 2 contain the substring \" Bottle Cap . \"", "label": "", "metadata": {}, "score": "72.571846"}
{"text": "FIG .1 is a diagram of an example system 100 illustrating a system for using search clustering .Shown is a user 101 utilizing a search interface 107 that resides on any one of a number of devices 102 .These devices 102 may include , for example , a cell phone 103 , a computer system 104 , a television 105 , and/or a Personal Digital Assistant ( PDA ) 106 .", "label": "", "metadata": {}, "score": "73.112564"}
{"text": "For example , using the exemplary histogram computed in .P .B .A .B . abab . )C .P .A .B .B .P . ab .B .P . ba .B .", "label": "", "metadata": {}, "score": "73.21303"}
{"text": "Electronic supplementary material .The online version of this article ( doi : 10 .1186/\u200b1748 - 7188 - 7 - 10 ) contains supplementary material , which is available to authorized users .Background .Biological sequence analysis remains a central problem in bioinformatics , boosted in recent years by the emergence of new generation sequencing high - throughput techniques [ 1 , 2 ] .", "label": "", "metadata": {}, "score": "73.31106"}
{"text": "claim 1 , further comprising removing the noise data identified based on the demand factor from the search queries .A computer system comprising : . at least one processor ; . a demand data engine to calculate a demand factor based on relationships of items and categories to query terms of search queries and further to identify noise data using the demand factor , the relationships established from user actions resulting from the search queries ; . a calculator to calculate a relevance score using the demand factor , the relevance score calculated , in part , based on a comparison of a similarity of a demand category histogram and a supply category histogram ; . a retrieving engine to retrieve , from a plurality of listings , item data filtered from the noise data ; . a cluster generator to construct , using the at least one processor , at least one base cluster having at least one document with common item data stored in a suffix ordering ; . a compacting engine to compact the at least one base cluster to create a compacted cluster representation having a reduced duplicate suffix ordering amongst the clusters ; and .", "label": "", "metadata": {}, "score": "73.34277"}
{"text": "claim 25 wherein the software instructions comprise a fourth code segment to produce no speech recognition result if the word is not similar to a portion of the phrase .The computer readable medium of .claim 25 wherein the software instructions comprise a fourth code segment to determine if previously - recognized text has been selected .", "label": "", "metadata": {}, "score": "73.34422"}
{"text": "The term \" machine - readable medium \" should be taken to include a single medium or multiple media ( e.g. , a centralized or distributed database , and/or associated caches and servers ) that store the one or more sets of instructions .", "label": "", "metadata": {}, "score": "73.36406"}
{"text": "In the Chinese language , words are typically represented by one or more characters from a Chinese syllabary , where each character in the syllabary is a single syllable .Generally , the one or more characters that form a word provide information relating to the meaning and phonetic representation or sound of that word .", "label": "", "metadata": {}, "score": "73.45778"}
{"text": "For example , the user may highlight text from the dictation window .The user also may select text using an input device such as a mouse or keyboard .If text has been selected ( step 1445 ) , the speech recognition system replaces the text with the produced result ( step 1450 ) .", "label": "", "metadata": {}, "score": "73.55885"}
{"text": "For instance , the sequence TTATTA has a tandem repeat TT of radius 1 and a tandem repeat TTATTA of radius 3 , both starting in the first position of the nucleotide sequence .It also contains a tandem repeat TT of radius 1 at position 4 .", "label": "", "metadata": {}, "score": "73.65141"}
{"text": "6 Answers 6 .So , here is an example : . group ( ) # \" fish \" # Note , if no match , match_obj is None .UPDATE : Some care should be taken when combining words in to a single pattern of alternative words .", "label": "", "metadata": {}, "score": "73.70399"}
{"text": "In the case of a database using tables and SQL , a database application such as , for example , MYSQL \u2122 , MICROSOFT SQL SERVER \u2122 , ORACLE 8I \u2122 , 10 G \u2122 , or some other suitable database application may be used to manage the data .", "label": "", "metadata": {}, "score": "73.88712"}
{"text": "-Dmytro Korduban Feb 29 ' 12 at 10:05 .4 Answers 4 .Yes , suffix trees can be used to find all common substrings .I would say to use a suffix array instead , but if you already have a suffix tree , building a suffix array from a suffix tree takes linear time by DFS .", "label": "", "metadata": {}, "score": "74.17149"}
{"text": "FIG .3 is a flowchart illustrating an example method used to execute operation 201 .Illustrated is a query 108 that is provided to an operation 301 .In cases where this operation 301 is executed , this query 108 is classified through the retrieval of a query type from a query type database 303 .", "label": "", "metadata": {}, "score": "74.18772"}
{"text": "Edited by : Hartmanis J. 1986 , 220 - 230 .ACM .Myers E : An O(ND ) Difference Algorithm and Its Variations .Algorithmica .View Article .Landau GM , Schmidt JP , Sokol D : An Algorithm for Approximate Tandem Repeats .", "label": "", "metadata": {}, "score": "74.20832"}
{"text": "Using parsed data ( e.g. , the search terms ) from the query 108 , the application server 111 may then , for example , build a merged cluster map 113 using data stored in an item listing database 112 .The application server 111 may be operatively coupled to this item listing database 112 .", "label": "", "metadata": {}, "score": "74.278694"}
{"text": "FIG .13B , the user corrects the incorrect recognition by selecting the word \" cancers \" using the mouse 110 and saying \" Spell That k i b i \" .The control / interface module responds to recognition of the \" Spell That \" command by displaying a correction dialog box 1325 , such as is illustrated in .", "label": "", "metadata": {}, "score": "74.30963"}
{"text": "AI structures , and the algorithms that underlie them , used to ascertain a relationship between an item and/or category and query terms fall into one of two categories : deterministic or stochastic .Some example deterministic algorithms include case - based reasoning , the aforementioned bayesian networks ( including hidden markov models ) , neural networks , or fuzzy systems .", "label": "", "metadata": {}, "score": "74.61672"}
{"text": "10 .Referring to .FIG .11 , a node may be processed according to a node - processing procedure 1100 .Initially , the node - processing procedure updates the scores and time values for each state of the node ( step 1105 ) .", "label": "", "metadata": {}, "score": "74.64554"}
{"text": "This three - tier architecture may be implemented using one technology , or , as will be discussed below , a variety of technologies .This three - tier architecture , and the technologies through which it is implemented , may be executed on two or more computer systems organized in a server - client , peer to peer , or so some other suitable configuration .", "label": "", "metadata": {}, "score": "74.77941"}
{"text": "The system also may include an analog recorder port 126 and/or a digital recorder port 128 .The analog recorder port 126 is connected to the sound card 116 and is used to transmit speech recorded using an analog or digital hand - held recorder to the sound card .", "label": "", "metadata": {}, "score": "74.95824"}
{"text": "Therefore we know that abba is the longest palindromic substring centered our current location --- substrings centered at our current location that are longer than cabbar , such as scabbard , have no hope of being palindromic .Notice that once we have fixed the centre , we will not examine any character of the string more than once in determining the longest palindromic substring centered there .", "label": "", "metadata": {}, "score": "75.0446"}
{"text": "The matrices c k are twenty four by twenty four matrices .Each triphone node may be represented as a mixture of up to , for example , sixteen different PDFs .A particular PDF may be used in the representation of multiple triphone nodes .", "label": "", "metadata": {}, "score": "75.18408"}
{"text": "Upon the completion and the execution of operation 301 , an operation 302 is executed .Through the execution of this operation 302 , an HTTP call is generated that includes the query classification information taken or received from the operation 301 .", "label": "", "metadata": {}, "score": "75.34623"}
{"text": "The method of . claim 1 further comprising determining if previously - recognized text has been selected .The method of . claim 10 further comprising replacing selected text with the produced speech recognition result if text has been selected .The method of .", "label": "", "metadata": {}, "score": "75.35564"}
{"text": "Tom May 9 ' 09 at 8:04 .Filtering the list of substrings down to those that are in the string .Building a list of tuples containing the index of the substring , and the substring .If a substring has been found , find the minimum value based on the index .", "label": "", "metadata": {}, "score": "75.38469"}
{"text": "Additionally , this node 5 , labeled here as 504 , may be linked to a node 6 labeled as 505 via an edge labeled as \" Bottle . \"Moreover , this node 6 , labeled here as 50 , may be linked to a node 7 labeled herein as 506 via an edge titled \" Opener . \"", "label": "", "metadata": {}, "score": "75.38543"}
{"text": "The system of . claim 13 wherein the memory further comprises a software instruction for determining if previously - recognized text has been selected .The system of .claim 22 wherein the memory further comprises a software instruction for replacing selected text with the produced speech recognition result if text has been selected .", "label": "", "metadata": {}, "score": "75.515854"}
{"text": "5 .Further , a position 603 in a hash table 600 contains the substring \" Cap \" and the set of documents containing the substring \" Pepsi Cola Bottle Cap , \" which in this case is the set containing the document labeled as 0 .", "label": "", "metadata": {}, "score": "75.6238"}
{"text": "2007 , 39 : article 2 .Langmead B , Trapnell C , Pop M , Salzberg S : Ultrafast and memory - efficient alignment of short DNA sequences to the human genome .Genome Biol .2009 , 10 ( 3 ) : R25- 10.1186/gb-2009 - 10 - 3-r25 PubMed PubMed Central View Article .", "label": "", "metadata": {}, "score": "75.66322"}
{"text": "To implement the speech recognition and processing functions of the system 100 , the computer 110 runs interface software 140 , the speech recognition software 124 , a parser 142 , and back - end software 144 .Dragon NaturallySpeaking Preferred Edition 3.1 , available from Dragon Systems , Inc. of Newton , Mass. , offers one example of suitable speech recognition software .", "label": "", "metadata": {}, "score": "75.75992"}
{"text": "Source code for biology and medicine .2009 , 4 : 6- 10.1186/1751 - 0473 - 4 - 6 PubMed PubMed Central View Article .Deschavanne PJ , Giron A , Vilain J , Fagot G , Fertil B : Genomic signature : characterization and classification of species assessed by chaos game representation of sequences .", "label": "", "metadata": {}, "score": "75.904686"}
{"text": "S . [ .i .i .L . ]r . ) h .S . [ . i . . . . .i .L . 1 . ]r .r . )L .S . [ . i . ] x .", "label": "", "metadata": {}, "score": "76.05255"}
{"text": "These rare triphones may be represented by having closely - related triphones share the same set of PDFs .A large vocabulary dictation grammar may include multiple dictation topics ( for example , \" medical \" or \" legal \" ) , each having its own vocabulary file and its own language model .", "label": "", "metadata": {}, "score": "76.08383"}
{"text": "13H , the user selects the recognition candidate 1345 that includes the word \" pronounce \" by using the mouse to select the third entry in the list .The user could achieve the same result by saying \" Choose 3 \" .", "label": "", "metadata": {}, "score": "76.1528"}
{"text": "Further , connected to the node 2 , referenced as 702 , is a node 4 referenced as 704 where an edge labeled \" Bottle \" connects node 2 and node 4 .Moreover , a node 7 referenced as 705 is also connected to the node 2 referenced as 702 via an edge labeled as \" Lighter .", "label": "", "metadata": {}, "score": "76.2511"}
{"text": "CROSS REFERENCE TO RELATED APPLICATIONS .TECHNICAL FIELD .The present application relates generally to the technical field of search algorithms and , in one specific example , the generation of a searchable data structure .BACKGROUND .In many cases , the success of a search algorithm is tied to the data structure that is being searched , and more specifically the organization of this data structure .", "label": "", "metadata": {}, "score": "76.43031"}
{"text": "Example methods and systems to facilitate video mail in a peer to peer network are illustrated .In the following description , for purposes of explanation , numerous specific details are set forth in order to provide a thorough understanding of example embodiments .", "label": "", "metadata": {}, "score": "76.68264"}
{"text": "No . 08/825,536 , titled \" ENROLLMENT IN SPEECH RECOGNITION \" and filed Mar. 28 , 1997 , now U.S. Pat .No .6,212,498 , which is incorporated by reference .When the system makes a recognition error , the user may invoke an appropriate correction command to remedy the error .", "label": "", "metadata": {}, "score": "76.89511"}
{"text": "Each of the recognition candidates includes the correctly - recognized words that preceded \" Brown \" ( \" those who \" ) and the words that followed \" Brown \" ( \" to meet this \" ) .As shown in .", "label": "", "metadata": {}, "score": "76.91162"}
{"text": "Moreno P , Velez P , Martinez E , Garreta L , Diaz N , Amador S , Tischer I , Gutierrez J , Naik A , Tobar F , Garcia F : The human genome : a multifractal analysis .BMC Genomics .", "label": "", "metadata": {}, "score": "76.941345"}
{"text": "The computer readable medium of .claim 25 wherein the recognition result comprises a command in the Chinese language .The computer readable medium of .The computer readable medium of .claim 25 wherein the software instructions comprise a fourth code segment to extract the word and the phrase from the recognition result .", "label": "", "metadata": {}, "score": "76.95834"}
{"text": "Illustrated at position 601 in the hash table is the substring \" Lighter .\" This substring may roughly correspond to , for example , the node 13 referenced as 508 in .FIG .5 .Adjacent to this position 601 is a position 602 that contains the substring \" Bottle \" wherein this substring \" Bottle \" roughly corresponds to the node 14 referenced as 510 in .", "label": "", "metadata": {}, "score": "77.04816"}
{"text": "The hand - held recorder is connected to the port using a cable connected between the line in port and a line out or speaker port of the recorder .The analog recorder port 126 may be implemented as a microphone positioned so as to be next to the speaker of the hand - held recorder when the recorder is inserted into the port 126 , and also may be implemented using the microphone 102 .", "label": "", "metadata": {}, "score": "77.10214"}
{"text": "Journal of Forensic Sciences .Landau GM , Schmidt JP : An Algorithm for Approximate Tandem Repeats .CPM , Volume 684 of LNCS .Landau GM , Vishkin U : Introducing Efficient Parallelism into Approximate String Matching and a New Serial Algorithm .", "label": "", "metadata": {}, "score": "77.3122"}
{"text": "Background .Chaos Game Representation ( CGR ) is an iterated function that bijectively maps discrete sequences into a continuous domain .As a result , discrete sequences can be object of statistical and topological analyses otherwise reserved to numerical systems .", "label": "", "metadata": {}, "score": "77.41016"}
{"text": "Titles , as entered by users , have high degree of variability .For example , for any single phrase / item we can have a large number of variations in occurrence location in the title along with the combination of noise words like adjectives and prepositions .", "label": "", "metadata": {}, "score": "77.55217"}
{"text": "In general , the user interface may be controlled using input devices such as a mouse or keyboard , or using voice commands processed by the speech recognition software 124 .After transferring data from the recorder , the interface software 140 provides the digital samples for an action item to the speech recognition software 124 .", "label": "", "metadata": {}, "score": "77.589355"}
{"text": "2007 , 8 : 393- 10.1186/1471 - 2105 - 8 - 393 PubMed PubMed Central View Article .Pandit A , Sinha S : Using genomic signatures for HIV-1 sub - typing .BMC Bioinformatics .2010 , 11 ( Suppl 1 ) : S26- 10.1186/1471 - 2105 - 11-S1-S26 PubMed PubMed Central View Article .", "label": "", "metadata": {}, "score": "77.89451"}
{"text": "The digital recorder port 128 may be implemented to transfer a digital file generated using a hand - held digital recorder 130 .This file may be transferred directly into memory 118 , or to a storage device such as hard drive 132 .", "label": "", "metadata": {}, "score": "77.96626"}
{"text": "When the best - scoring recognition candidate is a command , the control / interface module 220 implements the command .For example , the control / interface module may control operation of the speech recognition software in response to speech recognition commands ( for example , \" wake up \" , \" make that \" ) , and may forward external commands to the appropriate software .", "label": "", "metadata": {}, "score": "78.18457"}
{"text": "Additionally , this application server 110 may be connected to a plurality of item listing databases in addition to item listing database 112 .Further , though not depicted , this application server 111 and/or a plurality of application servers may be operatively coupled to any one of a number of database servers that may serve as an intermediary between the application server 111 and databases such as the item listing database 112 .", "label": "", "metadata": {}, "score": "78.20801"}
{"text": "END UPDATE .My example is just a simple nonsense function so you can see the usage of the regex .There are some more regex docs here : .I tried out this code , which is good enough to convince me .", "label": "", "metadata": {}, "score": "78.28529"}
{"text": "Wesley May 9 ' 09 at 22:34 .Are you sure this makes a difference ?If I were implementing the regex myself ( as a DFA ) , the length would not matter .Every substring would be searched for at the same time .", "label": "", "metadata": {}, "score": "78.33565"}
{"text": "10.1093/oxfordjournals.molbev.a026048 PubMed View Article .Karlin S , Burge C : Dinucleotide relative abundance extremes : a genomic signature .Trends Genet .10.1016/S0168 - 9525(00)89076 - 9 PubMed View Article .Wang YW , Hill K , Singh S , Kari L : The spectrum of genomic signatures : from dinucleotides to chaos game representation .", "label": "", "metadata": {}, "score": "78.58293"}
{"text": "After any editing by the user , and with user approval , the interface software then transfers the action item to the appropriate back - end software 144 .An example of back - end software with which the system works is personal information management software , such as Microsoft Outlook , which is available from Microsoft Corporation of Redmond , Wash. Other suitable back - end software includes contact management software , time management software , expense reporting applications , electronic mail programs , and fax programs .", "label": "", "metadata": {}, "score": "78.59688"}
{"text": "Thus , the score for the state 840 ( S A1 ) is set equal to the likelihood that the first frame corresponds to silence .Retrieval of the first frame also causes the state 805 to become an active state .", "label": "", "metadata": {}, "score": "78.65669"}
{"text": "Cluster Exapansion .In some embodiments , the STC algorithm takes into account the order of the phrases when base clusters are formed .For example , for a base cluster \" ipod nano \" only those items that have the exact phrase \" ipod nano \" in the same order are included in the clustering .", "label": "", "metadata": {}, "score": "78.72766"}
{"text": "Declarations .Acknowledgements .This work was partially supported by FCT through the PIDDAC Program funds ( INESC - ID multiannual funding ) and under grant PEst - OE / EEI / LA0008/2011 ( IT multiannual funding ) .In addition , it was also partially funded by projects HIVCONTROL ( PTDC / EEA - CRO/100128/2008 , S. Vinga , PI ) , TAGS ( PTDC / EIA - EIA/112283/2009 ) and NEUROCLINOMICS ( PTDC / EIA - EIA/111239/2009 ) from FCT ( Portugal ) .", "label": "", "metadata": {}, "score": "78.75072"}
{"text": "When the recognizer 215 is unsuccessful , the enrollment program prompts the user to repeat certain passages of the text .The recognizer uses acoustic information from the user 's utterances to train or adapt acoustic models 235 corresponding to the matched portions of the enrollment text .", "label": "", "metadata": {}, "score": "78.94907"}
{"text": "10.1093/nar/19.23.6587 PubMed PubMed Central View Article .Ussery DW , Wassenaar T , Borini S : Word Frequencies , Repeats , and Repeat - related Structures in Bacterial Genomes .Springer .Kidwell MG : Horizontal transfer of P elements and other short inverted repeat transposons .", "label": "", "metadata": {}, "score": "79.03954"}
{"text": "@Tom , \" I do n't like the \" return \" statement , as it would prematurely exit if you had more sentences in sentences .\" But I thought Rax wanted to find the first match ? -Unknown May 9 ' 09 at 22:57 . @Unknown : the reason for my comment was that if you were to add more sentences to the sentences list , your code would short - circuit because it would only check the first sentence .", "label": "", "metadata": {}, "score": "79.133316"}
{"text": "Gather the demand data for the query q , both the contained and related queries of q ; .Gather the attribute data for all the search results of query q ; .Remove from the set of collected words common noise words like \" Sealed \" , \" amazing \" ; .", "label": "", "metadata": {}, "score": "79.43188"}
{"text": "10.1093/bioinformatics / btg005 PubMed View Article .Vinga S , Almeida JS : Renyi continuous entropy of DNA sequences .J Theor Biol .10.1016/j.jtbi.2004.06.030 PubMed View Article .Vinga S , Almeida JS : Local Renyi entropic profiles of DNA sequences .", "label": "", "metadata": {}, "score": "79.51076"}
{"text": "The problem of finding all palindromes focus on uncovering all maximal complemented palindromes from a nucleotide sequence .By maximal it means that only the bigger palindrome is extracted .For instance , the sequence TTATAA has a palindrome of radius 1 ( AT ) , a palindrome of radius 2 ( TATA ) , and a palindrome of radius 3 ( TTATAA ) , but only the latter is maximal .", "label": "", "metadata": {}, "score": "79.54562"}
{"text": "Since the first entry 1353 is the correct entry , the user clicks on an \" OK \" button 1354 at the bottom of the correction dialog box 1325 .As shown in .FIG .13 K , the control / interface module 220 responds by placing the correct version 1355 of the utterance in the dictation window 1310 .", "label": "", "metadata": {}, "score": "79.671"}
{"text": "S . as .x .L .S . [ .L . 1 . ]r . ) x .L .S .r .r . )L .y .S . x .r .y .", "label": "", "metadata": {}, "score": "79.70127"}
{"text": "Separate acoustic models 235 are provided for each user of the system .Initially , speaker - independent acoustic models of male or female speech are adapted to a particular user 's speech using an enrollment program .The acoustic models may be further adapted as the system is used .", "label": "", "metadata": {}, "score": "79.71168"}
{"text": "A .B . bba .B .Average . selectivity . of . bucket .While certain embodiments and features of the invention have been illustrated and described herein , many modifications , substitutions , changes , and equivalents will occur to those of ordinary skill in the art .", "label": "", "metadata": {}, "score": "80.04329"}
{"text": "The software may also reside , completely or at least partially , within the main memory 1701 and/or within the processor 1702 during execution thereof by the computer system 1700 , the main memory 1701 and the processor 1702 also constituting machine - readable media .", "label": "", "metadata": {}, "score": "80.56842"}
{"text": "Outputs : .( 0 , ' 841EzpjttV ' ) 14.3660159111 ( 0 , ' 841EzpjttV ' ) # I could n't wait this long .Thanks Nick !To be more comprehensive , you ought to add the brute force approach .", "label": "", "metadata": {}, "score": "80.71879"}
{"text": "Support for Simple API for XML ( SAX ) processing : streaming , constant memory usage , and linear processing time .SAX is an event - based API between an XML parser and an XML application .The object - based interface is supplied by the DOM .", "label": "", "metadata": {}, "score": "81.08091"}
{"text": "J Biol Phys .10.1007/s10867 - 009 - 9172-x PubMed PubMed Central View Article .Dufraigne C , Fertil B , Lespinats S , Giron A , Deschavanne P : Detection and characterization of horizontal transfers in prokaryotes using genomic signature .", "label": "", "metadata": {}, "score": "81.151215"}
{"text": "FIG .13 G , the user then says \" p r o n \" 1340 to indicate that the word Brown should be replaced with a word starting with the letters \" pron \" .The user could achieve the same result by typing the letters \" pron \" .", "label": "", "metadata": {}, "score": "81.31941"}
{"text": "Additional entries may be accessed using a scroll bar 1333 .As shown in .FIG .13F , the user selects the word \" Brown \" 1335 using the mouse 110 .As noted above , the user could also select the word \" Brown \" by using the voice command \" Select Brown \" .", "label": "", "metadata": {}, "score": "81.58098"}
{"text": "Marketplace Applications .A commercial website may have thousands , if not millions , of item descriptions ( e.g. , item data ) .These descriptions may include title information , advertisement information , and other information generated to illustrate and categorize an item for sale on a website .", "label": "", "metadata": {}, "score": "81.74226"}
{"text": "P . ab .B .P . ba .B .P .b .B .P . ab .B .P . a .B .P .B .C .C . where .C . is . a . constant . common . to .", "label": "", "metadata": {}, "score": "81.92317"}
{"text": "Pingoud A , Jeltsch A : Structure and function of type II restriction endonucleases .Nucleic Acids Research .10.1093/nar/29.18.3705 PubMed PubMed Central View Article .Reich NO , Danzitz MJ : Non - additivity of sequence - specific enzyme - DNA interactions in the EcoRI DNA methyltransferase .", "label": "", "metadata": {}, "score": "82.2608"}
{"text": "10.1089/106652701300099038 PubMed View Article .Karp R , Rabin M : Efficient randomized pattern - matching algorithms .IBM Journal of Research and Development .View Article .Cole R : Tight bounds on the complexity of the Boyer - Moore string matching algorithm .", "label": "", "metadata": {}, "score": "82.29733"}
{"text": "PubMed View Article .Almeida JS , Carrico JA , Maretzek A , Noble PA , Fletcher M : Analysis of genomic sequences by Chaos Game Representation .Bioinformatics .10.1093/bioinformatics/17.5.429 PubMed View Article .Vinga S , Almeida J : Alignment - free sequence comparison - a review .", "label": "", "metadata": {}, "score": "82.3009"}
{"text": "P .B .b . ) . . .From .Bayes . 's .Rule .P .B .A . )P .A .B . )P .A . )P .A .", "label": "", "metadata": {}, "score": "83.25455"}
{"text": "The acoustic models 235 represent phonemes .In the case of triphones , the acoustic models 235 represent each triphone node as a mixture of Gaussian probability density functions ( \" PDFs \" ) .For example , node \" i \" of a triphone \" abc \" may be represented as ab i c : . ab .", "label": "", "metadata": {}, "score": "83.357574"}
{"text": "Moreover , these theoretical results allowed for the development of compressed aligners that have significantly reduced the resources necessary for sequence alignment [ 6 - 8 ] , namely for aligning reads from pyro - sequencing platforms [ 9 ] .In parallel to these efforts , a particular prolific technique at engendering novel sequence analysis algorithms is the Chaos Game Representation ( CGR ) , based on Iterated Function Systems ( IFS ) , firstly proposed more than two decades ago [ 10 ] .", "label": "", "metadata": {}, "score": "83.56656"}
{"text": "A speech recognition system comprising : . a processor having communications links for transmitting information to and from the output and input devices ; and .The system of . claim 13 wherein the recognition result comprises a command in the Chinese language .", "label": "", "metadata": {}, "score": "83.92597"}
{"text": "This position 805 contains the substring \" Cap \" and additionally references document 0 as a document that contains the substring \" Pepsi Cola Bottle Cap . \" At position 806 which roughly corresponds to node 6 referenced as 707 is the substring \" Opener . \"", "label": "", "metadata": {}, "score": "84.58268"}
{"text": "Competing interests .The authors declare that they have no competing interests .Authors ' contributions .SV conceived the study and contributed for the design of the experiments .AMC aimed the research to achieve longest common extension in constant time with standard CGR indexes .", "label": "", "metadata": {}, "score": "84.65965"}
{"text": "+1 for actually doing benchmarks in a question about efficiency ! - dbr May 10 ' 09 at 2:36 .This is a vague , theoretical answer with no code provided , but I hope it can point you in the right direction .", "label": "", "metadata": {}, "score": "84.99491"}
{"text": "-Tom May 12 ' 09 at 2:58 .I just want to point out the time difference between DisplacedAussie 's answer and Tom 's answer .Both were fast when used once , so you should n't have any noticeable wait for either , but when you time them : .", "label": "", "metadata": {}, "score": "85.25389"}
{"text": "Then wait for and post all the times .This is a good thing to consider I wish there could be a special meta - post for things like this , since neither comments nor answer posts are good places . -", "label": "", "metadata": {}, "score": "85.366905"}
{"text": "5 .At position 606 , the substring \" Bank \" is contained wherein the substring \" Pepsi Cola Coin Bank \" is contained in documents 3 and 0 .This substring \" Bank \" roughly corresponds to node 19 referenced as 514 .", "label": "", "metadata": {}, "score": "85.54753"}
{"text": "The enrollment program may operate in an interactive mode that guides the user through the enrollment process , or in a non - interactive mode that permits the user to enroll independently of the computer .In the interactive mode , the enrollment program displays the enrollment text to the user and the user reads the displayed text .", "label": "", "metadata": {}, "score": "85.66748"}
{"text": "The following discussion assumes that there are no leaving or staying penalties associated with the state 840 or the state 860 .The same result could be achieved by setting the leaving and staying penalties for states 840 and 860 equal to zero .", "label": "", "metadata": {}, "score": "85.765305"}
{"text": "The staying penalty is added to any score that stays in the state .The staying penalty is related inversely to the length of the sound represented by the state and to the length of the phoneme represented by the node to which the state belongs .", "label": "", "metadata": {}, "score": "85.88049"}
{"text": "2005 , 33 : e6- 10.1093/nar / gni004 PubMed PubMed Central View Article .Deschavanne P , Tuffery P : Exploring an alignment free approach for protein classification and structural class prediction .Biochimie .10.1016/j.biochi.2007.11.004 PubMed View Article .", "label": "", "metadata": {}, "score": "86.54318"}
{"text": "10.1093/bioinformatics / btp336 PubMed View Article .Fernandes F , da Fonseca PGS , Russo LMS , Oliveira AL , Freitas AT : Efficient alignment of pyrosequencing reads for re - sequencing applications .BMC Bioinformatics .2011 , 12 : 163- 10.1186/1471 - 2105 - 12 - 163 PubMed PubMed Central View Article .", "label": "", "metadata": {}, "score": "86.68846"}
{"text": "For example , an operation 203 may be executed wherein a demand data engine is executed and returns demand data to the operation 204 .Further , operations 206 and 205 are executed wherein operation 206 provides merged threshold data to the operation 205 .", "label": "", "metadata": {}, "score": "86.69656"}
{"text": "The control / interface module 220 displays this incorrect result 1316 ( \" There are two kinds of legal cancers \" ) in the dictation window 1310 .The control / interface module also displays the results of recognizing the current utterance , which , in this case , is the second utterance , in a display field 1320 at the bottom of the window 1310 .", "label": "", "metadata": {}, "score": "86.76643"}
{"text": "Bioinformatics .10.1093/bioinformatics / btp324 PubMed PubMed Central View Article .Li R , Li Y , Fang X , Yang H , Wang J , Kristiansen K , Wang J : SOAP2 : an improved ultrafast tool for short read alignment .", "label": "", "metadata": {}, "score": "86.853745"}
{"text": "FIELD OF THE INVENTION .The field of the invention is data processing , more specifically , a system and method for collecting and maintaining statistics and generating selectivity estimation for string and substring match queries in databases of any data having strings associated with attributes .", "label": "", "metadata": {}, "score": "86.88956"}
{"text": "y . k .S .y . k .S . x .i .S . x .i .S . k . i .L . k . i .y . k .S .y . k .", "label": "", "metadata": {}, "score": "87.64366"}
{"text": "I basically fixed everything about it and submitted it 20 seconds after this one . -Unknown May 9 ' 09 at 8:09 .@rax : Hopefully the example code I added helps convince you the re module will be fine :-) .", "label": "", "metadata": {}, "score": "88.00406"}
{"text": "2 illustrates components of the speech recognition software 124 .For ease of discussion , the following description indicates that the components carry out operations to achieve specified results .However , it should be understood that each component actually causes the processor 112 to operate in the specified manner .", "label": "", "metadata": {}, "score": "88.63672"}
{"text": "As shown in .FIG .13D , the recognizer 215 next misrecognizes a third utterance 1329 ( \" those who pronounce amicus \" ) and the control / interface module 220 responds by inserting the incorrect text 1330 ( \" those who Brown to meet this \" ) in the dictation window 1310 .", "label": "", "metadata": {}, "score": "89.80081"}
{"text": "Roee Adler May 9 ' 09 at 8:06 .I do n't know of such functionality built into Python , so I ca n't say whether it does or does n't exist .As such , I 'm afraid this answer does n't help you in the least .", "label": "", "metadata": {}, "score": "89.89795"}
{"text": "Node 5 referenced as 706 is a leaf node such that document 0 contains the substring \" Pepsi Cola Bottle Cap . \"Also , node 6 referenced as 707 is a leaf node such that documents 0 , 1 , and 4 contain the substring \" Pepsi Cola Bottle Opener . \" Compacted suffix tree 700 contains a number of other subtrees .", "label": "", "metadata": {}, "score": "89.99606"}
{"text": "Shendure J , Ji H : Next - generation DNA sequencing .Nature Biotechnology .10.1038/nbt1486 PubMed View Article .Roy A , Raychaudhury C , Nandy A : Novel techniques of graphical representation and analysis of DNA sequences - A review .", "label": "", "metadata": {}, "score": "90.03476"}
{"text": "i .r . )i .x .r . k . i .r . ) k .y .i . k .r . )i .x .r . k . i .r . )", "label": "", "metadata": {}, "score": "90.55203"}
{"text": "They usually consist of short copies of 2 - 6 base pairs in length repeated throughout all eukaryotic genomes .Tandem repeats often represent important control sequences , such as upstream promoter sequences [ 41 ] .In addition , they have been used in forensic science for determining parentage [ 42 ] .", "label": "", "metadata": {}, "score": "90.74109"}
{"text": "- interjay Jun 3 ' 12 at 15:43 .Yet it has , it has any of the suffixes of \" ABAB \" and \" BAB \" ( it uses path compression ) - kukit Jun 3 ' 12 at 15:48 .", "label": "", "metadata": {}, "score": "91.076965"}
{"text": "\" The leaf node ( e.g. , 506 ) also contains a reference to the set of documents containing item data that contain the substring \" Pepsi Cola Bottle Opener . \"Specifically , documents 4 and 0 contain this substring .", "label": "", "metadata": {}, "score": "91.59417"}
{"text": "Tom May 9 ' 09 at 8:49 .- tzot May 9 ' 09 at 10:10 .Many so - called regular expression syntaxes are not actually \" regular \" .That is , they are actually more powerful than true regular expressions and therefore can not be represented as a DFA .", "label": "", "metadata": {}, "score": "91.97872"}
{"text": "At position 608 , the substring \" Pepsi \" is contained wherein the substring \" Pepsi \" roughly corresponds to node 4 referenced as 503 .Additionally , at position 609 , the substring \" Cola \" is shown wherein this substring roughly corresponds to node 5 referenced as 504 .", "label": "", "metadata": {}, "score": "92.09364"}
{"text": "N .A .B . bba .B .N . bb .B .N .ba .B .N .b .B .N .A .B . bba .B .N . bb .", "label": "", "metadata": {}, "score": "92.97608"}
{"text": "FIG .8 is a diagram illustrating an example hash table 800 used to store base clusters of documents .Illustrated is a position 801 that roughly corresponds to node 2 referenced as 702 .Contained within this position 801 is a substring \" Pepsi Cola . \"", "label": "", "metadata": {}, "score": "93.439476"}
{"text": "In addition , the word will be written into the user - specific backup vocabulary .Then , if the user says \" ganglion \" while using a legal topic , the word \" ganglion \" will be available during correction from the backup dictionary .", "label": "", "metadata": {}, "score": "93.44437"}
{"text": "i . if .S . [ . i . ]A . if .S . [ . i . ]C . if .S . [ . i . ]G . if .S . [ . i . ]", "label": "", "metadata": {}, "score": "93.49698"}
{"text": "10.1007/BF00133726 PubMed View Article .Vinces MD , Legendre M , Caldara M , Hagihara M , Verstrepen KJ : Unstable Tandem Repeats in Promoters Confer Transcriptional Evolvability .Science .10.1126/science.1170097 PubMed PubMed Central View Article .", "label": "", "metadata": {}, "score": "93.58545"}
{"text": "b .B .P . ab .B .P . a .B .P .B .C .C .P .B .A .B . abab . )C .P .A .B .", "label": "", "metadata": {}, "score": "93.896255"}
{"text": "Use of a particular PDF to represent multiple triphone nodes permits the models to include a smaller number of PDFs than would be required if each triphone node included entirely separate PDFs .Since the English language may be roughly represented using 43 different phonemes , there may be up to 79,507 ( 433 ) different triphones , which would result in a huge number of PDFs if each triphone node were represented by a separate set of PDFs .", "label": "", "metadata": {}, "score": "93.9175"}
{"text": "The substring opener associated with node 20 may be contained in documents 1 and 4 .Also connected to node 4 ( e.g. , 904 ) is a node 2 referenced as 905 and a node 8 referenced as 906 .With regard to node 2 , a substring \" Pepsi Cola \" is associated with this node 2 wherein the substring is contained in documents 0 , 1 , 2 , 3 , and 4 .", "label": "", "metadata": {}, "score": "94.45627"}
{"text": "Instituto Superior T\u00e9cnico , Universidade T\u00e9cnica de Lisboa ( IST / UTL ) .Div Informatics , Dept Pathology , University of Alabama at Birmingham .References .Durbin R , Eddy SR , Krogh A , Mitchison G : Biological sequence analysis : probabalistic models of proteins and nucleic acids .", "label": "", "metadata": {}, "score": "94.76523"}
{"text": "Instituto de Engenharia de Sistemas e Computadores : Investiga\u00e7\u00e3o e Desenvolvimento ( INESC - ID ) , R. Alves Redol 9 .Dept Bioestat\u00edstica e Inform\u00e1tica , Faculdade de Ci\u00eancias M\u00e9dicas - Universidade Nova de Lisboa ( FCM / UNL ) , C. M\u00e1rtires P\u00e1tria 130 .", "label": "", "metadata": {}, "score": "96.066124"}
{"text": "\" If most users clicked on \" dell laptop d410 , \" then d410 would be more relevant and the terms bags , batteries , and cases would be less relevant .And again , if , for example , we were to search for \" Persian rugs , \" a table could be generated containing a list of words with assigned weighting : .", "label": "", "metadata": {}, "score": "97.09924"}
{"text": "The user selects the correct word 1327 ( \" kibitzers \" ) by saying \" Choose 4 \" , where \" kibitzers \" is the fourth word on the choice list .As shown in .FIG .13C , the control / interface module 220 responds by replacing the incorrect word ( \" cancers \" ) with the selected word 1327 in the dictation window 1310 .", "label": "", "metadata": {}, "score": "97.1319"}
{"text": "super . tabriz . turquoise .vintage .white . wool . xmas .In the above table , the column on the left displays the clusters when the demand data is not taken into account , while the column on the right displays the clusters when demand data is taken into account .", "label": "", "metadata": {}, "score": "97.14028"}
{"text": "In a distributed system environment , program modules may be located in both local and remote memory - storage devices ( see below ) .The computer system 1700 may further include a video display unit 1710 ( e.g. , a Liquid Crystal Display ( LCD ) or a Cathode Ray Tube ( CRT ) ) .", "label": "", "metadata": {}, "score": "97.606384"}
{"text": "In some embodiments , the demand factor indicates what buyers search for and click on based upon the search query .This factor may , for example , be applied during the filtering of noise data .Consider the following item listings : . \" STUNNING BLING SWAROVSKI CRYSTALS 4 GB 4 GB IPOD NANO \" ; . \"", "label": "", "metadata": {}, "score": "101.27305"}
{"text": "Silver .Beautiful .Rugs .In the above table , outlines query relevance weights for the query \" Persian Rugs .\" Terms with weight less than 0.5 may be considered irrelevant .Additionally , from the above table various conclusions can be drawn .", "label": "", "metadata": {}, "score": "101.79399"}
{"text": "Assuming an efficient market , the \" buy it now \" price may be a reasonable price for that item .Applied to the clustering context , assume we have a cluster that is solely related to \" ipod nano 4 gb black .", "label": "", "metadata": {}, "score": "103.103806"}
{"text": "Further , shown is a position 803 that roughly corresponds to node 7 referenced as 705 and , more specifically , the documents 1 and 2 that contain the substring \" Pepsi Cola Lighter . \"Additionally a position 804 is illustrated that roughly corresponds to node 4 referenced as 704 that contains the substring \" Bottle .", "label": "", "metadata": {}, "score": "103.238235"}
{"text": "Also illustrated is a node 1 referenced as 903 that roughly corresponds to nodes 713 and 810 .This node has no edges and represents , for example , the substring \" Vintage Pepsi Cola Bottle Opener \" as it may appear in , for example , document 4 .", "label": "", "metadata": {}, "score": "103.42976"}
{"text": "Therefore , the speech recognition systems described above may fail to correctly distinguish homophones in the Chinese language .Although the Chinese language does not have an alphabet , the sounds of the Chinese characters may be transcribed or transliterated into the Roman alphabet or another alphabet .", "label": "", "metadata": {}, "score": "104.375916"}
{"text": "Laurence Gonsalves May 9 ' 09 at 18:53 .Thanks , but this is not what I 'm looking for .First , it does not find the first occurrence ( in the second sentence it will return the occurrence of \" cat \" , i.e. 10 , instead of \" dog \" 's , i.e. 4 ) .", "label": "", "metadata": {}, "score": "107.559814"}
{"text": "I 'm under the impression that Python must have some library function for this ... - Roee Adler May 9 ' 09 at 7:30 .I do n't like when my answers get \" sniped \" either ...but I did n't mean to steal your thunder .", "label": "", "metadata": {}, "score": "108.5529"}
{"text": "SODA ' 91 , Philadelphia , PA , USA : Society for Industrial and Applied Mathematics .Cormen TH , Leiserson CE , Rivest RL , Stein C : Introduction to algorithms .2009 , MIT Press .Copyright .\u00a9 Vinga et al . ; licensee BioMed Central Ltd. 2012 .", "label": "", "metadata": {}, "score": "109.390045"}
{"text": "\" This subtree 507 is in turn connected to a further node 12 by an edge labeled \" Cola .\" This node 12 is in turn connected to another root node by an edge labeled \" Pepsi .\" Traversing through the subtree 507 and utilizing the node 12 and root node , the following substrings may be generated .", "label": "", "metadata": {}, "score": "109.58304"}
{"text": "orlando bloom \" .Using this table , and the results contained therein , the lower a relevancy score , the more relevant a cluster is with respect to an input query Q. The above table shows the relevancy scores of some example clusters extracted for the input query \" johnny depp \" .", "label": "", "metadata": {}, "score": "113.83571"}
{"text": "HOT ! !AMAZING GREEN PEACOCK IPOD NANO SKIN \" .The first two listings illustrate the ipod nano , while the third listing illustrates the ipod nano skin .Given these superfluous words , it may be important to identify only the relevant / important words in an item listing to the extent they can help improve the relevancy of the cluster tags and the recall of the algorithm .", "label": "", "metadata": {}, "score": "115.03626"}
{"text": "Similarly , node 7 referenced as 705 is also a leaf node such that documents 2 and 1 contain the substring \" Pepsi Cola Lighter . \"Connected to the node 4 referenced as 704 is a further node 5 referenced as 706 wherein node 4 and node 5 are connected with an edge labeled with the substring \" Cap . \"", "label": "", "metadata": {}, "score": "122.70006"}
{"text": "Similarly , \" edward scissorhands \" is more relevant than the phrase \" Edward \" and \" orlando bloom \" is more relevant than the cluster \" orlando \" .Moreover , we also see that the cluster \" pirates of the Caribbean movie poster \" is very relevant to the input query \" johnny depp \" while the cluster \" wow \" carries a low relevancy score .", "label": "", "metadata": {}, "score": "129.4967"}
{"text": "Again , traversing through this subtree 507 and the connected node 12 and root node , the further substring of \" Pepsi Cola Lighter \" may be generated wherein this substring is contained in documents 2 and 1 as referenced by node 17 ( e.g. , 509 ) .", "label": "", "metadata": {}, "score": "130.29504"}
{"text": "Given a query q we could classify the demand data relevant to q in two ways .For example if the query q is \" johnny depp \" the demand data could be gathered by examining contained and related queries .Contained queries may be all the demand data / queries entered by users which have the query q contained in the queries .", "label": "", "metadata": {}, "score": "137.6578"}
