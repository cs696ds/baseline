{"text": "Other new symbol sets include dominoes , Mahjong , dictionary punctuation marks , and math additions .This latest version of the Unicode Standard has exactly the same character assignments as ISO / IEC 10646:2003 plus Amendments 1 through 4 .Errata incorporated into Unicode 5.1.0 are listed by date in a separate table .", "label": "", "metadata": {}, "score": "32.01156"}
{"text": "5 ] .This is because Unicode splits what POSIX considers to be punctuation into two categories , Punctuation and Symbols .Another way to say it is that if Unicode rules are in effect , [ [ : punct : ] ] matches all characters that Unicode considers punctuation , plus all ASCII - range characters that Unicode considers symbols .", "label": "", "metadata": {}, "score": "33.011612"}
{"text": "5 ] .This is because Unicode splits what POSIX considers to be punctuation into two categories , Punctuation and Symbols .Another way to say it is that if Unicode rules are in effect , [ [ : punct : ] ] matches all characters that Unicode considers punctuation , plus all ASCII - range characters that Unicode considers symbols .", "label": "", "metadata": {}, "score": "33.011612"}
{"text": "5 ] .This is because Unicode splits what POSIX considers to be punctuation into two categories , Punctuation and Symbols .Another way to say it is that if Unicode rules are in effect , [ [ : punct : ] ] matches all characters that Unicode considers punctuation , plus all ASCII - range characters that Unicode considers symbols .", "label": "", "metadata": {}, "score": "33.011612"}
{"text": "The information in this annex , including the specification of the line breaking algorithm , allows for the necessary flexibility in determining line breaks according to different conventions .However , some characters have been encoded explicitly for their effect on line breaking .", "label": "", "metadata": {}, "score": "33.569393"}
{"text": "Some characters are intended to explicitly influence line breaking .Their line breaking behavior is therefore expected to be identical across all implementations .As described in this annex , the Unicode Standard assigns normative line breaking properties to those characters .", "label": "", "metadata": {}, "score": "33.72611"}
{"text": "Given an input text , it produces a set of positions called \" break opportunities \" that are appropriate points to begin a new line .The selection of actual line break positions from the set of break opportunities is not covered by the Unicode Line Breaking Algorithm , but is in the domain of higher level software with knowledge of the available width and the display size of the text .", "label": "", "metadata": {}, "score": "34.204533"}
{"text": "Alphabetic characters are also widely used as unit designators in a postfix position .For purposes of line breaking , their classification as alphabetic is sufficient to keep them together with the preceding number .Characters that usually precede a numerical expression may not be separated from following numeric characters or following opening characters , even if a space character intervenes .", "label": "", "metadata": {}, "score": "34.864777"}
{"text": "Alphabetic characters are also widely used as unit designators in a postfix position .For purposes of line breaking , their classification as alphabetic is sufficient to keep them together with the preceding number .Characters that usually precede a numerical expression may not be separated from following numeric characters or following opening characters , even if a space character intervenes .", "label": "", "metadata": {}, "score": "34.864777"}
{"text": "Therefore the information in this annex , including the specification of the line breaking algorithm , allows for the necessary flexibility in determining line breaks according to different conventions .However , some characters have been encoded explicitly for their effect on line breaking .", "label": "", "metadata": {}, "score": "35.14151"}
{"text": "A comment at the end of each line indicates the character name .Ideographic , Hangul , Surrogate , and Private Use ranges are collapsed by giving a range in the first column .Future Updates .As more scripts are added to the Unicode Standard and become more widely implemented and used on computers , more line breaking classes may be added or the assignment of line breaking class may be changed for some characters .", "label": "", "metadata": {}, "score": "35.148476"}
{"text": "I think that these are actual Unicode character classes , which are defined ( where else ? ) in the Unicode standard . isJavaIdentifierStart ( ) mentions getType ( ) , and currency symbol and connector punctuation are both also types that can be returned by that function , so the lists might be given there . \"", "label": "", "metadata": {}, "score": "35.329227"}
{"text": "The General_Category extends the widely used subdivision of ASCII characters into letters , digits , punctuation , and symbols - but needed to be elaborated and subdivided to be appropriate for the much larger and more comprehensive scope of Unicode .Many characters have multiple uses , however , and not all such uses can be captured by a single , simple partition property such as General_Category .", "label": "", "metadata": {}, "score": "36.130722"}
{"text": "This annex provides more detailed information about default line breaking behavior , reflecting best practices for the support of multilingual texts .For most Unicode characters , considerable variation in line breaking behavior can be expected , including variation based on local or stylistic preferences .", "label": "", "metadata": {}, "score": "36.203156"}
{"text": "For multilingual text , the Western and East Asian styles can be unified into a single set of specifications , based on the information in this annex .Unicode characters have explicit line breaking properties assigned to them .These properties can be utilized to implement the effect of both of these two styles of context analysis for line break opportunities .", "label": "", "metadata": {}, "score": "36.967674"}
{"text": "For multilingual text , the Western and East Asian styles can be unified into a single set of specifications , based on the information in this annex .Unicode characters have explicit line breaking properties assigned to them .These properties can be utilized to implement the effect of both of these two styles of context analysis for line break opportunities .", "label": "", "metadata": {}, "score": "36.967674"}
{"text": "It is also given to some other characters with more punctuation - like shapes , such as raised commas , which nevertheless have letterlike behavior and which occur on occasion as part of the orthography for regular words in one language or another .", "label": "", "metadata": {}, "score": "38.081604"}
{"text": "For that reason , the line breaking properties provided for these characters are informative .Some characters are intended to explicitly influence line breaking .Their line breaking behavior is therefore expected to be identical across all implementations .As described in this annex , the Unicode Standard assigns normative line breaking properties to those characters .", "label": "", "metadata": {}, "score": "38.094093"}
{"text": "Some of the vowels are written with spacing letters , while others are written with combining marks applied above the letter a , which serves as a vowel carrier .The Kayah Li script has its own set of digits .It makes use of common punctuation from Latin typography , but has a few distinct signs of its own .", "label": "", "metadata": {}, "score": "38.111366"}
{"text": "These characters are things such as CIRCLED DIGIT ONE or subscripts , or are from writing systems that lack all ten digits .Any character not matched by \\d is matched by \\D .Word characters .A \\w matches a single alphanumeric character ( an alphabetic character , or a decimal digit ) or a connecting punctuation character , such as an underscore ( \" _ \" ) .", "label": "", "metadata": {}, "score": "38.12491"}
{"text": "For a list of all space characters in the Unicode Standard , see Section 6.2 , General Punctuation , in [ Unicode ] .Tabs .TAB .Except for the effect of the location of the tab stops , the tab character acts similarly to a space for the purpose of line breaking .", "label": "", "metadata": {}, "score": "38.338936"}
{"text": "It also contains certain non - paired punctuation characters , including : .Combining Characters .Combining character sequences are treated as units for the purpose of line breaking .The line breaking behavior of the sequence is that of the base character .", "label": "", "metadata": {}, "score": "38.505833"}
{"text": "However , to avoid security problems , such characters always should be displayed with a missing glyph , so that there is a visible indication of their presence in the text .In Unicode 5.1 these code points are no longer default ignorable code points .", "label": "", "metadata": {}, "score": "38.929657"}
{"text": "For that reason , these characters have been given required line breaking behavior .To handle certain situations , some line breaking implementations use techniques that can not be expressed within the framework of the Unicode Line Breaking Algorithm .The conformance requirements permit variations of this kind .", "label": "", "metadata": {}, "score": "39.006348"}
{"text": "Examples can be found in the Roman numeral system , in Greek usage of letters as numbers , in Hebrew , and so on for many scripts .In such cases the General_Category is assigned based on the primary letter usage of the character , despite the fact that it may also have numeric values , occur in numeric expressions , or may also be used symbolically in mathematical expressions , and so on .", "label": "", "metadata": {}, "score": "39.159054"}
{"text": "These letters derive their numeric status from conventional usage to express Roman numerals , rather than from their Generic_Category value .Occasional usage of such punctuation marks unpaired or in opposite orientation certainly occurs , however , and is in no way prevented by their General_Category values .", "label": "", "metadata": {}, "score": "39.397675"}
{"text": "This will prevent some breaks that might have been legal for a particular language or usage , such as between a closing quote and a following opening punctuation .Note : If language information is available , it can be used to determine which character is used as the opening quote and which as the closing quote .", "label": "", "metadata": {}, "score": "39.491463"}
{"text": "This will prevent some breaks that might have been legal for a particular language or usage , such as between a closing quote and a following opening punctuation .Note : If language information is available , it can be used to determine which character is used as the opening quote and which as the closing quote .", "label": "", "metadata": {}, "score": "39.491463"}
{"text": "( See the Unicode Character Database [ UCD ] for any specific version of the data file . )Note : The use of the letters B and A in these annotations marks the position of the break opportunity relative to the character .", "label": "", "metadata": {}, "score": "39.61984"}
{"text": "5 ] ( punct ) .This is because Unicode splits what POSIX considers to be punctuation into two categories , Punctuation and Symbols .Another way to say it is that for a UTF-8 string , [ [ : punct : ] ] matches all the characters that Unicode considers to be punctuation , plus all the ASCII - range characters that Unicode considers to be symbols .", "label": "", "metadata": {}, "score": "39.84497"}
{"text": "The text of The Unicode Standard [ Unicode ] presents a limited description of some of the characters with specific functions in line breaking , but does not give a complete specification of line breaking behavior .This annex provides more detailed information about default line breaking behavior reflecting best practices for the support of multilingual texts .", "label": "", "metadata": {}, "score": "39.848896"}
{"text": "In such notation , ordinary hyphens are retained .The Tibetan script uses spaces sparingly , relying instead on the tsheg .There is no punctuation equivalent to a period in Tibetan ; Tibetan shad characters indicate the end of a phrase , not a sentence .", "label": "", "metadata": {}, "score": "39.88581"}
{"text": "For instance , [ 0 - 9 ] matches any ASCII digit , and [ a - m ] matches any lowercase letter from the first half of the ASCII alphabet .Note that the two characters on either side of the hyphen are not necessary both letters or both digits .", "label": "", "metadata": {}, "score": "39.963142"}
{"text": "The examples for each rule use representative characters , where ' H ' stands for an ideographs , ' h ' for small kana , and ' 9 ' for digits .Except where a rule contains no expressions , the italicized text of the rule is intended merely as a handy summary .", "label": "", "metadata": {}, "score": "40.072372"}
{"text": "The examples for each rule use representative characters , where ' H ' stands for an ideographs , ' h ' for small kana , and ' 9 ' for digits .Except where a rule contains no expressions , the italicized text of the rule is intended merely as a handy summary .", "label": "", "metadata": {}, "score": "40.072372"}
{"text": "In these cases , as for other canonical singletons , the preferred form is the character that the canonical singletons are mapped to , namely U+003B and U+00B7 respectively .Those are the characters that will appear in any normalized form of Unicode text , even when used in Greek text as Greek punctuation .", "label": "", "metadata": {}, "score": "40.12996"}
{"text": "For instance , [ 0 - 9 ] matches any ASCII digit , and [ a - m ] matches any lowercase letter from the first half of the ASCII alphabet .Note that the two characters on either side of the hyphen are not necessarily both letters or both digits .", "label": "", "metadata": {}, "score": "40.221603"}
{"text": "For instance , [ 0 - 9 ] matches any ASCII digit , and [ a - m ] matches any lowercase letter from the first half of the ASCII alphabet .Note that the two characters on either side of the hyphen are not necessarily both letters or both digits .", "label": "", "metadata": {}, "score": "40.221603"}
{"text": "If the source string is in UTF-8 format , the POSIX classes ( with the exception of [ [ : punct : ] ] , see Note [ 5 ] below ) behave like their \" Full - range \" Unicode counterparts .", "label": "", "metadata": {}, "score": "40.331455"}
{"text": "Additional Text .For various reasons , the Unicode Standard has more than one formal definition of lowercase and uppercase .( The additional complications of titlecase are not discussed here . )The first set of definitions is based on the General_Category property in UnicodeData.txt .", "label": "", "metadata": {}, "score": "40.507484"}
{"text": "Be careful about the syntax , .The latter pattern would be a character class consisting of a colon , and the letters a , l , p and h .POSIX character classes can be part of a larger bracketed character class .", "label": "", "metadata": {}, "score": "40.694534"}
{"text": "Be careful about the syntax , .The latter pattern would be a character class consisting of a colon , and the letters a , l , p and h .POSIX character classes can be part of a larger bracketed character class .", "label": "", "metadata": {}, "score": "40.694534"}
{"text": "Be careful about the syntax , .The latter pattern would be a character class consisting of a colon , and the letters a , l , p and h .POSIX character classes can be part of a larger bracketed character class .", "label": "", "metadata": {}, "score": "40.694534"}
{"text": "Be careful about the syntax , .The latter pattern would be a character class consisting of a colon , and the letters a , l , p and h .POSIX character classes can be part of a larger bracketed character class .", "label": "", "metadata": {}, "score": "40.694534"}
{"text": "The following rules specify the default case conversion operations for Unicode strings .These rules use the full case conversion operations , Uppercase_Mapping(C ) , Lowercase_Mapping(C ) , and Titlecase_Mapping(C ) , as well as the context - dependent mappings based on the casing context , as specified in Table 3 - 14 .", "label": "", "metadata": {}, "score": "40.887993"}
{"text": "Because of the potential security issues involved in the deletion of characters , the following explanatory bullet is added to the text of The Unicode Standard , Version 5.0 , on p. 72 , after the first two bullet items following Conformance Clause C7 .", "label": "", "metadata": {}, "score": "40.965256"}
{"text": "It has been further significantly augmented by several new Unicode Technical Standards that provide recommendations and data to assist in secure implementation of Unicode , and to establish the registration mechanism for Ideographic Variation Sequences needed by the publishing industry for Chinese and Japanese .", "label": "", "metadata": {}, "score": "41.031746"}
{"text": "Treating characters of class CJ as class NS will give CSS strict line breaking ; treating them as class ID will give CSS normal breaking .The closing character of any set of paired punctuation should be kept with the preceding character , and the same applies to all forms of wide comma and full stop .", "label": "", "metadata": {}, "score": "41.165268"}
{"text": "Editorial Punctuation Marks .Editorial punctuation marks added in Unicode 5.1 include a set of medievalist editorial punctuation marks , as well as corner brackets used in critical editions of ancient and medieval texts .U - brackets and double parentheses employed by Latinists have also been added , as well as a few punctuation marks that appear in dictionaries .", "label": "", "metadata": {}, "score": "41.37409"}
{"text": "Any future updates will be reflected in the latest version of the data file .( See the Unicode Character Database [ UCD ] for any specific version of the data file . )Line breaking classes are listed alphabetically .Each line breaking class is marked with an annotation in parentheses with the following meanings : .", "label": "", "metadata": {}, "score": "41.3873"}
{"text": "In bidirectional text , line breaks are determined before applying rule L1 of the Unicode Bidirectional Algorithm [ Bidi ] .However , line breaking is strictly independent of directional properties of the characters or of any auxiliary information determined by the application of rules of that algorithm .", "label": "", "metadata": {}, "score": "41.455643"}
{"text": "In bidirectional text , line breaks are determined before applying rule L1 of the Unicode Bidirectional Algorithm [ Bidi ] .However , line breaking is strictly independent of directional properties of the characters or of any auxiliary information determined by the application of rules of that algorithm .", "label": "", "metadata": {}, "score": "41.455643"}
{"text": "A comment at the end of each line indicates the character name .Ideographic , Hangul , Surrogate , and Private Use ranges are collapsed by giving a range in the first column .The line break property assignments from the data file are normative .", "label": "", "metadata": {}, "score": "41.60676"}
{"text": "Note : Many currency symbols may be used either as prefix or as postfix , depending on local convention .For details on the conventions used , see [ CLDR ] .Some quotation characters can be opening or closing , or even both , depending on usage .", "label": "", "metadata": {}, "score": "41.791702"}
{"text": "Note : Many currency symbols may be used either as prefix or as postfix , depending on local convention .For details on the conventions used , see [ CLDR ] .Some quotation characters can be opening or closing , or even both , depending on usage .", "label": "", "metadata": {}, "score": "41.791702"}
{"text": "Thus , . 'For this to happen , the character must be explicitly specified , and not be part of a multi - character range ( not even as one of its endpoints ) .( \" Character Ranges \" will be explained shortly . )", "label": "", "metadata": {}, "score": "41.9171"}
{"text": "Thus , . 'For this to happen , the character must be explicitly specified , and not be part of a multi - character range ( not even as one of its endpoints ) .( \" Character Ranges \" will be explained shortly . )", "label": "", "metadata": {}, "score": "41.9171"}
{"text": "See Note [ 3 ] below .lower Any lowercase character ( \" [ a - z ] \" ) .print Any printable character , including a space .See Note [ 4 ] below . punct Any graphical character excluding \" word \" characters .", "label": "", "metadata": {}, "score": "41.933098"}
{"text": "See Note [ 3 ] below .lower Any lowercase character ( \" [ a - z ] \" ) .print Any printable character , including a space .See Note [ 4 ] below . punct Any graphical character excluding \" word \" characters .", "label": "", "metadata": {}, "score": "41.933098"}
{"text": "Without a locale , \\d matches just the digits ' 0 ' to ' 9 ' .See \" Locale , EBCDIC , Unicode and UTF-8 \" .Unicode digits may cause some confusion , and some security issues .These characters are things such as subscripts .", "label": "", "metadata": {}, "score": "41.985527"}
{"text": "The Unicode 5.0 Web Bookmarks page has links to all sections of the online text .The changes addressed in this document consist of additional characters , new normative text , additional clarifications , and corrections .This specification is a delta document consisting of changes to the text , typically with an indication of how the principal affected text would be changed .", "label": "", "metadata": {}, "score": "42.24108"}
{"text": "Modifier Letters .Modifier letters , in the sense used in the Unicode Standard , are letters or symbols that are typically written adjacent to other letters and which modify their usage in some way .In fact , they are base characters in their own right .", "label": "", "metadata": {}, "score": "42.285027"}
{"text": "In those instances where the reverse casing operation is needed , a tailored operation would be required .Clarification of Lowercase and Uppercase .Implementers occasionally find the several ways in which the Unicode Standard uses the concepts of lowercase and uppercase somewhat confusing .", "label": "", "metadata": {}, "score": "42.61709"}
{"text": "This subset of modifier letters is also known as \" modifier symbols \" .As such , they are considered part of the default definition of Unicode identifiers .This means that for default determination of word break boundaries , modifier symbols will cause a word break , while modifier letters proper will not .", "label": "", "metadata": {}, "score": "43.004517"}
{"text": "In other respects , Hebrew letters behave the same as characters of class AL .Characters that usually occur inside a numerical expression may not be separated from the numeric characters that follow , unless a space character intervenes .For example , there is no break in \" 100.00 \" or \" 10,000 \" , nor in \" 12:59 \" . 07F8 .", "label": "", "metadata": {}, "score": "43.076946"}
{"text": "It matches a two character string : a letter ( Unicode property \\pL ) , followed by a lowercase l .Examples . \"Bracketed Character Classes .The third form of character class you can use in Perl regular expressions is the bracketed character class .", "label": "", "metadata": {}, "score": "43.15387"}
{"text": "The code charts show representative glyphs for all the Unicode characters .The Unicode Standard Annexes supply detailed normative information about particular aspects of the standard .The Unicode Character Database supplies normative and informative data for implementers to allow them to implement the Unicode Standard .", "label": "", "metadata": {}, "score": "43.23871"}
{"text": "While only disclosure of tailorings is required in the conformance clauses , documentation of the differences in behaviors is strongly encouraged .This section provides detailed narrative descriptions of the line breaking behavior of many Unicode characters .Many descriptions in this section provide additional informative detail about handling a given character at the end of a line , or during line layout , which goes beyond the simple determination of line breaks .", "label": "", "metadata": {}, "score": "43.25627"}
{"text": "Characters that may carry a special meaning inside a character class are : \\ , ^ , - , [ and ] , and are discussed below .They can be escaped with a backslash , although this is sometimes not needed , in which case the backslash may be omitted .", "label": "", "metadata": {}, "score": "43.358753"}
{"text": "Characters that may carry a special meaning inside a character class are : \\ , ^ , - , [ and ] , and are discussed below .They can be escaped with a backslash , although this is sometimes not needed , in which case the backslash may be omitted .", "label": "", "metadata": {}, "score": "43.358753"}
{"text": "Characters that may carry a special meaning inside a character class are : \\ , ^ , - , [ and ] , and are discussed below .They can be escaped with a backslash , although this is sometimes not needed , in which case the backslash may be omitted .", "label": "", "metadata": {}, "score": "43.358753"}
{"text": "The Tibetan script uses spaces sparingly , relying instead on the tsheg .There is no punctuation equivalent to a period in Tibetan ; Tibetan shad characters indicate the end of a \" phrase , \" not a sentence .\" Phrases \" are often metrical - that is , written after every N syllables - and a new sentence can often start within the middle of a phrase .", "label": "", "metadata": {}, "score": "43.407734"}
{"text": "[ ' - ? ] # ( But not on an EBCDIC platform ) .# even on an EBCDIC platform .( U+27 is \" ' \" , and U+3F is \" ? \" )These are called \" Unicode \" ranges .", "label": "", "metadata": {}, "score": "43.870262"}
{"text": "Encoding Principles .As with Indic scripts , the Myanmar encoding represents only the basic underlying characters ; multiple glyphs and rendering transformations are required to assemble the final visual form for each syllable .Characters and combinations that may appear visually identical in some fonts , such as U+101D MYANMAR LETTER WA and U+1040 MYANMAR DIGIT ZERO , are distinguished by their underlying encoding .", "label": "", "metadata": {}, "score": "43.95717"}
{"text": "[ 3 ] .Any character that is graphical , that is , visible .This class consists of all the alphanumerical characters and all punctuation characters .[ 4 ] .All printable characters , which is the set of all the graphical characters plus whitespace characters that are not also controls .", "label": "", "metadata": {}, "score": "44.314083"}
{"text": "Where possible , the line breaking properties for characters commonly used in dictionaries have been assigned to accommodate these and similar conventions by default .However , implementing the full conventions in dictionaries requires tailoring of line break classes and rules or other types of special support .", "label": "", "metadata": {}, "score": "44.37137"}
{"text": "Where possible , the line breaking properties for characters commonly used in dictionaries have been assigned to accommodate these and similar conventions by default .However , implementing the full conventions in dictionaries requires tailoring of line break classes and rules or other types of special support .", "label": "", "metadata": {}, "score": "44.37137"}
{"text": "Note that the two characters on either side of the hyphen are not necessarily both letters or both digits .Any character is possible , although not advisable .[ ' - ? ] contains a range of characters , but most people will not know which characters that means .", "label": "", "metadata": {}, "score": "44.411438"}
{"text": "All of these space characters have a specific width , but otherwise behave as breaking spaces .In setting a justified line , none of these spaces normally changes in width , except for THIN SPACE when used in mathematical notation .", "label": "", "metadata": {}, "score": "44.448784"}
{"text": "While only disclosure of tailorings is required in the conformance clauses , documentation of the differences in behaviors is strongly encouraged .This section provides detailed narrative descriptions of the line breaking behavior of many Unicode characters .In many instances , the descriptions in this section provide additional informative detail about handling a given character at the end of a line , or during line layout , which goes beyond the simple determination of line breaks .", "label": "", "metadata": {}, "score": "44.45749"}
{"text": "This annex opens with formal definitions , a summary of the line breaking task and the context in which it occurs in overall text layout , followed by a brief section on conformance requirements .Three main sections follow : .Section 5 , Line Breaking Properties , contains a narrative description of the line breaking behavior of the characters in the Unicode Standard , grouping them in alphabetical order by line breaking class .", "label": "", "metadata": {}, "score": "44.570175"}
{"text": "These are primarily characters of the following categories : .Category . General_CategoryValues .Alphabetic .Lu , Ll , Lt , Lm , and Lo .Symbols .Sm , Sk , and So .Non - decimal Numbers .", "label": "", "metadata": {}, "score": "44.634384"}
{"text": "Instead , the appearance of the mark is as if it had been placed - and the line divided - after the contextual shapes for the line have been determined .For more information on shaping , see [ Bidi ] and Section 9.2 , Arabic , of [ Unicode ] .", "label": "", "metadata": {}, "score": "44.661568"}
{"text": "Negation .It is also possible to instead list the characters you do not want to match .You can do so by using a caret ( ^ ) as the first character in the character class .For instance , [ ^a - z ] matches any character that is not a lowercase ASCII letter , which therefore includes more than a million Unicode code points .", "label": "", "metadata": {}, "score": "44.731922"}
{"text": "Negation .It is also possible to instead list the characters you do not want to match .You can do so by using a caret ( ^ ) as the first character in the character class .For instance , [ ^a - z ] matches any character that is not a lowercase ASCII letter , which therefore includes more than a million Unicode code points .", "label": "", "metadata": {}, "score": "44.731922"}
{"text": "Instead of creating a one - of - a - kind class for this rarely used character , assigning it to the QU class approximates the intended behavior .Runs of these characters require morphological analysis to determine break opportunities .This is similar to , for example , a hyphenation algorithm .", "label": "", "metadata": {}, "score": "44.81208"}
{"text": "Instead of creating a one - of - a - kind class for this rarely used character , assigning it to the QU class approximates the intended behavior .Runs of these characters require morphological analysis to determine break opportunities .This is similar to , for example , a hyphenation algorithm .", "label": "", "metadata": {}, "score": "44.81208"}
{"text": "Three principal styles of context analysis determine line break opportunities .Western : spaces and hyphens are used to determine breaks .The Western style is commonly used for scripts employing the space character .Hyphenation is often used with space - based line breaking to provide additional line break opportunities - however , it requires knowledge of the language and it may need user interaction or overrides .", "label": "", "metadata": {}, "score": "44.966278"}
{"text": "In line breaking it is necessary to distinguish between three related tasks .The first is the determination of all legal line break opportunities , given a string of text .This is the scope of the Unicode Line Breaking Algorithm .", "label": "", "metadata": {}, "score": "44.968193"}
{"text": "Instead , the appearance of the mark is as if it had been placed - and the line divided - after the contextual shapes for the line have been determined .For more information on shaping , see [ Bidi ] and Section 8.2 , Arabic , of [ Unicode5.0 ] .", "label": "", "metadata": {}, "score": "45.08469"}
{"text": "A process that determines line breaks in Unicode text , and that purports to implement the Unicode Line Breaking Algorithm , shall do so in accordance with the specifications in this annex .In particular , the following three subconditions shall be met : .", "label": "", "metadata": {}, "score": "45.125313"}
{"text": "[ 3 ] .Any character that is graphical , that is , visible .This class consists of all alphanumeric characters and all punctuation characters .[ 4 ] .All printable characters , which is the set of all graphical characters plus those whitespace characters which are not also controls .", "label": "", "metadata": {}, "score": "45.294693"}
{"text": "[ 3 ] .Any character that is graphical , that is , visible .This class consists of all alphanumeric characters and all punctuation characters .[ 4 ] .All printable characters , which is the set of all graphical characters plus those whitespace characters which are not also controls .", "label": "", "metadata": {}, "score": "45.294693"}
{"text": "Section 8 , Customization , discusses how the default line breaking behavior can be tailored to the needs of specific languages or for particular document styles and user preferences .Data File .The full classification of all Unicode characters by their line breaking properties is available in the file LineBreak.txt [ Data14 ] in the Unicode Character Database [ UCD ] .", "label": "", "metadata": {}, "score": "45.333023"}
{"text": "The third column indicates by which class(es ) the character is matched ( assuming no locale or EBCDIC code page is in effect that changes the \\s matching ) .Unicode Properties .One letter property names can be used in the \\pP form , with the property name following the \\p , otherwise , braces are required .", "label": "", "metadata": {}, "score": "45.50421"}
{"text": "A combining character sequence starts with a base character and extends across any subsequent sequence of combining marks , nonspacing or spacing .A combining character sequence is most directly relevant to processing issues related to normalization , comparison , and searching .", "label": "", "metadata": {}, "score": "45.505615"}
{"text": "Because there are no formal rules for their use in Tibetan , they get treated generically by default .In Tibetan documents published in China , CJK bracket and punctuation characters occur frequently ; it is recommended to treat these as in Chinese written horizontally .", "label": "", "metadata": {}, "score": "45.61665"}
{"text": "Clarification Regarding Non - decomposition of Overlaid Diacritics .Most characters that people think of as being a character \" plus accents \" have formal decompositions in Unicode .For example : .Based on that pattern , people often also expect to see formal Unicode decompositions for characters with slashes , bars , hooks , and the like used as diacritics for forming new Latin letters : .", "label": "", "metadata": {}, "score": "45.62962"}
{"text": "It is proposed to change this behavior in a future release of Perl so that whether or not Unicode rules are in effect would not change the behavior : Outside of locale or an EBCDIC code page , the POSIX classes would behave like their ASCII - range counterparts .", "label": "", "metadata": {}, "score": "45.632587"}
{"text": "Any character that is n't matched by \\d will be matched by \\D .Word characters .A \\w matches a single alphanumeric character ( an alphabetic character , or a decimal digit ) or an underscore ( _ ) , not a whole word .", "label": "", "metadata": {}, "score": "45.67521"}
{"text": "It is also possible to instead list the characters you do not want to match .You can do so by using a caret ( ^ ) as the first character in the character class .For instance , [ ^a - z ] matches any character that is not a lowercase ASCII letter , which therefore includes more than a million Unicode code points .", "label": "", "metadata": {}, "score": "45.72386"}
{"text": "Section 8 , Customization , discusses how the default line breaking behavior can be tailored to the needs of particular languages for particular document styles and user preferences .Data File .The full classification of all Unicode characters by their line breaking properties is available in the file LineBreak.txt [ Data14 ] in the Unicode Character Database [ UCD ] .", "label": "", "metadata": {}, "score": "45.803787"}
{"text": "Characters of this line break class move to the next line at a line break and thus provide a line break opportunity before .Dictionary Use . 00B4 .In some dictionaries , stressed syllables are indicated with a spacing acute accent instead of the hyphenation point .", "label": "", "metadata": {}, "score": "45.81444"}
{"text": "Summary .This annex presents the Unicode line breaking algorithm along with detailed descriptions of each of the character classes established by the Unicode line breaking property .The line breaking algorithm produces a set of \" break opportunities \" , or positions that would be suitable for wrapping lines when preparing text for display .", "label": "", "metadata": {}, "score": "45.83322"}
{"text": "For historical and implementation reasons , there are no decompositions for characters with overlaying diacritics such as bars or slashes , or for most hooks , swashes , tails , and other similar modifications to the form of a base character .", "label": "", "metadata": {}, "score": "45.84425"}
{"text": "In such a case , the quotation marks could be tailored to either OP or CL depending on their actual usage .The QU line break class consists of characters of General_Category Pf or Pi in the Unicode Character Database and additional characters , including : .", "label": "", "metadata": {}, "score": "46.031685"}
{"text": "The dot .The dot ( or period ) , . is probably the most used , and certainly the most well - known character class .By default , a dot matches any character , except for the newline .The default can be changed to add matching the newline by using the single line modifier : either for the entire regular expression with the /s modifier , or locally with ( ? s ) .", "label": "", "metadata": {}, "score": "46.14396"}
{"text": "In implementations such as natural language processing , where it may be useful to treat these units as single code points for ease of processing , they can be mapped to a segment of the Private Use Area .In the following \" Tamil Vowels , Consonants , and Syllables \" table , row 1 shows the ASCII representation of the vowel names .", "label": "", "metadata": {}, "score": "46.317932"}
{"text": "This annex opens with formal definitions , a summary of the line breaking task and the context in which it occurs in overall text layout followed by a brief section on conformance requirements .Three main sections follow : .Section 5 , Line Breaking Properties , contains a narrative description of the line breaking behavior of the characters of the Unicode Standard , grouping them in alphabetical order by line breaking class .", "label": "", "metadata": {}, "score": "46.330994"}
{"text": "The non - combining diacritic can be used to decorate a mathematical variable or even an entire expression .By convention , such a decoration is indicated with a Unicode character , even in markup languages , such as MathML .The invisible plus operator is used to unambiguously represent expressions like 3\u00bd. New delimiters , arrows , squares and other math symbols were also added .", "label": "", "metadata": {}, "score": "46.34544"}
{"text": "Lines are broken as the result of two conditions .The first is the presence of a mandatory line breaking character .The second condition results from a formatting algorithm having selected among available line break opportunities ; ideally the chosen line break results in the optimal layout of the text .", "label": "", "metadata": {}, "score": "46.41133"}
{"text": "The dot .The dot ( or period ) , . is probably the most used , and certainly the most well - known character class .By default , a dot matches any character , except for the newline .That default can be changed to add matching the newline by using the single line modifier : either for the entire regular expression with the /s modifier , or locally with ( ? s ) .", "label": "", "metadata": {}, "score": "46.523895"}
{"text": "The dot .The dot ( or period ) , . is probably the most used , and certainly the most well - known character class .By default , a dot matches any character , except for the newline .That default can be changed to add matching the newline by using the single line modifier : either for the entire regular expression with the /s modifier , or locally with ( ? s ) .", "label": "", "metadata": {}, "score": "46.523895"}
{"text": "The dot .The dot ( or period ) , . is probably the most used , and certainly the most well - known character class .By default , a dot matches any character , except for the newline .That default can be changed to add matching the newline by using the single line modifier : either for the entire regular expression with the /s modifier , or locally with ( ? s ) .", "label": "", "metadata": {}, "score": "46.523895"}
{"text": "It define 128 characters , including upper case and lower case of the Latin alphabet , digits , punctuation and control .Values above 127 are not defined ( allowing extensions or controls values ) .It is a good set of characters to write in English .", "label": "", "metadata": {}, "score": "46.528976"}
{"text": "Characters that usually follow a numerical expression may not be separated from preceding numeric characters or preceding closing characters , even if one or more space characters intervene .For example , there is no break opportunity in \" ( 12.00 ) % \" .", "label": "", "metadata": {}, "score": "46.64141"}
{"text": "Characters that usually follow a numerical expression may not be separated from preceding numeric characters or preceding closing characters , even if one or more space characters intervene .For example , there is no break opportunity in \" ( 12.00 ) % \" .", "label": "", "metadata": {}, "score": "46.64141"}
{"text": "This is desirable , even when there are intervening space characters , so as to prevent the appearance of a bare opening punctuation mark at the end of a line .The OP line break class consists of all characters of General_Category Ps in the Unicode Character Database , plus .", "label": "", "metadata": {}, "score": "46.83266"}
{"text": "The following table shows the allocation of code points in Unicode 5.1.0 .For more information on the specific characters , see the file DerivedAge.txt in the Unicode Character Database .Control .The character repertoire corresponds to ISO / IEC 10646:2003 plus Amendments 1 through 4 .", "label": "", "metadata": {}, "score": "46.912712"}
{"text": "In such a case , the quotation marks could be tailored to either OP or CL depending on their actual usage .The QU line break class consists of characters of General_Category Pf or Pi in the Unicode Character Database as well as .", "label": "", "metadata": {}, "score": "46.946228"}
{"text": "Examples : .[ a - z ] # Matches a character that is a lower case ASCII letter .[ a - fz ] # Matches any letter between ' a ' and ' f ' ( inclusive ) or # the letter ' z ' .", "label": "", "metadata": {}, "score": "46.99797"}
{"text": "Examples : .[ a - z ] # Matches a character that is a lower case ASCII letter .[ a - fz ] # Matches any letter between ' a ' and ' f ' ( inclusive ) or # the letter ' z ' .", "label": "", "metadata": {}, "score": "46.99797"}
{"text": "Examples : .[ a - z ] # Matches a character that is a lower case ASCII letter .[ a - fz ] # Matches any letter between ' a ' and ' f ' ( inclusive ) or # the letter ' z ' .", "label": "", "metadata": {}, "score": "46.99797"}
{"text": "Spaces are used to mark phrases .Some phrases are relatively short ( two or three syllables ) .Chapter 15 : Symbols .Mathematical Symbols .The new math characters include .a non - combining diacritic , U+27CB MATHEMATICAL SPACING LONG SOLIDUS OVERLAY , and .", "label": "", "metadata": {}, "score": "47.130985"}
{"text": "Additionally , conformance clauses and definitions were renumbered for overall readability and clarity of the text .Significant clarifications or modifications to character behavior include those listed below : .Stability of Cased Letters .If uppercase characters are added in cased scripts , the corresponding lowercase characters will be added as well , so that case folding is stable .", "label": "", "metadata": {}, "score": "47.2733"}
{"text": "The original definition included many Latin , Greek , and Cyrillic characters .These characters are now classified by default as AL because use of the AL line breaking class better corresponds to modern practice .Where strict compatibility with older legacy implementations is desired , some of these characters need to be treated as ID in certain contexts .", "label": "", "metadata": {}, "score": "47.338005"}
{"text": "This is # because the main character class is composed # of two POSIX character classes that are ORed # together , one that matches any digit , and # the other that matches anything that is n't a # hex digit .", "label": "", "metadata": {}, "score": "47.372917"}
{"text": "Lines are broken as result of one of two conditions .The first condition is the presence of a mandatory line breaking character .The second condition results from a formatting algorithm having selected among available line break opportunities ; ideally the chosen line break results in the optimal layout of the text .", "label": "", "metadata": {}, "score": "47.375305"}
{"text": "For code points above 255 ... .That is , it matches Thai letters , Greek letters , etc .This includes connector punctuation ( like the underscore ) which connect two words together , or diacritics , such as a COMBINING TILDE and the modifier letters , which are generally used to add auxiliary markings to letters . if locale rules are in effect ... .", "label": "", "metadata": {}, "score": "47.384266"}
{"text": "To handle certain situations , some line breaking implementations use techniques that can not be expressed within the framework of the Unicode Line Breaking Algorithm .The conformance requirements permit variations of this kind .Processes which support multiple modes for determining line breaks are also accommodated .", "label": "", "metadata": {}, "score": "47.433586"}
{"text": "On p. 100 in Chapter 3 of The Unicode Standard , Version 5.0 , replace the existing text from D85 through D86 with the following text .( Note that this does not actually change definitions D85 or D86 , but adds two new definitions and extends the explanatory text considerably , particularly with exemplications for UTF-8 code unit sequences . )", "label": "", "metadata": {}, "score": "47.59794"}
{"text": "Western punctuation ( full stop , question mark , exclamation mark , comma , colon , semicolon , quotes ) is starting to appear in Tibetan documents , particularly those published in India , Bhutan , and Nepal .Because there are no formal rules for their use in Tibetan , they get treated generically by default .", "label": "", "metadata": {}, "score": "47.657333"}
{"text": "There are six new characters used for the archaic number system , including characters for numbers 10 , 100 , 1000 and fractions .There is also a new character , the date mark , used only for the day of the month in dates ; it is roughly the equivalent of \" th \" in \" Jan 5th .", "label": "", "metadata": {}, "score": "47.723213"}
{"text": "In other words , as long as their line break behavior is identical , otherwise unrelated characters will be grouped together in the same line break class .The classification by property values defined in this section and in the data file is used as input into two algorithms defined in Section 6 , Line Breaking Algorithm , and Section 7 , Pair Table - Based Implementation .", "label": "", "metadata": {}, "score": "48.10132"}
{"text": "upper Any uppercase character ( \" [ A - Z ] \" ) .word A Perl extension ( \" [ A - Za - z0 - 9 _ ] \" ) , equivalent to \" \\w \" .xdigit Any hexadecimal digit ( \" [ 0 - 9a - fA - F ] \" ) .", "label": "", "metadata": {}, "score": "48.15895"}
{"text": "upper Any uppercase character ( \" [ A - Z ] \" ) .word A Perl extension ( \" [ A - Za - z0 - 9 _ ] \" ) , equivalent to \" \\w \" .xdigit Any hexadecimal digit ( \" [ 0 - 9a - fA - F ] \" ) .", "label": "", "metadata": {}, "score": "48.15895"}
{"text": "In these scripts , lines can break anywhere , except before or after certain characters .The precise set of prohibited line breaks may depend on user preference or local custom and is commonly tailorable .Korean makes use of both styles of line break .", "label": "", "metadata": {}, "score": "48.204674"}
{"text": "Thus , you can not refer to single characters by doing something like this : .[ a + b ] ) / # Syntax error !The easiest way to specify an individual typable character is to enclose it in brackets : .", "label": "", "metadata": {}, "score": "48.22667"}
{"text": "Unicode 5.0 incorporates all the changes introduced in Unicode 4.1 , including full interoperability with the most recent versions of GB 18030 , JIS X0213 , and HKSCS , and support for stable identifiers and pattern syntax characters .Unicode 5.0 revises and improves property values and behavioral specifications in areas such as character , word , line , and sentence segmentation , and tightens conformance requirements on Bidi implementations ( used for Arabic and Hebrew ) .", "label": "", "metadata": {}, "score": "48.24455"}
{"text": "( See also Section 5.3 , Use of Hyphen ) .Certain linguistic notations make use of a double - stroke , oblique hyphen to indicate specific features .The U+2E17 DOUBLE OBLIQUE HYPHEN character used in this case is not a hyphen and does not represent a line break opportunity .", "label": "", "metadata": {}, "score": "48.271317"}
{"text": "[ [ : word : ] - [ : lower : ] ] ) / / ( ?[ [ [ : word : ] ] - [ [ : lower : ] ] ] ) / .Any contained POSIX character classes , including things like \\w and \\D respect the /a ( and /aa ) modifiers .", "label": "", "metadata": {}, "score": "48.298317"}
{"text": "Special Characters Inside a Bracketed Character Class .Most characters that are meta characters in regular expressions ( that is , characters that carry a special meaning like .For instance , [ ( ) ] matches either an opening parenthesis , or a closing parenthesis , and the parens inside the character class do n't group or capture .", "label": "", "metadata": {}, "score": "48.302452"}
{"text": "This is not true .The difference is that the vertical tab ( \" \\x0b \" ) is not matched by \\s ; it is however considered vertical whitespace .The following table is a complete listing of characters matched by \\s , \\h and \\v as of Unicode 6.0 .", "label": "", "metadata": {}, "score": "48.393517"}
{"text": "Strings of phonetic transcription are notionally lowercase - all letters in them are considered to be lowercase , whatever their shapes .All modifier letters , regardless of their shapes , are operationally caseless ; they need to be unaffected by casing operations , because changing them by a casing operation would destroy their meaning for the phonetic transcription .", "label": "", "metadata": {}, "score": "48.437126"}
{"text": "For more details of character counts , see Appendix D , Changes from Unicode Version 4.0 .Unicode Character Database .The Unicode Character Database ( UCD ) was extended to cover the character repertoire additions , and new block definitions and script values were added .", "label": "", "metadata": {}, "score": "48.441994"}
{"text": "Example 9 .Prevent breaks when part of a word appears within parentheses - for example , in \" person(s ) \" .Reclassify U+0029 , RIGHT PARENTHESIS , from line break class CL ( Closing Punctuation ) to line break class IS ( Numeric Infix Separator ) .", "label": "", "metadata": {}, "score": "48.486256"}
{"text": "Any character that is graphical , that is , visible .This class consists of all alphanumeric characters and all punctuation characters .[ 4 ] .All printable characters , which is the set of all graphical characters plus those whitespace characters which are not also controls .", "label": "", "metadata": {}, "score": "48.487587"}
{"text": "Some of them have been adapted into regular language orthographies as well .Many modifier letters take the form of superscript or subscript letters .Thus the IPA modifier letter that indicates labialization ( U+02B7 ) is a superscript form of the letter", "label": "", "metadata": {}, "score": "48.61734"}
{"text": "They use the platform 's native character set , and do not consider any locale that may otherwise be in use .\\R matches anything that can be considered a newline under Unicode rules .It 's not a character class , as it can match a multi - character sequence .", "label": "", "metadata": {}, "score": "48.65149"}
{"text": "They use the platform 's native character set , and do not consider any locale that may otherwise be in use .\\R matches anything that can be considered a newline under Unicode rules .It 's not a character class , as it can match a multi - character sequence .", "label": "", "metadata": {}, "score": "48.65149"}
{"text": "If actual character code conversion is not performed and it is desired to treat them like the characters or layout elements they stand for , line breaking needs to support these runs explicitly .Characters with this property do not require other characters to provide break opportunities ; lines can ordinarily break before and after and between pairs of ideographic characters .", "label": "", "metadata": {}, "score": "48.6539"}
{"text": "If actual character code conversion is not performed and it is desired to treat them like the characters or layout elements they stand for , line breaking needs to support these runs explicitly .Characters with this property do not require other characters to provide break opportunities ; lines can ordinarily break before and after and between pairs of ideographic characters .", "label": "", "metadata": {}, "score": "48.6539"}
{"text": "The Unicode Text Segmentation Algorithms , covering sentences , words , and characters , were greatly enhanced to improve the processing of Tamil and other Indic languages .The Unicode Normalization Algorithm now defines stabilized strings and provides guidelines for buffering .", "label": "", "metadata": {}, "score": "48.672638"}
{"text": "Note that security problems can result if noncharacter code points are removed from text received from external sources .For more information , see Section 16.7 , Noncharacters , and Unicode Technical Report # 36 , \" Unicode Security Considerations . \"", "label": "", "metadata": {}, "score": "48.7177"}
{"text": "It can be used with all scripts .SHY is rendered invisibly and has no width : it merely indicates an optional line break .The rendering of the optional line break depends on the script .For the Latin script , rendering the line break typically means displaying a hyphen at the end of the line ; however , some languages require a change in spelling surrounding an optional line break .", "label": "", "metadata": {}, "score": "48.7332"}
{"text": "It is proposed to change this behavior in a future release of Perl so that whether or not Unicode rules are in effect would not change the behavior : Outside of locale , the POSIX classes would behave like their ASCII - range counterparts .", "label": "", "metadata": {}, "score": "48.738823"}
{"text": "What this means is that unless the /a modifier is in effect \\d not only matches the digits ' 0 ' - ' 9 ' , but also Arabic , Devanagari , and digits from other languages .This may cause some confusion , and some security issues .", "label": "", "metadata": {}, "score": "48.747993"}
{"text": "What this means is that unless the /a modifier is in effect \\d not only matches the digits ' 0 ' - ' 9 ' , but also Arabic , Devanagari , and digits from other languages .This may cause some confusion , and some security issues .", "label": "", "metadata": {}, "score": "48.747993"}
{"text": "What this means is that unless the /a modifier is in effect \\d not only matches the digits ' 0 ' - ' 9 ' , but also Arabic , Devanagari , and digits from other languages .This may cause some confusion , and some security issues .", "label": "", "metadata": {}, "score": "48.747993"}
{"text": "It matches a two character string : a letter ( Unicode property \\pL ) , followed by a lowercase l .If locale rules are not in effect , the use of a Unicode property will force the regular expression into using Unicode rules , if it is n't already .", "label": "", "metadata": {}, "score": "48.756752"}
{"text": "Hyphenation , and therefore the SHY , can be used with the Arabic script .If the rendering system breaks at that point , the display - including shaping - should be what is appropriate for the given language .For example , sometimes a hyphen - like mark is placed on the end of the line .", "label": "", "metadata": {}, "score": "48.879932"}
{"text": "Hyphenation , and therefore the SHY , can be used with the Arabic script .If the rendering system breaks at that point , the display - including shaping - should be what is appropriate for the given language .For example , sometimes a hyphen - like mark is placed on the end of the line .", "label": "", "metadata": {}, "score": "48.879932"}
{"text": "The formal statement of each line breaking rules consists either of a remap rule or of one or more regular expressions containing one or more line breaking classes and one of three special symbols indicating the type of line break opportunity : .", "label": "", "metadata": {}, "score": "48.996025"}
{"text": "The easiest way to specify an individual typable character is to enclose it in brackets : .[ [ a ] + [ b ] ] ) / .( This is the same thing as [ ab ] . )You could also have said the equivalent : .", "label": "", "metadata": {}, "score": "49.0032"}
{"text": "Those derived properties augment the General_Category values by adding the additional characters that ordinary users think of as being lowercase or uppercase , based primarily on their letterforms .The additional characters are included in the derivations by means of the Other_Lowercase and Other_Uppercase properties defined in PropList.txt .", "label": "", "metadata": {}, "score": "49.015427"}
{"text": "These characters are things such as CIRCLED DIGIT ONE or subscripts , or are from writing systems that lack all ten digits .Any character not matched by \\d is matched by \\D .Word characters .It does not match a whole word .", "label": "", "metadata": {}, "score": "49.031708"}
{"text": "These characters are things such as CIRCLED DIGIT ONE or subscripts , or are from writing systems that lack all ten digits .Any character not matched by \\d is matched by \\D .Word characters .It does not match a whole word .", "label": "", "metadata": {}, "score": "49.031708"}
{"text": "As stated in Section 7.9 , Combining Marks of [ Unicode ] , combining characters are shown in isolation by applying them to U+00A0 NO - BREAK SPACE ( NBSP ) .In earlier versions , this recommendation included the use of U+0020 SPACE .", "label": "", "metadata": {}, "score": "49.036877"}
{"text": "They use the platform 's native character set , and do not consider any locale that may otherwise be in use .\\R matches anything that can be considered a newline under Unicode rules .It can match a multi - character sequence .", "label": "", "metadata": {}, "score": "49.08263"}
{"text": "Many modifiers letters are derived from letters in the Latin script , although some modifier letters occur in other scripts , as well .Latin - derived modifier letters may be based on either minuscule ( lowercase ) or majuscule ( uppercase ) forms of the letters , but never have case mappings .", "label": "", "metadata": {}, "score": "49.08313"}
{"text": "( Since the backslash sequences \\b and \\B are defined in terms of \\w and \\W , they also are affected . )The rule is that if the source string is in UTF-8 format , the character classes match according to the Unicode properties .", "label": "", "metadata": {}, "score": "49.089886"}
{"text": "The details of this resolution are not specified in this annex .The line breaking rules in Section 6 , Line Breaking Algorithm , and the pair table in Section 7 , Pair Table - Based Implementation , merely require that all ambiguous characters have been resolved appropriately as part of assigning line breaking classes to the input characters .", "label": "", "metadata": {}, "score": "49.16317"}
{"text": "The following table is a complete listing of characters matched by \\s , \\h and \\v as of Unicode 5.2 .The first column gives the code point of the character ( in hex format ) , the second column gives the ( Unicode ) name .", "label": "", "metadata": {}, "score": "49.194942"}
{"text": "Certain linguistic notations make use of a double - stroke , oblique hyphen to indicate specific features .The U+2E17 DOUBLE OBLIQUE HYPHEN character used in this case is not a hyphen and does not represent a line break opportunity .Automatic hyphenation or SHY would result in the display of an ordinary hyphen .", "label": "", "metadata": {}, "score": "49.208332"}
{"text": "Future Updates .As scripts are added to the Unicode Standard and become more widely implemented , line breaking classes may be added or the assignment of line breaking class may be changed for some characters .Implementers must not make any assumptions to the contrary .", "label": "", "metadata": {}, "score": "49.212173"}
{"text": "In other words , as long as their line break behavior is identical , otherwise unrelated characters will be found grouped together in the same line break class .The classification by property values defined in this section and in the data file is used as input into two algorithms defined in Section 6 , Line Breaking Algorithm , and Section 7 , Pair Table - Based Implementation .", "label": "", "metadata": {}, "score": "49.294285"}
{"text": "The two exceptions are [ : upper : ] and [ : lower : ] .Under /i , they each match the union of [ : upper : ] and [ : lower : ] .Most POSIX character classes have two Unicode - style \\p property counterparts .", "label": "", "metadata": {}, "score": "49.335335"}
{"text": "U+02FF ) , the UPA - related Phonetic Extensions block ( U+1D00 .U+1D7F ) , the Phonetic Extensions Supplement block ( U+1D80 .U+1DBF ) , and the Modifier Tone Letters block ( U+A700 .U+A71F ) .However , some script - specific modifier letters are encoded in the blocks appropriate to those scripts .", "label": "", "metadata": {}, "score": "49.35289"}
{"text": "Note : The use of the letters B and A in these annotations marks the position of the break opportunity relative to the character .It is not to be confused with the use of the same letters in the other parts of this annex , where they indicate the positions of the characters relative to the break opportunity .", "label": "", "metadata": {}, "score": "49.404884"}
{"text": "The effective line breaking class for the syllable block matches the line breaking class for Hangul syllables , which is ID by default .This is achieved by the following rule : .A two - dimensional table can be used to resolve break opportunities between pairs of characters .", "label": "", "metadata": {}, "score": "49.42524"}
{"text": "There is no requirement that the Unicode names for modifier letters contain the label \" MODIFIER LETTER \" , although most of them do .Clarifications Related to General_Category Assignments .There are several other conventions about how General_Category values are assigned to Unicode characters .", "label": "", "metadata": {}, "score": "49.428055"}
{"text": "Examples : . # both [ and ] .Character Ranges .It is not uncommon to want to match a range of characters .Luckily , instead of listing all characters in the range , one may use the hyphen ( - ) .", "label": "", "metadata": {}, "score": "49.495193"}
{"text": "That is , it matches Thai letters , Greek letters , etc .This includes connector punctuation ( like the underscore ) which connect two words together , or diacritics , such as a COMBINING TILDE and the modifier letters , which are generally used to add auxiliary markings to letters . if locale rules are in effect ... .", "label": "", "metadata": {}, "score": "49.51792"}
{"text": "That is , it matches Thai letters , Greek letters , etc .This includes connector punctuation ( like the underscore ) which connect two words together , or diacritics , such as a COMBINING TILDE and the modifier letters , which are generally used to add auxiliary markings to letters . if locale rules are in effect ... .", "label": "", "metadata": {}, "score": "49.51792"}
{"text": "Digits .\\d matches a single character that is considered to be a decimal digit .What is considered a decimal digit depends on the internal encoding of the source string and the locale that is in effect .If the source string is in UTF-8 format , \\d not only matches the digits ' 0 ' - ' 9 ' , but also Arabic , Devanagari and digits from other languages .", "label": "", "metadata": {}, "score": "49.617805"}
{"text": "The details of this resolution are not specified in this annex .The line breaking rules in Section 6 , Line Breaking Algorithm , and the pair table in Section 7 , Pair Table - Based Implementation , merely require that all ambiguous characters be resolved appropriately as part of assigning line breaking classes to the input characters .", "label": "", "metadata": {}, "score": "49.64206"}
{"text": "The following table shows the allocation of code points in Unicode 5.0.0 .For more information on the specific characters , see the file DerivedAge.txt in the Unicode Character Database .Control .Private Use .Surrogate .Noncharacter .Reserved .", "label": "", "metadata": {}, "score": "49.651478"}
{"text": "If two rows of the table have identical values and the corresponding columns also have identical values , then the two line breaking classes can be coalesced .For example , the JIS standard uses 20 classes , of which only 14 appear to be unique .", "label": "", "metadata": {}, "score": "49.709953"}
{"text": "If two rows of the table have identical values and the corresponding columns also have identical values , then the two line breaking classes can be coalesced .For example , the JIS standard uses 20 classes , of which only 14 appear to be unique .", "label": "", "metadata": {}, "score": "49.709953"}
{"text": "This situation can arise with marked - up text , rich text , style sheets , or other environments in which a higher - level protocol can carry formatting instructions that prevent or force line breaks in positions that differ from those specified by the Unicode Line Break Algorithm .", "label": "", "metadata": {}, "score": "49.816994"}
{"text": "Bidirectional Behavior .The list of characters with the Bidi_Mirrored property was made consistent for brackets and quotation marks , in preparation for new constraints on bidi mirroring .The Bidi_Class property for five archaic characters was changed to L. .Line Break .", "label": "", "metadata": {}, "score": "49.85665"}
{"text": "A major feature of Unicode 5.1.0 is the enabling of ideographic variation sequences .These sequences allow standardized representation of glyphic variants needed for Japanese , Chinese , and Korean text .Unicode 5.1.0 contains significant changes to properties and behaviorial specifications .", "label": "", "metadata": {}, "score": "49.948566"}
{"text": "Some characters that ordinarily act like alphabetic characters are treated like ideographs ( line breaking class ID ) in certain East Asian legacy contexts .Their line breaking behavior therefore depends on the context .In the absence of appropriate context information , they are treated as class AL ; see the note at the end of this description .", "label": "", "metadata": {}, "score": "49.980587"}
{"text": "Historic Word Separators .Historic texts , especially ancient ones , often do not use spaces , even for scripts where modern use of spaces is standard .Special punctuation was used to mark word boundaries in such texts .For modern text processing it is recommended to treat these as line break opportunities by default .", "label": "", "metadata": {}, "score": "50.0795"}
{"text": "Historic Word Separators .Historic texts , especially ancient ones , often do not use spaces , even for scripts where modern use of spaces is standard .Special punctuation was used to mark word boundaries in such texts .For modern text processing it is recommended to treat these as line break opportunities by default .", "label": "", "metadata": {}, "score": "50.0795"}
{"text": "A4CF .YI RADICALS .FE62 . FE66 .SMALL PLUS SIGN to SMALL EQUALS SIGN .FF10 . FF19 .WIDE DIGITS . .2A6D6 .CJK COMPATIBILITY IDEOGRAPHS SUPPLEMENT .It also includes all of the FULLWIDTH LATIN letters and all of the blocks in the range 3000 . .33FF", "label": "", "metadata": {}, "score": "50.080757"}
{"text": "In order to take into account the normalization behavior of Hangul syllables and conjoining jamo sequences , additional definitions for extended base and extended combining character sequence have been added to the standard .The following text is added on p. 91 of The Unicode Standard , Version 5.0 , just before D52 : .", "label": "", "metadata": {}, "score": "50.11564"}
{"text": "This matches one of a , e , i , o or u .Like the other character classes , exactly one character will be matched .To match a longer string consisting of characters mentioned in the character class , follow the character class with a quantifier .", "label": "", "metadata": {}, "score": "50.11734"}
{"text": "MODIFIER LETTER LOW VERTICAL LINE .These characters are used in dictionaries to indicate stress and secondary stress when IPA is used .Both are prefixes to the stressed syllable in IPA .Breaking before them keeps them with the syllable .", "label": "", "metadata": {}, "score": "50.118362"}
{"text": "This is indeed true starting in Perl v5.18 , but prior to that , the sole difference was that the vertical tab ( \" \\cK \" ) was not matched by \\s .The following table is a complete listing of characters matched by \\s , \\h and \\v as of Unicode 6.3 .", "label": "", "metadata": {}, "score": "50.130047"}
{"text": "This is indeed true starting in Perl v5.18 , but prior to that , the sole difference was that the vertical tab ( \" \\cK \" ) was not matched by \\s .The following table is a complete listing of characters matched by \\s , \\h and \\v as of Unicode 6.3 .", "label": "", "metadata": {}, "score": "50.130047"}
{"text": "Dictionaries follow specific conventions that guide their use of special characters to indicate features of the terms they list .Marks used for some of these conventions may occur near line break opportunities and therefore interact with line breaking .For example , in one dictionary a natural hyphen in a word becomes a tilde dash when the word is split .", "label": "", "metadata": {}, "score": "50.138226"}
{"text": "Dictionaries follow specific conventions that guide their use of special characters to indicate features of the terms they list .Marks used for some of these conventions may occur near line break opportunities and therefore interact with line breaking .For example , in one dictionary a natural hyphen in a word becomes a tilde dash when the word is split .", "label": "", "metadata": {}, "score": "50.138226"}
{"text": "For module making , it is strongly recommended that Unicode source files encoded as UTF-8 are normalized to NFC .Combining characters are permitted in source text , e.g. for diacriticals where there is no precomposed character in the Unicode Standard .", "label": "", "metadata": {}, "score": "50.161575"}
{"text": "As stated in [ Unicode5.0 ] , Section 7.9 , Combining Marks , combining characters are shown in isolation by applying them to U+00A0 NO - BREAK SPACE ( NBSP ) .In earlier versions , this recommendation included the use of U+0020 SPACE .", "label": "", "metadata": {}, "score": "50.312477"}
{"text": "To implement terminal style line breaks , it would be necessary to allow breaks at fixed positions .These could occur inside a run of spaces or in the middle of words without regard to hyphenation .Such a modification essentially disregards the output of the line breaking algorithm , and is therefore not a conformant tailoring .", "label": "", "metadata": {}, "score": "50.32289"}
{"text": "Most Lydian texts have right - to - left directionality and use spaces .There is one script - specific punctuation mark , the Lydian quotation mark .The script does not have distinct digits .In addition to new scripts , many characters were added to existing scripts or to the repertoire of symbols in the standard .", "label": "", "metadata": {}, "score": "50.339317"}
{"text": "For the purposes of line breaking , sequences containing most of the control codes or layout control characters are treated like combining sequences .The following rules and the classes referenced in them provide a reasonable default set of line break opportunities .", "label": "", "metadata": {}, "score": "50.419216"}
{"text": "Examples : . \" # both [ and ] . \"Character Ranges .It is not uncommon to want to match a range of characters .Luckily , instead of listing all the characters in the range , one may use the hyphen ( - ) .", "label": "", "metadata": {}, "score": "50.509727"}
{"text": "It is a complex , Brahmic script and uses combining marks .Cham has script - specific digits , although European digits are also used .It also has some script - specific punctuation , although , again , Western punctuation is also used .", "label": "", "metadata": {}, "score": "50.515884"}
{"text": "A real - world line breaking algorithm has to be tailorable to some degree to meet user or document requirements .In Korean , for example , two distinct line breaking modes occur , which can be summarized as breaking after each character or breaking after spaces ( as in Latin text ) .", "label": "", "metadata": {}, "score": "50.520195"}
{"text": "However , as is obvious from HTML and XML , they also serve ubiquitously as paired bracket punctuation characters in many formal syntaxes .Clarification of Hangul Jamo Handling .The normalization of Hangul conjoining jamos and of Hangul syllables depends on algorithmic mapping , as specified in Section 3.12 , Conjoining Jamo Behavior in [ Unicode].", "label": "", "metadata": {}, "score": "50.56243"}
{"text": "( See conformance clause C7 in Section 3.2 , Conformance Requirements , and Unicode Technical Report # 36 , \" Unicode Security Considerations . \" )Tag Characters .Update the first paragraph of Section 16.9 , Tag Characters , on pp .", "label": "", "metadata": {}, "score": "50.572243"}
{"text": "For example , if the shape of the special hyphen , as in this case , matches an existing character , such as U+2E17 DOUBLE OBLIQUE HYPHEN , that character can be substituted temporarily for display purposes by the line formatter .", "label": "", "metadata": {}, "score": "50.658485"}
{"text": "Numerous characters for Southeast Asian scripts , which require complex contextual linebreaking , were changed to Complex_Context ( SA ) .New Properties . Normative_Name_Alias and the metaproperty , Deprecated , were added .The Jamo_Short_Name property was documented as a contributory property .", "label": "", "metadata": {}, "score": "50.676834"}
{"text": "See Example 9 of Section 8 , Customization , for options for restoring the functionality .A two - dimensional table can be used to resolve break opportunities between pairs of characters .This section defines such a table .The rows of the table are labeled with the possible values of the line breaking property of the leading character in the pair .", "label": "", "metadata": {}, "score": "50.71973"}
{"text": "Vai has some script - specific punctuation and also uses common punctuation .It does not use script - specific digits .Linebreaking within words can occur after any character .Special consideration is necessary for U+A608 VAI SYLLABLE LENGTHENER , which should not begin a line .", "label": "", "metadata": {}, "score": "50.805904"}
{"text": "True .True .02BD .Lm .False .False .True .True .On the other hand , all modifier letters derived from letter shapes are also notionally lowercase , whether the letterform itself is a minuscule or a majuscule in shape .", "label": "", "metadata": {}, "score": "50.910675"}
{"text": "See Section 5.10 , Language Information in Plain Text , for more information about language tagging .Clarification About Handling Noncharacters .The third paragraph of Section 16.7 , Noncharacters , on p. 549 of The Unicode Standard , Version 5.0 , is updated to read : .", "label": "", "metadata": {}, "score": "50.94001"}
{"text": "# The OR adds the digits , leaving only the # letters ' a ' to ' f ' and ' A ' to ' F ' excluded .Extended Bracketed Character Classes .This is a fancy bracketed character class that can be used for more readable and less error - prone classes , and to perform set operations , such as intersection .", "label": "", "metadata": {}, "score": "50.98674"}
{"text": "# The OR adds the digits , leaving only the # letters ' a ' to ' f ' and ' A ' to ' F ' excluded .Extended Bracketed Character Classes .This is a fancy bracketed character class that can be used for more readable and less error - prone classes , and to perform set operations , such as intersection .", "label": "", "metadata": {}, "score": "50.98674"}
{"text": "However , when a word contains an explicit SHY , it is customarily treated as overriding the action of the hyphenator for that word .The sequence is given a particular interpretation , see Section 5.3 , Use of Hyphen .In some fonts , notably Fraktur fonts , it is customary to use a double - stroke form of the hyphen , usually oblique .", "label": "", "metadata": {}, "score": "51.021214"}
{"text": "When the class is to match caselessly under /i matching rules , and a character that is explicitly mentioned inside the class matches a multiple - character sequence caselessly under Unicode rules , the class ( when not inverted ) will also match that sequence .", "label": "", "metadata": {}, "score": "51.045288"}
{"text": "When the class is to match caselessly under /i matching rules , and a character that is explicitly mentioned inside the class matches a multiple - character sequence caselessly under Unicode rules , the class ( when not inverted ) will also match that sequence .", "label": "", "metadata": {}, "score": "51.045288"}
{"text": "In that case , even ideographs are broken only at space characters .In Japanese , for example , tighter and looser specifications of prohibited line breaks may be used .Specialized text or specialized text constructs may need specific line breaking behavior that differs from the default line breaking rules given in this annex .", "label": "", "metadata": {}, "score": "51.085987"}
{"text": "Canonical Equivalence Issues for Greek Punctuation .Some commonly used Greek punctuation marks are encoded in the Greek and Coptic block , but are canonical equivalents to generic punctuation marks encoded in the C0 Controls and Basic Latin block , because they are indistinguishable in shape .", "label": "", "metadata": {}, "score": "51.150578"}
{"text": "00A1 .INVERTED EXCLAMATION MARK .00BF .INVERTED QUESTION MARK . 2E18 .INVERTED INTERROBANG .Note : The first two of these characters used to be in the class AI based on their East_Asian_Width assignment of A. Such characters are normally resolved to either ID or AL .", "label": "", "metadata": {}, "score": "51.17057"}
{"text": "Scripts .Unassigned code points were given a new Script property value of \" Zzzz \" : this may require some change in code using this property .Three Mongolian punctuation marks and two archaic letters changed script value .Case - Related Properties .", "label": "", "metadata": {}, "score": "51.171005"}
{"text": "They are affected by the actual rules in effect , as follows : .If the /a modifier , is in effect ... .Each of the POSIX classes matches exactly the same as their ASCII - range counterparts . if locale rules are in effect ... .", "label": "", "metadata": {}, "score": "51.227192"}
{"text": "They are affected by the actual rules in effect , as follows : .If the /a modifier , is in effect ... .Each of the POSIX classes matches exactly the same as their ASCII - range counterparts . if locale rules are in effect ... .", "label": "", "metadata": {}, "score": "51.227192"}
{"text": "These assignments anticipate that future characters assigned in these ranges will have the class ID .Once a character is assigned to one of these code points , the property value could change .The CJK blocks and regions in which unassigned characters default to line break class ID are : . CJK Unified Ideographs Extension D .", "label": "", "metadata": {}, "score": "51.411324"}
{"text": "New Characters .1,369 new character assignments were made to the Unicode Standard , Version 5.0 ( over and above what was in Unicode 4.1.0 ) .These additions include new characters for Cyrillic , Greek , Hebrew , Kannada , Latin , math , phonetic extensions , symbols , and five new scripts : Balinese , N'Ko , Phags - pa , Phoenician , and Sumero - Akkadian Cuneiform .", "label": "", "metadata": {}, "score": "51.440414"}
{"text": "However , when a word contains an explicit SHY , it is customarily treated as overriding the action of the hyphenator for that word .The sequence is given a particular interpretation , see Section 5.3 , Use of Hyphen .In some fonts , noticeably Fraktur fonts , it is customary to use a double - stroke form of the hyphen , usually oblique .", "label": "", "metadata": {}, "score": "51.448273"}
{"text": "If there is no locale nor EBCDIC , they match the ASCII defaults ( 0 to 9 for \\d ; 52 letters , 10 digits and underscore for \\w ; etc . ) .This usually means that if you are matching against characters whose ord ( ) values are between 128 and 255 inclusive , your character class may match or not depending on the current locale or EBCDIC code page , and whether the source string is in UTF-8 format .", "label": "", "metadata": {}, "score": "51.55406"}
{"text": "They are affected by the actual rules in effect , as follows : .If the /a modifier , is in effect ... .Each of the POSIX classes matches exactly the same as their ASCII - range counterparts . otherwise ... .", "label": "", "metadata": {}, "score": "51.597054"}
{"text": "To implement terminal style line breaks , it would be necessary to allow breaks at fixed positions .These could occur inside a run of spaces or in the middle of words without regard to hyphenation .Such a modification essentially disregards the output of the linebreaking algorithm , and is therefore not a conformant tailoring .", "label": "", "metadata": {}, "score": "51.632473"}
{"text": "This could be somewhat surprising : .Even though these two matches might be thought of as complements , until v5.20 they were so only on Unicode code points .Examples .It is worth emphasizing that \\d , \\w , etc , match single characters , not complete numbers or words .", "label": "", "metadata": {}, "score": "51.64174"}
{"text": "Examples : .Character Ranges .It is not uncommon to want to match a range of characters .Luckily , instead of listing all characters in the range , one may use the hyphen ( - ) .If inside a bracketed character class you have two characters separated by a hyphen , it 's treated as if all characters between the two were in the class .", "label": "", "metadata": {}, "score": "51.656475"}
{"text": "Most POSIX character classes have two Unicode - style \\p property counterparts .( They are not official Unicode properties , but Perl extensions derived from official Unicode properties . )The table below shows the relation between POSIX character classes and these counterparts .", "label": "", "metadata": {}, "score": "51.67572"}
{"text": "Most POSIX character classes have two Unicode - style \\p property counterparts .( They are not official Unicode properties , but Perl extensions derived from official Unicode properties . )The table below shows the relation between POSIX character classes and these counterparts .", "label": "", "metadata": {}, "score": "51.67572"}
{"text": "( This is the same thing as [ ab ] . )You could also have said the equivalent : .[ [ a b ] ] ) / .This last example shows the use of this construct to specify an ordinary bracketed character class without additional set operations .", "label": "", "metadata": {}, "score": "51.695145"}
{"text": "Examples ./[[:digit:]]/ # Matches a character that is a digit ./[01[:lower:]]/ # Matches a character that is either a # lowercase letter , or ' 0 ' or ' 1 ' ./[[:digit:][:^xdigit:]]/ # Matches a character that can be anything # except the letters ' a ' to ' f ' and ' A ' to # ' F ' .", "label": "", "metadata": {}, "score": "51.715466"}
{"text": "Examples ./[[:digit:]]/ # Matches a character that is a digit ./[01[:lower:]]/ # Matches a character that is either a # lowercase letter , or ' 0 ' or ' 1 ' ./[[:digit:][:^xdigit:]]/ # Matches a character that can be anything # except the letters ' a ' to ' f ' and ' A ' to # ' F ' .", "label": "", "metadata": {}, "score": "51.715466"}
{"text": "Examples ./[[:digit:]]/ # Matches a character that is a digit ./[01[:lower:]]/ # Matches a character that is either a # lowercase letter , or ' 0 ' or ' 1 ' ./[[:digit:][:^xdigit:]]/ # Matches a character that can be anything # except the letters ' a ' to ' f ' and ' A ' to # ' F ' .", "label": "", "metadata": {}, "score": "51.715466"}
{"text": "The rules for treating hyphens in line breaking vary by language .In many instances , these rules are not supported as such in the algorithm , but the correct appearance can be realized by using a non - breaking hyphen .", "label": "", "metadata": {}, "score": "51.743114"}
{"text": "The rules for treating hyphens in line breaking vary by language .In many instances , these rules are not supported as such in the algorithm , but the correct appearance can be realized by using a non - breaking hyphen .", "label": "", "metadata": {}, "score": "51.743114"}
{"text": "Note that some cases have already been handled , such as ' 9 , ' , ' [ 9 ' .For a tailoring that supports the regular expression directly , as well as a key to the notation see Section 8.2 , Examples of Customization .", "label": "", "metadata": {}, "score": "51.85945"}
{"text": "There are other possible means of determining the desired behavior of private - use characters .For example , one implementation might treat any private - use character in ideographic context as ID , while another implementation might support a method for assigning specific properties to specific definitions of private - use characters .", "label": "", "metadata": {}, "score": "51.881985"}
{"text": "There are other possible means of determining the desired behavior of private - use characters .For example , one implementation might treat any private - use character in ideographic context as ID , while another implementation might support a method for assigning specific properties to specific definitions of private - use characters .", "label": "", "metadata": {}, "score": "51.881985"}
{"text": "This can be done by always tailoring them to ID or by continuing to classify them as AI and resolving them to ID where required .As part of the same revision , the set of ambiguous characters has been extended to completely encompass the enclosed alphanumeric characters used for numbering of bullets .", "label": "", "metadata": {}, "score": "51.911713"}
{"text": "VERTICAL LINE .In some dictionaries , a vertical bar is used instead of a hyphenation point .In this usage , U+0323 COMBINING DOT BELOW is used to mark stressed syllables , so all breaks are marked by the vertical bar .", "label": "", "metadata": {}, "score": "51.912933"}
{"text": "VERTICAL LINE .In some dictionaries , a vertical bar is used instead of a hyphenation point .In this usage , U+0323 COMBINING DOT BELOW is used to mark stressed syllables , so all breaks are marked by the vertical bar .", "label": "", "metadata": {}, "score": "51.912933"}
{"text": "The Ogham space mark may be rendered visibly between words but it is recommended that it be elided at the end of a line .For more information , see Section 5.7 , , Word Separator Characters .See the ID property for U+3000 IDEOGRAPHIC SPACE .", "label": "", "metadata": {}, "score": "51.96061"}
{"text": "Thus , . 'For this to happen , the class must not be inverted ( see \" Negation \" ) and the character must be explicitly specified , and not be part of a multi - character range ( not even as one of its endpoints ) .", "label": "", "metadata": {}, "score": "52.189888"}
{"text": "( They are not official Unicode properties , but Perl extensions derived from official Unicode properties . )The table below shows the relation between POSIX character classes and these counterparts .One counterpart , in the column labelled \" ASCII - range Unicode \" in the table , matches only characters in the ASCII character set .", "label": "", "metadata": {}, "score": "52.24957"}
{"text": "Unicode Standard Annex # 29 , \" Unicode Text Segmentation \" [ UAX29 ] , describes a particular method for boundary detection , based on a set of hierarchical rules and character classifications .That method is well suited for implementation of some of the advanced heuristics for line breaking .", "label": "", "metadata": {}, "score": "52.255333"}
{"text": "Unicode Properties .One letter property names can be used in the \\pP form , with the property name following the \\p , otherwise , braces are required .Lowercase letters are matched by the property Lowercase_Letter which has the short form Ll .", "label": "", "metadata": {}, "score": "52.368202"}
{"text": "OBJECT REPLACEMENT CHARACTER .Object - specific line break behavior is best implemented by querying the object itself , not by replacing the CB line breaking class by another class .The closing character of any set of paired punctuation should be kept with the preceding character , and the same applies to all forms of wide comma and full stop .", "label": "", "metadata": {}, "score": "52.41034"}
{"text": "In a few cases , named Unicode algorithms are also widely known by their acronyms , and those acronyms are also listed in Table 3 - 1 .Replacement Text .Character Segmentation .UAX # 29 .Word Segmentation .UAX # 29 .", "label": "", "metadata": {}, "score": "52.469246"}
{"text": "The CL line break class contains the following characters plus any characters of General_Category Pe in the Unicode Character Database .Combining Characters .Combining character sequences are treated as units for the purpose of line breaking .The line breaking behavior of the sequence is that of the base character .", "label": "", "metadata": {}, "score": "52.586025"}
{"text": "The default line breaking algorithm approximates this with the following rule .Note that some cases have already been handled , such as ' 9 , ' , ' [ 9 ' .For a tailoring that supports the regular expression directly , as well as a key to the notation see Section 8.2 , Examples of Customization .", "label": "", "metadata": {}, "score": "52.7014"}
{"text": "\\s \" plus the vertical tab ( \" \\cK \" ) .upper Any uppercase character ( \" [ A - Z ] \" ) .word A Perl extension ( \" [ A - Za - z0 - 9 _ ] \" ) , equivalent to \" \\w \" .", "label": "", "metadata": {}, "score": "52.708748"}
{"text": "\\s \" plus the vertical tab ( \" \\cK \" ) .upper Any uppercase character ( \" [ A - Z ] \" ) .word A Perl extension ( \" [ A - Za - z0 - 9 _ ] \" ) , equivalent to \" \\w \" .", "label": "", "metadata": {}, "score": "52.708748"}
{"text": "Unicode and the Unicode logo are trademarks of Unicode , Inc. , and are registered in some jurisdictions .Unicode 5.1.0 .The core specification gives the general principles , requirements for conformance , and guidelines for implementers .The code charts show representative glyphs for all the Unicode characters .", "label": "", "metadata": {}, "score": "52.721207"}
{"text": "Negation .It is also possible to instead list the characters you do not want to match .You can do so by using a caret ( ^ ) as the first character in the character class .For instance , [ ^a - z ] matches a character that is not a lowercase ASCII letter .", "label": "", "metadata": {}, "score": "52.85259"}
{"text": "In texts using such a font , automatic hyphenation or SHY would also result in the display of a double - stroke , oblique hyphen .In some dictionaries , such as Webster 's 3rd New International Dictionary , double - stroke , oblique hyphens are used to indicate an explicit hyphen at the end of the line ; in other words , a hyphen that would be retained when the term shown is not line wrapped .", "label": "", "metadata": {}, "score": "52.884426"}
{"text": "Seven archaic characters plus U+0294 LATIN LETTER GLOTTAL STOP changed categories .Numeric Properties .The archaic character U+10341 GOTHIC LETTER NINETY was given the numeric value 90 .Unihan .The kIICore field was made a normative property , and three new provisional properties were added : kCheungBauer , kCheungBauerIndex , and kFourCornerCoverage .", "label": "", "metadata": {}, "score": "52.892975"}
{"text": "\\N , available starting in v5.12 , like the dot , matches any character that is not a newline .The difference is that \\N is not influenced by the single line regular expression modifier ( see \" The dot \" above ) .", "label": "", "metadata": {}, "score": "52.901936"}
{"text": "\\N , available starting in v5.12 , like the dot , matches any character that is not a newline .The difference is that \\N is not influenced by the single line regular expression modifier ( see \" The dot \" above ) .", "label": "", "metadata": {}, "score": "52.901936"}
{"text": "The precise set of prohibited line breaks may depend on user preference or local custom and is commonly tailorable .Korean makes use of both styles of line break .When Korean text is justified , the second style is commonly used , even for interspersed Latin letters .", "label": "", "metadata": {}, "score": "52.97358"}
{"text": "Unicode Properties .One letter property names can be used in the \\pP form , with the property name following the \\p , otherwise , braces are required .Lowercase letters are matched by the property Lowercase_Letter which has as short form Ll .", "label": "", "metadata": {}, "score": "52.98446"}
{"text": "It would require further extensions and modifications to cover the various other languages , such as Karen , Mon , and Shan , which also use the Myanmar script .Spacing .Myanmar does not use any whitespace between words .If word boundary indications are desired - for example , for the use of automatic line layout algorithms - the character U+200B ZERO WIDTH SPACE should be used to place invisible marks for such breaks .", "label": "", "metadata": {}, "score": "53.03756"}
{"text": "A well - formed Unicode code unit sequence can be partitioned into one or more minimal well - formed code unit sequences for the given Unicode encoding form .Any Unicode code unit sequence can be partitioned into subsequences that are either well - formed or ill - formed .", "label": "", "metadata": {}, "score": "53.043663"}
{"text": "In texts using such a font , automatic hyphenation or SHY would also result in the display of a double - stroke , oblique hyphen .In some dictionaries , such as Webster 's 3rd New International Dictionary , double - stroke , oblique hyphens are used to indicate an explicit hyphen at the end of the line , in other words , a hyphen that would be retained when the term shown is not line wrapped .", "label": "", "metadata": {}, "score": "53.091743"}
{"text": "Punctuation .Pc , Pd , and Po .Line break class AL also contains several format characters , including : .ARABIC NUMBER SIGN .ARABIC SIGN SAMVAT . 06DD .ARABIC END OF AYAH . 070F .SYRIAC ABBREVIATION MARK .", "label": "", "metadata": {}, "score": "53.108643"}
{"text": "For the first time , the book provides the complete text of the standard , including all the Unicode Standard Annexes .The book is printed in a smaller , lighter , easier - to - use format .See also Note on Printed CJK Code Charts .", "label": "", "metadata": {}, "score": "53.1669"}
{"text": "Nor may there be space between the closing ] ) characters .Just as in all regular expressions , the pattern can be built up by including variables that are interpolated at regex compilation time .Care must be taken to ensure that you are getting what you expect .", "label": "", "metadata": {}, "score": "53.17321"}
{"text": "The former tends to occur when text is set justified ; the latter , when ragged margins are used .In that case , even ideographs are broken only at space characters .In Japanese , for example , tighter and looser specifications of prohibited line breaks may be used .", "label": "", "metadata": {}, "score": "53.257286"}
{"text": "Such visible modes do not violate the constraint on tailorability , because they are logically equivalent to having temporarily substituted symbol characters , such as the characters from the Control Pictures block , or in some cases , character sequences , for the actual control characters .", "label": "", "metadata": {}, "score": "53.285957"}
{"text": "Such visible modes do not violate the constraint on tailorability , because they are logically equivalent to having temporarily substituted symbol characters , such as the characters from the Control Pictures block , or in some cases , character sequences , for the actual control characters .", "label": "", "metadata": {}, "score": "53.285957"}
{"text": "Effectively , nonspacing marks apply graphically to the base , but do not change its properties .For example , behaves in line breaking or bidirectional layout as if it were the character x. .D61 Extended grapheme cluster : The text between extended grapheme cluster boundaries as specified by Unicode Standard Annex # 29 , \" Unicode Text Segmentation . \" Extended grapheme clusters are defined in a parallel manner to grapheme clusters , but also include sequences of spacing marks and certain prepending characters .", "label": "", "metadata": {}, "score": "53.38787"}
{"text": "However , spaces at the end of a line are ordinarily not measured for fit .If there is a sequence of space characters , and breaking after any of the space characters would result in the same visible line , then the line breaking position after the last space character in the sequence is the locally most optimal one .", "label": "", "metadata": {}, "score": "53.406147"}
{"text": "However , spaces at the end of a line are ordinarily not measured for fit .If there is a sequence of space characters , and breaking after any of the space characters would result in the same visible line , then the line breaking position after the last space character in the sequence is the locally most optimal one .", "label": "", "metadata": {}, "score": "53.406147"}
{"text": "Therefore complex context analysis , often involving dictionary lookup of some form , is required to determine non - emergency line breaks .If such analysis is not available , it is recommended to treat them as AL .Note : These characters can be mapped into their equivalent line breaking classes as the result of dictionary lookup , thus permitting a logical separation of this algorithm from the morphological analysis .", "label": "", "metadata": {}, "score": "53.4255"}
{"text": "This is n't the same thing as matching an English word , but in the ASCII range it is the same as a string of Perl - identifier characters .If the /a modifier is in effect ... .\\w matches the 63 characters [ a - zA - Z0 - 9_]. otherwise ... .", "label": "", "metadata": {}, "score": "53.43179"}
{"text": "This is n't the same thing as matching an English word , but in the ASCII range it is the same as a string of Perl - identifier characters .If the /a modifier is in effect ... .\\w matches the 63 characters [ a - zA - Z0 - 9_]. otherwise ... .", "label": "", "metadata": {}, "score": "53.43179"}
{"text": "Hyphenation is often used with space - based line breaking to provide additional line break opportunities - however , it requires knowledge of the language and it may need user interaction or overrides .The second style of context analysis is used with East Asian ideographic and syllabic scripts .", "label": "", "metadata": {}, "score": "53.451157"}
{"text": "if locale rules are in effect ... .\\s matches whatever the locale considers to be whitespace . if Unicode rules are in effect ... .\\s matches exactly the characters shown with an \" s \" column in the table below . otherwise ... .", "label": "", "metadata": {}, "score": "53.45751"}
{"text": "See Unicode Technical Report # 20 , \" Unicode in XML and Other Markup Languages . \"The requirement for language information embedded in plain text data is often overstated , and markup or other rich text mechanisms constitute best current practice .", "label": "", "metadata": {}, "score": "53.462112"}
{"text": "In this example , if the shape of the special hyphen matches an existing character , such as U+2E17 DOUBLE OBLIQUE HYPHEN , that character can be substituted temporarily for display purposes by the line formatter .With such a convention , automatic hyphenation or SHY would result in the display of an ordinary hyphen without further substitution .", "label": "", "metadata": {}, "score": "53.497665"}
{"text": "Use of such a construct will lead to an error .Examples ./[[:digit:]]/ # Matches a character that is a digit ./[01[:lower:]]/ # Matches a character that is either a # lowercase letter , or ' 0 ' or ' 1 ' .", "label": "", "metadata": {}, "score": "53.503822"}
{"text": "This customized rule uses extended contexts that can not be represented in a pair table .The last two rules can have a left side of any non - zero length .If this is not done , single digits might be handled by rule LB13 before being handled in the regular expression .", "label": "", "metadata": {}, "score": "53.518078"}
{"text": "The basic consonants , medials , independent vowels , and dependent vowel signs required for writing the Myanmar language are encoded at the beginning of the Myanmar range .Extensions of each of these categories for use in writing other languages are appended at the end of the range .", "label": "", "metadata": {}, "score": "53.60855"}
{"text": "[ 1 ] .NEXT LINE and NO - BREAK SPACE only match \\s if the source string is in UTF-8 format , or the locale or EBCDIC code page that is in effect includes them .It is worth noting that \\d , \\w , etc , match single characters , not complete numbers or words .", "label": "", "metadata": {}, "score": "53.63906"}
{"text": "An encoding is a set of rules defining how to translate a sequence of words into a sequence of characters .Single byte encoding .As computer can easily work with groups of bit called bytes , one of the first solution was to use a different byte value for every character .", "label": "", "metadata": {}, "score": "53.664513"}
{"text": "The use of combining grapheme joiner with Latin script diacritics was clarified .Unicode Standard Annexes .In UAX # 9 , \" Bidirectional Algorithm , \" for better interoperability , the algorithm was modified to tighten up the conformance requirements for using mirrored glyphs for characters .", "label": "", "metadata": {}, "score": "53.71141"}
{"text": "The well - known text layout system [ T E X ] implements an example of such a globally optimal strategy that may make complex tradeoffs across an entire paragraph to avoid unnecessary hyphenation and other legal , but inferior breaks .", "label": "", "metadata": {}, "score": "53.763283"}
{"text": "The well - known text layout system [ T E X ] implements an example of such a globally optimal strategy that may make complex tradeoffs across an entire paragraph to avoid unnecessary hyphenation and other legal , but inferior breaks .", "label": "", "metadata": {}, "score": "53.763283"}
{"text": "Perl also guarantees that the ranges A - Z , a - z , 0 - 9 , and any subranges of these match what an English - only speaker would expect them to match on any platform .That is , [ A - Z ] matches the 26 ASCII uppercase letters ; [ a - z ] matches the 26 lowercase letters ; and [ 0 - 9 ] matches the 10 digits .", "label": "", "metadata": {}, "score": "53.930923"}
{"text": "PRESENTATION FORM FOR VERTICAL SEMICOLON .When not used in a numeric context , infix separators are sentence - ending punctuation .Therefore they always prevent breaks before .Note : FIGURE SPACE , not being a punctuation mark , has been given the line break class GL .", "label": "", "metadata": {}, "score": "53.9532"}
{"text": "PRESENTATION FORM FOR VERTICAL SEMICOLON .When not used in a numeric context , infix separators are sentence - ending punctuation .Therefore they always prevent breaks before .Note : Figure Space , not being a punctuation mark , has been given the line break class GL .", "label": "", "metadata": {}, "score": "53.9532"}
{"text": "The other counterpart , in the column labelled \" Full - range Unicode \" , matches any appropriate characters in the full Unicode character set .( Each of the counterparts has various synonyms as well .\" Both the \\p forms are unaffected by any locale that is in effect , or whether the string is in UTF-8 format or not , or whether the platform is EBCDIC or not .", "label": "", "metadata": {}, "score": "54.08019"}
{"text": "You will not find them on your keyboard .Note that in Java , the character information is based on Unicode standard which identifies connecting characters by assigning them the general category Pc , which is an alias for Connector_Punctuation .The following code snippet , . prints the connecting characters that can be used to start an identifer on jdk1.6.0_45 .", "label": "", "metadata": {}, "score": "54.08146"}
{"text": "( See conformance clause C10 . )Furthermore , such a process must not treat any adjacent well - formed code unit sequences as being part of those ill - formed code unit sequences .The most important consequence of this requirement on processes is illustrated by UTF-8 conversion processes , which interpret UTF-8 code unit sequences as Unicode character sequences .", "label": "", "metadata": {}, "score": "54.110672"}
{"text": "This customized rule uses extended contexts that can not be represented in a pair table .The last two rules can have a left side of any non - zero length .Otherwise , single digits might be handled by rule LB13 before being handled in the regular expression .", "label": "", "metadata": {}, "score": "54.171314"}
{"text": "In linebreaking it is necessary to distinguish between two related tasks .The first is the determination of all legal line break opportunities , given a string of text .This is the scope of the Unicode Line Break Algorithm .The second task is the selection of the actual location for breaking a given line of text .", "label": "", "metadata": {}, "score": "54.175552"}
{"text": "The Unicode Standard Annexes themselves are not delta documents ; they incorporate all of the textual changes for their updates for Version 5.1.0 .Unicode 5.1.0 contains over 100,000 characters , and provides significant additions and improvements that extend text processing for software worldwide .", "label": "", "metadata": {}, "score": "54.23418"}
{"text": "If a line break before or after the combining sequence is desired , U+200B ZERO WIDTH SPACE can be used .The use of U+0020 SPACE as a base character is deprecated .For most purposes , combining characters take on the properties of their base characters , and that is how the CM class is treated in rule LB9 of this specification .", "label": "", "metadata": {}, "score": "54.45858"}
{"text": "If a line break before or after the combining sequence is desired , U+200B ZERO WIDTH SPACE can be used .The use of U+0020 SPACE as a base character is deprecated .For most purposes , combining characters take on the properties of their base characters , and that is how the CM class is treated in rule LB9 of this specification .", "label": "", "metadata": {}, "score": "54.45858"}
{"text": "MODIFIER LETTER VERTICAL LINE . 02CC .MODIFIER LETTER LOW VERTICAL LINE .These characters are used in dictionaries to indicate stress and secondary stress when IPA is used .Both are prefixes to the stressed syllable in IPA .Breaking before them keeps them with the syllable .", "label": "", "metadata": {}, "score": "54.525883"}
{"text": "As a result of the strengthening of the Normalization Stability Policy , the Canonical_Combining_Class property has become an immutable property , rather than merely a stable property .To adjust for this change , the first bullet after D40 on p. 88 of The Unicode Standard , Version 5.0 , is removed from the text .", "label": "", "metadata": {}, "score": "54.566788"}
{"text": "It is written from left to right .Ol Chiki has script - specific digits .It mainly uses common punctuation , but has some script - specific punctuation marks .It does not use full stop .Spaces are used between words .", "label": "", "metadata": {}, "score": "54.59913"}
{"text": "This is n't the same thing as matching an English word , but is the same as a string of Perl - identifier characters .What is considered a word character depends on the internal encoding of the string and the locale or EBCDIC code page that is in effect .", "label": "", "metadata": {}, "score": "54.603813"}
{"text": "( See note [ 1 ] below for a discussion of this . )Note that this list does n't include the non - breaking space .\\h matches any character considered horizontal whitespace ; this includes the platform 's space and tab characters and several others listed in the table below .", "label": "", "metadata": {}, "score": "54.632423"}
{"text": "That is , it not only matches ASCII letters , but also Thai letters , Greek letters , etc .If the source string is n't in UTF-8 format , \\w matches those characters that are considered word characters by the current locale or EBCDIC code page .", "label": "", "metadata": {}, "score": "54.64808"}
{"text": "But a string may be in UTF-8 format without it having such characters .See \" The \" Unicode Bug \" \" in perlunicode .For portability reasons , it may be better to not use \\w , \\d , \\s or the POSIX character classes , and use the Unicode properties instead .", "label": "", "metadata": {}, "score": "54.652588"}
{"text": "There exist no break opportunities or mandatory breaks produced by the implementation that fall on a \" non - break \" position specified by the rules in Section 6.1 , Non - tailorable Line Breaking Rules .UAX14-C2 .Example : An XML format provides markup which disables all line breaking over some span of text .", "label": "", "metadata": {}, "score": "54.684162"}
{"text": "There exist no break opportunities or mandatory breaks produced by the implementation that fall on a \" non - break \" position specified by the rules in Section 6.1 , Non - tailorable Line Breaking Rules .UAX14-C2 .Example : An xml format provides markup which disables all line breaking over some span of text .", "label": "", "metadata": {}, "score": "54.684162"}
{"text": "Ill - formed code unit subsequences do not overlap with minimal well - formed code unit subsequences .On p. 101 in Chapter 3 of The Unicode Standard , Version 5.0 , replace the existing paragraph just above Table 3 - 4 with the following text .", "label": "", "metadata": {}, "score": "54.684807"}
{"text": "[ [ \\xF ] ] ) / # Syntax error !You have to have two hex digits after a braceless \\x ( use a leading zero to make two ) .These restrictions are to lower the incidence of typos causing the class to not match what you thought it would .", "label": "", "metadata": {}, "score": "54.694145"}
{"text": "[ [ \\xF ] ] ) / # Syntax error !You have to have two hex digits after a braceless \\x ( use a leading zero to make two ) .These restrictions are to lower the incidence of typos causing the class to not match what you thought it would .", "label": "", "metadata": {}, "score": "54.694145"}
{"text": "For additional information about U+30A0 KATAKANA - HIRAGANA DOUBLE HYPHEN , see Section 5.5 , Use of Double Hyphen .The opening character of any set of paired punctuation should be kept with the character that follows .This is desirable , even if there are intervening space characters , as it prevents the appearance of a bare opening punctuation mark at the end of a line .", "label": "", "metadata": {}, "score": "54.74491"}
{"text": "See note [ 1 ] below for a discussion of this .For code points above 255 ... .\\s matches exactly the code points above 255 shown with an \" s \" column in the table below . if Unicode rules are in effect ... .", "label": "", "metadata": {}, "score": "54.753197"}
{"text": "The following rules and the classes referenced in them provide a reasonable default set of line break opportunities .Implementations SHOULD implement them unless alternate approaches produce better results for some classes of text or applications .When using alternative rules or algorithms , implementations must ensure that the mandatory breaks , break opportunities and non - break positions determined by the algorithm and rules of Section 6.1 , Non - tailorable Line Breaking Rules , are preserved .", "label": "", "metadata": {}, "score": "54.802395"}
{"text": "INVERTED EXCLAMATION MARK .00BF .INVERTED QUESTION MARK . 2E18 .INVERTED INTERROBANG .Note : The first two of these characters used to be classed AI based on their East_Asian_Width assignment of A. Such characters are normally resolved to either ID or AL .", "label": "", "metadata": {}, "score": "54.808693"}
{"text": "RIGHT SQUARE BRACKET .Characters of class CP differ from those of the CL ( Close Punctuation ) class in that they will not cause a break opportunity when appearing in contexts like \" ( s)he . \" In all other respects the breaking behavior of CP and CL are the same .", "label": "", "metadata": {}, "score": "54.82074"}
{"text": "\\N .\\N is new in 5.12 , and is experimental .It , like the dot , will match any character that is not a newline .The difference is that \\N is not influenced by the single line regular expression modifier ( see \" The dot \" above ) .", "label": "", "metadata": {}, "score": "54.85575"}
{"text": "As many languages are using characters not included in the original ASCII set ; many country , or group of country defined new encoding based on the ASCII encoding .Missing characters are filled in the unused 128 values ( above 127 ) .", "label": "", "metadata": {}, "score": "54.86566"}
{"text": "Tamil is less complex than some of the other Indic scripts , and both conceptually and in processing can be treated as an atomic set of elements : consonants , stand - alone vowels , and syllables .The following chart shows these atomic elements , with the corresponding Unicode code points .", "label": "", "metadata": {}, "score": "54.86751"}
{"text": "Therefore complex context analysis , often involving dictionary lookup of some form , is required to determine non - emergency line breaks .If such analysis is not available , it is recommended to treat them as AL .Note : These characters can be mapped into their equivalent line breaking classes by using dictionary lookup , thus permitting a logical separation of this algorithm from the morphological analysis .", "label": "", "metadata": {}, "score": "54.87549"}
{"text": "\\N .\\N is new in 5.12 , and is experimental .It , like the dot , matches any character that is not a newline .The difference is that \\N is not influenced by the single line regular expression modifier ( see \" The dot \" above ) .", "label": "", "metadata": {}, "score": "54.954636"}
{"text": "Lepcha digits have distinctive forms .Lepcha has traditional punctuation signs , but everyday writing now uses punctuation such as comma , full stop , and question mark , though sometimes Tibetan tshegs are found .Opportunities for hyphenation occur after any full orthographic syllable .", "label": "", "metadata": {}, "score": "54.9685"}
{"text": "They use the platform 's native character set , and do not consider any locale that may otherwise be in use .\\vmatches any character considered vertical whitespace ; this includes the platform 's carriage return and line feed characters ( newline ) plus several other characters , all listed in the table below .", "label": "", "metadata": {}, "score": "55.024933"}
{"text": "They use the platform 's native character set , and do not consider any locale that may otherwise be in use .\\vmatches any character considered vertical whitespace ; this includes the platform 's carriage return and line feed characters ( newline ) plus several other characters , all listed in the table below .", "label": "", "metadata": {}, "score": "55.024933"}
{"text": "/\\pLl/ is valid , but means something different .It matches a two character string : a letter ( Unicode property \\pL ) , followed by a lowercase l .If locale rules are not in effect , the use of a Unicode property will force the regular expression into using Unicode rules , if it is n't already .", "label": "", "metadata": {}, "score": "55.032845"}
{"text": "/\\pLl/ is valid , but means something different .It matches a two character string : a letter ( Unicode property \\pL ) , followed by a lowercase l .If locale rules are not in effect , the use of a Unicode property will force the regular expression into using Unicode rules , if it is n't already .", "label": "", "metadata": {}, "score": "55.032845"}
{"text": "Unicode and the Unicode logo are trademarks of Unicode , Inc. , and are registered in some jurisdictions .Summary .This annex presents the Unicode line breaking algorithm along with detailed descriptions of each of the character classes established by the Unicode line breaking property .", "label": "", "metadata": {}, "score": "55.046013"}
{"text": "See \" Locale , EBCDIC , Unicode and UTF-8 \" .Also , for a somewhat finer - grained set of characters that are in programming language identifiers beyond the ASCII range , you may wish to instead use the more customized Unicode properties , \" ID_Start \" , ID_Continue \" , \" XID_Start \" , and \" XID_Continue \" .", "label": "", "metadata": {}, "score": "55.053123"}
{"text": "It is based on a set of hierarchical rules and character classifications .That method is well suited for implementation of some of the advanced heuristics for line breaking .A slightly simplified implementation of such an algorithm can be devised that uses a two - dimensional table to resolve break opportunities between pairs or characters .", "label": "", "metadata": {}, "score": "55.11581"}
{"text": "To match a whole word , use \\w+ .This is n't the same thing as matching an English word , but in the ASCII range it is the same as a string of Perl - identifier characters .If the /a modifier is in effect ... .", "label": "", "metadata": {}, "score": "55.183304"}
{"text": "For more information about versions of the Unicode Standard , see [ Versions ] .For any errata which may apply to this annex , see [ Errata ] .Line breaking , also known as word wrapping , is the process of breaking a section of text into lines such that it will fit in the available width of a page , window or other display area .", "label": "", "metadata": {}, "score": "55.206093"}
{"text": "However , these occur inline : one section ends and a new one starts on the same line , and the new section is marked only by the presence of one of these characters .Some modern books , newspapers , and magazines format text more like English with a break before each section or topic - and ( often ) the title of the section on a separate line .", "label": "", "metadata": {}, "score": "55.224472"}
{"text": "Unicode 5.1.0 adds 1,624 newly encoded characters .These additions include characters required for Malayalam and Myanmar and important individual characters such as Latin capital sharp s for German .Version 5.1 extends support for languages in Africa , India , Indonesia , Myanmar , and Vietnam , with the addition of the Cham , Lepcha , Ol Chiki , Rejang , Saurashtra , Sundanese , and Vai scripts .", "label": "", "metadata": {}, "score": "55.238804"}
{"text": "As long as the existence of the option is disclosed , that format can be said to conform to the Unicode Line Breaking Algorithm according to UAX14-C2 .As is the case for all other Unicode algorithms , this specification is a logical description - particular implementations can have more efficient mechanisms as long as they produce the same results .", "label": "", "metadata": {}, "score": "55.256046"}
{"text": "As long as the existence of the option is disclosed , that format can be said to conform to the Unicode Line Breaking Algorithm according to UAX14-C2 .As is the case for all other Unicode algorithms , this specification is a logical description - particular implementations can have more efficient mechanisms as long as they produce the same results .", "label": "", "metadata": {}, "score": "55.256046"}
{"text": "graph Any printable character , excluding a space .See Note [ 3 ] below .lower Any lowercase character ( \" [ a - z ] \" ) .print Any printable character , including a space .See Note [ 4 ] below . punct Any graphical character excluding \" word \" characters .", "label": "", "metadata": {}, "score": "55.262577"}
{"text": "graph Any printable character , excluding a space .See Note [ 3 ] below .lower Any lowercase character ( \" [ a - z ] \" ) .print Any printable character , including a space .See Note [ 4 ] below . punct Any graphical character excluding \" word \" characters .", "label": "", "metadata": {}, "score": "55.262577"}
{"text": "Corner brackets are likewise used widely , appearing in transliterated Cuneiform and ancient Egyptian texts , for example .Chapter 7 : European Alphabetic Scripts .Latin , Greek , and Cyrillic .A number of characters were added to these scripts , including characters for German , Mayan , Old Church Slavonic , Mordvin , Kurdish , Aleut , Chuvash , medievalist Latin , and Finnish dictionary use .", "label": "", "metadata": {}, "score": "55.298424"}
{"text": "Examples : .Backslash sequence character classes can not form one of the endpoints of a range .Thus , you ca n't say : . POSIX Character Classes .POSIX character classes have the form [ : class : ] , where class is name , and the [: and :] delimiters .", "label": "", "metadata": {}, "score": "55.396564"}
{"text": "Examples : .Backslash sequence character classes can not form one of the endpoints of a range .Thus , you ca n't say : . POSIX Character Classes .POSIX character classes have the form [ : class : ] , where class is name , and the [: and :] delimiters .", "label": "", "metadata": {}, "score": "55.396564"}
{"text": "Examples : .Backslash sequence character classes can not form one of the endpoints of a range .Thus , you ca n't say : . POSIX Character Classes .POSIX character classes have the form [ : class : ] , where class is name , and the [: and :] delimiters .", "label": "", "metadata": {}, "score": "55.396564"}
{"text": "Breaking hyphens establish explicit break opportunities immediately after each occurrence . 058A .ARMENIAN HYPHEN .HYPHEN .FIGURE DASH .EN DASH .Hyphens are graphic characters with width .Because , unlike spaces , they are visible , they are included in the measured part of the preceding line , except where the layout style allows hyphens to hang into the margins .", "label": "", "metadata": {}, "score": "55.612793"}
{"text": "This customization is one possible way of achieving the original purpose of LB30-preventing breaks in words like \" person(s)\"-without the undesired side effect of preventing breaks after Asian punctuation characters having line breaking class CL ( Closing Punctuation ) .", "label": "", "metadata": {}, "score": "55.682316"}
{"text": "Breaking Hyphens .Breaking hyphens establish explicit break opportunities immediately after each occurrence . 058A .ARMENIAN HYPHEN .HYPHEN .FIGURE DASH .EN DASH .Hyphens are graphic characters with width .Because , unlike spaces , they are visible , they are included in the measured part of the preceding line , except where the layout style allows hyphens to hang into the margins .", "label": "", "metadata": {}, "score": "55.759514"}
{"text": "[ ' - ? ] contains a range of characters , but most people will not know which characters that means .Furthermore , such ranges may lead to portability problems if the code has to run on a platform that uses a different character set , such as EBCDIC .", "label": "", "metadata": {}, "score": "55.796295"}
{"text": "[ ' - ? ] contains a range of characters , but most people will not know which characters that means .Furthermore , such ranges may lead to portability problems if the code has to run on a platform that uses a different character set , such as EBCDIC .", "label": "", "metadata": {}, "score": "55.796295"}
{"text": "You can put any backslash sequence character class ( with the exception of \\N and \\R ) inside a bracketed character class , and it will act just as if you had put all characters matched by the backslash sequence inside the character class .", "label": "", "metadata": {}, "score": "55.801483"}
{"text": "[ a - fz ] # Matches any letter between ' a ' and ' f ' ( inclusive ) or # the letter ' z ' .[-z ] # Matches either a hyphen ( ' - ' ) or the letter ' z ' .", "label": "", "metadata": {}, "score": "55.819443"}
{"text": "That is , adding a /i regular expression modifier does not change what they match .There are two sets that are affected .The first set is Uppercase_Letter , Lowercase_Letter , and Titlecase_Letter , all of which match Cased_Letter under /i matching .", "label": "", "metadata": {}, "score": "55.858727"}
{"text": "That is , adding a /i regular expression modifier does not change what they match .There are two sets that are affected .The first set is Uppercase_Letter , Lowercase_Letter , and Titlecase_Letter , all of which match Cased_Letter under /i matching .", "label": "", "metadata": {}, "score": "55.858727"}
{"text": "That is , adding a /i regular expression modifier does not change what they match .There are two sets that are affected .The first set is Uppercase_Letter , Lowercase_Letter , and Titlecase_Letter , all of which match Cased_Letter under /i matching .", "label": "", "metadata": {}, "score": "55.858727"}
{"text": "Examples : . # is equivalent to a backspace .# both [ and ] .Character Ranges .It is not uncommon to want to match a range of characters .Luckily , instead of listing all characters in the range , one may use the hyphen ( - ) .", "label": "", "metadata": {}, "score": "55.89792"}
{"text": "In setting a justified line , none of these spaces normally changes in width , except for THIN SPACE when used in mathematical notation .See also the SP property .The OGHAM SPACE MARK may be rendered visibly between words but it is recommended that it be elided at the end of a line .", "label": "", "metadata": {}, "score": "55.941807"}
{"text": "Thus this follows the normal Perl precedence rules for logical operators .Use parentheses to override the default precedence and associativity .The main restriction is that everything is a metacharacter .Thus , you can not refer to single characters by doing something like this : .", "label": "", "metadata": {}, "score": "55.963062"}
{"text": "Example 6 .Some implementations may wish to tailor the line breaking algorithm to resolve grapheme clusters according to Unicode Standard Annex # 29 , \" Text Boundaries \" [ Boundaries ] , as a first stage .Generally , the line breaking algorithm does not create line break opportunities within default grapheme clusters ; therefore such a tailoring would be expected to produce results that for most practical cases are close to what are defined by the default algorithm .", "label": "", "metadata": {}, "score": "55.979744"}
{"text": "This is easy to do with characters that decompose , but for characters with overlaid diacritics , the effect of ignoring the diacritic has to be simulated instead with data tables that go beyond simple use of Unicode decomposition mappings .The lack of formal decompositions for characters with overlaid diacritics also means there are increased opportunities for spoofing with such characters .", "label": "", "metadata": {}, "score": "56.041946"}
{"text": "Visible Word Dividers .The following are examples of other forms of visible word dividers that provide break opportunities : . 05BE .HEBREW PUNCTUATION MAQAF . 0F0B .TIBETAN MARK INTERSYLLABIC TSHEG .ETHIOPIC WORDSPACE . 17D8 .KHMER SIGN BEYYAL .", "label": "", "metadata": {}, "score": "56.08509"}
{"text": "Ideographic Variation Database .In Section 12.1 , Han , on p. 418 of The Unicode Standard , Version 5.0 , replace the last sentence of the last paragraph of the subsection \" Principles of Han Unification \" as follows : .", "label": "", "metadata": {}, "score": "56.115723"}
{"text": "Examples : .Backslash sequence character classes can not form one of the endpoints of a range .Thus , you ca n't say : . POSIX Character Classes .POSIX character classes have the form [ : class : ] , where class is the name , and the [: and :] delimiters .", "label": "", "metadata": {}, "score": "56.1244"}
{"text": "The text after the Line Separator starts at the beginning of the line .The text of the new paragraph starts at the beginning of the line .This character defines a paragraph break , causing suitable formatting to be applied , for example , interparagraph spacing or first line indentation .", "label": "", "metadata": {}, "score": "56.146786"}
{"text": "The chart is followed by some test cases .These test cases consist of various strings with the break status between each pair of characters shown by blue lines for breaks and by whitespace for non - breaks .Hovering over each character ( with tool - tips enabled ) shows the character name and property value ; hovering over the break status shows the number of the rule responsible for that status .", "label": "", "metadata": {}, "score": "56.163284"}
{"text": "Users can manually insert ZWSP or word joiner around characters of class XX to allow or prevent breaks as needed .In addition , implementations can override or tailor this default behavior - for example , by assigning characters the property ID or another class .", "label": "", "metadata": {}, "score": "56.247696"}
{"text": "Example 4 .Sometimes in a Far Eastern context it is necessary to allow alphabetic characters and digit strings to break anywhere .According to reference [ Suign98 ] , this can again be done in the same way as Korean .", "label": "", "metadata": {}, "score": "56.267597"}
{"text": "However , this behavior is tailorable .In some Far Eastern documents , it may be desirable to allow breaking between pairs of ordinary characters - particularly Latin characters and symbols .Note : Use ZWSP as a manual override to provide break opportunities around alphabetic or symbol characters .", "label": "", "metadata": {}, "score": "56.326927"}
{"text": "However , this behavior is tailorable .In some Far Eastern documents , it may be desirable to allow breaking between pairs of ordinary characters - particularly Latin characters and symbols .Note : Use ZWSP as a manual override to provide break opportunities around alphabetic or symbol characters .", "label": "", "metadata": {}, "score": "56.326927"}
{"text": "The details of such an emergency mode are outside the scope of this annex , however , it is recommended that grapheme clusters be kept together .Three principal styles of context analysis determine line break opportunities .Western : spaces and hyphens are used to determine breaks .", "label": "", "metadata": {}, "score": "56.364365"}
{"text": "In other words , break before SP in the same cases as one would break before an ID .While this tailoring changes the location of the line break opportunities in the string , it is ordinarily not expected to affect the display of the text .", "label": "", "metadata": {}, "score": "56.3668"}
{"text": "In other words , break before SP in the same cases as one would break before an ID .While this tailoring changes the location of the line break opportunities in the string , it is ordinarily not expected to affect the display of the text .", "label": "", "metadata": {}, "score": "56.3668"}
{"text": "[ ' - ? ] contains a range of characters , but most people will not know which characters that will be .Furthermore , such ranges may lead to portability problems if the code has to run on a platform that uses a different character set , such as EBCDIC .", "label": "", "metadata": {}, "score": "56.39447"}
{"text": "Anyway , details aside , the exam focuses only on the Basic Latin character set .Also , for legal identifers in Java , the spec is provided here .Use the Character class APIs to get more details .Computers are working on words of bits , usually 8 , 16 , 32 or 64 today .", "label": "", "metadata": {}, "score": "56.406387"}
{"text": "Note that it is n't a good idea to specify these types of ranges anyway .Special Characters Inside a Bracketed Character Class .Most characters that are meta characters in regular expressions ( that is , characters that carry a special meaning like .", "label": "", "metadata": {}, "score": "56.417786"}
{"text": "Note that it is n't a good idea to specify these types of ranges anyway .Special Characters Inside a Bracketed Character Class .Most characters that are meta characters in regular expressions ( that is , characters that carry a special meaning like .", "label": "", "metadata": {}, "score": "56.417786"}
{"text": "Applications are free to use any of these noncharacter code points internally but should never attempt to exchange them .If a noncharacter is received in open interchange , an application is not required to interpret it in any way .It is good practice , however , to recognize it as a noncharacter and to take appropriate action , such as replacing it with U+FFFD REPLACEMENT CHARACTER , to indicate the problem in the text .", "label": "", "metadata": {}, "score": "56.47026"}
{"text": "It is the stated intention of the Unicode Consortium to review these assignments in a future version and to furnish a more detailed and complete description of Tibetan line breaking and line formatting behavior .Visible word separator characters may behave in one of three ways at line breaks .", "label": "", "metadata": {}, "score": "56.52446"}
{"text": "Changing the line breaking class assignment for some characters This is useful in cases where the line breaking properties of one class of characters are occasionally lumped together with the properties of another class to achieve a less restrictive line breaking behavior .", "label": "", "metadata": {}, "score": "56.611492"}
{"text": "Changing the line breaking class assignment for some characters This is useful in cases where the line breaking properties of one class of characters are occasionally lumped together with the properties of another class to achieve a less restrictive line breaking behavior .", "label": "", "metadata": {}, "score": "56.611492"}
{"text": "At any possible break opportunity between CM and a following character , CM behaves as if it had the type of its base character .Note that despite the summary title of this rule it is not limited to standard combining character sequences .", "label": "", "metadata": {}, "score": "56.62419"}
{"text": "Overview .Unicode 5.0.0 is a major version of the Unicode Standard and supersedes all previous versions .Unicode 5.0 covers the full repertoire of ISO / IEC 10646:2003 , including Amendments 1 and 2 , which add characters required for some languages of India , for mathematicians , for minority languages , and for academic use .", "label": "", "metadata": {}, "score": "56.66234"}
{"text": "The Unicode Character Encoding Stability Policy has been updated .This update strengthens normalization stability , adds stability policy for case pairs , and extends constraints on property values .For the current statement of these policies , see Unicode Character Encoding Stability Policy .", "label": "", "metadata": {}, "score": "56.79441"}
{"text": "A hyphenation point is a raised dot , which is mainly used in dictionaries and similar works to visibly indicate syllabification of words .Syllable breaks frequently also are potential line break opportunities in the middle of words .When an actual line break falls inside a word containing hyphenation point characters , the hyphenation point is usually rendered as a regular hyphen at the end of the line .", "label": "", "metadata": {}, "score": "56.797733"}
{"text": "A hyphenation point is a raised dot , which is mainly used in dictionaries and similar works to visibly indicate syllabification of words .Syllable breaks frequently also are potential line break opportunities in the middle of words .When an actual line break falls inside a word containing hyphenation point characters , the hyphenation point is usually rendered as a regular hyphen at the end of the line .", "label": "", "metadata": {}, "score": "56.797733"}
{"text": "dispara- te .and the latter as .dispara- -te .A recommended practice is to type instead of to achieve promotion of the hyphen to the next line .This practice is reportedly already common and supported by major text layout applications .", "label": "", "metadata": {}, "score": "56.814156"}
{"text": "dispara- te .and the latter as .dispara- -te .A recommended practice is to type instead of to achieve promotion of the hyphen to the next line .This practice is reportedly already common and supported by major text layout applications .", "label": "", "metadata": {}, "score": "56.814156"}
{"text": "Additional Text .When externally referenced , a named Unicode algorithm may be prefixed with the qualifier \" Unicode \" , so as to make the connection of the algorithm to the Unicode Standard and other Unicode specifications clear .Thus , for example , the Bidirectional Algorithm is generally referred to by the full name , \" Unicode Bidirectional Algorithm \" .", "label": "", "metadata": {}, "score": "56.822083"}
{"text": "Therefore , . 'Note that it is n't a good idea to specify these types of ranges anyway .When one of these is included in the class , the entire sequence is matched .For example , .Like the other instance where a bracketed class can match multiple characters , and for similar reasons , the class must not be inverted , and the named sequence may not appear in a range , even one where it is both endpoints .", "label": "", "metadata": {}, "score": "56.92934"}
{"text": "This includes viramas .Control and Formatting Characters .Most control and formatting characters are ignored in line breaking and do not contribute to the line width .By giving them class CM , the line breaking behavior of the last preceding character that is not of class CM affects the line breaking behavior .", "label": "", "metadata": {}, "score": "56.94743"}
{"text": "This includes viramas .Control and Formatting Characters .Most control and formatting characters are ignored in line breaking and do not contribute to the line width .By giving them class CM , the line breaking behavior of the last preceding character that is not of class CM affects the line breaking behavior .", "label": "", "metadata": {}, "score": "56.94743"}
{"text": "Unless compatibility with particular legacy behavior is important , it may be sufficient to map all such characters to AL .This achieves a canonically equivalent resolution of line breaking classes , and is compatible with emerging modern practice that treats these characters increasingly like regular alphabetic characters .", "label": "", "metadata": {}, "score": "57.074883"}
{"text": "Unless compatibility with particular legacy behavior is important , it may be sufficient to map all such characters to AL .This achieves a canonically equivalent resolution of line breaking classes , and is compatible with emerging modern practice that treats these characters increasingly like regular alphabetic characters .", "label": "", "metadata": {}, "score": "57.074883"}
{"text": "Replacement Text .Clarifications of Default Case Conversion .On p. 125 in Section 3.13 , Default Case Algorithms of The Unicode Standard , Version 5.0 , replace the first paragraph under \" Default Case Conversion \" with the following text and add a new paragraph following rules R1-R4 .", "label": "", "metadata": {}, "score": "57.082386"}
{"text": "If the browser supports tool - tips , then hovering the mouse over the code point number will show the character name , General_Category and Script property values .Hovering over the break status will display the number of the rule responsible for that status .", "label": "", "metadata": {}, "score": "57.12715"}
{"text": "As part of the same revision , the set of ambiguous characters has been extended to completely encompass the enclosed alphanumeric characters used for numbering of bullets .As updated , the AI line breaking class includes all characters with East Asian Width A that are outside the range U+0000 .", "label": "", "metadata": {}, "score": "57.12919"}
{"text": "MODIFIER LETTER CROSS ACCENT .A cross accent also appears in some dictionaries to mark the stress of the following syllable , and should be handled in the same way as the other stress marking characters in this section .The accent should not be separated from the syllable it marks by a break . 02C8 .", "label": "", "metadata": {}, "score": "57.19947"}
{"text": "INVISIBLE PLUS .110BD .KAITHI NUMBER SIGN .These format characters occur in the middle or at the beginning of words or alphanumeric or symbol sequences .However , when alphabetic characters are tailored to allow breaks , these characters should not allow breaks after .", "label": "", "metadata": {}, "score": "57.2139"}
{"text": "Example 4 .In a Far Eastern context it is sometimes necessary to allow alphabetic characters and digit strings to break anywhere .According to reference [ Suign98 ] , this can again be done in the same way as Korean .", "label": "", "metadata": {}, "score": "57.26252"}
{"text": "While outside the character class , \\b is an assertion indicating a point that does not have either two word characters or two non - word characters on either side , inside a bracketed character class , \\b matches a backspace character .", "label": "", "metadata": {}, "score": "57.275307"}
{"text": "While outside the character class , \\b is an assertion indicating a point that does not have either two word characters or two non - word characters on either side , inside a bracketed character class , \\b matches a backspace character .", "label": "", "metadata": {}, "score": "57.275307"}
{"text": "While outside the character class , \\b is an assertion indicating a point that does not have either two word characters or two non - word characters on either side , inside a bracketed character class , \\b matches a backspace character .", "label": "", "metadata": {}, "score": "57.275307"}
{"text": "Only the latter corresponds to the line breaking behavior expected by users for this symbol .To avoid surprising behavior , always use a base character that is a symbol or letter ( Line Break AL ) when using enclosing combining marks ( General_Category Me ) .", "label": "", "metadata": {}, "score": "57.329613"}
{"text": "Only the latter corresponds to the line breaking behavior expected by users for this symbol .To avoid surprising behavior , always use a base character that is a symbol or letter ( Line Break AL ) when using enclosing combining marks ( General_Category Me ) .", "label": "", "metadata": {}, "score": "57.329613"}
{"text": "It constitutes a word - internal space and is typically displayed with half the width of a NNBSP .034F .COMBINING GRAPHEME JOINER .This character has no visible glyph and its presence indicates that adjoining characters are to be treated as a graphemic unit , therefore preventing line breaks between them .", "label": "", "metadata": {}, "score": "57.34166"}
{"text": "When compression or expansion is allowed , a locally optimal line break seeks to balance the relative merits of the resulting amounts of compression and expansion for different line break candidates .All other space characters normally have fixed width .When expanding or compressing intercharacter space , the presence of U+200B ZERO WIDTH SPACE or U+2060 WORD JOINER is always ignored .", "label": "", "metadata": {}, "score": "57.379795"}
{"text": "When compression or expansion is allowed , a locally optimal line break seeks to balance the relative merits of the resulting amounts of compression and expansion for different line break candidates .All other space characters normally have fixed width .When expanding or compressing intercharacter space , the presence of U+200B ZERO WIDTH SPACE or U+2060 WORD JOINER is always ignored .", "label": "", "metadata": {}, "score": "57.379795"}
{"text": "That is , they match a single character each , provided that the character belongs to the specific set of characters defined by the sequence .Here 's a list of the backslash sequences that are character classes .They are discussed in more detail below .", "label": "", "metadata": {}, "score": "57.386894"}
{"text": "That is , they match a single character each , provided that the character belongs to the specific set of characters defined by the sequence .Here 's a list of the backslash sequences that are character classes .They are discussed in more detail below .", "label": "", "metadata": {}, "score": "57.386894"}
{"text": "That is , they match a single character each , provided that the character belongs to the specific set of characters defined by the sequence .Here 's a list of the backslash sequences that are character classes .They are discussed in more detail below .", "label": "", "metadata": {}, "score": "57.386894"}
{"text": "That is , they match a single character each , provided that the character belongs to the specific set of characters defined by the sequence .Here 's a list of the backslash sequences that are character classes .They are discussed in more detail below .", "label": "", "metadata": {}, "score": "57.386894"}
{"text": "The Unicode Technical Committee is aware of the existence of a repha form of ra , which looks like a dot .The representation of that form is currently under investigation .Other New Malayalam Characters .The four new characters , avagraha , vocalic rr sign , vocalic l sign , and vocalic ll sign , are only used to write Sanskrit words in the Malayalam script .", "label": "", "metadata": {}, "score": "57.405792"}
{"text": "When a pair must be tested both with and without intervening spaces , multiple rules are given .Hovering over a line breaking class name gives a representative member of the class and additional information .Clicking on any line break class name anywhere in the document jumps to the definition .", "label": "", "metadata": {}, "score": "57.420013"}
{"text": "Any character that is n't matched by \\s will be matched by \\S .\\h will match any character that is considered horizontal whitespace ; this includes the space and the tab characters and a number other characters , all of which are listed in the table below .", "label": "", "metadata": {}, "score": "57.422935"}
{"text": "Thus this construct tells Perl that you do n't want /d rules for the entire regular expression containing it .The /x processing within this class is an extended form .Besides the characters that are considered white space in normal /x processing , there are 5 others , recommended by the Unicode standard : .", "label": "", "metadata": {}, "score": "57.438095"}
{"text": "All terms not defined here shall be as defined in the Unicode Standard [ Unicode5.0 ] .The notation defined in this annex differs somewhat from the notation defined elsewhere in the Unicode Standard .All other notation used here without an explicit definition shall be as defined elsewhere in the Unicode Standard .", "label": "", "metadata": {}, "score": "57.572834"}
{"text": "This code - point can be recorded in many ways .The first 128 code - points are the same values used in the ASCII encoding .Did you remember , Unicode is not an encoding ?Ok , in fact , Unicode also define many different encodings to store code - point .", "label": "", "metadata": {}, "score": "57.586254"}
{"text": "The table below shows the relation between POSIX character classes and these counterparts .One counterpart , in the column labelled \" ASCII - range Unicode \" in the table , matches only characters in the ASCII character set .The other counterpart , in the column labelled \" Full - range Unicode \" , matches any appropriate characters in the full Unicode character set .", "label": "", "metadata": {}, "score": "57.60418"}
{"text": "It 's a variable - byte length encoding .ASCII character are the same as in an ASCII encoded text ; and other characters are encoded using 2 , 3 or 4 characters .You should use this for all your SWORD files now .", "label": "", "metadata": {}, "score": "57.612198"}
{"text": "Negation of POSIX character classes .A Perl extension to the POSIX character class is the ability to negate it .This is done by prefixing the class name with a caret ( ^ ) .Some examples : . . ] class . ] , but does not ( yet ? ) support them .", "label": "", "metadata": {}, "score": "57.630844"}
{"text": "Negation of POSIX character classes .A Perl extension to the POSIX character class is the ability to negate it .This is done by prefixing the class name with a caret ( ^ ) .Some examples : . . ] class . ] , but does not ( yet ? ) support them .", "label": "", "metadata": {}, "score": "57.630844"}
{"text": "Negation of POSIX character classes .A Perl extension to the POSIX character class is the ability to negate it .This is done by prefixing the class name with a caret ( ^ ) .Some examples : . . ] class . ] , but does not ( yet ? ) support them .", "label": "", "metadata": {}, "score": "57.630844"}
{"text": "Other_Uppercase adds the circled uppercase letter symbols , and the compatibility uppercase Roman numerals .The third set of definitions is fundamentally different in kind , and are not character properties at all .The functions isLowercase and isUppercase are string functions returning a binary True / False value .", "label": "", "metadata": {}, "score": "57.654007"}
{"text": "You can not write a text with characters from different encoding ; and when sending a text , you always have to agree on a common encoding .Here is Unicode .But first , learn this : Unicode is not an encoding .", "label": "", "metadata": {}, "score": "57.657383"}
{"text": "Visible Word Dividers .The following are other forms of visible word dividers that provide break opportunities : . 05BE .HEBREW PUNCTUATION MAQAF . 0F0B .TIBETAN MARK INTERSYLLABIC TSHEG .ETHIOPIC WORDSPACE . 17D8 .KHMER SIGN BEYYAL .17DA .", "label": "", "metadata": {}, "score": "57.70187"}
{"text": "Each requires special handling by Perl to make things work : .When the class is to match caselessly under /i matching rules , and a character that is explicitly mentioned inside the class matches a multiple - character sequence caselessly under Unicode rules , the class will also match that sequence .", "label": "", "metadata": {}, "score": "57.715027"}
{"text": "It is described in Section 7 , Pair Table - Based Implementation .The line breaking algorithm presented in this section can be expressed in a series of rules that take line breaking classes defined in Section 5.1 , Description of Line Breaking Properties , as input .", "label": "", "metadata": {}, "score": "57.744408"}
{"text": "The set of characters they match is also not influenced by locale nor EBCDIC code page .One might think that \\s is equivalent to [ \\h\\v ] .This is not true .The vertical tab ( \" \\x0b \" ) is not matched by \\s , it is however considered vertical whitespace .", "label": "", "metadata": {}, "score": "57.896"}
{"text": "The text after the LINE SEPARATOR starts at the beginning of the line .This is similar to HTML .The text of the new paragraph starts at the beginning of the line .This character defines a paragraph break , causing suitable formatting to be applied , for example , interparagraph spacing or first line indentation .", "label": "", "metadata": {}, "score": "57.914337"}
{"text": "The guidelines for how to use regex - style rules was revamped completely .A number of edge cases are also now handled properly , and information was added on the relation to identifiers , use of normalization , tailoring , application to spelling checkers , and how to use the supplied test data .", "label": "", "metadata": {}, "score": "57.92214"}
{"text": "-z ] # Matches either a hyphen ( ' - ' ) or the letter ' z ' .[ a - f - m ] # Matches any letter between ' a ' and ' f ' ( inclusive ) , the # hyphen ( ' - ' ) , or the letter ' m ' .", "label": "", "metadata": {}, "score": "57.95502"}
{"text": "-z ] # Matches either a hyphen ( ' - ' ) or the letter ' z ' .[ a - f - m ] # Matches any letter between ' a ' and ' f ' ( inclusive ) , the # hyphen ( ' - ' ) , or the letter ' m ' .", "label": "", "metadata": {}, "score": "57.95502"}
{"text": "-z ] # Matches either a hyphen ( ' - ' ) or the letter ' z ' .[ a - f - m ] # Matches any letter between ' a ' and ' f ' ( inclusive ) , the # hyphen ( ' - ' ) , or the letter ' m ' .", "label": "", "metadata": {}, "score": "57.95502"}
{"text": "Unicode properties are defined ( surprise ! ) only on Unicode code points .Starting in v5.20 , when matching against \\p and \\P , Perl treats non - Unicode code points ( those above the legal Unicode maximum of 0x10FFFF ) as if they were typical unassigned Unicode code points .", "label": "", "metadata": {}, "score": "57.97598"}
{"text": "Examples .It is worth emphasizing that \\d , \\w , etc , match single characters , not complete numbers or words .To match a number ( that consists of digits ) , use \\d+ ; to match a word , use \\w+ .", "label": "", "metadata": {}, "score": "58.006817"}
{"text": "Examples .It is worth emphasizing that \\d , \\w , etc , match single characters , not complete numbers or words .To match a number ( that consists of digits ) , use \\d+ ; to match a word , use \\w+ .", "label": "", "metadata": {}, "score": "58.006817"}
{"text": "Hovering over a line breaking class name gives a representative member of the class and additional information .Clicking on any line break class name anywhere in the document jumps to the definition .The following two sections provide sample code [ Code14 ] that demonstrates how the pair table is used .", "label": "", "metadata": {}, "score": "58.049927"}
{"text": "In languages , such as German , where intercharacter space is commonly used to mark e m p h a s i s ( like this ) , allowing variable intercharacter spacing would have the unintended effect of adding random emphasis , and is therefore best avoided .", "label": "", "metadata": {}, "score": "58.10609"}
{"text": "In languages , such as German , where intercharacter space is commonly used to mark e m p h a s i s ( like this ) , allowing variable intercharacter spacing would have the unintended effect of adding random emphasis , and is therefore best avoided .", "label": "", "metadata": {}, "score": "58.10609"}
{"text": "( The source string is the string the regular expression is matched against . )There are three types of character classes in Perl regular expressions : the dot , backslash sequences , and the form enclosed in square brackets .Keep in mind , though , that often the term \" character class \" is used to mean just the bracketed form .", "label": "", "metadata": {}, "score": "58.200005"}
{"text": "( The source string is the string the regular expression is matched against . )There are three types of character classes in Perl regular expressions : the dot , backslash sequences , and the form enclosed in square brackets .Keep in mind , though , that often the term \" character class \" is used to mean just the bracketed form .", "label": "", "metadata": {}, "score": "58.200005"}
{"text": "( The source string is the string the regular expression is matched against . )There are three types of character classes in Perl regular expressions : the dot , backslash sequences , and the form enclosed in square brackets .Keep in mind , though , that often the term \" character class \" is used to mean just the bracketed form .", "label": "", "metadata": {}, "score": "58.200005"}
{"text": "( The source string is the string the regular expression is matched against . )There are three types of character classes in Perl regular expressions : the dot , backslash sequences , and the form enclosed in square brackets .Keep in mind , though , that often the term \" character class \" is used to mean just the bracketed form .", "label": "", "metadata": {}, "score": "58.200005"}
{"text": "This is the preferred space to use in numbers .It has the same width as a digit and keeps the number together for the purpose of line breaking .NON - BREAKING HYPHEN ( NBHY ) .This is the preferred character to use where words need to be hyphenated but may not be broken at the hyphen .", "label": "", "metadata": {}, "score": "58.220947"}
{"text": "Note that this class also includes characters other than Han ideographs .F900 .FA FF .CJK Compatibility Ideographs . A000 .A48F .Yi Syllables .A490 .A4CF .Yi Radicals . FE62 . FE66 .SMALL PLUS SIGN .", "label": "", "metadata": {}, "score": "58.227173"}
{"text": "What defines an optimal choice for a given line break is outside the scope of this annex , as are methods for its selection .Finally , text layout systems may support an emergency mode that handles the case of an unusual line that contains no otherwise permitted line break opportunities .", "label": "", "metadata": {}, "score": "58.25747"}
{"text": "The rules in Section 6 , Line Breaking Algorithm , can be expressed as minimal pair tables if the extended context used as described below .Most of the rules in Section 6 , Line Breaking Algorithm , involve only pairs of characters , or they apply to a single line break class preceded or followed by any character .", "label": "", "metadata": {}, "score": "58.263397"}
{"text": "The rules in Section 6 , Line Breaking Algorithm , can be expressed as minimal pair tables if the extended context used as described below .Most of the rules in Section 6 , Line Breaking Algorithm , involve only pairs of characters , or they apply to a single line break class preceded or followed by any character .", "label": "", "metadata": {}, "score": "58.263397"}
{"text": "The sequence as a whole is ill - formed if and only if it contains at least one ill - formed subsequence .D86Well - formed UTF-8 code unit sequence : A well - formed Unicode code unit sequence of UTF-8 code units .", "label": "", "metadata": {}, "score": "58.27737"}
{"text": "The POSIX class matches the same as its Full - range counterpart .For code points below 256 ... .if locale rules are in effect ... .The POSIX class matches according to the locale , except : . word . also includes the platform 's native underscore character , no matter what the locale is . ascii .", "label": "", "metadata": {}, "score": "58.292328"}
{"text": "The stability guarantees are described in more detail , with guidelines provided for guaranteeing process stability , and a new appendix listing precisely those characters sequences that require special handling .Additional figures clarify the effects of normalization , and the types of characters affected .", "label": "", "metadata": {}, "score": "58.295296"}
{"text": "Each intersection is labeled with the resulting line break opportunity .The Japanese standard JIS X4051 - 1995 [ JIS ] provides an example of a similar table - based definition .However , it uses line breaking classes whose membership is not solely determined by the line breaking property ( as in this annex ) , but in some cases by heuristic analysis or markup of the text .", "label": "", "metadata": {}, "score": "58.308598"}
{"text": "Note : The detailed rules for formatting Tibetan texts are complex , and the original assignment of line break classes was found to be insufficient .In [ Unicode4.1 ] , the assignment of line break classes for Tibetan was revised significantly in an attempt to better model Tibetan line breaking behavior .", "label": "", "metadata": {}, "score": "58.32235"}
{"text": "z do not generalize easily across the entire repertoire of Unicode characters , and because case for modifier letters , in particular , can result in unexpected behavior .Canonical Equivalence Issues for Greek Punctuation .Replace the last two sentences of the paragraph on \" Other Basic Latin Punctuation Marks , \" on p. 214 of The Unicode Standard , Version 5.0 , with the following expanded text as new paragraphs : .", "label": "", "metadata": {}, "score": "58.387337"}
{"text": "The third style is used for scripts such as Thai , which do not use spaces , but which restrict word breaks to syllable boundaries , the determination of which requires knowledge of the language comparable to that required by a hyphenation algorithm .", "label": "", "metadata": {}, "score": "58.427536"}
{"text": "The body cells in the chart show the break status : whether a break occurs between the row property value and the column property value .If the browser supports tool - tips , then hovering the mouse over the code point number will show the character name , General_Category and Script property values .", "label": "", "metadata": {}, "score": "58.467487"}
{"text": "The default case conversion operations may be tailored for specific requirements .A common variant , for example , is to make use of simple case conversion , rather than full case conversion .Language- or locale - specific tailorings of these rules may also be used .", "label": "", "metadata": {}, "score": "58.479523"}
{"text": "UAX # 31 , \" Identifier and Pattern Syntax , \" introduced profiles , and added notes on profiles of identifiers for natural languages and the use of spaces in identifiers .Errata .Errata incorporated into Unicode 5.0 are listed by date in a separate table .", "label": "", "metadata": {}, "score": "58.488464"}
{"text": "This selection not only takes into account the width of the line compared to the width of the text , but may also apply an additional prioritization of line breaks based on aesthetic and other criteria .What defines an optimal choice for a given line break is outside the scope of this annex , as are methods for its selection .", "label": "", "metadata": {}, "score": "58.5102"}
{"text": "Only the intersections of ID / ID , AL / ID , and ID / AL are affected .For alphabetic style line breaking , breaks for these cases require space ; for ideographic style line breaking , these cases do not require spaces .", "label": "", "metadata": {}, "score": "58.544216"}
{"text": "Only the intersections of ID / ID , AL / ID , and ID / AL are affected .For alphabetic style line breaking , breaks for these cases require space ; for ideographic style line breaking , these cases do not require spaces .", "label": "", "metadata": {}, "score": "58.544216"}
{"text": "For example , simple implementations consider a single line at a time , trying to find a locally optimal line break .A basic , yet widely used approach is to allow no compression or expansion of the intercharacter and interword spaces and consider the longest line that fits .", "label": "", "metadata": {}, "score": "58.54464"}
{"text": "For example , simple implementations consider a single line at a time , trying to find a locally optimal line break .A basic , yet widely used approach is to allow no compression or expansion of the intercharacter and interword spaces and consider the longest line that fits .", "label": "", "metadata": {}, "score": "58.54464"}
{"text": "The entries in the example pair table correspond to the following enumeration .For diagnostic purposes , the sample code returns these values to indicate not only the location but also the type of rule that triggered a given break opportunity .", "label": "", "metadata": {}, "score": "58.79259"}
{"text": "In [ Unicode4.1 ] , the assignment of line break classes for Tibetan was revised significantly in an attempt to better model Tibetan line breaking behavior .No new rules or line break classes were added .The set of line break classes for Tibetan are expected to provide a good starting point , even though there is limited practical experience in their implementation .", "label": "", "metadata": {}, "score": "58.800743"}
{"text": "Alternative Formats : For a separate file with this table in an HTML version and a larger size PNG version , please click here .Tamil Vowels , Consonants , and Syllables .The most important new characters for Malayalam are the six new chillu characters , U+0D7A. U+0D7F , encoding dead consonants ( those without an implicit vowel ) .", "label": "", "metadata": {}, "score": "58.801304"}
{"text": "Rule LB9 requires extended context for handling combining marks .This extended context must also be built into the code that interprets the pair table .See Section 7.5 , Combining Marks .Rule LB21a also requires extended context to handle Hebrew letters followed by hyphens .", "label": "", "metadata": {}, "score": "58.81109"}
{"text": "However , the General_Category property is , by design , a partition of Unicode codespace .This means that each Unicode character can only have one General_Category value , and that situation results in some odd edge cases for modifier letters , letterlike symbols and letterlike numbers .", "label": "", "metadata": {}, "score": "58.820847"}
{"text": "For example , BENGALI DIGIT FOUR ( U+09A ) looks very much like an ASCII DIGIT EIGHT ( U+0038 ) .It may be useful for security purposes for an application to require that all digits in a row be from the same script .", "label": "", "metadata": {}, "score": "58.86168"}
{"text": "Note : To determine a break it is generally not sufficient to just test the two adjacent characters .The chart is followed by some test cases .These test cases consist of various strings with the break status between each pair of characters shown by blue lines for breaks and by whitespace for non - breaks .", "label": "", "metadata": {}, "score": "58.87941"}
{"text": "HANGUL COMPATIBILITY JAMO .Symbols .Certain pictographic symbols of General Category So are also included in this line break class .When a Hebrew letter is followed by a hyphen , there is no break on either side of the hyphen .", "label": "", "metadata": {}, "score": "58.884056"}
{"text": "[ 2 ] .Control characters do n't produce output as such , but instead usually control the terminal somehow : for example newline and backspace are control characters .In the ASCII range , characters whose ordinals are between 0 and 31 inclusive , plus 127 ( DEL ) are control characters .", "label": "", "metadata": {}, "score": "58.8946"}
{"text": "Revision 11 , being a proposed update , only changes between revisions 10 and 12 are noted here . ] Revision 10 : .Changed header for publication of Unicode 3.1 .Fixed a few additional typos .Fixed several typos , reformatted and sorted some lists by code points .", "label": "", "metadata": {}, "score": "58.930725"}
{"text": "on platforms that do n't have the POSIX blank extension , this matches just the platform 's native tab and space characters .It is proposed to change this behavior in a future release of Perl so that whether or not Unicode rules are in effect would not change the behavior : Outside of locale , the POSIX classes would behave like their ASCII - range counterparts .", "label": "", "metadata": {}, "score": "58.935608"}
{"text": "LB28 Do not break between alphabetics ( \" at \" ) .LB29 Do not break between numeric punctuation and alphabetics ( \" e.g. \" ) .IS \u00d7 AL .LB30 Withdrawn .In Unicode 5.0 , rule LB30 was intended to prevent breaks in cases where a part of a word appears between delimiters - for example , in \" person(s ) \" .", "label": "", "metadata": {}, "score": "58.952812"}
{"text": "Updated the pair table and sample code to match the changes in the rules .Updated the regular expression for numbers .Moved all suggested tailorings from the rules section to the examples in Section 8.2 .Revision 16 being a proposed update , only changes between revisions 17 and 15 are noted here .", "label": "", "metadata": {}, "score": "59.086533"}
{"text": "Terminating punctuation includes : .Dictionary Use . 00B4 .In some dictionaries , stressed syllables are indicated with a spacing acute accent instead of the hyphenation point .In this case the accent moves to the next line , and the preceding line ends with a hyphen .", "label": "", "metadata": {}, "score": "59.14652"}
{"text": "When using alternative rules or algorithms , implementations must ensure that the mandatory breaks , break opportunities and non - break positions determined by the algorithm and rules of Section 6.1 , Non - tailorable Line Breaking Rules , are preserved .", "label": "", "metadata": {}, "score": "59.16348"}
{"text": "See also JL , JT , JV , and H3 .Some additional context analysis is required to distinguish usage of this character as a hyphen from its usage as a minus sign ( or indicator of numerical range ) .If used as hyphen , it acts like hyphen , which has line break class BA .", "label": "", "metadata": {}, "score": "59.164112"}
{"text": "The effective line breaking class for the syllable block matches the line breaking class for Hangul syllables , which is ID by default .This is achieved by the following rule : .When Korean uses SPACE for line breaking , the classes in rule LB26 , as well as characters of class ID , are often tailored to AL ; see Section 8 , Customization .", "label": "", "metadata": {}, "score": "59.176693"}
{"text": "In all other cases , use of a variation selector character does not change the visual appearance of the preceding base character from what it would have had in the absence of the variation selector .1624 new character assignments were made to the Unicode Standard , Version 5.1.0 ( over and above what was in Unicode 5.0.0 ) .", "label": "", "metadata": {}, "score": "59.208126"}
{"text": "The key thing to remember is that Unicode is evolving ; do n't fall into the trap of thinking of character sets as finished ( Latin is a terrible example ; ignore it ) .Characters are created all the time .", "label": "", "metadata": {}, "score": "59.217453"}
{"text": "HL for Hebrew letters AI or ID , based on the East Asian Width property of the character ID for certain pictographic symbols CJ for small hiragana and katakana SA for complex context scripts JL , JV , JT , H2 or H3 for Hangul characters .", "label": "", "metadata": {}, "score": "59.22178"}
{"text": "Improved guidance on use of Myanmar and Malayalam scripts .Definitions of extended base and extended combining character sequences .Unicode Standard Annexes .In UAX # 14 : improvements for conformance , changes to linebreaking for Polish and Portuguese hyphenation , and new test files .", "label": "", "metadata": {}, "score": "59.242496"}
{"text": "But when ragged margins are used , the Western style ( relying on spaces ) is commonly used instead , even for ideographs .The third style is used for scripts such as Thai , which do not use spaces , but which restrict word breaks to syllable boundaries , whose determination requires knowledge of the language comparable to that required by a hyphenation algorithm .", "label": "", "metadata": {}, "score": "59.26815"}
{"text": "Following those rules could lead to highly confusing situations : .This should match any sequences of characters that are n't \\xDF nor what \\xDF matches under /i . \" s \" is n't \\xDF , but Unicode says that \" ss \" is what \\xDF matches under /i .", "label": "", "metadata": {}, "score": "59.27964"}
{"text": "Following those rules could lead to highly confusing situations : .This should match any sequences of characters that are n't \\xDF nor what \\xDF matches under /i . \" s \" is n't \\xDF , but Unicode says that \" ss \" is what \\xDF matches under /i .", "label": "", "metadata": {}, "score": "59.27964"}
{"text": "Following those rules could lead to highly confusing situations : .This should match any sequences of characters that are n't \\xDF nor what \\xDF matches under /i . \" s \" is n't \\xDF , but Unicode says that \" ss \" is what \\xDF matches under /i .", "label": "", "metadata": {}, "score": "59.27964"}
{"text": "Example 6 .Tailor to prevent line breaks from falling within default grapheme clusters , as defined by by Unicode Standard Annex # 29 , \" Unicode Text Segmentation \" [ UAX29 ] .The tailoring can be accomplished by first segmenting the text into grapheme clusters according to the rules defined in UAX # 29 , and then finding line breaks according to the default line break rules , giving each grapheme cluster the line breaking class of its first code point .", "label": "", "metadata": {}, "score": "59.34468"}
{"text": "For example , the rules given here are insufficient for mathematical equations , whether inline or in display format .The remainder of this section gives an overview of common types of tailorings and examples of how to customize the pair table implementation of the line breaking algorithm for these tailorings .", "label": "", "metadata": {}, "score": "59.366104"}
{"text": "Beyond these three straightforward customization steps , it is always possible to augment the algorithm itself - for example , by providing specialized rules to recognize and break common constructs , such as URLs , numeric expressions , and so on .", "label": "", "metadata": {}, "score": "59.407776"}
{"text": "Beyond these three straightforward customization steps , it is always possible to augment the algorithm itself - for example , by providing specialized rules to recognize and break common constructs , such as URLs , numeric expressions , and so on .", "label": "", "metadata": {}, "score": "59.407776"}
{"text": "In Burmese texts , the coded character appropriate to the context should be used .Ordering of Syllable Components .Dependent vowels and other signs are encoded after the consonant to which they apply , except for kinzi , which precedes the consonant .", "label": "", "metadata": {}, "score": "59.422264"}
{"text": "The Myanmar script traditionally distinguishes a set of subscript \" medial \" consonants : forms of ya , ra , wa , and ha that are considered to be modifiers of the syllable 's vowel .Graphically , these medial consonants are sometimes written as subscripts , but sometimes , as in the case of ra , they surround the base consonant instead .", "label": "", "metadata": {}, "score": "59.472862"}
{"text": "Common mistakes .If you use a wrong encoding , some characters will not be displayed correctly as the computer decoded it using incorrect rules .The two most common encoding are ISO-8859 - 1 and UTF-8 .You will see two or three characters for non - ASCII ones , usually \u00c3 and \u00a9 .", "label": "", "metadata": {}, "score": "59.564865"}
{"text": "There is no character code for the third kind of hyphen .If a distinction is desired , the fact that a hyphen is dictionary - inserted and not user - supplied can only be represented out of band or by using another control code instead of SHY .", "label": "", "metadata": {}, "score": "59.621185"}
{"text": "There is no character code for the third kind of hyphen .If a distinction is desired , the fact that a hyphen is dictionary - inserted and not user - supplied can only be represented out of band or by using another control code instead of SHY .", "label": "", "metadata": {}, "score": "59.621185"}
{"text": "The definition of directional run was changed to be the same as level run , and the use of soft - hyphen with bidi text was clarified .As a result of the restatement of conformance , the Line_Break property became normative .", "label": "", "metadata": {}, "score": "59.694984"}
{"text": "Simply inserting a hyphen glyph .Inserting a hyphen glyph and changing spelling in the divided word parts .Not showing any visible change and simply breaking at that point .Inserting a hyphen glyph at the beginning of the new line .", "label": "", "metadata": {}, "score": "59.718964"}
{"text": "Simply inserting a hyphen glyph .Inserting a hyphen glyph and changing spelling in the divided word parts .Not showing any visible change and simply breaking at that point .Inserting a hyphen glyph at the beginning of the new line .", "label": "", "metadata": {}, "score": "59.718964"}
{"text": "Replacement Text .D60 Grapheme cluster : The text between grapheme cluster boundaries as specified by Unicode Standard Annex # 29 , \" Unicode Text Segmentation .\" The grapheme cluster represents a horizontally segmentable unit of text , consisting of some grapheme base ( which may consist of a Korean syllable ) together with any number of nonspacing marks applied to it .", "label": "", "metadata": {}, "score": "59.72719"}
{"text": "This may require additional tailorings beyond those considered in this section .For example , the rules given here are insufficient for mathematical equations , whether inline or in display format .The remainder of this section gives an overview of common types of tailorings and examples of how to customize the pair table implementation of the line breaking algorithm for these tailorings .", "label": "", "metadata": {}, "score": "59.738922"}
{"text": "The recommended uppercase form for most casing operations on U+00DF LATIN SMALL LETTER SHARP S continues to be \" SS \" , as a capital sharp s is only used in restricted circumstances .See Tailored Casing Operations .Chapter 8 : Middle Eastern Scripts .", "label": "", "metadata": {}, "score": "59.745224"}
{"text": "That page also provides the recommended reference format for Unicode Standard Annexes .The text of The Unicode Standard , Version 5.0 , as well as the delta and archival code charts , is available online via the navigation links on this page .", "label": "", "metadata": {}, "score": "59.8506"}
{"text": "It uses the platform 's native character set , and does not consider any locale that may otherwise be in use .Details are discussed in perlrebackslash .Note that unlike \\s ( and \\d and \\w ) , \\h and \\v always match the same characters , without regard to other factors , such as the active locale or whether the source string is in UTF-8 format .", "label": "", "metadata": {}, "score": "59.868683"}
{"text": "It uses the platform 's native character set , and does not consider any locale that may otherwise be in use .Details are discussed in perlrebackslash .Note that unlike \\s ( and \\d and \\w ) , \\h and \\v always match the same characters , without regard to other factors , such as the active locale or whether the source string is in UTF-8 format .", "label": "", "metadata": {}, "score": "59.868683"}
{"text": "It uses the platform 's native character set , and does not consider any locale that may otherwise be in use .Details are discussed in perlrebackslash .Note that unlike \\s ( and \\d and \\w ) , \\h and \\v always match the same characters , without regard to other factors , such as the active locale or whether the source string is in UTF-8 format .", "label": "", "metadata": {}, "score": "59.868683"}
{"text": "Repetition of the letter , written either or , is also used for the sound /tt/. In this case , the two fundamentally behave as a digraph .The digraph can bear a vowel sign in which case the digraph as a whole acts graphically as an atom : a left vowel part goes to the left of the digraph and a right vowel part goes to the right of the digraph .", "label": "", "metadata": {}, "score": "59.996773"}
{"text": "If you want a hyphen in your set of characters to be matched and its position in the class is such that it could be considered part of a range , you must escape that hyphen with a backslash .Examples : .", "label": "", "metadata": {}, "score": "59.997383"}
{"text": "Sentence boundaries need to be determined grammatically rather than by punctuation .Traditionally there is nothing akin to a paragraph in Tibetan text .It is typical to have many pages of text without a paragraph break - that is , without an explicit line break .", "label": "", "metadata": {}, "score": "60.081985"}
{"text": "This is the natural behavior on ASCII platforms where the code points ( ordinal values ) for \" h \" through \" k \" are consecutive integers ( 0x68 through 0x6B ) .But special handling to achieve this may be needed on platforms with a non - ASCII native character set .", "label": "", "metadata": {}, "score": "60.09311"}
{"text": "For completeness in text segmentation , a grapheme cluster may also consist of segments not containing a grapheme base , such as newlines or some default ignorable code points .A grapheme cluster is most directly relevant to text rendering and processes such as cursor placement and text selection in editing .", "label": "", "metadata": {}, "score": "60.09397"}
{"text": "Tomoyuki Sadahiro provided information on use of U+30A0 .Christopher Fynn provided the background information on Tibetan line breaking .Andrew West , Kamal Mansour , Andrew Glass , Daniel Yacob , and Peter Kirk suggested improvements for Mongolian , Arabic , Kharoshthi , Ethiopic , and Hebrew punctuation characters , respectively .", "label": "", "metadata": {}, "score": "60.101486"}
{"text": "A CR indicates a mandatory break after , unless followed by a LF .See also the discussion under BK .This convention is essentially equivalent to markup that captures the result of applying the line break algorithm , not a tailoring of the CR character .", "label": "", "metadata": {}, "score": "60.10512"}
{"text": "Many currency signs can appear on both sides , or even the middle , of a numeric expression .Therefore the line breaking algorithm , by default , does not break between PR and numbers or letters on either side .The PR line break class consists of all currency symbols ( General_Category Sc ) except as listed explicitly in PO , as well as the following : . 005C .", "label": "", "metadata": {}, "score": "60.235916"}
{"text": "Some modern books , newspapers , and magazines format text more like English with a break before each section or topic - and ( often ) the title of the section on a separate line .Where this is done , authors insert an explicit line break .", "label": "", "metadata": {}, "score": "60.281418"}
{"text": "Therefore the line breaking algorithm by default does not break between PO and numbers or letters on either side .DEGREE FAHRENHEIT .FDFC .RIAL SIGN .FE6A .SMALL PERCENT SIGN .FF05 .FULLWIDTH PERCENT SIGN .FFE0 .", "label": "", "metadata": {}, "score": "60.44546"}
{"text": "Therefore the line breaking algorithm by default does not break between PO and numbers or letters on either side .DEGREE FAHRENHEIT .FDFC .RIAL SIGN .FE6A .SMALL PERCENT SIGN .FF05 .FULLWIDTH PERCENT SIGN .FFE0 .", "label": "", "metadata": {}, "score": "60.44546"}
{"text": "This will match all the digit characters that are in the Thai script .This is an experimental feature available starting in 5.18 , and is subject to change as we gain field experience with it .Any attempt to use it will raise a warning , unless disabled via .", "label": "", "metadata": {}, "score": "60.552277"}
{"text": "This will match all the digit characters that are in the Thai script .This is an experimental feature available starting in 5.18 , and is subject to change as we gain field experience with it .Any attempt to use it will raise a warning , unless disabled via .", "label": "", "metadata": {}, "score": "60.552277"}
{"text": "Same for the two ASCII - only range forms .Both the \\p counterparts always assume Unicode rules are in effect .On ASCII platforms , this means they assume that the code points from 128 to 255 are Latin-1 , and that means that using them under locale rules is unwise unless the locale is guaranteed to be Latin-1 or UTF-8 .", "label": "", "metadata": {}, "score": "60.643616"}
{"text": "Same for the two ASCII - only range forms .Both the \\p counterparts always assume Unicode rules are in effect .On ASCII platforms , this means they assume that the code points from 128 to 255 are Latin-1 , and that means that using them under locale rules is unwise unless the locale is guaranteed to be Latin-1 or UTF-8 .", "label": "", "metadata": {}, "score": "60.643616"}
{"text": "Same for the two ASCII - only range forms .Both the \\p counterparts always assume Unicode rules are in effect .On ASCII platforms , this means they assume that the code points from 128 to 255 are Latin-1 , and that means that using them under locale rules is unwise unless the locale is guaranteed to be Latin-1 or UTF-8 .", "label": "", "metadata": {}, "score": "60.643616"}
{"text": "Table 1 shows the relation between the representation in Unicode Version 5.0 and earlier and the new representation in Version 5.1 , for the chillu letters considered in isolation .The letter r a is normally read / r /. Repetition of that sound is written by two occurrences of the letter : .", "label": "", "metadata": {}, "score": "60.67739"}
{"text": "For supplementary characters , a useful default is to treat characters in the range 10000 . .1FFFDas AL and characters in the ranges 20000 . .2FFFD and 30000 . .3FFFDas ID , until the implementation can be revised to take into account the actual line breaking properties for these characters .", "label": "", "metadata": {}, "score": "60.7068"}
{"text": "For supplementary characters , a useful default is to treat characters in the range 10000 . .1FFFDas AL and characters in the ranges 20000 . .2FFFD and 30000 . .3FFFDas ID , until the implementation can be revised to take into account the actual line breaking properties for these characters .", "label": "", "metadata": {}, "score": "60.7068"}
{"text": "The line breaking algorithm presented in this section can be expressed in a series of rules that take line breaking classes defined in Section 5.2 , Description of Line Breaking Properties , as input .The title of each rule contains a mnemonic summary of the main effect of the rule .", "label": "", "metadata": {}, "score": "60.717686"}
{"text": "[ 1 ] .[ 2 ] .Control characters do n't produce output as such , but instead usually control the terminal somehow : for example , newline and backspace are control characters .On ASCII platforms , in the ASCII range , characters whose code points are between 0 and 31 inclusive , plus 127 ( DEL ) are control characters ; on EBCDIC platforms , their counterparts are control characters .", "label": "", "metadata": {}, "score": "60.798717"}
{"text": "Basically , isLowercase is True for a string if the result of applying the toLowercase mapping operation for a string is the same as the string itself .The following table illustrates the various possibilities for how these definitions interact , as applied to exemplary single characters or single character strings .", "label": "", "metadata": {}, "score": "60.8101"}
{"text": "In UAX # 29 : enhancement of the algorithms for segmentation of grapheme clusters , words , and sentences .In UAX # 31 : added filtered identifiers , allowance of joiners in specific contexts for Indic languages and the Arabic script .", "label": "", "metadata": {}, "score": "60.84376"}
{"text": "They are listed in Table 5 - 7 .Table 5 - 7 .Paired Stateful Controls ( Deprecated ) .Characters .Documentation .Deprecated Format Characters .Section 16.3 , Deprecated Format Characters .Tag Characters .Section 16.9 , Tag Characters .", "label": "", "metadata": {}, "score": "60.88021"}
{"text": "\\s matches exactly the characters shown with an \" s \" column in the table below . otherwise ... .\\s matches [ \\t\\n\\f\\r ] .Note that this list does n't include the non - breaking space .\\h matches any character considered horizontal whitespace ; this includes the platform 's space and tab characters and several others listed in the table below .", "label": "", "metadata": {}, "score": "60.8831"}
{"text": "The following set of compatibility jamo is treated as ID by default .Characters that usually occur inside a numerical expression may not be separated from the numeric characters that follow , unless a space character intervenes .For example , there is no break in \" 100.00 \" or \" 10,000 \" , nor in \" 12:59 \" . 07F8 .", "label": "", "metadata": {}, "score": "60.88589"}
{"text": "Contractions .In a few Myanmar words , the repetition of a consonant sound is written with a single occurrence of the letter for the consonant sound together with an asat sign .This asat sign occurs immediately after the double - acting consonant in the coded representation : .", "label": "", "metadata": {}, "score": "60.907238"}
{"text": "Same for the two ASCII - only range forms .Negation .A Perl extension to the POSIX character class is the ability to negate it .This is done by prefixing the class name with a caret ( ^ ) .", "label": "", "metadata": {}, "score": "60.969925"}
{"text": "However , rules LB14 - LB17 require extended context to handle spaces .Rules equivalent to the ones given in Section 6 , Line Breaking Algorithm , can be formulated without explicit use of SP by using % to express indirect breaks instead .", "label": "", "metadata": {}, "score": "61.063347"}
{"text": "However , rules LB14 - LB17 require extended context to handle spaces .Rules equivalent to the ones given in Section 6 , Line Breaking Algorithm , can be formulated without explicit use of SP by using % to express indirect breaks instead .", "label": "", "metadata": {}, "score": "61.063347"}
{"text": "The character properties for U+00B7 MIDDLE DOT are particularly problematical , in part because of identifier issues for that character .There is no guarantee that all of its properties will align exactly with U+0387 GREEK ANO TELEIA itself , because the latter were established based on the more limited function of the middle dot in Greek as a delimiting punctuation mark .", "label": "", "metadata": {}, "score": "61.073395"}
{"text": "The text of The Unicode Standard , Version 5.0 , as well as the delta and archival code charts , is available online via the navigation links on this page .The charts and the Unicode Standard Annexes may be printed , while the other files may viewed but not printed .", "label": "", "metadata": {}, "score": "61.084656"}
{"text": "See also the discussion under BK .This convention is essentially equivalent to markup that captures the result of applying the line break algorithm , not a tailoring of the CR character .Non - breaking characters prohibit breaks on either side , but that prohibition can be overridden by SP or ZW .", "label": "", "metadata": {}, "score": "61.090324"}
{"text": "Like the other character classes , exactly one character is matched .For instance , [ aeiou]+ matches one or more lowercase English vowels .Repeating a character in a character class has no effect ; it 's considered to be in the set only once .", "label": "", "metadata": {}, "score": "61.105125"}
{"text": "Like the other character classes , exactly one character is matched .For instance , [ aeiou]+ matches one or more lowercase English vowels .Repeating a character in a character class has no effect ; it 's considered to be in the set only once .", "label": "", "metadata": {}, "score": "61.105125"}
{"text": "Like the other character classes , exactly one character is matched .For instance , [ aeiou]+ matches one or more lowercase English vowels .Repeating a character in a character class has no effect ; it 's considered to be in the set only once .", "label": "", "metadata": {}, "score": "61.105125"}
{"text": "FIGURE SPACE .This is the preferred space to use in numbers .It has the same width as a digit and keeps the number together for the purpose of line breaking .NON - BREAKING HYPHEN ( NBHY ) .This is the preferred character to use where words need to be hyphenated but may not be broken at the hyphen .", "label": "", "metadata": {}, "score": "61.125347"}
{"text": "Finally , text layout systems may support an emergency mode that handles the case of an unusual line that contains no otherwise permitted line break opportunities .In such line layout emergencies , line breaks may be placed with no regard to the ordinary line breaking behavior of the characters involved .", "label": "", "metadata": {}, "score": "61.131725"}
{"text": "Many currency signs can appear on both sides , or even the middle , of a numeric expression .Therefore the line breaking algorithm , by default , does not break between PR and numbers or letters on either side .The PR line break class consists of all currency symbols ( General_Category Sc ) except those in class PO , and additional characters , including : . 005C .", "label": "", "metadata": {}, "score": "61.175392"}
{"text": "False .False .True . hH .False .False .False .Programmers concerned with manipulating Unicode strings should generally be dealing with the string functions such as isLowerCase ( and its functional cousin , toLowerCase ) , unless they are working directly with single character properties .", "label": "", "metadata": {}, "score": "61.190254"}
{"text": "Example 3 .Depending on the nature of the document , Korean either uses implicit breaking around characters ( type 2 as defined in Section 3 , Introduction ) or uses spaces ( type 1 ) .Space - based layout is common in magazines and other informal documents with ragged margins , while books , with both margins justified , use the other type , as it affords more line break opportunities and therefore leads to better justification .", "label": "", "metadata": {}, "score": "61.195953"}
{"text": "This has the effect of preventing text from running into the margins .Mandatory breaks : .A hard line break can consist of BK or a Newline Function ( NLF ) as described in Section 5.8 , Newline Guidelines , of [ Unicode ] .", "label": "", "metadata": {}, "score": "61.23845"}
{"text": "Thus , .[ [ \\xDF ] ] ) /iu .does not match the string ss .You do n't have to enclose POSIX class names inside double brackets , hence both of the following work : .[ [ : word : ] - [ : lower : ] ] ) / / ( ?", "label": "", "metadata": {}, "score": "61.37239"}
{"text": "Example 3 .Depending on the nature of the document , Korean either uses implicit breaking around characters ( type 2 as defined above in Section 3 , Introduction ) or uses spaces ( type 1 ) .Space - based layout is common in magazines and other informal documents with ragged margins , while books , with both margins justified , use the other type , as it affords more line break opportunities and therefore leads to better justification .", "label": "", "metadata": {}, "score": "61.483047"}
{"text": "Any character not matched by \\w is matched by \\W .Whitespace .\\s matches any single character considered whitespace .If the /a modifier is in effect ... .In all Perl versions , \\s matches the 5 characters [ \\t\\n\\f\\r ] ; that is , the horizontal tab , the newline , the form feed , the carriage return , and the space .", "label": "", "metadata": {}, "score": "61.49811"}
{"text": "Any character not matched by \\w is matched by \\W .Whitespace .\\s matches any single character considered whitespace .If the /a modifier is in effect ... .In all Perl versions , \\s matches the 5 characters [ \\t\\n\\f\\r ] ; that is , the horizontal tab , the newline , the form feed , the carriage return , and the space .", "label": "", "metadata": {}, "score": "61.49811"}
{"text": "One of the most successful are ISO-8859 and in particular ISO-8859 - 1 which include characters for 29 western European and African languages .Unicode .Theses encoding where 1 byte correspond to 1 character are really great for English , it 's working well for languages based on the Latin alphabet , but is really bad for other alphabets .", "label": "", "metadata": {}, "score": "61.518757"}
{"text": "Some languages , including Spanish , use EM DASH to set off a parenthetical , and the surrounding dashes should not be broken from the contained text .In this usage there is space on the side where it can be broken .", "label": "", "metadata": {}, "score": "61.53456"}
{"text": "One proposal , for example , is to forbid adjacent uses of the same character , as in ( ?[ [ aa ] ] ) .The motivation for such a change is that this usage is likely a typo , as the second \" a \" adds nothing .", "label": "", "metadata": {}, "score": "61.865604"}
{"text": "One proposal , for example , is to forbid adjacent uses of the same character , as in ( ?[ [ aa ] ] ) .The motivation for such a change is that this usage is likely a typo , as the second \" a \" adds nothing .", "label": "", "metadata": {}, "score": "61.865627"}
{"text": "Added LB class assignments for the new Unicode 3.2 characters to the data file .Only characters whose LB class differs from those of characters with related General_Category are noted explicitly in this text .Revision 11 , being a proposed update , only changes between revisions 10 and 12 are noted here . ] Revision 10 : .", "label": "", "metadata": {}, "score": "61.868763"}
{"text": "D85a Minimal well - formed code unit subsequence : A well - formed Unicode code unit sequence that maps to a single Unicode scalar value .For UTF-8 , see the specification in D92 and Table 3 - 7 .For UTF-16 , see the specification in D91 .", "label": "", "metadata": {}, "score": "61.872307"}
{"text": "Conjuncts .As in other Indic - derived scripts , conjunction of two consonant letters is indicated by the insertion of a virama U+1039 MYANMAR SIGN VIRAMA between them .It causes the second consonant to be displayed in a smaller form below the first ; the virama is not visibly rendered .", "label": "", "metadata": {}, "score": "61.94871"}
{"text": "Note : The use of this line breaking class is deprecated .It was of limited usefulness for UTF-16 implementations that did not support characters beyond the BMP .The correct implementation is to resolve a pair of surrogates into a supplementary character before line breaking .", "label": "", "metadata": {}, "score": "62.05315"}
{"text": "Note : The use of this line breaking class is deprecated .It was of limited usefulness for UTF-16 implementations that did not support characters beyond the BMP .The correct implementation is to resolve a pair of surrogates into a supplementary character before line breaking .", "label": "", "metadata": {}, "score": "62.05315"}
{"text": "In Version 5.1 , the text regarding ill - formed code unit sequences is extended , with new definitions that make it clear how to identify well - formed and ill - formed code unit subsequences in strings .The implications for this on UTF-8 conversion in particular are made much clearer .", "label": "", "metadata": {}, "score": "62.054535"}
{"text": "Alternatively , for text consisting of or predominantly containing characters with line breaking class SA , it may be useful to instead defer the determination of line breaks to a different algorithm entirely .Section 7.4 , Sample Code , sketches such approach in which the interface to the dictionary - based algorithm directly reports break opportunities .", "label": "", "metadata": {}, "score": "62.11174"}
{"text": "Alternatively , for text consisting of , or predominantly containing characters with line breaking class SA , it may be useful to instead defer the determination of line breaks to a different algorithm .Section 7.4 , Sample Code , outlines such an approach in which the interface to the dictionary - based algorithm directly reports break opportunities .", "label": "", "metadata": {}, "score": "62.11239"}
{"text": "To support these , Hangul syllables and conjoining jamos need to be tailored to use class AL .The default in this specification is class ID , which supports the case of Korean documents not using space - based line breaking .", "label": "", "metadata": {}, "score": "62.285736"}
{"text": "The other counterpart , in the column labelled \" Full - range Unicode \" , matches any appropriate characters in the full Unicode character set .An entry in the column labelled \" backslash sequence \" is a ( short ) equivalent .", "label": "", "metadata": {}, "score": "62.307873"}
{"text": "Line break after the hyphen is not allowed here ; therefore , instead of a regular hyphen , U+2011 NON - BREAKING HYPHEN should be used .There are line breaking conventions that modify the appearance of a line break when the line break opportunity is based on an explicit hyphen .", "label": "", "metadata": {}, "score": "62.319427"}
{"text": "Line break after the hyphen is not allowed here ; therefore , instead of a regular hyphen , U+2011 NON - BREAKING HYPHEN should be used .There are line breaking conventions that modify the appearance of a line break when the line break opportunity is based on an explicit hyphen .", "label": "", "metadata": {}, "score": "62.319427"}
{"text": "The conjunct form of U+1004 MYANMAR LETTER NGA is rendered as a superscript sign called kinzi .That superscript sign is not encoded as a separate mark , but instead is simply the rendering form of the nga in a conjunct context .", "label": "", "metadata": {}, "score": "62.32498"}
{"text": "Whether using either NBSP or SPACE as the base character , the visual appearance is the same , but the line breaking behavior is different .Where backward compatibility with documents created under the prior practice is desired , the following tailoring should be applied to those CM characters that have a General_Category value of Combining_Mark ( M ) : .", "label": "", "metadata": {}, "score": "62.36429"}
{"text": "UAX14-C1 .A process that determines line breaks in Unicode text , and that purports to implement the Unicode Line Breaking Algorithm , shall do so in accordance with the specifications in this annex .In particular , the following three subconditions shall be met : .", "label": "", "metadata": {}, "score": "62.37129"}
{"text": "This has the effect of preventing text from running into the margins .Mandatory breaks : .A hard line break can consist of BK or a Newline Function ( NLF ) as described in Section 5.8 , Newline Guidelines , of [ Unicode5.0 ] .", "label": "", "metadata": {}, "score": "62.37536"}
{"text": "Spaces may be used in modern editions of the text .The script does not include any script - specific digits or punctuation .Lydian : U+10920-U+1093F .Like Lycian , Lydian is an ancient Indo - European language that was used in Western Anatolia .", "label": "", "metadata": {}, "score": "62.391632"}
{"text": "If this change adversely affects you , send email to perlbug@perl.org ; if it affects you positively , email perlthanks@perl.org .In the meantime , [ ^\\S\\cK ] ( obscurely ) matches what \\s traditionally did .Unicode Properties .One letter property names can be used in the \\pP form , with the property name following the \\p , otherwise , braces are required .", "label": "", "metadata": {}, "score": "62.431984"}
{"text": "The Tibetan tsheg is a visible mark , but it functions effectively like a space to separate words ( or other units ) in Tibetan .It provides a break opportunity after itself .For additional information , see Section 5.6 , Tibetan Line Breaking .", "label": "", "metadata": {}, "score": "62.432816"}
{"text": "This construct can not be used within the scope of use locale ( or the /l regex modifier ) .Any user - defined property used must be already defined by the time the regular expression is compiled ( but note that this construct can be used instead of such properties ) .", "label": "", "metadata": {}, "score": "62.442825"}
{"text": "A direct break is indicated in the rules below as B \u00f7 A , where B is the character class of the character before and A is the character class of the character after the break .If they are separated by one or more space characters , a break opportunity exists instead after the last space .", "label": "", "metadata": {}, "score": "62.446613"}
{"text": "LD5 Line Breaking Property : A character property with enumerated values , as listed in Table 1 , and separated into normative and informative values .Line breaking property values are used to classify characters and , taken in context , determine the type of line break opportunity .", "label": "", "metadata": {}, "score": "62.57271"}
{"text": "See also JL , JT , JV , and H3 .Some additional context analysis is required to distinguish usage of this character as a hyphen from its usage as a minus sign ( or indicator of numerical range ) .If used as hyphen , it acts like U+2010 HYPHEN , which has line break class BA .", "label": "", "metadata": {}, "score": "62.58718"}
{"text": "Hyphenation improves the layout of narrow columns , especially for languages with many longer words , such as German or Finnish .For the purpose of this annex , it is assumed that hyphenation is equivalent to inserting soft hyphen characters .", "label": "", "metadata": {}, "score": "62.667587"}
{"text": "To support these , Hangul syllables and conjoining jamo need to be tailored to use class AL .The default in this specification is class ID , which supports the case of Korean documents not using space - based line breaking .", "label": "", "metadata": {}, "score": "62.698597"}
{"text": "As well as being able to convert between encodings , it can also be used to convert text from one script to another , for any language that can be represented by more than one script .Example : Some languages in Central Asia can be represented in either Latin or Cyrillic script .", "label": "", "metadata": {}, "score": "62.700096"}
{"text": "As is the case in many other scripts , some Myanmar letters or signs may be analyzed as composites of two or more other characters and are not encoded separately .The following are examples of Myanmar letters represented by combining character sequences .", "label": "", "metadata": {}, "score": "62.737034"}
{"text": "KHMER SIGN KOOMUUT .The Tibetan tsheg is a visible mark , but it functions effectively like a space to separate words ( or other units ) in Tibetan .It provides a break opportunity after itself .For additional information , see Section 5.6 , Tibetan Line Breaking .", "label": "", "metadata": {}, "score": "62.753887"}
{"text": "Otherwise , they behave based on the rules of the locale or EBCDIC code page .It is proposed to change this behavior in a future release of Perl so that the the UTF8ness of the source string will be irrelevant to the behavior of the POSIX character classes .", "label": "", "metadata": {}, "score": "62.767883"}
{"text": "When NARROW NO - BREAK SPACE occurs in French text , it should be interpreted as an \" espace fine ins\u00e9cable \" .The MONGOLIAN VOWEL SEPARATOR is equivalent to a NARROW NO - BREAK SPACE in its line breaking behavior , but has different effects in controlling the shaping of its preceding and following characters .", "label": "", "metadata": {}, "score": "62.81148"}
{"text": "For more information on East_Asian_Width and how to resolve it , see Unicode Standard Annex # 11 , East Asian Width [ UAX11 ] .The original definition included many Latin , Greek , and Cyrillic characters .These characters are now classified by default as AL because use of the AL line breaking class better corresponds to modern practice .", "label": "", "metadata": {}, "score": "62.82627"}
{"text": "Any character not matched by \\w is matched by \\W .Whitespace .\\s matches any single character considered whitespace .If the /a modifier is in effect ... .\\s matches the 5 characters [ \\t\\n\\f\\r ] ; that is , the horizontal tab , the newline , the form feed , the carriage return , and the space .", "label": "", "metadata": {}, "score": "62.911026"}
{"text": "For case ( 1 ) , the line break opportunity is positioned after the word separator character , as in case ( 3 ) , but the visual display of the character is suppressed .The means by which a line layout and display process inhibits the visible display of the separator character are outside of the scope of the Line Break algorithm .", "label": "", "metadata": {}, "score": "62.91988"}
{"text": "The corrected formulation of the regular expression for More_Above in Table 3 - 14 , Context Specification for Casing , may be of particular interest .For a statement of that erratum for Table 3 - 14 , see Errata Fixed in Unicode 5.2.0 .", "label": "", "metadata": {}, "score": "63.000942"}
{"text": "Table 1 lists all of line breaking classes by name , also giving their class abbreviation and their status as tailorable or not .The examples and brief indication of line breaking behavior in this table are merely typical , not exhaustive .", "label": "", "metadata": {}, "score": "63.012733"}
{"text": "Table 1 lists all of line breaking classes by name , also giving their class abbreviation and their status as tailorable or not .The examples and brief indication of line breaking behavior in this table are merely typical , not exhaustive .", "label": "", "metadata": {}, "score": "63.012733"}
{"text": "Expanded the introduction in Section 3 .Moved subsections on customization into a new Section 8 and expanded the text .Many edits throughout the text to update it for Unicode 4.0.0 .Revision 11 being a proposed update , only changes between revisions 12 and 14 are noted here .", "label": "", "metadata": {}, "score": "63.04742"}
{"text": "\\H matches any character not considered horizontal whitespace .They use the platform 's native character set , and do not consider any locale that may otherwise be in use .\\vmatches any character considered vertical whitespace ; this includes the platform 's carriage return and line feed characters ( newline ) plus several other characters , all listed in the table below .", "label": "", "metadata": {}, "score": "63.05773"}
{"text": "Related information that is useful in understanding this annex is found in Unicode Standard Annex # 41 , \" Common References for Unicode Standard Annexes . \" For the latest version of the Unicode Standard , see [ Unicode ] .For a list of current Unicode Technical Reports , see [ Reports ] .", "label": "", "metadata": {}, "score": "63.080555"}
{"text": "Perhaps the most notable possible surprise is that \\s matches a non - breaking space only if the non - breaking space is in a UTF-8 encoded string or the locale or EBCDIC code page that is in effect has that character .", "label": "", "metadata": {}, "score": "63.082314"}
{"text": "FF01 . FF5A .Fullwidth Latin letters and digits .See the data file LineBreak.txt [ Data14 ] for the complete list of characters with the ID line break class .Note : Use U+2060 WORD JOINER as a manual override to prevent break opportunities around characters of class ID .", "label": "", "metadata": {}, "score": "63.15596"}
{"text": "A Unicode Standard Annex ( UAX ) forms an integral part of the Unicode Standard , but is published online as a separate document .The Unicode Standard may require conformance to normative content in a Unicode Standard Annex , if so specified in the Conformance chapter of that version of the Unicode Standard .", "label": "", "metadata": {}, "score": "63.238293"}
{"text": "For example , BENGALI DIGIT FOUR ( U+09EA ) looks very much like an ASCII DIGIT EIGHT ( U+0038 ) .An application that is expecting only the ASCII digits might be misled , or if the match is \\d+ , the matched string might contain a mixture of digits from different writing systems that look like they signify a number different than they actually do . \"", "label": "", "metadata": {}, "score": "63.34495"}
{"text": "For example , BENGALI DIGIT FOUR ( U+09EA ) looks very much like an ASCII DIGIT EIGHT ( U+0038 ) .An application that is expecting only the ASCII digits might be misled , or if the match is \\d+ , the matched string might contain a mixture of digits from different writing systems that look like they signify a number different than they actually do . \"", "label": "", "metadata": {}, "score": "63.34495"}
{"text": "For example , BENGALI DIGIT FOUR ( U+09EA ) looks very much like an ASCII DIGIT EIGHT ( U+0038 ) .An application that is expecting only the ASCII digits might be misled , or if the match is \\d+ , the matched string might contain a mixture of digits from different writing systems that look like they signify a number different than they actually do . \"", "label": "", "metadata": {}, "score": "63.34495"}
{"text": "A [ is not special inside a character class , unless it 's the start of a POSIX character class ( see \" POSIX Character Classes \" below ) .It normally does not need escaping .A ] is normally either the end of a POSIX character class ( see \" POSIX Character Classes \" below ) , or it signals the end of the bracketed character class .", "label": "", "metadata": {}, "score": "63.3609"}
{"text": "A [ is not special inside a character class , unless it 's the start of a POSIX character class ( see \" POSIX Character Classes \" below ) .It normally does not need escaping .A ] is normally either the end of a POSIX character class ( see \" POSIX Character Classes \" below ) , or it signals the end of the bracketed character class .", "label": "", "metadata": {}, "score": "63.3609"}
{"text": "A [ is not special inside a character class , unless it 's the start of a POSIX character class ( see \" POSIX Character Classes \" below ) .It normally does not need escaping .A ] is normally either the end of a POSIX character class ( see \" POSIX Character Classes \" below ) , or it signals the end of the bracketed character class .", "label": "", "metadata": {}, "score": "63.3609"}
{"text": "A [ is not special inside a character class , unless it 's the start of a POSIX character class ( see \" POSIX Character Classes \" below ) .It normally does not need escaping .A ] is normally either the end of a POSIX character class ( see \" POSIX Character Classes \" below ) , or it signals the end of the bracketed character class .", "label": "", "metadata": {}, "score": "63.3609"}
{"text": "However , it is possible to make these rules unnecessary by rewriting all the rules from LB11 on down so that the overall result of the algorithm is unchanged .This restatement of the rules is therefore not a tailoring , but rather an equivalent statement of the algorithm that can be directly expressed as regular expressions .", "label": "", "metadata": {}, "score": "63.443916"}
{"text": "For example , for rule .add another rule .CM \u00d7 OP .These prescriptions for rewriting the rules are , in principle , valid even where the rules have been tailored as permitted in Section 4 , Conformance .However , for extended context rules such as in Example 7 , additional considerations apply .", "label": "", "metadata": {}, "score": "63.475323"}
{"text": "If an implementation of a UTF-8 conversion process stops at the first error encountered , without reporting the end of any ill - formed UTF-8 code unit subsequence , then the requirement makes little practical difference .However , the requirement does introduce a significant constraint if the UTF-8 converter continues past the point of a detected error , perhaps by substituting one or more U+FFFD replacement characters for the uninterpretable , ill - formed UTF-8 code unit subsequence .", "label": "", "metadata": {}, "score": "63.658913"}
{"text": "The Unicode Standard may require conformance to normative content in a Unicode Standard Annex , if so specified in the Conformance chapter of that version of the Unicode Standard .The version number of a UAX document corresponds to the version of the Unicode Standard of which it forms a part .", "label": "", "metadata": {}, "score": "63.66067"}
{"text": "The approach taken here requires that such processes have a conforming default line break behavior , and to disclose that they also include overrides or optional behaviors that are invoked via a higher - level protocol .The methods by which a line layout process chooses optimal line breaks from among the available break opportunities is outside the scope of this specification .", "label": "", "metadata": {}, "score": "63.747852"}
{"text": "The visual appearance is the same with both NO - BREAK SPACE and SPACE , but the line breaking behavior is different .Where backward compatibility with documents created under the prior practice is desired , the following tailoring should be applied to those CM characters that have a General_Category value of Combining_Mark ( M ) : .", "label": "", "metadata": {}, "score": "63.928364"}
{"text": "The Unicode Character Database supplies normative and informative data for implementers to allow them to implement the Unicode Standard .Version 5.1.0 of the Unicode Standard should be referenced as : .The Unicode Consortium .The Unicode Standard , Version 5.1.0 , defined by : The Unicode Standard , Version 5.0 ( Boston , MA , Addison - Wesley , 2007 .", "label": "", "metadata": {}, "score": "63.938393"}
{"text": "U+30A0 KATAKANA - HIRAGANA DOUBLE HYPHEN is used in scientific notation , for example , to mark the presence of a space that would otherwise have been lost in transcribing text , such as the name of a chemical compound , into Katakana .", "label": "", "metadata": {}, "score": "63.94242"}
{"text": "SOFT HYPHEN ( SHY ) .SHY is an invisible format character with no width .It marks the place where an optional line break may occur inside a word .It can be used with all scripts .If a line is broken at an optional line break position marked by a SHY , the text at that line break position often has a modified appearance as described in Section 5.4 , Use of Soft Hyphen .", "label": "", "metadata": {}, "score": "63.994587"}
{"text": "Perl specially treats [ h - k ] to exclude the seven code points in the gap : 0x8A through 0x90 .EBCDIC Examples : . 0xC1 ( \" J \" ) ; special # handling does n't apply because range is mixed # case .", "label": "", "metadata": {}, "score": "64.11551"}
{"text": "[ 2 ] .Control characters do n't produce output as such , but instead usually control the terminal somehow : for example , newline and backspace are control characters .In the ASCII range , characters whose code points are between 0 and 31 inclusive , plus 127 ( DEL ) are control characters .", "label": "", "metadata": {}, "score": "64.13181"}
{"text": "Ant\u00f3nio Martins - Tuv\u00e1lkin supplied information about Portuguese .Tomoyuki Sadahiro provided information on use of U+30A0 .Christopher Fynn provided the background information on Tibetan line breaking .Andrew West , Kamal Mansour , Andrew Glass , Daniel Yacob , and Peter Kirk suggested improvements for Mongolian , Arabic , Kharoshthi , Ethiopic , and Hebrew punctuation characters , respectively .", "label": "", "metadata": {}, "score": "64.18672"}
{"text": "034F .COMBINING GRAPHEME JOINER .This character has no visible glyph and its presence indicates that adjoining characters are to be treated as a graphemic unit , therefore preventing line breaks between them .The use of grapheme joiner affects other processes , such as sorting , therefore , U+2060 WORD JOINER should be used if the intent is to merely prevent a line break .", "label": "", "metadata": {}, "score": "64.29696"}
{"text": "Webster 's splits words at the end of a line with a normal hyphen .A U+2E17 DOUBLE OBLIQUE HYPHEN indicates that a hyphenated word is split at the hyphen .Some dictionaries use a character that looks like a vertical series of four dots to indicate places where there is a syllable , but no allowable break .", "label": "", "metadata": {}, "score": "64.33383"}
{"text": "Webster 's splits words at the end of a line with a normal hyphen .A U+2E17 DOUBLE OBLIQUE HYPHEN indicates that a hyphenated word is split at the hyphen .Some dictionaries use a character that looks like a vertical series of four dots to indicate places where there is a syllable , but no allowable break .", "label": "", "metadata": {}, "score": "64.33383"}
{"text": "Revision 11 being a proposed update , only changes between revisions 12 and 14 are noted here .Revision 12 : .Change header for publication of Unicode .Fixed a few additional typos .Updated for publication of Unicode , Version 3.2 .", "label": "", "metadata": {}, "score": "64.359344"}
{"text": "For a complete implementation of the line breaking algorithm , if statements to handle the line breaking classes CR , LF , and NL need to be added .They have been omitted here for brevity , but see Section 7.7 , Explicit Breaks .", "label": "", "metadata": {}, "score": "64.371155"}
{"text": "The CM class also includes U+3035 VERTICAL KANA REPEAT MARK LOWER HALF .This character is normally preceded by either U+3033 VERTICAL KANA REPEAT MARK UPPER HALF or U+3034 VERTICAL KANA REPEAT WITH VOICED SOUND MARK UPPER HALF , and should not be separated from them .", "label": "", "metadata": {}, "score": "64.38114"}
{"text": "It 's not a character class , as it can match a multi - character sequence .Therefore , it can not be used inside a bracketed character class ; use \\v instead ( vertical whitespace ) .Details are discussed in perlrebackslash .", "label": "", "metadata": {}, "score": "64.38656"}
{"text": "Because this optimization does not change the result , it is not considered a tailoring and does not affect conformance .// handle spaces explicitly ... .A real - world line breaking algorithm has to be tailorable to some degree to meet user or document requirements .", "label": "", "metadata": {}, "score": "64.39112"}
{"text": "The third column indicates by which class(es ) the character is matched ( assuming no locale is in effect that changes the \\s matching ) .[ 1 ] .Prior to Perl v5.18 , \\s did not match the vertical tab .", "label": "", "metadata": {}, "score": "64.42446"}
{"text": "The third column indicates by which class(es ) the character is matched ( assuming no locale is in effect that changes the \\s matching ) .[ 1 ] .Prior to Perl v5.18 , \\s did not match the vertical tab .", "label": "", "metadata": {}, "score": "64.42446"}
{"text": "The expected return value for such a process would instead be .For a UTF-8 conversion process to consume valid successor bytes is not only non - conformant , but also leaves the converter open to security exploits .See UTR # 36 , Unicode Security Considerations .", "label": "", "metadata": {}, "score": "64.465805"}
{"text": "They can be escaped with a backslash , although this is sometimes not needed , in which case the backslash may be omitted .The sequence \\b is special inside a bracketed character class .While outside the character class , \\b is an assertion indicating a point that does not have either two word characters or two non - word characters on either side , inside a bracketed character class , \\b matches a backspace character .", "label": "", "metadata": {}, "score": "64.49966"}
{"text": "Aside from rounding of the originally square characters , this script has remained largely unchanged to the present .It is said that the rounder forms were developed to permit writing on palm leaves without tearing the writing surface of the leaf .", "label": "", "metadata": {}, "score": "64.57329"}
{"text": "Any contained POSIX character classes , including things like \\w and \\D respect the /a ( and /aa ) modifiers .[ ] ) is a regex - compile - time construct .Any attempt to use something which is n't knowable at the time the containing regular expression is compiled is a fatal error .", "label": "", "metadata": {}, "score": "64.62288"}
{"text": "Example 1 .The exact method of resolving the line break class for characters with class SA is not specified in the default algorithm .One method of implementing line breaks for complex scripts is to invoke context - based classification for all runs of characters with class SA .", "label": "", "metadata": {}, "score": "64.67672"}
{"text": "Example 1 .The exact method of resolving the line break class for characters with class SA is not specified in the default algorithm .One method of implementing line breaks for complex scripts is to invoke context - based classification for all runs of characters with class SA .", "label": "", "metadata": {}, "score": "64.67672"}
{"text": "A sample HTML file is also available for each that shows various combinations in chart form , in [ Charts14 ] .The header cells of the chart consist of a property value , followed by a representative code point number .", "label": "", "metadata": {}, "score": "64.719635"}
{"text": "Hyphenation : Hyphenation uses language - specific rules to provide additional line break opportunities within a word .Hyphenation improves the layout of narrow columns , especially for languages with many longer words , such as German or Finnish .For the purpose of this annex , it is assumed that hyphenation is equivalent to inserting soft hyphen characters .", "label": "", "metadata": {}, "score": "64.91925"}
{"text": "Where a rule has multiple parts ( lines ) , each one is numbered using hundredths , such as .Table 5 documents changes in the numbering of line breaking rules .A duplicate number indicates that a rule was subsequently split .", "label": "", "metadata": {}, "score": "64.9288"}
{"text": "Unlike the case for WJ , inserting a SP overrides the non - breaking nature of a GL .Allowing a break after BA or HY matches widespread implementation practice and supports a common way of handling special line breaking of explicit hyphens , such as in Polish and Portuguese .", "label": "", "metadata": {}, "score": "64.95274"}
{"text": "Unlike the case for WJ , inserting a SP overrides the non - breaking nature of a GL .Allowing a break after BA or HY matches widespread implementation practice and supports a common way of handling special line breaking of explicit hyphens , such as in Polish and Portuguese .", "label": "", "metadata": {}, "score": "64.95274"}
{"text": "When Unicode was young , Code - point were all under 65536 .So we can represent every character with a 2 bytes word , ( a 16 bits word ) .This is called UCS2 .UCS2 is deprecated .Now , Code - point are under 2 ^ 32 , so we can represent every character with a 4 bytes word , ( a 32 bit word ) .", "label": "", "metadata": {}, "score": "64.96077"}
{"text": "Standardized variation sequences are defined in the file StandardizedVariants.txt in the Unicode Character Database .Ideographic variation sequences are defined by the registration process defined in Unicode Technical Standard # 37 , \" Ideographic Variation Database , \" and are listed in the Ideographic Variation Database .", "label": "", "metadata": {}, "score": "65.02055"}
{"text": "This section also summarizes the membership of character classes for each value of the line breaking property .Note that the mnemonic names for the line break classes are intended neither as exhaustive descriptions of their membership nor as indicators of their entire range of behaviors in the line breaking process .", "label": "", "metadata": {}, "score": "65.024155"}
{"text": "This section also summarizes the membership of character classes for each value of the line breaking property .Note that the mnemonic names for the line break classes are intended neither as exhaustive descriptions of their membership nor as indicators of their entire range of behaviors in the line breaking process .", "label": "", "metadata": {}, "score": "65.024155"}
{"text": "SPACE ( SP ) .Note : By default , SPACE , but none of the other breaking spaces , is used in determining an indirect break .For other breaking space characters , see BA .The SY line breaking property is intended to provide a break opportunity after , except in front of digits , so as to not break \" 1/2 \" or \" 06/07/99 \" . 002F .", "label": "", "metadata": {}, "score": "65.04661"}
{"text": "SPACE ( SP ) .Note : By default , SPACE , but none of the other breaking spaces , is used in determining an indirect break .For other breaking space characters , see BA .The SY line breaking property is intended to provide a break opportunity after , except in front of digits , so as to not break \" 1/2 \" or \" 06/07/99 \" . 002F .", "label": "", "metadata": {}, "score": "65.04661"}
{"text": "Explicit breaks act independently of the surrounding characters .No characters can be added to the BK class as part of tailoring , but implementations are not required to support the VT character .000C .FORM FEED separates pages .The text on the new page starts at the beginning of the line .", "label": "", "metadata": {}, "score": "65.06486"}
{"text": "Explicit breaks act independently of the surrounding characters .No characters can be added to the BK class as part of tailoring , but implementations are not required to support the VT character .000C .FORM FEED separates pages .The text on the new page starts at the beginning of the line .", "label": "", "metadata": {}, "score": "65.06486"}
{"text": "An entry in the column labelled \" backslash sequence \" is a ( short ) equivalent .[ 1 ] .[ 2 ] .Control characters do n't produce output as such , but instead usually control the terminal somehow : for example , newline and backspace are control characters .", "label": "", "metadata": {}, "score": "65.14163"}
{"text": "The class CL is closely related to the class CP ( Close Parenthesis ) .They differ only in that CP will not introduce a break when followed by a letter or number , which prevents breaks within constructs like \" ( s)he \" .", "label": "", "metadata": {}, "score": "65.21501"}
{"text": "Repeating a character in a character class has no effect ; it 's considered to be in the set only once .Examples : . \"Special Characters Inside a Bracketed Character Class .Most characters that are meta characters in regular expressions ( that is , characters that carry a special meaning like .", "label": "", "metadata": {}, "score": "65.29011"}
{"text": "Grapheme clusters and extended grapheme clusters may be adjusted for particular processing requirements , by tailoring the rules for grapheme cluster segmentation specified in Unicode Standard Annex # 29 .Updates to Table of Named Unicode Algorithms .Table 3 - 1 , Named Unicode Algorithms , and the associated explanatory text on p. 81 of The Unicode Standard , Version 5.0 should be updated to account for some slight changes in naming conventions for Unicode algorithms in Version 5.1 .", "label": "", "metadata": {}, "score": "65.35225"}
{"text": "ascii Any character in the ASCII character set .blank A GNU extension , equal to a space or a horizontal tab ( \" \\t \" ) .cntrl Any control character .See Note [ 2 ] below . digit Any decimal digit ( \" [ 0 - 9 ] \" ) , equivalent to \" \\d \" .", "label": "", "metadata": {}, "score": "65.373886"}
{"text": "ascii Any character in the ASCII character set .blank A GNU extension , equal to a space or a horizontal tab ( \" \\t \" ) .cntrl Any control character .See Note [ 2 ] below . digit Any decimal digit ( \" [ 0 - 9 ] \" ) , equivalent to \" \\d \" .", "label": "", "metadata": {}, "score": "65.373886"}
{"text": "To avoid this problem , ideally both any copied text and its context ( site of a deletion , or target of an insertion ) would be modified so as to maintain all pairings that were in effect for each piece of text .", "label": "", "metadata": {}, "score": "65.42511"}
{"text": "The vowel of the stressed syllable is underlined .The \u0259 is U+0259 ( both times ) .The \u00b0 is a U+2070 and indicates the schwa may be omitted .Readers Digest Great Illustrated Dictionary syl\u00b7la\u00b7ble ( s\u00edll\u0259b'l )The spelling of the word has hyphenation points ( \u00b7 is a U+2027 ) followed by phonetic spelling .", "label": "", "metadata": {}, "score": "65.44282"}
{"text": "The vowel of the stressed syllable is underlined .The \u0259 is U+0259 ( both times ) .The \u00b0 is a U+2070 and indicates the schwa may be omitted .Readers Digest Great Illustrated Dictionary syl\u00b7la\u00b7ble ( s\u00edll\u0259b'l )The spelling of the word has hyphenation points ( \u00b7 is a U+2027 ) followed by phonetic spelling .", "label": "", "metadata": {}, "score": "65.44282"}
{"text": "Corrected an erratum on revision 14 by splitting GL from WJ in rule 11b and moving to a new rule 13 .Updated the pair table and sample code to match the changes in the rules .Updated the regular expression for numbers .", "label": "", "metadata": {}, "score": "65.45134"}
{"text": "Note : Use U+2060 WORD JOINER as a manual override to prevent break opportunities around characters of class ID .U+3000 IDEOGRAPHIC SPACE may be subject to expansion or compression during line justification .Korean .Korean is encoded with conjoining jamo , Hangul syllables , or both .", "label": "", "metadata": {}, "score": "65.474594"}
{"text": "[ 01[:alpha:]% ] . is valid and matches ' 0 ' , ' 1 ' , any alphabetic character , and the percent sign .Perl recognizes the following POSIX character classes : . alpha Any alphabetical character ( \" [ A - Za - z ] \" ) .", "label": "", "metadata": {}, "score": "65.51178"}
{"text": "[ 01[:alpha:]% ] . is valid and matches ' 0 ' , ' 1 ' , any alphabetic character , and the percent sign .Perl recognizes the following POSIX character classes : . alpha Any alphabetical character ( \" [ A - Za - z ] \" ) .", "label": "", "metadata": {}, "score": "65.51178"}
{"text": "[ 01[:alpha:]% ] . is valid and matches ' 0 ' , ' 1 ' , any alphabetic character , and the percent sign .Perl recognizes the following POSIX character classes : . alpha Any alphabetical character ( \" [ A - Za - z ] \" ) .", "label": "", "metadata": {}, "score": "65.51178"}
{"text": "[ 01[:alpha:]% ] . is valid and matches ' 0 ' , ' 1 ' , any alphabetic character , and the percent sign .Perl recognizes the following POSIX character classes : . alpha Any alphabetical character ( \" [ A - Za - z ] \" ) .", "label": "", "metadata": {}, "score": "65.51178"}
{"text": "An initial provisional phase was incorporated into the process for defining Named Character Sequences , so that approved Named Character Sequences will be immutable .Disunification of Diacritics .Criteria for disunifying diacritics were established .Indic Scripts .Zero width joiner and zero width non - joiner can now be used to encourage or discourage ligation in Bengali ; the sequence for Gurmukhi double vowels was determined , and the shaping of ra in Tamil was updated .", "label": "", "metadata": {}, "score": "65.52096"}
{"text": "A number of Arabic character were added in Version 5.1 in support of minority languages , four Qur'anic Arabic characters were added , and the Arabic math repertoire was greatly extended .Sixteen characters were added in support of the Khowar , Torwali , and Burushaski languages spoken primarily in Pakistan , and a set of eight Arabic characters were added in support of Persian and Azerbaijani .", "label": "", "metadata": {}, "score": "65.64825"}
{"text": "Conjoining jamo , Hangul syllables , or combinations of both form Korean Syllable Blocks .Such blocks are effectively treated as if they were Hangul syllables ; no breaks can occur in the middle of a syllable block .See Unicode Standard Annex # 29 , \" Text Boundaries \" [ Boundaries ] , for more information on Korean Syllable Blocks .", "label": "", "metadata": {}, "score": "65.66608"}
{"text": "Direct Break : A line break opportunity exists between two adjacent characters of the given line breaking classes .A direct break is indicated in the rules below as B \u00f7 A , where B is the character class of the character before and A is the character class of the character after the break .", "label": "", "metadata": {}, "score": "65.6999"}
{"text": "Implementations that use regular expressions can not directly express rules LB9 and LB10 .However , it is possible to make these rules unnecessary by rewriting all the rules from LB11 on down so that the overall result of the algorithm is unchanged .", "label": "", "metadata": {}, "score": "65.71678"}
{"text": "Otherwise , if there is a locale or EBCDIC code page in effect , \\s matches whatever is considered whitespace by the current locale or EBCDIC code page .Without a locale or EBCDIC code page , \\s matches the horizontal tab ( \\t ) , the newline ( \\n ) , the form feed ( \\f ) , the carriage return ( \\r ) , and the space .", "label": "", "metadata": {}, "score": "65.73343"}
{"text": "The oxia is canonically equivalent to the acute accent . 02DF .MODIFIER LETTER CROSS ACCENT .A cross accent also appears in some dictionaries to mark the stress of the following syllable , and should be handled in the same way as the other stress marking characters in this section .", "label": "", "metadata": {}, "score": "65.7457"}
{"text": "HALFWIDTH KATAKANA SEMI - VOICED SOUND MARK .Note : Optionally , the NS restriction may be relaxed by tailoring , with some or all characters treated like ID to achieve a more permissive style of line breaking , especially in some East Asian document styles .", "label": "", "metadata": {}, "score": "65.87303"}
{"text": "The word joiner character is the preferred choice for an invisible character to keep other characters together that would otherwise be split across the line at a direct break .The character FEFF has the same effect , but because it is also used in an unrelated way as a byte order mark , the use of the WJ as the preferred interword glue simplifies the handling of FEFF .", "label": "", "metadata": {}, "score": "65.89839"}
{"text": "The word joiner character is the preferred choice for an invisible character to keep other characters together that would otherwise be split across the line at a direct break .The character FEFF has the same effect , but because it is also used in an unrelated way as a byte order mark , the use of the WJ as the preferred interword glue simplifies the handling of FEFF .", "label": "", "metadata": {}, "score": "65.89839"}
{"text": "# The OR adds the digits , leaving only the # letters ' a ' to ' f ' and ' A ' to ' F ' excluded .Module Install Instructions .To install perlrecharclass , simply copy and paste either of the commands in to your terminal NAME .", "label": "", "metadata": {}, "score": "66.061005"}
{"text": "NAME .DESCRIPTION .The top level documentation about Perl regular expressions is found in perlre .This manual page discusses the syntax and use of character classes in Perl regular expressions .A character class is a way of denoting a set of characters in such a way that one character of the set is matched .", "label": "", "metadata": {}, "score": "66.115616"}
{"text": "NAME .DESCRIPTION .The top level documentation about Perl regular expressions is found in perlre .This manual page discusses the syntax and use of character classes in Perl regular expressions .A character class is a way of denoting a set of characters in such a way that one character of the set is matched .", "label": "", "metadata": {}, "score": "66.115616"}
{"text": "Z - axis typeface and stylistic differences are generally ignored for the purpose of encoding Han ideographs , but can be represented in text by the use of variation sequences ; see Section 16.4 , Variation Selectors .In Section 16.4 , Variation Selectors , on p. 545 of The Unicode Standard , Version 5.0 , replace the first two paragraphs of the \" Variation Sequence \" subsection by the following : .", "label": "", "metadata": {}, "score": "66.12361"}
{"text": "This form of customization is equivalent to permanently overriding some of the rules in Section 6 , Line Breaking Algorithm .Changing the interpretation of the line breaking actions This is a dynamic equivalent of the preceding .Instead of changing the values for the pair intersection directly in the table , they are labeled with special values that cause different actions for different customizations .", "label": "", "metadata": {}, "score": "66.1994"}
{"text": "This form of customization is equivalent to permanently overriding some of the rules in Section 6 , Line Breaking Algorithm .Changing the interpretation of the line breaking actions This is a dynamic equivalent of the preceding .Instead of changing the values for the pair intersection directly in the table , they are labeled with special values that cause different actions for different customizations .", "label": "", "metadata": {}, "score": "66.1994"}
{"text": "\\s matches [ \\t\\n\\f\\r ] and , starting in Perl v5.18 , the vertical tab , \\cK .( See note [ 1 ] below for a discussion of this . )Note that this list does n't include the non - breaking space .", "label": "", "metadata": {}, "score": "66.212456"}
{"text": "Conjoining jamos , Hangul syllables , or combinations of both form Korean Syllable Blocks .Such blocks are effectively treated as if they were Hangul syllables ; no breaks can occur in the middle of a syllable block .See Unicode Standard Annex # 29 , \" Unicode Text Segmentation \" [ UAX29 ] , for more information on Korean Syllable Blocks .", "label": "", "metadata": {}, "score": "66.36946"}
{"text": "The default behavior for this class is identical to class AL .Users can manually insert ZWSP or WORD JOINER around characters of class XX to allow or prevent breaks as needed .In addition , implementations can override or tailor this default behavior - for example , by assigning characters the property ID or another class .", "label": "", "metadata": {}, "score": "66.425156"}
{"text": "Spaces are used between words .Ol Chiki : U+1C50-U+1C7F .The Ol Chiki script was invented in the first half of the 20th century to write Santali , a Munda language spoken mainly in India .There are a few speakers in Nepal and Bangladesh .", "label": "", "metadata": {}, "score": "66.45308"}
{"text": "Digits .\\d matches a single character considered to be a decimal digit .If the /a regular expression modifier is in effect , it matches [ 0 - 9].( An unlikely possible exception is that under locale matching rules , the current locale might not have [ 0 - 9 ] matched by \\d , and/or might match other characters whose code point is less than 256 .", "label": "", "metadata": {}, "score": "66.51323"}
{"text": "Digits .\\d matches a single character considered to be a decimal digit .If the /a regular expression modifier is in effect , it matches [ 0 - 9].( An unlikely possible exception is that under locale matching rules , the current locale might not have [ 0 - 9 ] matched by \\d , and/or might match other characters whose code point is less than 256 .", "label": "", "metadata": {}, "score": "66.51323"}
{"text": "Digits .\\d matches a single character considered to be a decimal digit .If the /a regular expression modifier is in effect , it matches [ 0 - 9].( An unlikely possible exception is that under locale matching rules , the current locale might not have [ 0 - 9 ] matched by \\d , and/or might match other characters whose code point is less than 256 .", "label": "", "metadata": {}, "score": "66.51323"}
{"text": "The ' is an apostrophe .Webster 's 3rd New International Dictionary syl\u00b7la\u00b7ble / ' sil\u0259b\u0259l / The spelling of the word has hyphenation points ( \u00b7 is a U+2027 ) and is followed by phonetic spelling .The stressed syllable is preceded by ' U+02C8 .", "label": "", "metadata": {}, "score": "66.5179"}
{"text": "The ' is an apostrophe .Webster 's 3rd New International Dictionary syl\u00b7la\u00b7ble / ' sil\u0259b\u0259l / The spelling of the word has hyphenation points ( \u00b7 is a U+2027 ) and is followed by phonetic spelling .The stressed syllable is preceded by ' U+02C8 .", "label": "", "metadata": {}, "score": "66.5179"}
{"text": "Bracketed Character Classes .The third form of character class you can use in Perl regular expressions is the bracketed character class .In its simplest form , it lists the characters that may be matched , surrounded by square brackets , like this : [ aeiou ] .", "label": "", "metadata": {}, "score": "66.57816"}
{"text": "Bracketed Character Classes .The third form of character class you can use in Perl regular expressions is the bracketed character class .In its simplest form , it lists the characters that may be matched , surrounded by square brackets , like this : [ aeiou ] .", "label": "", "metadata": {}, "score": "66.57816"}
{"text": "U+1FFF , plus the following characters : . 24EA .CIRCLED DIGIT ZERO .DINGBAT CIRCLED SANS - SERIF DIGIT ONE .DINGBAT NEGATIVE CIRCLED SANS - SERIF NUMBER TEN .Characters with the line break class AI with East_Asian_Width value A typically take the AL line breaking class when their resolved East_Asian_Width is N ( narrow ) and take the line breaking class ID when their resolved width is W ( wide ) .", "label": "", "metadata": {}, "score": "66.656136"}
{"text": "A model implementation using pair tables is also provided .Status .This is a draft document which may be updated , replaced , or superseded by other documents at any time .Publication does not imply endorsement by the Unicode Consortium .", "label": "", "metadata": {}, "score": "66.74039"}
{"text": "In Mongolian text , the NNBSP is typically displayed with 1/3 the width of a normal space character .When NARROW NO - BREAK SPACE occurs in French text , it should be interpreted as an \" espace fine ins\u00e9cable \" .", "label": "", "metadata": {}, "score": "66.805695"}
{"text": "Non - breaking characters : . LB12a Do not break before NBSP and related characters , except after spaces and hyphens .[^SP BA HY ] \u00d7 GL .The expression [ ^SP , BA , HY ] designates any line break class other than SP , BA or HY .", "label": "", "metadata": {}, "score": "66.83942"}
{"text": "Non - breaking characters : . LB12a Do not break before NBSP and related characters , except after spaces and hyphens .[^SP BA HY ] \u00d7 GL .The expression [ ^SP , BA , HY ] designates any line break class other than SP , BA or HY .", "label": "", "metadata": {}, "score": "66.83942"}
{"text": "Additions to Malayalam and Myanmar ; characters to complete support of Indic scripts .New symbols : Mahjong , editorial punctuation marks , significant additions for math .Capital Sharp S for German .Some new minority scripts for communities in Vietnam , Indonesia , India , Africa .", "label": "", "metadata": {}, "score": "66.912994"}
{"text": "\" Stateful Format Controls .Update the subsection on \" Stateful Format Controls \" in Section 5.20 , Default Ignorable Code Points , on p. 194 of The Unicode Standard , Version 5.0 , to read as follows : .Replacement Text .", "label": "", "metadata": {}, "score": "66.964035"}
{"text": "Update the last paragraph on p. 192 of The Unicode Standard , Version 5.0 , in Section 5.20 , Default Ignorable Code Points , to read as follows : .Replacement Text .An implementation should ignore all default ignorable code points in rendering whenever it does not support those code points , whether they are assigned or not .", "label": "", "metadata": {}, "score": "67.12381"}
{"text": "Asat .The asat , or killer , is a visibly displayed sign .In some cases it indicates that the inherent vowel sound of a consonant letter is suppressed .In other cases it combines with other characters to form a vowel letter .", "label": "", "metadata": {}, "score": "67.1413"}
{"text": "Their line breaking behavior therefore depends on the context .In the absence of appropriate context information , they are treated as class AL , see the note at the end of this description .As originally defined , the line break class AI contained all characters with East_Asian_Width value A ( ambiguous width ) that would otherwise be AL in this classification .", "label": "", "metadata": {}, "score": "67.149704"}
{"text": "The set of line break classes for Tibetan is expected to provide a good starting point , even though there is limited practical experience in their implementation .As more experience is gained , some modifications , possibly including new rules or additional line break classes , can be expected .", "label": "", "metadata": {}, "score": "67.21669"}
{"text": "Plus these characters : .ARABIC NUMBER SIGN .ARABIC SIGN SAFHA . 06DD .ARABIC END OF AYAH . 070F .SYRIAC ABBREVIATION MARK .FUNCTION APPLICATION .INVISIBLE PLUS .These characters occur in the middle or at the beginning of words or alphanumeric or symbol sequences .", "label": "", "metadata": {}, "score": "67.228325"}
{"text": "There are also eleven newly encoded scripts , including eight minority scripts ( Cham , Kayah Li , Lepcha , Ol Chiki , Rejang , Saurashtra , Sundanese , and Vai ) and three historical scripts ( Carian , Lycian , and Lydian ) .", "label": "", "metadata": {}, "score": "67.24423"}
{"text": "The string functions isLowerCase and isUpperCase also apply to strings longer than one character , of course , in which instance the character properties General_Category , LowerCase , and Uppercase are not relevant .In the following table , the string function isTitleCase is also illustrated , to show its applicability for the same strings .", "label": "", "metadata": {}, "score": "67.27773"}
{"text": "Formally , the Decomposition_Mapping ( dm ) property value for a Hangul syllable is the pairwise decomposition and not the full decomposition .Each character with the Hangul_Syllable_Type value LVT has a decomposition mapping consisting of a character with an LV value and a character with a T value .", "label": "", "metadata": {}, "score": "67.329056"}
{"text": "Variation Sequence .A variation sequence always consists of a base character followed by a variation selector character .That sequence is referred to as a variant of the base character .The variation selector affects only the appearance of the base character .", "label": "", "metadata": {}, "score": "67.36687"}
{"text": "The XX line break class consists of all characters with General_Category Co as well as those unassigned code points that are not within a CJK block .Unassigned characters in blocks or ranges of the Unicode codespace that have been reserved for CJK scripts default to the class ID , and are listed in the description of that class .", "label": "", "metadata": {}, "score": "67.41069"}
{"text": "They have been omitted here for brevity , but see Section 7.6 , Explicit Breaks .The sample code assumes that the line breaking classes AI , CB , SG , and XX have been resolved according to rule LB1 as part of initializing the pcls array .", "label": "", "metadata": {}, "score": "67.42109"}
{"text": "But be aware of the security considerations in doing so , as mentioned above .Bracketed Character Classes .The third form of character class you can use in Perl regular expressions is the bracketed character class .In its simplest form , it lists the characters that may be matched , surrounded by square brackets , like this : [ aeiou ] .", "label": "", "metadata": {}, "score": "67.53394"}
{"text": "In contrast , U+1360 ETHIOPIC SECTION MARK is typically used in a sequence of several such marks on a separate line , and separated by spaces .As such lines are typically marked with separate hard line breaks ( BK ) , the section mark is treated like an ordinary symbol and given line break class AL .", "label": "", "metadata": {}, "score": "67.565186"}
{"text": "In contrast , U+1360 ETHIOPIC SECTION MARK is typically used in a sequence of several such marks on a separate line , and separated by spaces .As such lines are typically marked with separate hard line breaks ( BK ) , the section mark is treated like an ordinary symbol and given line break class AL .", "label": "", "metadata": {}, "score": "67.565186"}
{"text": "Additional Text .Combining character sequence is commonly abbreviated as CCS , and extended combining character sequence is commonly abbreviated as ECCS .In addition , the existing definitions of grapheme cluster and extended grapheme cluster are slightly modified , to bring them into line with UAX # 29 , \" Unicode Text Segmentation , \" where they are defined algorithmically .", "label": "", "metadata": {}, "score": "67.62683"}
{"text": "For more information , see Section 5.6 , Tibetan Line Breaking .COMBINING DOUBLE BREVE BELOW .COMBINING DOUBLE RIGHTWARDS ARROW BELOW .These diacritics span two characters , so no word or line breaks are possible on either side .Together with conjoining jamos , Hangul syllables form Korean Syllable Blocks , which are kept together ; see Unicode Standard Annex # 29 , \" Unicode Text Segmentation \" [ UAX29 ] .", "label": "", "metadata": {}, "score": "67.630104"}
{"text": "The means by which a line layout and display process inhibits the visible display of the separator character are outside of the scope of the Line Break algorithm .U+1680 OGHAM SPACE MARK is an example of a character which may exhibit this behavior .", "label": "", "metadata": {}, "score": "67.69934"}
{"text": "AEGEAN CHECK MARK .1039F .UGARITIC WORD DIVIDER . 103D0 .OLD PERSIAN WORD DIVIDER .1091F .PHOENICIAN WORD DIVIDER .CUNEIFORM PUNCTUATION SIGN OLD ASSYRIAN WORD DIVIDER .Dandas .DEVANAGARI DANDA is similar to a full stop .", "label": "", "metadata": {}, "score": "67.72893"}
{"text": "AEGEAN CHECK MARK .1039F .UGARITIC WORD DIVIDER . 103D0 .OLD PERSIAN WORD DIVIDER .1091F .PHOENICIAN WORD DIVIDER .CUNEIFORM PUNCTUATION SIGN OLD ASSYRIAN WORD DIVIDER .Dandas .DEVANAGARI DANDA is similar to a full stop .", "label": "", "metadata": {}, "score": "67.72893"}
{"text": "To install perlrecharclass , simply copy and paste either of the commands in to your terminal Unicode 5.0.0 .Version 5.0.0 of the Unicode Standard consists of the core specification ( The Unicode Standard , Version 5.0 ) , together with the delta and archival code charts for this version , the 5.0.0 Unicode Standard Annexes , and the 5.0.0 Unicode Character Database ( UCD ) .", "label": "", "metadata": {}, "score": "67.78447"}
{"text": "will show as .Et Dieu vit la lumi?re , qu'elle ? tait bonne ; et Dieu s?para la lumi?re d'avec les t?n?bres .Warning : If you see squares , it can also be a font problem !This happen if you 're using a font which does not define some characters you are using .", "label": "", "metadata": {}, "score": "67.81407"}
{"text": "Example 5 .Some users prefer to relax the requirement that Kana syllables be kept together .For example , the syllable kyu , spelled with the two kanas KI and \" small yu \" , would no longer be kept together as if KI and yu were atomic .", "label": "", "metadata": {}, "score": "67.8938"}
{"text": "Example 5 .Some users prefer to relax the requirement that Kana syllables be kept together .For example , the syllable kyu , spelled with the two kanas KI and \" small yu \" , would no longer be kept together as if KI and yu were atomic .", "label": "", "metadata": {}, "score": "67.8938"}
{"text": "In particular , capital sharp s is intended for typographical representations of signage and uppercase titles , and other environments where users require the sharp s to be preserved in uppercase .Overall , such usage is rare .In contrast , standard German orthography uses the string \" SS \" as uppercase mapping for small sharp s .", "label": "", "metadata": {}, "score": "67.92282"}
{"text": "Locale , EBCDIC , Unicode and UTF-8 .Some of the character classes have a somewhat different behaviour depending on the internal encoding of the source string , and the locale that is in effect , and if the program is running on an EBCDIC platform .", "label": "", "metadata": {}, "score": "67.96098"}
{"text": "For example , the word krwe , [ kjwei ] ( \" to drop off \") would be written via the following sequence : .In Pali and Sanskrit texts written in the Myanmar script , as well as in older orthographies of Burmese , the consonants ya , ra , wa , and ha are sometimes rendered in subjoined form .", "label": "", "metadata": {}, "score": "67.98294"}
{"text": "As with the other default specifications , implementations are free to override ( tailor ) the results to meet the requirements of different environments or particular languages as described in Section 4 , Conformance .These tests can not be exhaustive , because of the large number of possible combinations ; but they do provide samples that test all pairs of property values , using a representative character for each value , plus certain other sequences .", "label": "", "metadata": {}, "score": "67.98913"}
{"text": "The particular sequences that form an NLF depend on the implementation and other circumstances as described in Section 5.8 , Newline Guidelines , of [ Unicode ] .This specification defines the NLF implicitly .It defines the three character classes CR , LF , and NL .", "label": "", "metadata": {}, "score": "68.05202"}
{"text": "Replacement Text .The characters in this block provide a mechanism for language tagging in Unicode plain text .These characters are deprecated , and should not be used - particularly with any protocols that provide alternate means of language tagging .", "label": "", "metadata": {}, "score": "68.09952"}
{"text": "A prohibited break is indicated in the pair table in Table 2 as B ^ A , where B is the character class of the character before and A is the character class of the character after the break , and the optional space characters are not shown .", "label": "", "metadata": {}, "score": "68.154526"}
{"text": "In particular , when NBSP follows SPACE , there is a break opportunity after the SPACE and NBSP will go as visible space onto the next line .See also WJ .The following lists the characters of line break class GL with additional description . 00A0 .", "label": "", "metadata": {}, "score": "68.173584"}
{"text": "The : quick : brown : fox : jumped .Both ( 2 ) and ( 3 ) can be expressed with the Unicode Line Breaking Algorithm by tailoring the Line Break property value for the word separator character to be Break Before or Break After , respectively .", "label": "", "metadata": {}, "score": "68.19417"}
{"text": "The ' is an apostrophe .Oxford English Dictionary ( 2nd Edition ) has gone to IPA ' sIl\u0259b(\u0259)l where ' is U+02C8 , I is U+026A , and \u0259 is U+0259 ( both times ) .The ' comes before the stressed syllable .", "label": "", "metadata": {}, "score": "68.219086"}
{"text": "The ' is an apostrophe .Oxford English Dictionary ( 2nd Edition ) has gone to IPA ' sIl\u0259b(\u0259)l where ' is U+02C8 , I is U+026A , and \u0259 is U+0259 ( both times ) .The ' comes before the stressed syllable .", "label": "", "metadata": {}, "score": "68.219086"}
{"text": "Just as in all regular expressions , the pattern can be built up by including variables that are interpolated at regex compilation time .Care must be taken to ensure that you are getting what you expect .For example : . compiles to .", "label": "", "metadata": {}, "score": "68.45474"}
{"text": "Due to the way they have been mechanically processed for generation , the test rules do not match the rules in this annex precisely .In particular : .The rules are cast into a more regex - style .The rules \" sot \" , \" eot \" , and \" Any \" are added mechanically and have artificial numbers .", "label": "", "metadata": {}, "score": "68.49899"}
{"text": "Examples include shapes like U+2010 HYPHEN , U+058A ARMENIAN HYPHEN , U+180A MONGOLIAN NIRUGU , or U+1806 MONGOLIAN TODO SOFT HYPHEN .When a SHY is used to represent a possible hyphenation location , the spelling is that of the word without hyphenation : \" tuggummi \" .", "label": "", "metadata": {}, "score": "68.52893"}
{"text": "Examples include shapes like U+2010 HYPHEN , U+058A ARMENIAN HYPHEN , U+180A MONGOLIAN NIRUGU , or U+1806 MONGOLIAN TODO SOFT HYPHEN .When a SHY is used to represent a possible hyphenation location , the spelling is that of the word without hyphenation : \" tuggummi \" .", "label": "", "metadata": {}, "score": "68.52893"}
{"text": "Conjoining jamos form Korean Syllable Blocks , which are kept together ; see Unicode Standard Annex # 29 , \" Unicode Text Segmentation \" [ UAX29 ] .Korean uses space - based line breaking in many styles of documents .To support these , Hangul syllables and conjoining jamos need to be tailored to use class AL .", "label": "", "metadata": {}, "score": "68.530876"}
{"text": "There are two special logical positions : sot , which occurs before the first character in the text , and eot , which occurs after the last character in the text .Thus an empty string would consist of sot followed immediately by eot .", "label": "", "metadata": {}, "score": "68.5757"}
{"text": "Added new line breaking classes NL and WJ to better support NEL and Word Joiner .Added a definition of line breaking class as synonym for the unwieldy line breaking property value .Expanded the introduction in Section 3 .Moved subsections on customization into a new Section 8 and expanded the text .", "label": "", "metadata": {}, "score": "68.58455"}
{"text": "For more information , see Section 5.6 , Tibetan Line Breaking .COMBINING DOUBLE BREVE BELOW .COMBINING DOUBLE RIGHTWARDS ARROW BELOW .These diacritics span two characters , so no word or line breaks are possible on either side .Together with conjoining jamos , Hangul syllables form Korean Syllable Blocks , which are kept together ; see [ Boundaries ] .", "label": "", "metadata": {}, "score": "68.63049"}
{"text": "Rule Numbering Across Versions .Table 5 documents changes in the numbering of line breaking rules .A duplicate number indicates that a rule was subsequently split .( In each version , the rules are applied in their numerical order , not in the order they appear in this table . )", "label": "", "metadata": {}, "score": "68.6555"}
{"text": "See note [ 1 ] below for a discussion of this . otherwise ... .For code points above 255 ... .\\s matches exactly the code points above 255 shown with an \" s \" column in the table below .", "label": "", "metadata": {}, "score": "68.65814"}
{"text": "Implementations that do not support a given character should also treat it as unknown ( XX ) .This character is used to enable additional ( invisible ) break opportunities wherever SPACE can not be used .As its name implies , it normally has no width .", "label": "", "metadata": {}, "score": "68.68977"}
{"text": "Implementations that do not support a given character should also treat it as unknown ( XX ) .This character is used to enable additional ( invisible ) break opportunities wherever SPACE can not be used .As its name implies , it normally has no width .", "label": "", "metadata": {}, "score": "68.68977"}
{"text": "Domino Tile Symbols : U+1F030-U+1F09F .Domino tile symbols encode the \" double - six \" set of tiles used to play the game of dominoes , which derives from Chinese tile games dating back to the twelfth century .", "label": "", "metadata": {}, "score": "68.76177"}
{"text": "The final difference between regular bracketed character classes and these , is that it is not possible to get these to match a multi - character fold .Thus , .[ [ \\xDF ] ] ) /iu .does not match the string ss .", "label": "", "metadata": {}, "score": "68.773346"}
{"text": "These include : .Titlecasing of IJ at the start of words in Dutch .Removal of accents when uppercasing letters in Greek .Uppercasing U+00DF ( \u00df ) LATIN SMALL LETTER SHARP S to the new U+1E9E LATIN CAPITAL LETTER SHARP S .", "label": "", "metadata": {}, "score": "68.81415"}
{"text": "This last example shows the use of this construct to specify an ordinary bracketed character class without additional set operations .Note the white space within it ; /x is turned on even within bracketed character classes , except you ca n't have comments inside them .", "label": "", "metadata": {}, "score": "68.824646"}
{"text": "NARROW NO - BREAK SPACE is a narrow version of NO - BREAK SPACE , which has exactly the same line breaking behavior , but with a narrow display width .It is regularly used in Mongolian in certain grammatical contexts ( before a particle ) , where it also influences the shaping of the glyphs for the particle .", "label": "", "metadata": {}, "score": "68.87312"}
{"text": "RIGHT ANGLE DOTTED SUBSTITUTION MARKER .2E06 ..2E08 .RAISED INTERPOLATION MARKER .DOTTED TRANSPOSITION MARKER .2E0B .RAISED SQUARE . U+23B6BOTTOM SQUARE BRACKET OVER TOP SQUARE BRACKET is subtly different from the others in this class , in that it is both an opening and a closing punctuation character at the same time .", "label": "", "metadata": {}, "score": "68.89726"}
{"text": "RIGHT ANGLE DOTTED SUBSTITUTION MARKER .2E06 ..2E08 .RAISED INTERPOLATION MARKER .DOTTED TRANSPOSITION MARKER .2E0B .RAISED SQUARE . U+23B6BOTTOM SQUARE BRACKET OVER TOP SQUARE BRACKET is subtly different from the others in this class , in that it is both an opening and a closing punctuation character at the same time .", "label": "", "metadata": {}, "score": "68.89726"}
{"text": "Conjoining jamos form Korean Syllable Blocks , which are kept together ; see [ Boundaries ] .Korean uses space - based line breaking in many styles of documents .To support these , Hangul syllables and conjoining jamo need to be tailored to use class AL .", "label": "", "metadata": {}, "score": "68.94389"}
{"text": "Change header for publication of Unicode .Fixed a few additional typos .Updated for publication of Unicode , Version 3.2 .Added Word joiner to GL and noted that it now is the preferred character instead of FEFF .Added LB class assignments for the new Unicode 3.2 characters to the data file .", "label": "", "metadata": {}, "score": "68.98969"}
{"text": "Status .This document has been reviewed by Unicode members and other interested parties , and has been approved for publication by the Unicode Consortium .This is a stable document and may be used as reference material or cited as a normative reference by other specifications .", "label": "", "metadata": {}, "score": "69.01825"}
{"text": "The particular sequences that form an NLF depend on the implementation and other circumstances as described in Section 5.8 , Newline Guidelines , of [ Unicode5.0 ] .This specification defines the NLF implicitly .It defines the three character classes CR , LF , and NL .", "label": "", "metadata": {}, "score": "69.02217"}
{"text": "There are circumstances in which the default operations need to be tailored for specific locales or environments .Some of these tailorings have data that is in the standard , in the SpecialCasing.txt file , notable for the Turkish dotted capital I and dotless small i .", "label": "", "metadata": {}, "score": "69.242165"}
{"text": "For example , kinzi applied to U+1000 MYANMAR LETTER KA would be written via the following sequence : .Note that this sequence includes both U+103A asat and U+1039 virama between the nga and the ka .Use of the virama alone would ordinarily indicate stacking of the consonants , with a small ka appearing under the nga .", "label": "", "metadata": {}, "score": "69.267296"}
{"text": "If a Unicode string purports to be in a Unicode encoding form , then it must not contain any ill - formed code unit subsequence .If a process which verifies that a Unicode string is in a Unicode encoding form encounters an ill - formed code unit subsequence in that string , then it must not identify that string as being in that Unicode encoding form .", "label": "", "metadata": {}, "score": "69.29937"}
{"text": "LD7 Mandatory Break : A line must break following a character that has the mandatory break property .Such a break is also known as a forced break and is indicated in the rules as B ! , where B is the character with the mandatory break property .", "label": "", "metadata": {}, "score": "69.316666"}
{"text": "will show as .Et Dieu vit la lumi\u00c3\u00a8re , qu'elle \u00c3 \u00a9 tait bonne ; et Dieu s\u00c3 \u00a9 para la lumi\u00c3\u00a8re d'avec les t\u00c3 \u00a9 n\u00c3\u00a8bres .An ISO-8859 - 1 text decoded as UTF-8 .The UTF-8 decoder will find an invalid multi - byte character , it can report an error , or put question marks or squares instead : .", "label": "", "metadata": {}, "score": "69.54994"}
{"text": "Any attempt to use something which is n't knowable at the time the containing regular expression is compiled is a fatal error .In practice , this means just three limitations : .This construct can not be used within the scope of use locale ( or the /l regex modifier ) .", "label": "", "metadata": {}, "score": "69.63346"}
{"text": "U+00D8 LATIN CAPITAL LETTER O WITH STROKE U+049A CYRILLIC CAPITAL LETTER KA WITH DESCENDER . and also characters that would seem analogous in appearance to a Latin letter with a cedilla , such as : .U+0498 CYRILLIC CAPITAL LETTER ZE WITH DESCENDER .", "label": "", "metadata": {}, "score": "69.65182"}
{"text": "The methods by which a line layout process chooses optimal line breaks from among the available break opportunities is outside the scope of this specification .The behavior of a line layout process in situations where there are no suitable break opportunities is also outside of the scope of this specification .", "label": "", "metadata": {}, "score": "69.654205"}
{"text": "There are a small number of paired stateful controls .These characters are used in pairs , with an initiating character ( or sequence ) and a terminating character .Even when these characters are ignored , complications can arise due to their paired nature .", "label": "", "metadata": {}, "score": "69.76199"}
{"text": "Newline Function ( NLF ) .Newline Functions are defined in the Unicode Standard as providing additional mandatory breaks .They are not individual characters , but are encoded as sequences of the control characters NEL , LF , and CR .", "label": "", "metadata": {}, "score": "69.78991"}
{"text": "Newline Function ( NLF ) .Newline Functions are defined in the Unicode Standard as providing additional mandatory breaks .They are not individual characters , but are encoded as sequences of the control characters NEL , LF , and CR .", "label": "", "metadata": {}, "score": "69.78991"}
{"text": "By default , there is a break opportunity both before and after any inline object .Object - specific line breaking behavior is implemented in the associated object itself , and where available can override the default to prevent either or both of the default break opportunities .", "label": "", "metadata": {}, "score": "69.819824"}
{"text": "By default , there is a break opportunity both before and after any inline object .Object - specific line breaking behavior is implemented in the associated object itself , and where available can override the default to prevent either or both of the default break opportunities .", "label": "", "metadata": {}, "score": "69.819824"}
{"text": "In particular : .The rules are cast into a more regex - style .The rules \" sot \" , \" eot \" , and \" Any \" are added mechanically and have artificial numbers .The rules are given decimal numbers without prefix , so rules such as LB14 are given a number using tenths , such as 14.0 .", "label": "", "metadata": {}, "score": "69.86041"}
{"text": "LD10 .Prohibited Break : No line break opportunity exists between two characters of the given line breaking classes , even if they are separated by one or more space characters .A prohibited break is indicated in the pair table in Table 2 as B ^ A , where B is the character class of the character before and A is the character class of the character after the break , and the optional space characters are not shown .", "label": "", "metadata": {}, "score": "69.88941"}
{"text": "Section 16.8 , Specials .Musical Beams and Slurs .Section 15.11 , Western Musical Symbols .The bidirectional overrides and embeddings and the annotation characters are reasonably robust , because their behavior terminates at paragraph boundaries .Paired format controls for representation of beams and slurs in music are recommended only for specialized musical layout software , and also have limited scope .", "label": "", "metadata": {}, "score": "69.92323"}
{"text": "Match a decimal digit character .\\D Match a non - decimal - digit character .\\wMatch a \" word \" character .\\W Match a non-\"word \" character .\\s Match a whitespace character .\\S Match a non - whitespace character .", "label": "", "metadata": {}, "score": "69.925415"}
{"text": "Match a decimal digit character .\\D Match a non - decimal - digit character .\\wMatch a \" word \" character .\\W Match a non-\"word \" character .\\s Match a whitespace character .\\S Match a non - whitespace character .", "label": "", "metadata": {}, "score": "69.925415"}
{"text": "Match a decimal digit character .\\D Match a non - decimal - digit character .\\wMatch a \" word \" character .\\W Match a non-\"word \" character .\\s Match a whitespace character .\\S Match a non - whitespace character .", "label": "", "metadata": {}, "score": "69.925415"}
{"text": "Match a decimal digit character .\\D Match a non - decimal - digit character .\\wMatch a \" word \" character .\\W Match a non-\"word \" character .\\s Match a whitespace character .\\S Match a non - whitespace character .", "label": "", "metadata": {}, "score": "69.925415"}
{"text": "loose , typically used for short lines such as in newspapers .These have different sets of \" kinsoku \" characters which can not be at the beginning or end of a line ; strict has the largest set , while loose has the smallest .", "label": "", "metadata": {}, "score": "69.936844"}
{"text": "[U+102B , U+102C ] . anusvara .U+1036 . asat sign .U+103A .dot below .U+1037 . visarga .U+1038 .U+1031 MYANMAR VOWEL SIGN E is encoded after its consonant ( as in the earlier example ) , although in visual presentation its glyph appears before ( to the left of ) the consonant form .", "label": "", "metadata": {}, "score": "70.27569"}
{"text": "CM \u00d7 OP .These prescriptions for rewriting the rules are , in principle , valid even where the rules have been tailored as permitted in Section 4 , Conformance .However , for extended context rules such as in Example 7 , additional considerations apply .", "label": "", "metadata": {}, "score": "70.420746"}
{"text": "Slash ( solidus ) is allowed as an additional , limited break opportunity to improve layout of Web addresses .As a side effect , some common abbreviations such as \" w/o \" or \" A / S \" , which normally would not be broken , acquire a line break opportunity .", "label": "", "metadata": {}, "score": "70.540054"}
{"text": "Slash ( solidus ) is allowed as an additional , limited break opportunity to improve layout of Web addresses .As a side effect , some common abbreviations such as \" w/o \" or \" A / S \" , which normally would not be broken , acquire a line break opportunity .", "label": "", "metadata": {}, "score": "70.540054"}
{"text": "LD7 .Mandatory Break : A line must break following a character that has the mandatory break property .Such a break is also known as a forced break and is indicated in the rules as B ! , where B is the character with the mandatory break property .", "label": "", "metadata": {}, "score": "70.54187"}
{"text": "Hence , .[ [ # ] ] ) .matches the literal character \" # \" .To specify a literal white space character , you can escape it with a backslash , like : .[ [ a e i o u \\ ] ] ) / .", "label": "", "metadata": {}, "score": "70.559555"}
{"text": "Please submit corrigenda and other comments with the online reporting form [ Feedback ] .Related information that is useful in understanding this annex is found in Unicode Standard Annex # 41 , \" Common References for Unicode Standard Annexes . \" For the latest version of the Unicode Standard , see [ Unicode ] .", "label": "", "metadata": {}, "score": "70.72561"}
{"text": "So if you want to have the caret as one of the characters you want to match , you either have to escape the caret , or not list it first .Examples : . \" Backslash Sequences .You can put any backslash sequence character class ( with the exception of \\N ) inside a bracketed character class , and it will act just as if you put all the characters matched by the backslash sequence inside the character class .", "label": "", "metadata": {}, "score": "70.736755"}
{"text": "The EM DASH is used to set off parenthetical text .Normally , it is used without spaces .However , this is language dependent .For example , in Swedish , spaces are used around the EM DASH .Line breaks can occur before and after an EM DASH .", "label": "", "metadata": {}, "score": "70.921585"}
{"text": "The EM DASH is used to set off parenthetical text .Normally , it is used without spaces .However , this is language dependent .For example , in Swedish , spaces are used around the EM DASH .Line breaks can occur before and after an EM DASH .", "label": "", "metadata": {}, "score": "70.921585"}
{"text": "The top level documentation about Perl regular expressions is found in perlre .This manual page discusses the syntax and use of character classes in Perl regular expressions .A character class is a way of denoting a set of characters in such a way that one character of the set is matched .", "label": "", "metadata": {}, "score": "70.956856"}
{"text": "D84a Ill - formed code unit subsequence : A non - empty subsequence of a Unicode code unit sequence X which does not contain any code units which also belong to any minimal well - formed subsequence of X. .In other words , an ill - formed code unit subsequence can not overlap with a minimal well - formed subsequence .", "label": "", "metadata": {}, "score": "70.96655"}
{"text": "RIGHT - TO - LEFT MARK U+2028 LINE SEPARATOR U+2029 PARAGRAPH SEPARATOR .Note that skipping white space applies only to the interior of this construct .There must not be any space between any of the characters that form the initial ( ? [ .", "label": "", "metadata": {}, "score": "71.00891"}
{"text": "Chambers English Dictionary ( 7th Edition ) sil\u00b4\u0259 - bl where the stressed syllable is followed by \u00b4 U+02B9 , \u0259 is U+0259 , and - is a hyphen .When splitting a word like abate\u00b4- ment , the stress mark \u00b4 goes after stressed syllable followed by the hyphen .", "label": "", "metadata": {}, "score": "71.115425"}
{"text": "Chambers English Dictionary ( 7th Edition ) sil\u00b4\u0259 - bl where the stressed syllable is followed by \u00b4 U+02B9 , \u0259 is U+0259 , and - is a hyphen .When splitting a word like abate\u00b4- ment , the stress mark \u00b4 goes after stressed syllable followed by the hyphen .", "label": "", "metadata": {}, "score": "71.115425"}
{"text": "For diagnostic purposes , the sample code returns these value to indicate not only the location but also the type of rule that triggered a given break opportunity .INDIRECT_BRK , // % in table .COMBINING_INDIRECT_BRK , // # in table .", "label": "", "metadata": {}, "score": "71.120026"}
{"text": "DESCRIPTION .The top level documentation about Perl regular expressions is found in perlre .This manual page discusses the syntax and use of character classes in Perl regular expressions .A character class is a way of denoting a set of characters in such a way that one character of the set is matched .", "label": "", "metadata": {}, "score": "71.18976"}
{"text": "Use parentheses to override the default associations .Some feedback we 've received indicates a desire for intersection to have higher precedence than union .This is something that feedback from the field may cause us to change in future releases ; you may want to parenthesize copiously to avoid such changes affecting your code , until this feature is no longer considered experimental .", "label": "", "metadata": {}, "score": "71.228676"}
{"text": "Nonetheless , the disc has engendered great interest , and numerous scholars and amateurs spend time discussing the symbols .Mahjong Tile Symbols : U+1F000-U+1F02F .Mahjong tile symbols encode a set of tiles used to play the popular Chinese game of Mahjong .", "label": "", "metadata": {}, "score": "71.37992"}
{"text": "( See Section 9.2 , Legacy Support for Space Character as Base for Combining Marks . )Any rows in Table 2 for line break classes that prohibit breaks after must be handled explicitly .In the example pair table , these are assigned a special entry \" @ \" , which corresponds to a special break action of COMBINING_PROHIBITED_BREAK that triggers the following code : .", "label": "", "metadata": {}, "score": "71.41326"}
{"text": "( See Section 9.2 , Legacy Support for Space Character as Base for Combining Marks . )Any rows in Table 2 for line break classes that prohibit breaks after must be handled explicitly .In the example pair table , these are assigned a special entry \" @ \" , which corresponds to a special break action of COMBINING_PROHIBITED_BREAK that triggers the following code : .", "label": "", "metadata": {}, "score": "71.41326"}
{"text": "Traditionally there is nothing akin to a paragraph in Tibetan text .It is typical to have many pages of text without a paragraph break - that is , without an explicit line break .The closest thing to a paragraph in Tibetan is a new section or topic starting with U+0F12 or U+0F08 .", "label": "", "metadata": {}, "score": "71.42053"}
{"text": "Unlike U+2010 HYPHEN , which always has a visible rendition , the character U+00AD SOFT HYPHEN ( SHY ) is an invisible format character that merely indicates a preferred intraword line break position .If the line is broken at that point , then whatever mechanism is appropriate for intraword line breaks should be invoked , just as if the line break had been triggered by another hyphenation mechanism , such as a dictionary lookup .", "label": "", "metadata": {}, "score": "71.49303"}
{"text": "Unlike U+2010 HYPHEN , which always has a visible rendition , the character U+00AD SOFT HYPHEN ( SHY ) is an invisible format character that merely indicates a preferred intraword line break position .If the line is broken at that point , then whatever mechanism is appropriate for intraword line breaks should be invoked , just as if the line break had been triggered by another hyphenation mechanism , such as a dictionary lookup .", "label": "", "metadata": {}, "score": "71.49303"}
{"text": "The following summarizes the more significant changes in the Unicode Standard Annexes .More detailed notes can be found by looking at the modifications section of each document .Addition of Dual - Joining Group to Table 8 - 7 .In Table 8 - 7 , on p. 279 of The Unicode Standard , Version 5.0 , add a row for a new group , right below the YEH group : . BURUSHASKI YEH BARREE .", "label": "", "metadata": {}, "score": "71.570984"}
{"text": "It additionally affects the shaping of certain vowel characters as described in Section 13.2 , Mongolian , of [ Unicode5.0 ] .NARROW NO - BREAK SPACE ( NNBSP ) is a narrow version of NO - BREAK SPACE , which except for its display width behaves exactly the same in its line breaking behavior .", "label": "", "metadata": {}, "score": "71.62396"}
{"text": "Whitespace .\\s matches any single character that is considered whitespace .The exact set of characters matched by \\s depends on whether the source string is in UTF-8 format and the locale or EBCDIC code page that is in effect .", "label": "", "metadata": {}, "score": "71.69639"}
{"text": "Chapter 9 : South Asian Scripts - I .Indic .A number of useful characters were added to Indic scripts .The Devanagari candra - a , Gurmukhi udaat and yakash , and additional Oriya , Tamil , and Telugu characters were added .", "label": "", "metadata": {}, "score": "71.7112"}
{"text": "The rows of the table are labeled with the possible values of the line breaking property of the leading character in the pair .The columns are labeled with the line breaking class for the following character of the pair .Each intersection is labeled with the resulting line break opportunity .", "label": "", "metadata": {}, "score": "71.909805"}
{"text": "The use of in text is ambigous .The reader must in general use the context to understand if this is read / rr / or /tt/. It is only when a vowel part appears between the two that the reading is unambiguously / rr /.", "label": "", "metadata": {}, "score": "71.91786"}
{"text": "Tabs .TAB .Except for the effect of the location of the tab stops , the tab character acts similarly to a space for the purpose of line breaking .Conditional Hyphens . 00AD .SOFT HYPHEN ( SHY ) .", "label": "", "metadata": {}, "score": "71.95017"}
{"text": "This term is defined to take into account the fact that sequences of Korean conjoining jamo characters behave as if they were a single Hangul syllable character , so that the entire sequence of jamos constitutes a base .For the definition of standard Korean syllable block , see D117 in Section 3.12 , Conjoining Jamo Behavior .", "label": "", "metadata": {}, "score": "72.01719"}
{"text": "4051 - 1995 [ JIS ] provides an example of a similar table - based definition .However , it uses line breaking classes whose membership is not solely determined by the line breaking property ( as in this annex ) , but in some cases by heuristic analysis or markup of the text .", "label": "", "metadata": {}, "score": "72.192184"}
{"text": "( \" [ A - Za - z0 - 9 ] \" ) ascii Any character in the ASCII character set .blank A GNU extension , equal to a space or a horizontal tab ( \" \\t \" ) .cntrl Any control character .", "label": "", "metadata": {}, "score": "72.20174"}
{"text": "( \" [ A - Za - z0 - 9 ] \" ) ascii Any character in the ASCII character set .blank A GNU extension , equal to a space or a horizontal tab ( \" \\t \" ) .cntrl Any control character .", "label": "", "metadata": {}, "score": "72.20174"}
{"text": "In Malayalam - language text , chillu characters never start a word .The chillu letters -nn , - n , -rr , - l , and -ll are quite common ; chillu - k is not very common .Prior to Unicode 5.1 , the representation of text with chillus was problematic , and not clearly described in the text of the standard .", "label": "", "metadata": {}, "score": "72.252304"}
{"text": "The code further assumes that the complex line break analysis for characters with line break class SA is handled in function findComplexBreak , for which the following placeholder is given : . do complex break analysis here // and report any break opportunities in pbrk .", "label": "", "metadata": {}, "score": "72.282326"}
{"text": "Do you fail the match because the string has ss or accept it because it has an s followed by another s ?Perl has chosen the latter .Examples : .Backslash Sequences .You can put any backslash sequence character class ( with the exception of \\N and \\R ) inside a bracketed character class , and it will act just as if you had put all characters matched by the backslash sequence inside the character class .", "label": "", "metadata": {}, "score": "72.30389"}
{"text": "Do you fail the match because the string has ss or accept it because it has an s followed by another s ?Perl has chosen the latter .Examples : .Backslash Sequences .You can put any backslash sequence character class ( with the exception of \\N and \\R ) inside a bracketed character class , and it will act just as if you had put all characters matched by the backslash sequence inside the character class .", "label": "", "metadata": {}, "score": "72.30389"}
{"text": "The East_Asian_Width property A on which the definition of AI is largely based , does not preserve canonical equivalence .In the context of line breaking , the fact that a character has been assigned class AI means that the line break implementation must resolve it to either AL or ID , in the absence of further tailoring .", "label": "", "metadata": {}, "score": "72.31817"}
{"text": "The East_Asian_Width property A on which the definition of AI is largely based , does not preserve canonical equivalence .In the context of line breaking , the fact that a character has been assigned class AI means that the line break implementation must resolve it to either AL or ID , in the absence of further tailoring .", "label": "", "metadata": {}, "score": "72.31817"}
{"text": "For an English text , because every character is encoded with 4 bytes , the size if 4 time bigger than the same text in ASCII encoding .Variable byte length encoding .We need an encoding where ASCII characters are the same , but with the ability to encode any Unicode character .", "label": "", "metadata": {}, "score": "72.467865"}
{"text": "No break opportunity exists if the characters are immediately adjacent .An indirect break is indicated in the pair table in Table 2 as B % A , where B is the character class of the character before and A is the character class of the character after the break .", "label": "", "metadata": {}, "score": "72.531845"}
{"text": "The symbol ^ is used , instead of ! , to avoid confusion with the use of ! to indicate an explicit break .Example 8 .For some implementations it may be difficult to implement LB9 due to the added complexity of its indefinite length context .", "label": "", "metadata": {}, "score": "72.57782"}
{"text": "The symbol ^ is used , instead of ! , to avoid confusion with the use of ! to indicate an explicit break .Example 8 .For some implementations it may be difficult to implement LB9 due to the added complexity of its indefinite length context .", "label": "", "metadata": {}, "score": "72.57782"}
{"text": "Details regarding the conformance changes to the standard for Version 5.0 are specified in the text of the standard itself , including the Unicode Standard Annexes .As noted above , the book will be available in the fourth quarter of 2006 .", "label": "", "metadata": {}, "score": "72.60901"}
{"text": "Each example shows the line break as \" / \" and any inserted hyphens .There are many other cases .In pre - reform German orthography , a \" c \" before the hyphenation point can change into a \" k \" : \" Drucker \" hyphenates into \" Druk- / ker \" .", "label": "", "metadata": {}, "score": "72.660545"}
{"text": "Each example shows the line break as \" / \" and any inserted hyphens .There are many other cases .In pre - reform German orthography , a \" c \" before the hyphenation point can change into a \" k \" : \" Drucker \" hyphenates into \" Druk- / ker \" .", "label": "", "metadata": {}, "score": "72.660545"}
{"text": "OBJECT REPLACEMENT CHARACTER .Object - specific line break behavior is best implemented by querying the object itself , not by replacing the CB line breaking class by another class .This character class contains Japanese small hiragana and katakana .Characters of this class may be treated as either NS or ID .", "label": "", "metadata": {}, "score": "72.67038"}
{"text": "In the pair table , the optional space characters are not shown .LD9 .Indirect Break : A line break opportunity exists between two characters of the given line breaking classes only if they are separated by one or more spaces .", "label": "", "metadata": {}, "score": "72.70248"}
{"text": "The situation is made even more complicated by changes in the Unicode standard in respect of normalization .How the characters for some languages normalize to NFC has changed in later Unicode versions .One example is in the Myanmar block of the BMP .", "label": "", "metadata": {}, "score": "72.77892"}
{"text": "Start and end of text : .There are two special logical positions : sot , which occurs before the first character in the text , and eot , which occurs after the last character in the text .Thus an empty string would consist of sot followed immediately by eot .", "label": "", "metadata": {}, "score": "72.8952"}
{"text": "Unicode properties are defined ( surprise ! ) only on Unicode code points .A warning is raised and all matches fail on non - Unicode code points ( those above the legal Unicode maximum of 0x10FFFF ) .This can be somewhat surprising , .", "label": "", "metadata": {}, "score": "73.011406"}
{"text": "Unicode properties are defined ( surprise ! ) only on Unicode code points .A warning is raised and all matches fail on non - Unicode code points ( those above the legal Unicode maximum of 0x10FFFF ) .This can be somewhat surprising , .", "label": "", "metadata": {}, "score": "73.011406"}
{"text": "Saurashtra is a complex , Brahmic script that uses combining marks and has script - specific digits .It mainly uses common punctuation , but several script - specific punctuation marks may be used .Cham : U+AA00-U+AA5F .Cham is an Austronesian language used in Vietnam and Cambodia .", "label": "", "metadata": {}, "score": "73.013374"}
{"text": "Spaces are used between words .Sundanese has script - specific digits , but uses common punctuation .Hyphenation may occur after any full orthographic syllable .Saurashtra : U+A880-U+A8DF .Saurashtra is an Indo - European language , related to Gujarati and spoken in southern India , mainly in the area around the cities of Madurai , Salem , and Thanjavur .", "label": "", "metadata": {}, "score": "73.04956"}
{"text": "An ill - formed subsequence consisting of more than one code unit could be treated as a single error or as multiple errors .The converter could return , handling as a single error , or , handling each byte of as a separate error , or could take other approaches to signalling as an ill - formed code unit subsequence .", "label": "", "metadata": {}, "score": "73.06492"}
{"text": "Due to the way that Perl parses things , your parentheses and brackets may need to be balanced , even including comments .If you run into any examples , please send them to perlbug@perl.org , so that we can have a concrete example for this man page .", "label": "", "metadata": {}, "score": "73.096115"}
{"text": "Due to the way that Perl parses things , your parentheses and brackets may need to be balanced , even including comments .If you run into any examples , please send them to perlbug@perl.org , so that we can have a concrete example for this man page .", "label": "", "metadata": {}, "score": "73.09613"}
{"text": "( XA)-the class prevents a break opportunity after in specified contexts .( B)-the class allows a break opportunity before in specified contexts .( XB)-the class prevents a break opportunity before in specified contexts .( P)-the class allows a break opportunity for a pair of same characters .", "label": "", "metadata": {}, "score": "73.11678"}
{"text": "Mongolian .Despite its name , this Mongolian character is not an invisible control like SOFT HYPHEN , but rather a visible character like a regular hyphen .Unlike the hyphen , MONGOLIAN TODO SOFT HYPHEN stays with the following line .", "label": "", "metadata": {}, "score": "73.12225"}
{"text": "Mongolian .Despite its name , this Mongolian character is not an invisible control like SOFT HYPHEN , but rather a visible character like a regular hyphen .Unlike the hyphen , MONGOLIAN TODO SOFT HYPHEN stays with the following line .", "label": "", "metadata": {}, "score": "73.12225"}
{"text": "If you use accented Greek characters , for example , but do not use a Unicode font that supports precomposed Greek characters ( like @Arial Unicode MS ) accented characters will appear as empty rectangles in your text .In BibleCS you can change the font in Options / Preferences / Display .", "label": "", "metadata": {}, "score": "73.20911"}
{"text": "For code points above 255 ... .\\s matches exactly the code points above 255 shown with an \" s \" column in the table below .if locale rules are in effect ... .\\s matches whatever the locale considers to be whitespace .", "label": "", "metadata": {}, "score": "73.21416"}
{"text": "All Rights Reserved .The Unicode Consortium makes no expressed or implied warranty of any kind , and assumes no liability for errors or omissions .No liability is assumed for incidental and consequential damages in connection with or arising out of the use of the information or programs contained or accompanying this technical report .", "label": "", "metadata": {}, "score": "73.26457"}
{"text": "Added a note on the behavior of U+200B and U+3000 when lines are justified .Reconciled the data file and description of line breaking classes in Section 5 .Revision 14 : .Added new line breaking classes NL and WJ to better support NEL and Word Joiner .", "label": "", "metadata": {}, "score": "73.4012"}
{"text": "When we did experiments , NFC was the best across the widest variety of front - ends .But no one way was best for every script , font or display engine .It would be best for each front - end to normalize the text before display .", "label": "", "metadata": {}, "score": "73.42966"}
{"text": "This syntax make the caret a special character inside a bracketed character class , but only if it is the first character of the class .So if you want the caret as one of the characters to match , either escape the caret or else do n't list it first .", "label": "", "metadata": {}, "score": "73.53387"}
{"text": "This syntax make the caret a special character inside a bracketed character class , but only if it is the first character of the class .So if you want the caret as one of the characters to match , either escape the caret or else do n't list it first .", "label": "", "metadata": {}, "score": "73.53387"}
{"text": "This syntax make the caret a special character inside a bracketed character class , but only if it is the first character of the class .So if you want the caret as one of the characters to match , either escape the caret or else do n't list it first .", "label": "", "metadata": {}, "score": "73.53387"}
{"text": "\u00d7 No break allowed at the indicated position .\u00f7 Break allowed at the indicated position .The rules are applied in order .That is , there is an implicit \" otherwise \" at the front of each rule following the first .", "label": "", "metadata": {}, "score": "73.684845"}
{"text": "Comments on this feature are welcome ; send email to perl5-porters@perl.org .We can extend the example above : .This matches digits that are in either the Thai or Laotian scripts .Notice the white space in these examples .This construct always has the /x modifier turned on within it .", "label": "", "metadata": {}, "score": "73.68956"}
{"text": "The preceding code fragment ensures that OP CM is handled according to rule LB9 and OP SP CM is handled as OP SP AL according to rule LB10 .When constructing a pair table such as Table 2 , this pair table for Korean syllable blocks in Table 3 is merged with the main pair table for all other line break classes by adding the cells from Table 3 beyond the lower - right corner of the main pair table .", "label": "", "metadata": {}, "score": "73.85244"}
{"text": "LD9 Indirect Break : A line break opportunity exists between two characters of the given line breaking classes only if they are separated by one or more spaces .For an indirect break , a break opportunity exists after the last space .", "label": "", "metadata": {}, "score": "73.86051"}
{"text": "Handling explicit breaks is straightforward in the driver code , although it does clutter up the loop condition and body of the loop a bit .For completeness , the following sample shows how to change the loop condition and add if statements - both before and inside the loop - that handle BK , NL , CR , and LF .", "label": "", "metadata": {}, "score": "73.890785"}
{"text": "Sometimes it is desirable to encode text that includes line breaking decisions and will not be further broken into lines .If such text includes hyphenations , the spelling needs to reflect the changes due to hyphenation : \" tugg/ gummi \" , including the appropriate character for any inserted hyphen .", "label": "", "metadata": {}, "score": "74.13556"}
{"text": "Sometimes it is desirable to encode text that includes line breaking decisions and will not be further broken into lines .If such text includes hyphenations , the spelling needs to reflect the changes due to hyphenation : \" tugg/ gummi \" , including the appropriate character for any inserted hyphen .", "label": "", "metadata": {}, "score": "74.13556"}
{"text": "UAX # 29 .Unicode Collation Algorithm ( UCA ) .UTS # 10 .Update of Definition of case - ignorable .On p. 124 in Section 3.13 , Default Case Algorithms of The Unicode Standard , Version 5.0 , update D121 to include the value MidNumLet in the definition of case - ignorable .", "label": "", "metadata": {}, "score": "74.137344"}
{"text": "where X is any line break class except BK , CR , LF , NL , SP , or ZW .At any possible break opportunity between CM and a following character , CM behaves as if it had the type of its base character .", "label": "", "metadata": {}, "score": "74.20828"}
{"text": "This goes right into my bookmarks bar ... -Gustav Carlson Sep 25 ' 12 at 14:28 .Regarding \" a currency character \" : UK visitors to this question may be suprised and interested to know that , consistent with being able to start with \" a \" currency character , Java identifiers can , legally , begin with the pound symbol ( \u00a3 ) .", "label": "", "metadata": {}, "score": "74.21289"}
{"text": "For each rule containing AL on its left side , add a rule that is identical except for the replacement of AL by CM , but taking care of correctly handling sets of alternate line break classes .For example , for rule .", "label": "", "metadata": {}, "score": "74.23724"}
{"text": "Mandatory break at the indicated position .\u00d7 No break allowed at the indicated position .\u00f7 Break allowed at the indicated position .The rules are applied in order .That is , there is an implicit \" otherwise \" at the front of each rule following the first .", "label": "", "metadata": {}, "score": "74.372406"}
{"text": "[ [ # ] ] ) .matches the literal character \" # \" .To specify a literal white space character , you can escape it with a backslash , like : .[ [ a e i o u \\ ] ] ) / .", "label": "", "metadata": {}, "score": "74.467514"}
{"text": "LD2 Line Break : The position in the text where one line ends and the next one starts .LD3 Line Break Opportunity : A place where a line is allowed to end .Whether a given position in the text is a valid line break opportunity depends on the context as well as the line breaking rules in force .", "label": "", "metadata": {}, "score": "74.55231"}
{"text": "LB1 Assign a line breaking class to each code point of the input .Resolve AI , CB , CJ , SA , SG , and XX into other line breaking classes depending on criteria outside the scope of this algorithm .", "label": "", "metadata": {}, "score": "74.55849"}
{"text": "U+03EF in the Greek and Coptic block , were shown in the code charts in a Bohairic font style .Starting from Version 5.0 , all Coptic letters in the standard , including those in the range U+03E2 .U+03EF , are shown in the code charts in a Sahidic font style , instead .", "label": "", "metadata": {}, "score": "74.64827"}
{"text": "The function returns all of the break opportunities in the array pointed to by pbrk , using the values in the table .On return , pbrk[ich ] is the type of break after the character at index ich .A common optimization in implementation is to determine only the nearest line break opportunity prior to the position of the first character that would cause the line to become overfull .", "label": "", "metadata": {}, "score": "74.68779"}
{"text": "Example 7 .Regular expression - based line breaking engines might get better results using a tailoring that directly implements the following regular expression for numeric expressions : .This is equivalent to replacing the rule LB25 by the following tailored rule : .", "label": "", "metadata": {}, "score": "74.75406"}
{"text": "Example 7 .Regular expression - based line breaking engines might get better results using a tailoring that directly implements the following regular expression for numeric expressions : .This is equivalent to replacing the rule LB25 by the following tailored rule : .", "label": "", "metadata": {}, "score": "74.75406"}
{"text": "Note : Normally , symbols are treated as AL .However , symbols can be added to this line breaking class or classes BA , BB , and B2 by tailoring .Mathematics requires additional specifications for line breaking , which are outside the scope of this annex .", "label": "", "metadata": {}, "score": "74.948784"}
{"text": "Note : Normally , symbols are treated as AL .However , symbols can be added to this line breaking class or classes BA , BB , and B2 by tailoring .Mathematics requires additional specifications for line breaking , which are outside the scope of this annex .", "label": "", "metadata": {}, "score": "74.948784"}
{"text": "CIRCLED DIGIT ZERO .DINGBAT CIRCLED SANS - SERIF DIGIT ONE .DINGBAT NEGATIVE CIRCLED SANS - SERIF NUMBER TEN .Characters with the line break class AI with East_Asian_Width value A typically take the AL line breaking class when their resolved East_Asian_Width is N ( narrow ) and take the line breaking class ID when their resolved width is W ( wide ) .", "label": "", "metadata": {}, "score": "74.9603"}
{"text": "To handle the case of a SP following sot , it is necessary to set cls to a dummy value .Using WJ gives the correct result and , as required , is unaffected by any tailoring .// handle breaks involving a combining mark ( see Section 7.5 )", "label": "", "metadata": {}, "score": "75.38805"}
{"text": "So the valid values would be L [ all ] , Nl , Sc , Pc . -Random832 Aug 2 ' 12 at 20:12 . @GregHewgill is correct .The specification is short and clear , and it 's defined by Character.isJavaIdentifierStart ( ) and Character.isJavaIdentifierPart ( ) .", "label": "", "metadata": {}, "score": "75.44821"}
{"text": "CJK Unified Ideographs Extension E . 2F800 ..2FA1F .CJK Compatibility Ideographs Supplement .Korean .Korean is encoded with conjoining jamos , Hangul syllables , or both .See also JL , JT , JV , H2 , and H3 .", "label": "", "metadata": {}, "score": "75.4594"}
{"text": "Rule LB9 requires extended context for handling combining marks .This extended context must also be built into the code that interprets the pair table .See Section 7.5 , Combining Marks .BK , CR , LF , NL , and SP classes are handled explicitly in the outer loop , as given in the code sample below .", "label": "", "metadata": {}, "score": "75.51405"}
{"text": "Comments on this feature are welcome ; send email to perl5-porters@perl.org .We can extend the example above : .This matches digits that are in either the Thai or Laotian scripts .Notice the white space in these examples .This construct always has the /x modifier turned on .", "label": "", "metadata": {}, "score": "75.58392"}
{"text": "Implementing LB9 .Rule LB9 is implemented in the example pair table in Table 2 by assigning a special # entry in the column marked CM for all rows referring to a line break class that allows a direct or indirect break after itself .", "label": "", "metadata": {}, "score": "75.59355"}
{"text": "Implementing LB9 .Rule LB9 is implemented in the example pair table in Table 2 by assigning a special # entry in the column marked CM for all rows referring to a line break class that allows a direct or indirect break after itself .", "label": "", "metadata": {}, "score": "75.59355"}
{"text": "In the absence of special case handling , rule LB21a is effectively ignored by this example pair table and implementation code .BK , CR , LF , NL , and SP classes are handled explicitly in the outer loop , as given in the code sample below .", "label": "", "metadata": {}, "score": "75.626785"}
{"text": "B % A is equivalent to B \u00d7 A and B SP+\u00f7 A ; in other words , do not break before A , unless one or more spaces follow B. .For more details , see Section 7.5 , Combining Marks .", "label": "", "metadata": {}, "score": "75.824615"}
{"text": "I 'm not sure that actually fully answers the ( implied ) question of which characters may start a Java identifier . -Michael Kj\u00f6rling Aug 2 ' 12 at 9:53 .It seems that the specification leaves the final list of acceptable characters up to the implementation , so it could potentially be different for everybody . -", "label": "", "metadata": {}, "score": "75.94179"}
{"text": "Revision 16 being a proposed update , only changes between revisions 17 and 15 are noted here .Revision 15 : .Added a note on the behavior of U+200B and U+3000 when lines are justified .Reconciled the data file and description of line breaking classes in section 5 .", "label": "", "metadata": {}, "score": "75.998474"}
{"text": "The Unicode Consortium .The Unicode Standard , Version 5.0.0 , defined by : The Unicode Standard , Version 5.0 ( Boston , MA , Addison - Wesley , 2007 .ISBN 0 - 321 - 48091 - 0 ) .A complete specification of the contributory files for Unicode 5.0.0 is found on the page Components for 5.0.0 .", "label": "", "metadata": {}, "score": "76.186035"}
{"text": "See Section 8.1 , Types of Tailoring .See also JT , JV , H2 , and H3 .The NL class acts like BK in all respects ( there is a mandatory break after any NEL character ) .It can not be tailored , but implementations are not required to support the NEL character ; see the discussion under BK .", "label": "", "metadata": {}, "score": "76.24417"}
{"text": "See Section 8.1 , Types of Tailoring .See also JT , JV , H2 , and H3 .The NL class acts like BK in all respects ( there is a mandatory break after any NEL character ) .It can not be tailored , but implementations are not required to support the NEL character ; see the discussion under BK .", "label": "", "metadata": {}, "score": "76.24417"}
{"text": "The Myanmar script was formerly known as the Burmese script , but the term \" Myanmar \" is now preferred .The Myanmar writing system derives from a Brahmi - related script borrowed from South India in about the eighth century to write the Mon language .", "label": "", "metadata": {}, "score": "76.42685"}
{"text": "Because NL and BK behave identically by default , this code can be simplified in implementations where the character classification is changed so that BK will always be substituted for NL when assigning the line break class .Because this optimization does not change the result , it is not considered a tailoring and does not affect conformance .", "label": "", "metadata": {}, "score": "76.62309"}
{"text": "Here are some examples : . / # Match \" . \" s : . )$ / # No match ( dot matches one character ) .Backslash sequences .A backslash sequence is a sequence of characters , the first one of which is a backslash .", "label": "", "metadata": {}, "score": "76.66737"}
{"text": "Here are some examples : . / # Match \" . \" s : . )$ / # No match ( dot matches one character ) .Backslash sequences .A backslash sequence is a sequence of characters , the first one of which is a backslash .", "label": "", "metadata": {}, "score": "76.66737"}
{"text": "Here are some examples : . / # Match \" . \" s : . )$ / # No match ( dot matches one character ) .Backslash sequences .A backslash sequence is a sequence of characters , the first one of which is a backslash .", "label": "", "metadata": {}, "score": "76.66737"}
{"text": "Here are some examples : . / # Match \" . \" s : . )$ / # No match ( dot matches one character ) .Backslash sequences .A backslash sequence is a sequence of characters , the first one of which is a backslash .", "label": "", "metadata": {}, "score": "76.66737"}
{"text": "Dictionary of the English Language ( Samuel Johnson , 1843 ) SY\u00b4LLABLE where \u00b4 is an oversized U+02B9 and follows the vowel of the main syllable ( not the syllable itself ) .Oxford English Dictionary ( 1st Edition ) si\u00b7l\u0103'bl where \u00b7 is a slightly raised middle dot indicating the vowel of the stressed syllable ( similar to Johnson 's acute ) .", "label": "", "metadata": {}, "score": "77.260254"}
{"text": "Dictionary of the English Language ( Samuel Johnson , 1843 ) SY\u00b4LLABLE where \u00b4 is an oversized U+02B9 and follows the vowel of the main syllable ( not the syllable itself ) .Oxford English Dictionary ( 1st Edition ) si\u00b7l\u0103'bl where \u00b7 is a slightly raised middle dot indicating the vowel of the stressed syllable ( similar to Johnson 's acute ) .", "label": "", "metadata": {}, "score": "77.260254"}
{"text": "Unlike a full stop , the danda is not used in number formatting .DEVANAGARI DOUBLE DANDA marks the end of a verse .It also has analogues in other scripts .Other Terminating Punctuation .Termination punctuation stays with the line , but otherwise allows a break after it .", "label": "", "metadata": {}, "score": "77.265396"}
{"text": "Unlike a full stop , the danda is not used in number formatting .DEVANAGARI DOUBLE DANDA marks the end of a verse .It also has analogues in other scripts .Other Terminating Punctuation .Termination punctuation stays with the line , but otherwise allows a break after it .", "label": "", "metadata": {}, "score": "77.265396"}
{"text": "Minimal tables for which the rows and columns are sorted alphabetically can be mechanically compared for differences .This is in contrast to the rules , where identical results can be achieved by sets of rules that can not be easily compared by looking at their textual representation .", "label": "", "metadata": {}, "score": "77.42124"}
{"text": "Minimal tables for which the rows and columns are sorted alphabetically can be mechanically compared for differences .This is in contrast to the rules , where identical results can be achieved by sets of rules that can not be easily compared by looking at their textual representation .", "label": "", "metadata": {}, "score": "77.42124"}
{"text": "The paired stateful controls recommended for use are listed in Table 5 - 6 .Table 5 - 6 .Paired Stateful Controls .Characters .Documentation .Bidi Overrides and Embeddings .Section 16.2 , Layout Controls ; UAX # 9 .", "label": "", "metadata": {}, "score": "77.551414"}
{"text": "This lookback is necessary only if B % A .To handle the case of a SP following sot , it is necessary to set cls to a dummy value .Using WJ gives the correct result and , as required , is unaffected by any tailoring .", "label": "", "metadata": {}, "score": "77.89728"}
{"text": "Additional Text .The yeh barree is a form of yeh used in language such as Urdu .It is a right - joining letter , and has no initial or medial forms .However , some letterforms based on yeh barree used in other languages , such as Burushaski , do take initial and medial forms .", "label": "", "metadata": {}, "score": "78.025566"}
{"text": "All the other escapes accepted by normal bracketed character classes are accepted here as well ; but unrecognized escapes that generate warnings in normal classes are fatal errors here .All warnings from these class elements are fatal , as well as some practices that do n't currently warn .", "label": "", "metadata": {}, "score": "78.13066"}
{"text": "All the other escapes accepted by normal bracketed character classes are accepted here as well ; but unrecognized escapes that generate warnings in normal classes are fatal errors here .All warnings from these class elements are fatal , as well as some practices that do n't currently warn .", "label": "", "metadata": {}, "score": "78.13066"}
{"text": "Update the second paragraph on p. 244 of The Unicode Standard , Version 5.0 , to read as follows : .Replacement Text .Font Styles .Bohairic Coptic uses only a subset of the letters in the Coptic repertoire .It also uses a font style distinct from that for Sahidic .", "label": "", "metadata": {}, "score": "78.21727"}
{"text": "Chapter 11 : Southeast Asian Scripts .The following updated text replaces the Myanmar block introduction on pp .379 - 381 of The Unicode Standard , Version 5.0 .The Myanmar script is used to write Burmese , the majority language of Myanmar ( formerly called Burma ) .", "label": "", "metadata": {}, "score": "78.29704"}
{"text": "Implementing LB10 .This rule can be reflected directly in the example pair table in Table 2 by assigning the same values in the row marked CM as in the row marked AL .Incidentally , this is equivalent to rewriting the rules LB11 - LB31 by duplicating any expression that contains an AL on its lefthand side with another expression that contains a CM .", "label": "", "metadata": {}, "score": "78.319626"}
{"text": "Joseph Becker \" .When SPACE follows NO - BREAK SPACE , there is no break , because there never is a break in front of SPACE .NARROW NO - BREAK SPACE is used in Mongolian .The MONGOLIAN VOWEL SEPARATOR acts like a NARROW NO - BREAK SPACE in its line breaking behavior .", "label": "", "metadata": {}, "score": "78.34399"}
{"text": "The Carian script is an alphabet used to write the Carian language , an ancient Indo - European language of southwestern Anatolia .The script dates from the first millennium BCE and scriptio continua is common .It does not have script - specific digits and has no script - specific punctuation .", "label": "", "metadata": {}, "score": "78.41892"}
{"text": "As with the other default specifications , implementations are free to override ( tailor ) the results to meet the requirements of different environments or particular languages as described in Section 4 , Conformance .For those who do implement the default breaks as specified in this annex , and wish to check that that their implementation matches that specification , a test file has been made available in [ Tests14 ] .", "label": "", "metadata": {}, "score": "78.47522"}
{"text": "For example , th in English can be a digraph ( cathode ) or two separate letters ( cathouse ) ; gn in French can be a digraph ( oignon ) or two separate letters ( gnome ) .In both cases , vowels signs can be used as appropriate : .", "label": "", "metadata": {}, "score": "78.72953"}
{"text": "See also WJ .The following are examples of characters of line break class GL : . 00A0 .NO - BREAK SPACE ( NBSP ) .202F .NARROW NO - BREAK SPACE ( NNBSP ) .180E .MONGOLIAN VOWEL SEPARATOR ( MVS ) .", "label": "", "metadata": {}, "score": "78.83571"}
{"text": "Fixed a few additional typos .Fixed several typos , reformatted and sorted some lists by code points .Reconciled the data file and the description for BB ( 00B4 ) , XX ( PUA ) , AI ( 2015,25C8,PUA ) , ID ( FE6B ) , BA ( 00B4 ) .", "label": "", "metadata": {}, "score": "78.87951"}
{"text": "An indirect break is indicated in the pair table in Table 2 as B % A , where B is the character class of the character before and A is the character class of the character after the break .Even though space characters are not shown in the pair table , an indirect break can occur only if one or more spaces follow B. In the notation of the rules in Section 6 , Line Breaking Algorithm , this would be represented as two rules : B \u00d7 A and B SP + \u00f7 A where the \" + \" sign means one or more occurrences .", "label": "", "metadata": {}, "score": "79.07294"}
{"text": "The # corresponds to a break_action value of COMBINING_INDIRECT_BREAK , which triggers the following code in the sample implementation : .When handling a COMBINING_INDIRECT_BREAK , the last remembered line break class in variable cls is not updated , except for those cases covered by rule LB10 .", "label": "", "metadata": {}, "score": "79.215034"}
{"text": "The # corresponds to a break_action value of COMBINING_INDIRECT_BREAK , which triggers the following code in the sample implementation : .When handling a COMBINING_INDIRECT_BREAK , the last remembered line break class in variable cls is not updated , except for those cases covered by rule LB10 .", "label": "", "metadata": {}, "score": "79.215034"}
{"text": "B \u00f7 A .B % A . B \u00d7 A . where either A or B may be empty .These simplified rules can be automatically translated into a pair table , as in Table 2 .Line breaking analysis then proceeds by pair table lookup as explained below .", "label": "", "metadata": {}, "score": "79.38881"}
{"text": "B \u00f7 A .B % A . B \u00d7 A . where either A or B may be empty .These simplified rules can be automatically translated into a pair table , as in Table 2 .Line breaking analysis then proceeds by pair table lookup as explained below .", "label": "", "metadata": {}, "score": "79.38881"}
{"text": "Such an optimization requires backward traversal of the string instead of forward traversal as shown in the sample code .Implementing LB10 .This rule can be reflected directly in the example pair table in Table 2 by assigning the same values in the row marked CM as in the row marked AL .", "label": "", "metadata": {}, "score": "79.59134"}
{"text": "Line break class SG comprises all code points with General_Category Cs .The line breaking behavior of isolated surrogates is undefined .In UTF-16 , paired surrogates represent non - BMP code points .Such code points must be resolved before assigning line break properties .", "label": "", "metadata": {}, "score": "79.81401"}
{"text": "Line break class SG comprises all code points with General_Category Cs .The line breaking behavior of isolated surrogates is undefined .In UTF-16 , paired surrogates represent non - BMP code points .Such code points must be resolved before assigning line break properties .", "label": "", "metadata": {}, "score": "79.81401"}
{"text": "Opening and closing : .These have special behavior with respect to spaces , and therefore come before rule LB18 . LB13 Do not break before ' ] ' or ' ! 'or ' ; ' or ' / ' , even after spaces .", "label": "", "metadata": {}, "score": "79.832634"}
{"text": "Opening and closing : .These have special behavior with respect to spaces , and therefore come before rule LB18 . LB13 Do not break before ' ] ' or ' ! 'or ' ; ' or ' / ' , even after spaces .", "label": "", "metadata": {}, "score": "79.832634"}
{"text": "LB2 Never break at the start of text . sot \u00d7 .LB3 Always break at the end of text .eot .These two rules are designed to deal with degenerate cases , so that there is at least one character on each line , and at least one line break for the whole text .", "label": "", "metadata": {}, "score": "79.83287"}
{"text": "LB2 Never break at the start of text . sot \u00d7 .LB3 Always break at the end of text .eot .These two rules are designed to deal with degenerate cases , so that there is at least one character on each line , and at least one line break for the whole text .", "label": "", "metadata": {}, "score": "79.83287"}
{"text": "In Table 2 , the rows are labeled with the B class and the columns are labeled with the A class . % denotes an indirect break opportunity : B % A is equivalent to B \u00d7 A and B SP+\u00f7 A ; in other words , do not break before A , unless one or more spaces follow B. .", "label": "", "metadata": {}, "score": "79.92563"}
{"text": "This is like an exclusive or , in that the result is the set of code points that are matched by either , but not both , of the operands .There is one unary operator : . complement .All the binary operators left associate ; \" & \" is higher precedence than the others , which all have equal precedence .", "label": "", "metadata": {}, "score": "79.96614"}
{"text": "\u00d7 EX .\u00d7 IS .\u00d7 SY . LB14 Do not break after ' [ ' , even after spaces .LB15 Do not break within ' \" [ ' , even with intervening spaces .For more information on this rule , see the note in the description for the QU class .", "label": "", "metadata": {}, "score": "79.991165"}
{"text": "Reference [ Cedar97 ] reports on a real - world implementation of a pair table - based implementation of a line breaking algorithm substantially similar to the one presented here , and including the types of customizations presented in this section .", "label": "", "metadata": {}, "score": "80.41358"}
{"text": "Reference [ Cedar97 ] reports on a real - world implementation of a pair table - based implementation of a line breaking algorithm substantially similar to the one presented here , and including the types of customizations presented in this section .", "label": "", "metadata": {}, "score": "80.41358"}
{"text": "This is like an exclusive or , in that the result is the set of code points that are matched by either , but not both , of the operands .There is one unary operator : . complement .All the binary operators left associate , and are of equal precedence .", "label": "", "metadata": {}, "score": "80.433304"}
{"text": "For Myanmar and Malayalam , in particular , the additional characters have significant impact on the representation of text , so those sections are more detailed .For convenience in reference , the discussion of significant character additions is organized roughly by chapters in the standard .", "label": "", "metadata": {}, "score": "80.466995"}
{"text": "LB1 Assign a line breaking class to each code point of the input .Resolve AI , CB , SA , SG , and XX into other line breaking classes depending on criteria outside the scope of this algorithm .In the absence of such criteria , it is recommended that classes AI , SA , SG , and XX be resolved to AL , except that characters of class SA that have General_Category Mn or Mc be resolved to CM ( see SA ) .", "label": "", "metadata": {}, "score": "80.543884"}
{"text": "Pitfalls like this can be avoided by parenthesizing the component pieces : .But any modifiers will still apply to all the components : . matches upper case things .You can avoid surprises by making the components into instances of this construct by compiling them : .", "label": "", "metadata": {}, "score": "80.63142"}
{"text": "These have the isolate and final forms of a Yeh Barree , but are dual - joining , rather than right - joining , like U+06D2 ARABIC LETTER YEH BARREE - a letter used in Urdu and a number of other languages .", "label": "", "metadata": {}, "score": "80.68435"}
{"text": "// save cls of ' before ' character ( unless bypassed by ' continue ' ) .The function returns all of the break opportunities in the array pointed to by pbrk , using the values in the table .On return , pbrk[ich ] is the type of break after the character at index ich .", "label": "", "metadata": {}, "score": "81.10067"}
{"text": "The XX line break class consists of all characters with General_Category Co and all code points with General_Category Cn .Unassigned code positions , private - use characters , and characters for which reliable line breaking information is not available are assigned this default line breaking property by default .", "label": "", "metadata": {}, "score": "81.35355"}
{"text": "For example , in LB22 .AL \u00d7 IN . would become .AL \u00d7 IN .CM \u00d7 IN .Rewriting these rules as indicated here ( and then deleting LB10 ) is fully equivalent to the original rules because rule LB9 already accounts for all CM s that are not supposed to be treated like AL .", "label": "", "metadata": {}, "score": "81.38283"}
{"text": "BPBible , especially older versions , might have a tough time with advanced character sets .Eloquent is probably fine !End - of - line characters .Some Sword utilities may barf when used on text files with Mac style EOLs .", "label": "", "metadata": {}, "score": "81.69595"}
{"text": "Do you fail the match because the string has ss or accept it because it has an s followed by another s ?Perl has chosen the latter .( See note in \" Bracketed Character Classes \" above . )Examples : .", "label": "", "metadata": {}, "score": "81.7638"}
{"text": "Kayah Li :U+A900-U+A92F .The Kayah Li script was devised in 1962 to write the Eastern and Western Kayah Li languages , spoken in Northern Myanmar and Northern Thailand .An orthography for these languages using the Myanmar script also exists .", "label": "", "metadata": {}, "score": "81.84153"}
{"text": "The Vai script was probably invented in the 1830s , and was standardized for modern usage in 1962 at a conference at the University of Liberia .Used in Liberia , Vai is a simple , syllabic script , which is written from left to right .", "label": "", "metadata": {}, "score": "81.86229"}
{"text": "The rules in this subsection and the membership in the classes BK , CM , CR , GL , LF , NL , SP , WJ , and ZW define behavior that is required of all line break implementations ; see Section 4 , Conformance .", "label": "", "metadata": {}, "score": "81.94093"}
{"text": "The rules in this subsection and the membership in the classes BK , CM , CR , GL , LF , NL , SP , WJ , and ZW define behavior that is required of all line break implementations ; see Section 4 , Conformance .", "label": "", "metadata": {}, "score": "81.94093"}
{"text": "qr/ ( ?Pitfalls like this can be avoided by parenthesizing the component pieces : .But any modifiers will still apply to all the components : . matches upper case things .You can avoid surprises by making the components into instances of this construct by compiling them : .", "label": "", "metadata": {}, "score": "81.95998"}
{"text": "\u00f7 A ) , where A is of class CM ._ .Note : Hovering over the cells in a browser with tool - tips enabled reveals the rule number that determines the breaking status for the pair in question .", "label": "", "metadata": {}, "score": "82.03706"}
{"text": "\\vwill match any character that is considered vertical whitespace ; this includes the carriage return and line feed characters ( newline ) plus several other characters , all listed in the table below .\\V will match any character that is not considered vertical whitespace .", "label": "", "metadata": {}, "score": "82.39517"}
{"text": "The differences occur with sequences like ZW SP CL .The test data file matches the results expected of a rule based implementation .The inconsistencies between the two will be addressed in the next revision of this document .A sample HTML file is also available for each that shows various combinations in chart form , in [ Charts14 ] .", "label": "", "metadata": {}, "score": "82.45614"}
{"text": "There is not yet an official national standard for the encoding of Myanmar / Burmese .The current encoding was prepared with the consultation of experts from the Myanmar Information Technology Standardization Committee ( MITSC ) in Yangon ( Rangoon ) .", "label": "", "metadata": {}, "score": "82.71634"}
{"text": "Tim Partridge enlarged the information on dictionary usage .Sun Gi Hong reviewed the information on Korean and provided copious printed samples .Eric Muller reanalyzed the behavior of the soft hyphen and collected the samples .Adam Twardoch provided the Polish example .", "label": "", "metadata": {}, "score": "82.85172"}
{"text": "That is , if either locale or EBCDIC code page is present , they will behave in accordance with those ; if absent , the classes will match only their ASCII - range counterparts .If you disagree with this proposal , send email to perl5-porters@perl.org .", "label": "", "metadata": {}, "score": "82.86127"}
{"text": "i.e. for the Judson 1835 translation , and for the S'gaw Karen translation .[ 2 ] .Notes : .Xiphos and BibleTime ought to be OK from a renderer 's perspective , provided a good system font can be found , but it may be that BibleDesktop would suffer .", "label": "", "metadata": {}, "score": "83.76169"}
{"text": "In German and Swedish , a consonant is sometimes doubled : Swedish \" tuggummi \" ; hyphenates into \" tugg- / gummi \" .In Dutch , a letter can disappear : \" opaatje \" hyphenates into \" opa- / tje \" .", "label": "", "metadata": {}, "score": "84.52073"}
{"text": "In German and Swedish , a consonant is sometimes doubled : Swedish \" tuggummi \" ; hyphenates into \" tugg- / gummi \" .In Dutch , a letter can disappear : \" opaatje \" hyphenates into \" opa- / tje \" .", "label": "", "metadata": {}, "score": "84.52073"}
{"text": "Traditional texts tend not to use spacing and there are no known examples using hyphenation .Modern use of the script may use spaces between words .Sundanese : U+1B80-U+1BBF .The Sundanese script is used to write the Sundanese language , one of the languages of the island of Java in Indonesia .", "label": "", "metadata": {}, "score": "84.771484"}
{"text": "AL \u00d7 IN . would become .AL \u00d7 IN .CM \u00d7 IN .Rewriting these rules as indicated here ( and then deleting LB10 ) is fully equivalent to the original rules because rule LB9 already accounts for all CM s that are not supposed to be treated like AL .", "label": "", "metadata": {}, "score": "84.94176"}
{"text": "# denotes an indirect break opportunity for combining marks following a space : B # A is equivalent to ( B \u00d7 A and B SP+\u00f7 A ) , where A is of class CM ._ denotes a direct break opportunity ( equivalent to \u00f7 as defined above ) .", "label": "", "metadata": {}, "score": "85.15529"}
{"text": "Searching in modules .The simple rule is that if a search request and the indexed text are not normalized the same , there will not be a hit .Modules are prepared for search using StripFilter mechanisms .Front - ends should be sure to call SWModule::StripText ( ) on the user input before passing to the search method to make sure both are normalized the same .", "label": "", "metadata": {}, "score": "85.31845"}
{"text": "Asmus Freytag is the author of the initial version and has added to and maintained the text of this annex .The initial assignments of properties are based on input by Michel Suignard .Mark Davis provided algorithmic verification and formulation of the rules , and detailed suggestions on the algorithm and text .", "label": "", "metadata": {}, "score": "85.503174"}
{"text": "LB4 Always break after hard line breaks .BK !LB5 Treat CR followed by LF , as well as CR , LF , and NL as hard line breaks .CR !LF !NL ! \u00d7 ZW .LB8 Break before any character following a zero - width space , even if one or more spaces intervene .", "label": "", "metadata": {}, "score": "86.106445"}
{"text": "\u00d7 CP .\u00d7 EX .\u00d7 IS .\u00d7 SY . LB14 Do not break after ' [ ' , even after spaces .LB15 Do not break within ' \" [ ' , even with intervening spaces .For more information on this rule , see the note in the description for the QU class .", "label": "", "metadata": {}, "score": "86.513535"}
{"text": "Lycian : U+10280-U+1029C .Lycian is used to write an ancient Indo - European language of Western Anatolia .The script is related to Greek and was used from about 500 BCE until 200 BCE .It is a simple alphabetic script and is written from left to right .", "label": "", "metadata": {}, "score": "86.5381"}
{"text": "Versions prior to 3.0.1 are not documented here .Asmus Freytag created the initial version of this annex and maintained the text for many years .Andy Heninger maintains the text .The initial assignments of properties are based on input by Michel Suignard .", "label": "", "metadata": {}, "score": "87.11391"}
{"text": "To be equivalent , an alternate set of rules must have the same effect .The distinction between a direct break and an indirect break as defined in Section 2 , Definitions , is handled in rule LB18 , which explicitly considers the effect of SP .", "label": "", "metadata": {}, "score": "87.429276"}
{"text": "To be equivalent , an alternate set of rules must have the same effect .The distinction between a direct break and an indirect break as defined in Section 2 , Definitions , is handled in rule LB18 , which explicitly considers the effect of SP .", "label": "", "metadata": {}, "score": "87.429276"}
{"text": "8bitjunkie Jan 22 ' 14 at 13:22 .Note that since Java 8 , _ is a \" deprecated \" identifier .Specifically , the compiler emits the following warning : ( use of ' _ ' as an identifier might not be supported in releases after Java SE 8) . - aioobe Jan 23 ' 14 at 12:54 .", "label": "", "metadata": {}, "score": "88.11309"}
{"text": "Jerry Hall reviewed the sample code .Elika J. Etemad ( fantasai ) reviewed the entire document in an effort to make it easier to reference from external standards .Many others provided additional review of the rules and property assignments .", "label": "", "metadata": {}, "score": "88.14404"}
{"text": "Jerry Hall reviewed the sample code .Elika J. Etemad ( fantasai ) reviewed the entire document in an effort to make it easier to reference from external standards .Many others provided additional review of the rules and property assignments .", "label": "", "metadata": {}, "score": "88.14404"}
{"text": "There is some variation in the set of tiles used , so the Unicode Standard encodes a superset of the tiles used in various traditions of the game .The main set of tiles is made up of three suits with nine tiles each : the Bamboos , the Circles and the Characters .", "label": "", "metadata": {}, "score": "88.245285"}
{"text": "As an example , consider the text \" The : quick : brown : fox : jumped . \" , where the colon ( :) represents a visible word separator , with a break between \" brown \" and \" fox \" .", "label": "", "metadata": {}, "score": "88.86244"}
{"text": "PROHIBITED_BRK , // ^ in table . in rules .The sample implementation of a findLineBrk function below remembers the line break class for the last characters seen , but skips any occurrence of SP without resetting this value .Once character A is encountered , a simple lookback is used to see if it is preceded by a SP .", "label": "", "metadata": {}, "score": "89.448524"}
{"text": "$ str .$ str is now in UTF-8 format .$ str remains in UTF-8 format .Module Install Instructions .To install perlrecharclass , simply copy and paste either of the commands in to your terminal This question is fun to answer for any programming language , not just Java .", "label": "", "metadata": {}, "score": "89.52731"}
{"text": "To install perlrecharclass , simply copy and paste either of the commands in to your terminal", "label": "", "metadata": {}, "score": "89.53814"}
{"text": "Ken Whistler , Rick McGowan and other members of the editorial committee provided valuable feedback .Tim Partridge enlarged the information on dictionary usage .Sun Gi Hong reviewed the information on Korean and provided copious printed samples .Eric Muller reanalyzed the behavior of the soft hyphen and collected the samples .", "label": "", "metadata": {}, "score": "89.97183"}
{"text": "Lepcha : U+1C00-U+1C4F .Lepcha is a Sino - Tibetan language .A Brahmic script derived directly from Tibetan , Lepcha was likely devised around 1720 CE by the Sikkim king .The script is used by many people in Sikkim and West Bengal , especially in the Darjeeling district .", "label": "", "metadata": {}, "score": "90.34193"}
{"text": "The desired visual appearance could be one of the following : . suppress the visible word separator .The : quick : brown fox : jumped .break before the visible word separator .The : quick : brown : fox : jumped .", "label": "", "metadata": {}, "score": "90.54454"}
{"text": "A regular expression that otherwise would compile using /d rules , and which uses this construct will instead use /u .Thus this construct tells Perl that you do n't want /d rules for the entire regular expression containing it .Note that skipping white space applies only to the interior of this construct .", "label": "", "metadata": {}, "score": "90.59145"}
{"text": "The great sa is encoded as U+103F MYANMAR LETTER GREAT SA .Tall aa .The two letters and are both used to write the sound /aa/. In Burmese orthography , both letters are used , depending on the context .In S'gaw Karen orthography , only the tall form is used .", "label": "", "metadata": {}, "score": "90.897385"}
{"text": "LB4 Always break after hard line breaks .BK !LB5 Treat CR followed by LF , as well as CR , LF , and NL as hard line breaks .LB9 Do not break a combining character sequence ; treat it as if it has the line breaking class of the base character in all of the following rules .", "label": "", "metadata": {}, "score": "91.2171"}
{"text": "Match a horizontal whitespace character .\\H Match a character that is n't horizontal whitespace . \\vMatch a vertical whitespace character .\\V Match a character that is n't vertical whitespace .\\N Match a character that is n't a newline .", "label": "", "metadata": {}, "score": "91.51666"}
{"text": "Match a horizontal whitespace character .\\H Match a character that is n't horizontal whitespace . \\vMatch a vertical whitespace character .\\V Match a character that is n't vertical whitespace .\\N Match a character that is n't a newline .", "label": "", "metadata": {}, "score": "91.51666"}
{"text": "Match a horizontal whitespace character .\\H Match a character that is n't horizontal whitespace . \\vMatch a vertical whitespace character .\\V Match a character that is n't vertical whitespace .\\N Match a character that is n't a newline .", "label": "", "metadata": {}, "score": "91.51666"}
{"text": "Match a horizontal whitespace character .\\H Match a character that is n't horizontal whitespace . \\vMatch a vertical whitespace character .\\V Match a character that is n't vertical whitespace .\\N Match a character that is n't a newline .", "label": "", "metadata": {}, "score": "91.51666"}
{"text": "Copyright \u00a9 1998 - 201 5 Unicode , Inc.All Rights Reserved .The Unicode Consortium makes no expressed or implied warranty of any kind , and assumes no liability for errors or omissions .No liability is assumed for incidental and consequential damages in connection with or arising out of the use of the information or programs contained or accompanying this technical report .", "label": "", "metadata": {}, "score": "91.57557"}
{"text": "202F .NARROW NO - BREAK SPACE ( NNBSP ) .180E .MONGOLIAN VOWEL SEPARATOR ( MVS ) .When SPACE follows NBSP , there is no break , because there never is a break in front of SPACE .NARROW NO - BREAK SPACE is used in Mongolian .", "label": "", "metadata": {}, "score": "92.04837"}
{"text": "0F08 .TIBETAN MARK SBRUL SHAD .0F0C .TIBETAN MARK DELIMITER TSHEG BSTAR .0F12 .TIBETAN MARK RGYA GRAM SHAD .The TSHEG BSTAR looks exactly like a Tibetan tsheg , but can be used to prevent a break like no - break space .", "label": "", "metadata": {}, "score": "93.463745"}
{"text": "0F08 .TIBETAN MARK SBRUL SHAD .0F0C .TIBETAN MARK DELIMITER TSHEG BSTAR .0F12 .TIBETAN MARK RGYA GRAM SHAD .The TSHEG BstAR looks exactly like a Tibetan tsheg , but can be used to prevent a break like no - break space .", "label": "", "metadata": {}, "score": "93.463745"}
{"text": "Expect legal java identifiers to change over time - and that 's intentional .The point is to let people write code in human languages .That leads to a hard requirement for allowing change .-James Moore Dec 14 ' 12 at 7:22 .", "label": "", "metadata": {}, "score": "95.894135"}
{"text": "The preceding code fragment ensures that OP CM is handled according to rule LB9 and OP SP CM is handled as OP SP AL according to rule LB10 .Handling explicit breaks is straightforward in the driver code , although it does clutter up the loop condition and body of the loop a bit .", "label": "", "metadata": {}, "score": "96.321915"}
{"text": "PO \u00d7 OP .PO \u00d7 NU . PR \u00d7 OP .PR \u00d7 NU .HY \u00d7 NU .IS \u00d7 NU .NU \u00d7 NU .SY \u00d7 NU .Example pairs : ' $ 9 ' , ' $ [ ' , ' $ - ' , ' -9 ' , ' /9 ' , ' 99 ' , ' , 9 ' , ' 9 % ' ' ] % ' .", "label": "", "metadata": {}, "score": "96.70825"}
{"text": "PO \u00d7 OP .PO \u00d7 NU . PR \u00d7 OP .PR \u00d7 NU .HY \u00d7 NU .IS \u00d7 NU .NU \u00d7 NU .SY \u00d7 NU .Example pairs : ' $ 9 ' , ' $ [ ' , ' $ - ' , ' -9 ' , ' /9 ' , ' 99 ' , ' , 9 ' , ' 9 % ' ' ] % ' .", "label": "", "metadata": {}, "score": "96.70825"}
{"text": "The : quick : brown fox : jumped .break before the visible word separator .The : quick : brown : fox : jumped .break after the visible word separator .The : quick : brown : fox : jumped .", "label": "", "metadata": {}, "score": "96.89574"}
{"text": "The Phaistos disc was found during an archeological dig in Phaistos , Crete about a century ago .The disc probably dates from the mid-18th to the mid-14th century BCE .Unlike other ancient scripts , relatively little is known about the Phaistos Disc Symbols .", "label": "", "metadata": {}, "score": "98.04584"}
{"text": "Tam wisi czerwono- -niebieska flaga .The same convention is used in Portuguese , where the use of hyphens is common , because they are mandatory for verbs forms that include a pronoun .Homographs or ambiguity may arise if hyphens are treated incorrectly : for example , \" disparate \" means \" folly \" while \" dispara - te \" means \" fire yourself \" ( or \" fires onto you \" ) .", "label": "", "metadata": {}, "score": "98.46506"}
{"text": "Tam wisi czerwono- -niebieska flaga .The same convention is used in Portuguese , where the use of hyphens is common , because they are mandatory for verb forms that include a pronoun .Homographs or ambiguity may arise if hyphens are treated incorrectly : for example , \" disparate \" means \" folly \" while \" dispara - te \" means \" fire yourself \" ( or \" fires onto you \" ) .", "label": "", "metadata": {}, "score": "99.430145"}
{"text": "275B .HEAVY SINGLE TURNED COMMA QUOTATION MARK ORNAMENT .275C .HEAVY SINGLE COMMA QUOTATION MARK ORNAMENT .275D .HEAVY DOUBLE TURNED COMMA QUOTATION MARK ORNAMENT . 275E .HEAVY DOUBLE COMMA QUOTATION MARK ORNAMENT .2E00 . .2E01 .", "label": "", "metadata": {}, "score": "99.67677"}
{"text": "275B .HEAVY SINGLE TURNED COMMA QUOTATION MARK ORNAMENT .275C .HEAVY SINGLE COMMA QUOTATION MARK ORNAMENT .275D .HEAVY DOUBLE TURNED COMMA QUOTATION MARK ORNAMENT . 275E .HEAVY DOUBLE COMMA QUOTATION MARK ORNAMENT .2E00 . .2E01 .", "label": "", "metadata": {}, "score": "99.67677"}
{"text": "Rejang : U+A930-U+A95F .The Rejang script dates from at least the mid-18th century .Rejang is spoken by about 200,000 people living in Indonesia on the island of Sumatra .There are five major dialects of Rejang .Rejang is a complex , Brahmic script that uses combining marks .", "label": "", "metadata": {}, "score": "100.43411"}
{"text": "COMBINING_INDIRECT_BRK , // # in table .COMBINING_PROHIBITED_BRK , // @ in table .PROHIBITED_BRK , // ^ in table . in rules .The sample implementation of a findLineBrk function below remembers the line break class for the last characters seen , but skips any occurrence of SP without resetting this value .", "label": "", "metadata": {}, "score": "101.50252"}
