{"text": "No .4,887,212 to Zamora et al . discloses a parser for syntactic analysis of text using a fast and compact technique .After part - of - speech tagging and disambiguation , syntactic analysis occurs in four steps .The grammar of Zamora et al . operates by making multiple passes to guess at noun phrases and verb phrases and then attempts to reconcile the results .", "label": "", "metadata": {}, "score": "29.467659"}
{"text": "Over the past fifteen years there has been significant progress in the field of statistical parsing .Much of the work has focussed on supervised methods , where by ' ' supervised ' ' we mean that the training data consists of sentences and their associated syntactic trees ( for example , Charniak 1997 , Collins 1999 , Roark and Johnson 1999 ) .", "label": "", "metadata": {}, "score": "31.475346"}
{"text": "The data is transformed using a syntactic parser and ontology .The ontology is used as a lexical resource .The output that results is also an ontological entity with a structure that matches the organization of concepts in natural language .", "label": "", "metadata": {}, "score": "31.819193"}
{"text": "The data is transformed using a syntactic parser and ontology .The ontology is used as a lexical resource .The output that results is also an ontological entity with a structure that matches the organization of concepts in natural language .", "label": "", "metadata": {}, "score": "31.819193"}
{"text": "has a complicated analysis , and can not afford semantic status to each word relative to all the other words within the dictionary .The Kucera et al . system uses three parsing stages , each of which needs more than one pass through the sentence to complete its analysis .", "label": "", "metadata": {}, "score": "33.655907"}
{"text": "More recent prominent proponents of the approach are Jacobson and Baldridge .One of the key publications of CCG is ' 'The Syntactic Process ' ' by Mark Steedman .There are various efficient parsers available for CCG .One of the key publications of CCG is ' '", "label": "", "metadata": {}, "score": "34.66985"}
{"text": "The ontology - based parser incorporates both a system and method for converting natural - language text into predicate - argument format that can be easily used by a variety of applications , including search engines , summarization applications , categorization applications , and word processors .", "label": "", "metadata": {}, "score": "35.37268"}
{"text": "They apply a pattern extraction algorithm to induce rules from a development corpus that are then applied to a test corpus .The results are relatively good ( 33 % F - Measure ) for an approach which aims at avoiding manual construction of rules .", "label": "", "metadata": {}, "score": "35.849598"}
{"text": "By this definition , data and methods are cohered in object - oriented programming .In the embodiment presented here , the Syntactic Definition ( 300 ) and the Semantic Definition ( 600 ) are cohered in the Language Component ( 700 ) .", "label": "", "metadata": {}, "score": "37.15415"}
{"text": "The syntactically marked text output from the parsing module is retained in a software \" object \" that may be accessed via object linking and embedding ( OLE ) automation .The user is thus offered direct access to the syntax parse tree without the need for custom programming .", "label": "", "metadata": {}, "score": "37.415085"}
{"text": "The results obtained are comparable to other parsers [ 16 - 18 ] .For the second result , we use a random set from the GENIA corpus in order to assess its performance on the biomedical domain .We have randomly selected 100 sentences from the GENIA corpus , which we have manually annotated for the syntactic relations that the parser can detect .", "label": "", "metadata": {}, "score": "37.452465"}
{"text": "Each and every word in the sentence is now associated with its full grammatical context or syntax structure .The embodiment demonstrates a dynamic procedure that operates in a hierarchical and iterative manner to resolve sentences more efficiently than either an inductive or deductive approach alone .", "label": "", "metadata": {}, "score": "37.45501"}
{"text": "( c ) automatically discerning from the text segments a first collection of semantic relation structures ; and .( d ) storing data from the first collection of semantic relation structures as part of the lexical knowledge base ; . step ( B ) includes : .", "label": "", "metadata": {}, "score": "37.519104"}
{"text": "Applying these patterns to the parsed definitions of \" authority \" and \" storehouse \" yields , in part , the fact that each is the location of \" information .\" It is these patterns , together with the use of a NL parser ( e.g. as described in Jensen , 1986 ) , that enable the automatic extraction of vast numbers of semantic relations across the entire dictionary .", "label": "", "metadata": {}, "score": "37.526474"}
{"text": "( 1991 ) ) is its claim that dictionary entries can be effectively analyzed by a parser designed for broad - coverage text analysis .( It will be understood that a parser is a software tool that takes a text string and produces a structure corresponding thereto . )", "label": "", "metadata": {}, "score": "37.568928"}
{"text": "The idea that dictionaries define a huge interconnected network underlies work by Plate ( in Wilks et al . , 1989 ) , who used co - occurrence patterns between words in LDOCE to produce a graphically - displayed statistical measure of semantic relatedness .", "label": "", "metadata": {}, "score": "37.85593"}
{"text": "Related work includes Klavans et al .( 1990 ) , Ravin ( 1990 ) , Verlardi et al ( 1991 ) and Montemagni and Vanderwende ( 1992 ) .Montemagni ( 1992 ) , meanwhile , shows that this same general methodology can be used to acquire semantic information from on - line dictionaries of Italian .", "label": "", "metadata": {}, "score": "38.135002"}
{"text": "Examples of quite sophisticated patterns have been illustrated .The approach is validated by an evaluation based on the GENIA corpus .The parser described in this paper , the relation mining system , and the evaluation dataset , can be obtained by contacting the authors .", "label": "", "metadata": {}, "score": "38.250748"}
{"text": "All applications making use of the fact that the output of the ontology - based parser is an ontological entity may realize enormous speed benefits from the parameterized ontology that the parser utilizes .The present system imposes a logical structure on text , and a semantic representation is the form used for storage .", "label": "", "metadata": {}, "score": "38.640175"}
{"text": "( 1989 ) discuss distributed lexical knowledge , in which the structure of each lexical entry is represented explicitly and the dictionary as a whole can be queried using a strategy of either query - by - example or unification .In accordance with the preferred embodiment of the present invention , a lexical knowledge base is compiled automatically from a machine - readable source , such as an on - line dictionary or unstructured text , obviating many of the drawbacks associated with the foregoing prior art techniques .", "label": "", "metadata": {}, "score": "38.698006"}
{"text": "There has also been significant progress in the realm of hand - built parsers that adopt certain grammatical frameworks .For example , the PARC LFG parser , developed by Ron Kaplan and colleagues over the past twenty years , with intensive manual labor , performs at a level comparable to current statistical parsers on Penn Treebank data ( Riezler et al .", "label": "", "metadata": {}, "score": "38.922485"}
{"text": "Parsing the corpus .We use a robust , deep - syntactic , broad - coverage probabilistic Dependency Parser [ 11 ] , which identifies grammatical relations between the heads of chunks , chunk - internal dependencies , and the majority of long - distance dependencies [ 12 ] .", "label": "", "metadata": {}, "score": "39.676773"}
{"text": "More recently , semantic information has been extracted from on - line dictionaries in a two - step procedure , first parsing the dictionary text ( the definition and/or example sentences ) ; and then applying patterns to this syntactic information in order to improve the accuracy of the identification of semantic information .", "label": "", "metadata": {}, "score": "39.702595"}
{"text": "More impressively , there has been recent work by Dan Klein and Chris Manning on machine learning procedures ( Klein & Manning 2002 , Klein & Manning 2004 ) that infer parsers in an unsupervised fashion from raw text annotated with part - of- speech tags .", "label": "", "metadata": {}, "score": "40.779713"}
{"text": "b. A set of logical rules is applied to the syntactic structure to produce a corresponding logical form .A semantic relation structure is then extracted from the logical form .This is done by the application of a set of heuristic rules - these serving to correlate particular syntactic and lexical patterns with corresponding semantic relations .", "label": "", "metadata": {}, "score": "40.791313"}
{"text": "Typically such systems make use of external resources , such as domain Ontologies , in order to detect the most likely combination of the constituents of the sentences , based on their semantic types .Some examples are [ 23 - 26 ] .", "label": "", "metadata": {}, "score": "40.84304"}
{"text": "In our work , we have found it best to use a relatively small set of semantic relations .Of course in other embodiments , larger or smaller sets of relations can be used .Further , our preferred implementation does not extract each of these relations in both the forward linking and backward linking operations .", "label": "", "metadata": {}, "score": "41.280907"}
{"text": "No .5,386,406 to Hedin et al . discloses a system for converting natural - language expressions into a language - independent conceptual schema .The output of the Hedin et al . system is not suitable for use in a wide variety of applications ( e.g. machine translation , document summarization , categorization ) .", "label": "", "metadata": {}, "score": "41.577427"}
{"text": "Given this grammar , an LALR parser generator would fail to produce a parser because of a shift / reduce conflict .The modified LALR parser generator algorithm that the ontological parser of the present invention uses must be aware of the possibility of more than one possible course of action , and should recursively try both actions .", "label": "", "metadata": {}, "score": "41.598274"}
{"text": "system checks only for syntactic correctness .U.S. Pat .No .4,914,590 to Loatman et al . discloses a natural language understanding system .The goal of the Loatman et al . system is to provide a formal representation of the context of a sentence , not merely the sentence itself .", "label": "", "metadata": {}, "score": "41.69278"}
{"text": "Sentence parsing can be made more efficient by concentrating on a reduced number of different syntactic identifiers in the analysis .While a dictionary may provide a variety of subclasses of parts of speech , it has been found that parsing may be completed on the basis of the major parts of speech classes .", "label": "", "metadata": {}, "score": "41.791115"}
{"text": "Tokuume et al . , U.S. Pat .No .5,101,349 , discloses a natural language processing system that makes provisions for validating grammar from the standpoint of syntactic well - formedness , but does not provide facilities for validating the semantic well - formedness of feature structures .", "label": "", "metadata": {}, "score": "41.7954"}
{"text": "1 , pp .35 - 42 .Klein , Dan and Manning , Christopher .Corpus - Based Induction of Syntactic Structure : Models of Dependency and Constituency . ' ' Proceedings of the 42nd Annual Meeting of the Association for Computational Linguistics ( ACL 2004 ) .", "label": "", "metadata": {}, "score": "41.90124"}
{"text": "The antecedents for this general approach to grammar and language acquisition go back to ' ' Syntactic Structures ' ' ( 1957 ) and ' 'Aspects of the Theory of Syntax ' ' ( 1964 ) .The P&P view replaced a model of an innate language faculty consisting of a grammar evaluation metric applied to a set of grammars generated by a universal schema of grammar .", "label": "", "metadata": {}, "score": "41.983257"}
{"text": "However , the intended output of the parser is the set of predicate structures that it builds for each sentence , and so the preferred parse tree receiver is a software module called a parse tree converter , which extracts predicate structures from the parse trees .", "label": "", "metadata": {}, "score": "42.010612"}
{"text": "FIG .1 : .This step may entail two discrete substeps : .a. A set of syntactic rules is applied to the text segment to produce a corresponding syntactic structure .This can be done using either a grammar designed specifically for the on - line dictionary being used , but more preferably involves the application of a broad - coverage grammar to the definition in order to facilitate processing multiple monolingual dictionaries .", "label": "", "metadata": {}, "score": "42.057865"}
{"text": "In other cases , syntactic ambiguity will result in multiple possible parses .The parser should not generate any output trees for a sentence that does not reduce according to the rules ; rather it should generate a tree for every possible parse of an ambiguous sentence .", "label": "", "metadata": {}, "score": "42.09949"}
{"text": "The parser uses a hand - written grammar expressing linguistic competence and a statistical language model that calculates lexicalized attachment probabilities , thus expressing linguistic performance .The parser expresses distinctions that are especially important for a predicate - argument based deep syntactic representation , as far as they are expressed in the Penn Treebank training data [ 15 ] .", "label": "", "metadata": {}, "score": "42.10746"}
{"text": "The code will return to the dictionary to identify the syntactic identifier most commonly used for the subject word .The WordNet dictionary , for example , provides a polysemy count which gives a numerical determination of which syntactic identifier is the most commonly used for a given word .", "label": "", "metadata": {}, "score": "42.212265"}
{"text": "The LDC distribution also contains machine - readable versions of the data , which contain the syntactic derivations and the corresponding lists of word - word dependencies , as well as a file that is searchable by Doug Rohde 's TGrep2 ( version 1.15 ) .", "label": "", "metadata": {}, "score": "42.21276"}
{"text": "This is accomplished by starting at the new top headword node and traversing , in a top - down manner , the semantic relation links ( original or inverse , depending on the direction ) to other nodes as needed to output the structure .", "label": "", "metadata": {}, "score": "42.289783"}
{"text": "The parser converts the sequence of ontological entities into predicate structures using a two - stage process that analyzes the grammatical structure of the sentence , and then applies rules to it that bind arguments into predicates .Ontological parsing is a grammatical analysis technique built on the proposition that the most useful information that can be extracted from a sentence is the set of concepts within it , as well as their formal relations to each other .", "label": "", "metadata": {}, "score": "42.329514"}
{"text": "The system and method of the present invention isolates predicate - argument relationships into a consistent format regardless of text types .The predicate - argument relationships can be used in search , grammar - checking , summarization , and categorization applications , among others .", "label": "", "metadata": {}, "score": "42.58862"}
{"text": "On the second level we combine various patterns into a single semantic rule , which normalizes many possible syntactic variants ( e.g. active , passive , nominalizations ) .On the third level we combine semantic rules with lexical and ontological constraints to obtain very specialized queries that can detect a given domain - specific relation , as specified by the user .", "label": "", "metadata": {}, "score": "42.595764"}
{"text": "The modular design of the ontological parser permits the use of any part - of - speech - tagged ontology , with only minimal rewriting of the lexer and parser to accommodate format - specific issues .However , maximum benefits are recognized through the use of a parameterized ontology , an innovation heretofore unavailable in any parser or information retrieval system .", "label": "", "metadata": {}, "score": "42.99621"}
{"text": "In this way , if syntactic appearances are unrecognized or a missing dependency is described by a set of syntactic appearances , the syntactic appearances of the Component Language ( 800 ) can be used to enable an automatic discovery of the Language Component ( 700 ) .", "label": "", "metadata": {}, "score": "43.0071"}
{"text": "This section describes the approach taken in analyzing the input corpus .The tools that we use for such processing steps are organized into a Natural Language Processing pipeline including a fast , deep - linguistic statistical dependency parser .The pipeline and the parser are described separately below .", "label": "", "metadata": {}, "score": "43.137794"}
{"text": "This limits the versatility of the techniques .U.S. Pat .No .4,864,502 to Kucera et al . discloses a device that tags and parses natural - language sentences , and provides interactive facilities for grammar correction by an end user .", "label": "", "metadata": {}, "score": "43.468346"}
{"text": "It is also possible to output FOL formulas translated from the DRSs .CCGbank pairs syntactic derivations with sets of word - word dependencies which approximate the underlying predicate - argument structure .The translation process and linguistic analyses are explained in the manual .", "label": "", "metadata": {}, "score": "44.167862"}
{"text": "Architecture .In one embodiment , the invention is implemented through Language Components ( 700 ) , a Dependency Analyzer ( 900 ) , a Request Creator ( 1200 ) , a Download Manager ( 1201 ) , and a Request Broker ( 1300 ) .", "label": "", "metadata": {}, "score": "44.210747"}
{"text": "The design of the ontology - based parser is based on the premise that predicate structures represent a convenient approach to searching through text .Predicate structures constitute the most compact possible representation for the relations between grammatical entities .Most of the information required to construct predicates does not need to be stored , and once the predicates have been derived from a document , the predicates may be stored as literal text strings , to be used in the same way .", "label": "", "metadata": {}, "score": "44.33974"}
{"text": "So , you say that the elaboration can be integrated into the parsing .That is a good argument .I actually see no reason to build the parse tree since it seems to me that VHDL can be elaborated in single pass .", "label": "", "metadata": {}, "score": "44.476482"}
{"text": "Once the change has been made limiting an unresolved token to a particular syntactic identifier , the narrowed set of syntactic possibilities are sent back to the inductive merger processor 34 to try to complete the sentence parsing .Processing proceeds in this matter until the sentence has been parsed into syntactic identifiers that fall within an acceptable sentence structure .", "label": "", "metadata": {}, "score": "44.55488"}
{"text": "The second method is to perform research from the ground up in defining an ontology , assigning elements on an as - needed basis .Since minimal representation size is a main goal of parameterizing the ontology , one would want to eliminate many of the redundancies found in general - purpose ontologies such as WordNet .", "label": "", "metadata": {}, "score": "44.647522"}
{"text": "The associated code may not only be used to build structures associated with phrases , but may also be used for syntactic and semantic tests , printout actions ( for example for tracing ) , etc . during the parsing process .", "label": "", "metadata": {}, "score": "44.789646"}
{"text": "This code operates in conjunction with a set of rules .While the rules may be built into the inductive processor it is preferable and advantageous to provide a replaceable database that contains the rules to be applied .In this manner , rules can be easily added , deleted or modified .", "label": "", "metadata": {}, "score": "44.802383"}
{"text": "Even more puzzling is the lack of any serious attempt to build a P&P - style parser that is able to learn from unannotated input ( as Klein and Manning 's systems do ) .It seems to us that if the claims on behalf of P&P approaches are to be taken seriously , it is an obvious requirement that someone provide a computational learner that incorporates P&P mechanisms , and uses it to demonstrate learning of the grammar of a natural language .", "label": "", "metadata": {}, "score": "44.957943"}
{"text": "Amsler 's concept was also cited by Chodorow et al .( 1985 ) in developing a tool for helping human users disambiguate hyper / hyponym links among pairs of lexical items ; again , however , this approach was limited to hypernym and hypernym_of semantic relations .", "label": "", "metadata": {}, "score": "45.087234"}
{"text": "Additionally , semantic feature compatibility checking is not possible with Jensen 's system .U.S. Pat .No .5,721,938 to Stuckey discloses a parsing technique , which organizes natural language into symbolic complexes , which treat all words as either nouns or verbs .", "label": "", "metadata": {}, "score": "45.401546"}
{"text": "Given the complexity of the task , typically only a few semantic relations are output , for which the confidence is very high , based on the analysis of large quantities of documents .Our aim is to show how a deep - linguistic approach can be used in a Text Mining application , offering high - precision relation extraction , while at the same time retaining a high recall .", "label": "", "metadata": {}, "score": "45.440945"}
{"text": "We have designed the search algorithm so that a few basic syntactic patterns are expanded by default .This includes for example the case of conjunctions , as it can be seen in one of the examples shown in figure 2 .", "label": "", "metadata": {}, "score": "45.49535"}
{"text": "Implementation of Backlinks .After a definition and/or example sentence has been parsed , the resulting parse structures are first subjected to a set of heuristic rules whose goal is to identify syntactic and lexical patterns which are consistently associated with some specific semantic relation , such as instrument or location .", "label": "", "metadata": {}, "score": "45.628357"}
{"text": "The Dependency Analyzer ( 900 ) locates both syntactic appearances that are unrecognized and syntactic appearances that reference a dependency that is not on the local computer .In the first case , the SkipAhead Parser ( 902 ) is used to determine the syntactic appearances that are unrecognized .", "label": "", "metadata": {}, "score": "45.653465"}
{"text": "In addition to eliminating syntactic possibilities , there are rules in this set which can identify verb phrases or noun phrases , for example .The iterative inductive processor in accordance with the preferred embodiment matches consecutive tokens 26 from the sentence against the first set of rules .", "label": "", "metadata": {}, "score": "45.699013"}
{"text": "Parsing / Extracting .The first step in extracting information from lexical entries in a dictionary involves parsing the definition and/or example sentences using a broad - coverage grammar of English .The resulting parse structures are then subjected to a set of heuristic rules whose goal is to identify syntactic and lexical patterns which are consistently associated with some specific semantic relation .", "label": "", "metadata": {}, "score": "45.718998"}
{"text": "For example , in some applications it may be desirable to generate an enhanced knowledge base on an as - needed basis for selected term(s ) out of the entire dictionary or other corpus .This approach is particularly well suited for applications in which the knowledge base is not based on a static source ( i.e. a dictionary ) , but is based on a source that is continuously presented with new information .", "label": "", "metadata": {}, "score": "45.804276"}
{"text": "By extrapolation we get the approximative recall results in table 3 .Related work .The task of relation extraction can be performed at different levels of complexity .The systems that deal with this task can be broadly classified in three categories , according to the amount of linguistic information brought to bear on the problem .", "label": "", "metadata": {}, "score": "45.889023"}
{"text": "The sentence receiver is a software abstraction that may be realized through any number of techniques .The parser 230 takes a sequence of instances from an ontology , in the form of a sentence , and converts them into a collection of parse trees .", "label": "", "metadata": {}, "score": "45.945194"}
{"text": "The advantages of the present system are the provision of a semantic representation of comparable utility with significantly reduced processing requirements , and no need to train the system to produce semantic representations of text content .The system and method for ontological parsing of natural language according to the present invention has a far simpler analysis process than conventional parsing techniques , and utilizes a dictionary containing tags with syntactic information .", "label": "", "metadata": {}, "score": "46.19963"}
{"text": "Packrat parsing is an adaptation of a 30-year - old tabular parsing algorithm that was never put into practice until now .A packrat parser can recognize any string defined by a TDPL grammar in linear time , providing the power and flexibility of a backtracking recursive descent parser without the attendant risk of exponential parse time .", "label": "", "metadata": {}, "score": "46.23467"}
{"text": "In our implementation , we used a file access method which supports direct access of keys based on a binary search of a key index .The data stored with a key in our implementation may be arbitrarily long , thereby easily accommodating the main semantic relation structures stored in each keyed entry .", "label": "", "metadata": {}, "score": "46.258163"}
{"text": "In fact many robust parsers map Penn Tree Bank analyses into alternative formal representations .All that is required is that the designer of the parser also produce code that converts from the P&P parser 's syntactic structures back into appropriate treebank structures , so that proper evaluation of its output is possible .", "label": "", "metadata": {}, "score": "46.40707"}
{"text": "The ontology - based parser contains functional components for receiving documents in a plurality of formats , tokenizing them into instances of concepts from an ontology , and assembling the resulting concepts into predicates .The ontological parser has two major functional elements , a sentence lexer and a parser .", "label": "", "metadata": {}, "score": "46.459198"}
{"text": "Currently , however , none of these techniques appears capable of providing the semantic detail required for processing unrestricted text .Our method is rooted in the tradition which attempts to construct a semantic knowledge base by identifying and extracting semantic information from a machine - readable version of a published dictionary ( henceforth \" on - line dictionary \" ) .", "label": "", "metadata": {}, "score": "46.619106"}
{"text": "Given a dictionary in book form , the only way to find information about a given word involves looking it up , then exploring the semantic properties of any words mentioned in its definition , and so on .Once the data are available on - line , however , we exploit dictionary access strategies which involve not only forward - linking , but also backward - linking .", "label": "", "metadata": {}, "score": "46.63208"}
{"text": "The ontology - based parser is designed around the idea that predicate structures represent a convenient approach to searching through text .Predicate structures constitute the most compact possible representation for the relations between grammatical entities .Most of the information required to construct predicates does not need to be stored , and once the predicates have been derived from a document , the predicates may be stored as literal text strings , to be used in the same way .", "label": "", "metadata": {}, "score": "46.670685"}
{"text": "In this way , a SkipAhead Parser ( 902 ) can determine what parts of a language are unrecognized on a local system and collect the information necessary for locating them .As an example of a SkipAhead Parser ( 902 ) in action , consider a complex mathematical statement .", "label": "", "metadata": {}, "score": "46.73519"}
{"text": "The previous techniques of natural language processing are often limited to the performance of a particular purpose and can not be used for other purposes .Conventional parsing techniques may be designed to function as part of a grammar checking system , but can not function as part of a search engine , summarization application , or categorization application .", "label": "", "metadata": {}, "score": "46.776913"}
{"text": "Such patterns can be manually written , or , more frequently , automatically induced from a manually annotated corpus .An example of this approach is given by [ 22 ] .While surface patterns are easy to learn and computationally efficient , they fail to generalize on even the most obvious linguistic variations .", "label": "", "metadata": {}, "score": "46.811127"}
{"text": "For example , the number of sets of rules may be increased beyond two and the particular syntactic identifiers that are used in the program may vary according to the needs of a particular application .These and other changes can be made without departing from the spirit and scope of the invention and without diminishing its attendant advantages .", "label": "", "metadata": {}, "score": "46.83044"}
{"text": "In another embodiment , the Language Component ( 700 ) is modeled after the Sym and coheres Software Components ( 500 ) and Language Elements ( 100 ) .Each Language Element ( 100 ) is a piece of grammar that is a Composition ( 101 ) of other Language Element References ( 102 ) and Raw Data ( 103 ) .", "label": "", "metadata": {}, "score": "46.83938"}
{"text": "We believe that when this method is applied to any number of dictionaries ( or other texts ) , the resulting semantic knowledge base will be rich enough to support processing unrestricted text in NLP and to provide at least some of the common sense knowledge that AI requires .", "label": "", "metadata": {}, "score": "47.08885"}
{"text": "( b ) machine - implemented means for extracting from the logical form a semantic relation structure , the semantic relation structure including at least a headword , a semantic relation , and a value ; .( c ) computer memory defining a lexical knowledge base in which the semantic relation structure associated with the headword is stored ; and .", "label": "", "metadata": {}, "score": "47.147686"}
{"text": "This generalized approach allows different Component Languages ( 800 ) to define descriptions of Language Components ( 700 ) in different ways .An Embodiment of the SkipAhead Parser .The SkipAhead Parser ( 902 ) works by saving the names of Language Elements ( 100 ) that failed to match with the position they failed to match at while parsing data .", "label": "", "metadata": {}, "score": "47.201656"}
{"text": "MedScan [ 28 ] makes use of a syntactic parser ( which typically yields a large number of analyses for each sentence ) and a semantic processor which transforms each syntactic tree into a corresponding semantic tree .Information extraction rules are then used to prune the large number of trees and extract from them the information of interest .", "label": "", "metadata": {}, "score": "47.252075"}
{"text": "The processor has access to at least a first and second set of rules .Systems and methods for parsing a natural language sentence US 6539348 B1 .Abstract .A method , computer program product , and apparatus for parsing a sentence which includes tokenizing the words of the sentence and putting them through an iterative inductive processor .", "label": "", "metadata": {}, "score": "47.41919"}
{"text": "( A ) using a computer to automatically process a text and identify at least a first semantic relation structure therein , said first semantic relation structure including at least four elements ; .( B ) using the computer to invert the first semantic relation structure to yield a second corresponding , inverted semantic relation structure ; and .", "label": "", "metadata": {}, "score": "47.513992"}
{"text": "Then , for each Child Description ( 1400 ) , the Request Broker ( 1300 ) loads the Syntactic Definition ( 300 ) and the Component Name ( 1401 ) and uses the SkipAhead Parser ( 902 ) to see if it successfully matches the data .", "label": "", "metadata": {}, "score": "47.567688"}
{"text": "No .5,146,496 to Jensen discloses a technique for identifying predicate - argument relationships in natural language text .The Jensen system must create intermediate feature structures to store semantic roles , which are then used to fill in predicates whose deep structures have missing arguments .", "label": "", "metadata": {}, "score": "47.69538"}
{"text": "Among the systems that participated , the experience of [ 30 ] shows that an approach based on syntactic information can deliver very good results .A different approach , based on learning simple surface patterns ( which encode only lexical information , word order and PoS tags ) is followed by [ 31 ] .", "label": "", "metadata": {}, "score": "47.70239"}
{"text": "Once extracted , these relations are explicitly added to the words from whose definitions they were obtained , thus creating a network of labeled links between words in the dictionary ( i.e. the identified semantic relations serve as the links ) .", "label": "", "metadata": {}, "score": "47.75808"}
{"text": "We describe and evaluate an environment supporting the extraction of domain - specific relations , such as protein - protein interactions , from a richly - annotated corpus .We use full , deep - linguistic parsing and manually created , versatile patterns , expressing a large set of syntactic alternations , plus semantic ontology information .", "label": "", "metadata": {}, "score": "47.766354"}
{"text": "The first linguistic and psycholinguistic arguments for basing the grammar on combinators were put forth by Mark Steedman and Anna Szabolcsi .More recent prominent proponents of the approach are Jacobson and Baldridge .One of the key publications of CCG is The Syntactic Process by Mark Steedman .", "label": "", "metadata": {}, "score": "47.837654"}
{"text": "There are some researchers who claim that dictionaries are too impoverished a source of semantic information to ever serve as the lexical knowledge base for sophisticated semantic processing ( e.g. Atkins , Kegl , and Levin , 1986 ) .This pessimistic view seems to be supported by a casual examination of dictionary entries .", "label": "", "metadata": {}, "score": "47.874485"}
{"text": "This is identical to the sentence produced above , and results in the same parse tree , and the same predicate structure .Thus , when the ontological parser in this example embodiment receives this question , it generates a predicate identical to that from a declarative sentence , and they can be matched .", "label": "", "metadata": {}, "score": "47.938652"}
{"text": "This continues until neither the first set of rules nor the second set of rules can make any further reductions in the syntactic interpretations .While it would be highly desirable to have the sentence fully resolved at the completion of the iterative inductive processing , at times this will not be the case .", "label": "", "metadata": {}, "score": "47.978027"}
{"text": "In addition , the ontology - based parser is designed to permit the use of arithmetic operations instead of string operations in text - processing programs , which employ the ontology - based parser .The output predicate structures contain numeric tags that represent the location of each concept within the ontology .", "label": "", "metadata": {}, "score": "47.99376"}
{"text": "In addition , the ontology - based parser is designed to permit the use of arithmetic operations instead of string operations in text - processing programs , which employ the ontology - based parser .The output predicate structures contain numeric tags that represent the location of each concept within the ontology .", "label": "", "metadata": {}, "score": "47.99376"}
{"text": "Syntactic identifiers encompasses parts of speech as well as other indicators of word usage .The tokens comprised of the list of syntactic identifiers are used consecutively and compared with a first list of rules in order to produce a narrower set of possible syntactic interpretations of the words of the sentence .", "label": "", "metadata": {}, "score": "48.036324"}
{"text": "Constructing such semantic knowledge by hand as required in NLP , and possibly AI , is a significant problem .The problem is : how to acquire the semantic knowledge required for an unrestricted domain .There have been some attempts to hand - code highly structured semantic knowledge for unrestricted NLP : Dahlgren ( 1988 ) ; Lenat and Guha ( 1989 ) ; and Miller et al .", "label": "", "metadata": {}, "score": "48.036415"}
{"text": "By default , the parser that was generated will not print out error messages to the screen .The user will have to do this either by printing the returned error messages , or by inserting tests and print instructions in the Erlang code associated with the syntax rules of the grammar file .", "label": "", "metadata": {}, "score": "48.060005"}
{"text": "A method for generating a lexical knowledge base in a memory of a machine , said generating comprising the steps : .( a ) parsing a segment of text to obtain a logical form corresponding thereto using a natural language parser associated with said machine ; .", "label": "", "metadata": {}, "score": "48.32142"}
{"text": "In most implementations , language elements are defined in terms of other language elements and raw data .One embodiment of a language element can be seen in .FIG .1 .The term semantic relationship is defined for the purposes of the embodiment presented here as the meaning of the syntactic relationships in a program .", "label": "", "metadata": {}, "score": "48.468754"}
{"text": "In the predicate representation scheme of the present invention , there are only a few distinct frames for predicate structures , as many as needed to cover the different numbers of arguments taken by different verbs .Predicates may be enhanced with selectional restriction information , which can be coded automatically for entire semantic classes of words , rather than on an individual basis , because of the ontological scheme .", "label": "", "metadata": {}, "score": "48.762524"}
{"text": "More meaningful semantic relations can thereby be found .( In the preferred methodology , the first pass seeks to extract one set of semantic relations [ e.g. hypernym / hyponym ] , and the second pass seeks to extract a different set of semantic relations [ e.g. location , location_of , part , part_of]. )", "label": "", "metadata": {}, "score": "48.817554"}
{"text": "As noted , we have observed that most of the lexical information available in a dictionary for a given term is to be found in the entries for other words that mention that word , rather than in the entry for the term itself .", "label": "", "metadata": {}, "score": "49.065746"}
{"text": "These special patterns extract further semantic relations based on the lexical and syntactic / logical form configuration of which the initial word to be extracted is the center .These special patterns allow very deep levels of embedding of semantic relations to be identified for all levels of the logical form analysis , notably because they apply recursively .", "label": "", "metadata": {}, "score": "49.077126"}
{"text": "The following is an example of a sentence and demonstrates both how it is parsed as a sentence within a document , and how a question to an information retrieval system would produce matching predicates to retrieve the document containing this sentence .", "label": "", "metadata": {}, "score": "49.17425"}
{"text": "The parser of the Stuckey system is only suitable for grammar - checking applications .U.S. Pat .No .5,960,384 to Brash discloses a parsing method and apparatus for symbolic expressions of thought such as English - language sentences .The parser of the Brash system assumes a strict compositional semantics , where a sentence 's interpretation is the sum of the lexical meanings of nearby constituents .", "label": "", "metadata": {}, "score": "49.19182"}
{"text": "So as not to leave a sentence incompletely parsed , the syntactic possibilities are passed on to deductive token merging code .The deductive code reviews possible sentence types and determines which ones are possible given the syntactic possibilities that remain following the inductive merging process .", "label": "", "metadata": {}, "score": "49.325172"}
{"text": "SUMMARY OF THE INVENTION .The foregoing and other deficiencies are addressed by the present invention , which is directed to an ontology - based parser for natural language processing .More particularly , the present invention relates to a system that provides a simple knowledge - base - style representation format for the manipulation of natural - language documents .", "label": "", "metadata": {}, "score": "49.39362"}
{"text": "Surprisingly , one approach to grammar that is not represented in work on robust parsing is the Principles and Parameters model , or what has evolved over the last ten years into the ' ' Minimalist Program ' ' ( MP ) .", "label": "", "metadata": {}, "score": "49.46046"}
{"text": "However , appropriate probabilities for each rule can only be determined by experimentation .In the initial version , probabilities will be assigned by linguistic intuition ; as iterations of the design progress , probabilities will be determined through experimentation .Since sentence probabilities are generally very small numbers , the parse probability filter should pass any parse tree with a probability of at least 30 % of the highest probability parse .", "label": "", "metadata": {}, "score": "49.530426"}
{"text": "This is done through the use of an information class that is distributed with the component , using keywords to analyze the components , or domain knowledge that looks at interrelationships between different software components .In the third and final class , the search is facilitated by specifying attributes or methods of the desired component .", "label": "", "metadata": {}, "score": "49.682198"}
{"text": "This token merging step is repeated until no further changes can be determined for the sentence at that level of rules .Using the narrower set of possible interpretations , token merging proceeds by matching the current set of tokens against a second list of rules .", "label": "", "metadata": {}, "score": "49.793297"}
{"text": "The pipeline [ 6 ] performs a sequence of processing tasks , described below .In the case of GENIA , some of these steps ( e.g. tagging , terminology detection ) are not necessary - and are automatically skipped - because the relevant information is already provided in the Corpus .", "label": "", "metadata": {}, "score": "49.808613"}
{"text": "Instead the system and method of the present invention incorporates a sophisticated syntactic analysis component , which allows facts about parts - of - speech to determine the correct syntactic analysis .Additionally , by incorporating ontologies as the basis for the lexical resource , the present invention permits the output of the parser to be easily modified by other applications .", "label": "", "metadata": {}, "score": "49.812325"}
{"text": "In one sense , what we have done is to formally structure , copy , and redistribute the semantic information throughout the set of entries .This process provides us with important new ways to explore the information which is available .", "label": "", "metadata": {}, "score": "49.940334"}
{"text": "Often numerous passes through the input sentence(s ) are required to fully parse the input , thereby adding to the time required to parse the input .Often the previous techniques do not have very robust feature checking capabilities .In particular , the techniques do not check for both syntactic and semantic compatibility .", "label": "", "metadata": {}, "score": "49.978447"}
{"text": "A Course in GB Syntax : Lectures on Binding and Empty Categories .MIT Press .Roark , Brian and Johnson , Mark .Efficient probabilistic top - down and left - corner parsing .In Proceedings of the 37th Annual Meeting of the Association for Computational Linguistics , pages 421 - 428 .", "label": "", "metadata": {}, "score": "50.120308"}
{"text": "Similarly , for information retrieval purposes , an embodiment of the ontological parser optimized for queries may make use of all these filters , but add a pseudo - predicate filter and a pseudo - concept filter .The stop word filter removes stop words from sentences .", "label": "", "metadata": {}, "score": "50.214485"}
{"text": "The first linguistic and psycholinguistic arguments for basing the grammar on combinators were put forth by Mark Steedman and Anna Szabolcsi .More recent prominent proponents of the approach are Jacobson and Baldridge .CCG relies on combinatory logic , which has the same expressive power as the lambda calculus , but builds its expressions differently .", "label": "", "metadata": {}, "score": "50.34327"}
{"text": "In one embodiment , the Dependency Analyzer ( 900 ) is used to collect information on missing dependencies .The Dependency Analyzer ( 900 ) locates both unrecognized syntactic appearances and syntactic appearances that reference a dependency that is not on the local computer .", "label": "", "metadata": {}, "score": "50.457695"}
{"text": "The parsed sentence is then provided to an events generator arranged in accordance with the particular news analysis desired .The events generator would look for particular words of interest to the particular analysis being performed .In conjunction with the parsing of the sentence , the import of the various words can be better determined and more properly characterized in the final analysis .", "label": "", "metadata": {}, "score": "50.523647"}
{"text": "The beginning and end of the sentence are marked appropriately substituting for the period .In the tokenization module each of the individual words is isolated and looked up in the dictionary .The syntactic identifiers go through class reduction .The tokens including syntactic identifiers for parts of speech , attributes and dynamic attributes , for each of the words is shown below in Table 1 .", "label": "", "metadata": {}, "score": "50.604843"}
{"text": "The ontological parser is designed to be modular , so that improvements and language - specific changes can be made to individual components without reengineering the other components .The components are discussed in detail below .The ontological parser has two major functional elements , a sentence lexer and a parser .", "label": "", "metadata": {}, "score": "50.616943"}
{"text": "According to the presently preferred embodiment , the WordNet dictionary and a supplemental dictionary is used without the WordNet verb dictionary in the multi - word matching step .Restricting the multi - word matching so as to exclude verbs has been found to be more efficient .", "label": "", "metadata": {}, "score": "50.77112"}
{"text": "If both a substitution and a concatenation rule may be applied to a series of tokens , then the substitution rule is preferred and applied .The deductive token merging , may include referring to a polysemy count to determine a most frequently preferred part of speech for a particular word in a sentence .", "label": "", "metadata": {}, "score": "50.82607"}
{"text": "All of the syntactic text markings obtained from the dictionaries are integrated into a class inheritance system whereby each class is related to its respective subclasses .As an example , the subclass \" number \" is designated as either a \" noun \" or an adjective .", "label": "", "metadata": {}, "score": "50.873154"}
{"text": "The result is that the time complexity of structure - comparison algorithms attains the polynomial order of the number of features ( or nodes ) being compared .This fact makes the use of ontologies inefficient for high - performance computing applications , such as searching terabyte - sized databases with wide - ranging conceptual content .", "label": "", "metadata": {}, "score": "50.881836"}
{"text": "All this information is represented as a set of predicates and stored into the KB of the system , which can then be queried using the methodology described in section \" Relation Mining \" .Example of Dependency Tree .Tree of dependencies for a GENIA sentence , along with other linguistic annotations .", "label": "", "metadata": {}, "score": "50.97242"}
{"text": "The program code may further include multi - word matching program code .The parser may further include a multi - word comparator .The replaceable rules sets used in embodiments of the invention advantageously permit customizing of the parsing in accordance with any given user 's needs .", "label": "", "metadata": {}, "score": "51.01667"}
{"text": "Such a representation scheme gives each node in the tree a unique identifier that completely determines the relative place of that node in the tree structure .It also provides a simple way to compare relative positions of two discovered node instances .", "label": "", "metadata": {}, "score": "51.103905"}
{"text": "1 is a block diagram of the sentence lexer according to the present invention ; .FIG .2 is a block diagram of the parser according to the present invention ; .FIG .3 is a diagram showing two complete parse trees produced according to the present invention ; .", "label": "", "metadata": {}, "score": "51.319855"}
{"text": "This distinction may have some psychological validity , but it is not computationally attractive to maintain this distinction in separate array elements .A compromise approach is to attempt to make judgments about redundancy , and write software to merge branches as specified by the judgments of a knowledge engineer .", "label": "", "metadata": {}, "score": "51.352127"}
{"text": "Table 1 .Evaluation on Carroll 's test suite on subj , obj , PP - attachment and subordinate clause relations .We have observed that verbs and prepositions , which are especially important for the lexicalized disambiguation , vary far less between general text and the biomedical domain than nouns .", "label": "", "metadata": {}, "score": "51.372986"}
{"text": "Corney DPA , Buxton BF , Langdon WB , Jones D :BioRAT : Extracting Biological Information from Full - Length Papers .Bioinformatics 2004 , 20 ( 17 ) : 3206 - 13 .View Article PubMed .Leroy G , Chen H , Martinez JD : A Shallow Parser Based on Closed - Class Words to Capture Relations in Biomedical Text .", "label": "", "metadata": {}, "score": "51.405727"}
{"text": "As long as grammatical roles can be identified , the present system and method can be easily adapted to any language .For example , certain case - marked languages , such as Japanese or German , can be parsed through a grammar which simply records the grammatical relationships encoded by particular markers , and the resulting output is still compatible with the parsing results achieved for other languages .", "label": "", "metadata": {}, "score": "51.45108"}
{"text": "If the elements in the three sectors of the rule match the series of consecutive tokens in the sentence being analyzed then the transformation dictated by the rule is performed .The original tokens are transformed in accordance with the instructions of the result .", "label": "", "metadata": {}, "score": "51.472023"}
{"text": "They infer structure from distributional patterns in a more or less unannotated sequence of tokens .The Klein - Manning procedures do not yet perform as well on held out test data as the supervised systems , but they are quickly converging on supervised results .", "label": "", "metadata": {}, "score": "51.47508"}
{"text": "In this way it is immediately obvious to the user whether the tools have done a proper job , or a mistake has been introduced at some stage of processing ( see figure 2 ) .When the coverage is satisfactory , it is possible to proceed to an evaluation , like the one described in this section , which however refers to a particular ' snapshot ' of the system at a given point in time .", "label": "", "metadata": {}, "score": "51.486397"}
{"text": "Such complex rules can be designed by listing all the syntactic and lexical constraints , or alternatively can be constructed combining syntactic and semantic rules , as in the example below : .We refer to relations defined at this level as domain relations as they rely on lexical constraints which are typical of a given domain .", "label": "", "metadata": {}, "score": "51.66742"}
{"text": "The first level token merging and second level token merging are reiterated until no further reductions in the syntax of the sentence can be made .Another embodiment may include the step of matching consecutive words in a sentence with multiple words in a dictionary .", "label": "", "metadata": {}, "score": "51.78019"}
{"text": "The use of well - defined interfaces , coupled with technologies that provide introspection and other services , enforces good design and increases the reusability of software as a whole .In addition to traditional software component technologies , networked software component technologies improve on the state of the art by making it possible to reuse software components over a network .", "label": "", "metadata": {}, "score": "51.794525"}
{"text": "These grammar rules , called productions , specify language that the target parser is supposed to recognize .Each production indicates that a specific combination of input symbols , called terminals , and assembled groups of terminals , called non - terminals , can be assembled into a new non - terminal .", "label": "", "metadata": {}, "score": "51.867813"}
{"text": "As noted , we believe that such links substantially improve the effectiveness of semantic processing in NLP .This is accomplished by dramatically increasing the relational context for a given word in the knowledge base and therefore increasing the likelihood that other words may be successfully related in a meaningful way to that word .", "label": "", "metadata": {}, "score": "51.93821"}
{"text": "For example , in a search engine application , it may be useful to check whether or not a particular noun can serve as an argument of a predicate .The features of the noun should be more specific than the features of the argument position it is attached to .", "label": "", "metadata": {}, "score": "52.04831"}
{"text": "During the sentence lexer stage , words are labeled with information from the ontology , including these numerical codes .The argument position for each predicate structure may be tagged with codes from any level of the ontology .The parser will only output predicate structures where the noun inherits at least those features specified by the code .", "label": "", "metadata": {}, "score": "52.113068"}
{"text": "The parser converts the sequence of ontological entities into predicate structures using a two - stage process that analyzes the grammatical structure of the sentence , and then applies rules to it that bind arguments into predicates .A system for ontological parsing that converts natural - language text into predicate - argument format comprising : . a sentence lexer for converting a natural language sentence into a sequence of ontological entities that are tagged with part - of - speech information ; and .", "label": "", "metadata": {}, "score": "52.213615"}
{"text": "These trees are implemented via a variety of techniques , which are generally equivalent to doubly - linked lists .Doubly - linked lists must be created with head and tail nodes , which terminate the list and are designed to keep traversals of the list in bounds .", "label": "", "metadata": {}, "score": "52.332962"}
{"text": "Again , the process uses the second set of rules until no further narrowing of the possible syntactic interpretations are possible .The process proceeds into reiteration program code 30 which returns the processing to the matching with respect to the first set of rules .", "label": "", "metadata": {}, "score": "52.33782"}
{"text": "On successfully determining a Language Component ( 700 ) that fulfills a request , the Request Broker ( 1300 ) returns the Language Component ( 700 ) to the client .In this way , the present embodiment enables the automatic determination , search , and discovery of Software Components ( 500 ) .", "label": "", "metadata": {}, "score": "52.343876"}
{"text": "This structure guarantees that an arbitrary number of nodes may be inserted into the list without losing track of the locations of existing nodes , as well as enabling the list to be searched from either the top or bottom .However , the great flexibility of tree data structures , which may encompass trees of arbitrary depth , also imposes a significant cost in computability .", "label": "", "metadata": {}, "score": "52.36509"}
{"text": "The Brash system makes no provisions for the possibility that immediate relationships are not in fact the correct expression of sentence - level concepts , because it assumes that syntactic constituency is always defined by immediate relationships .The Brash system does not incorporate ontologies as the basis for its lexical resource , and therefore does not permit the output of the parser to be easily modified by other applications .", "label": "", "metadata": {}, "score": "52.41039"}
{"text": "FIG .8 .The term computer language is defined for the purposes of the embodiment presented here as a program that implements the syntax of a language .Traditionally , a computer programmer defines a computer language by hand or uses any of a wide range of tools to translate a description of the computer language from BNF , EBNF , or another meta - language to computer code .", "label": "", "metadata": {}, "score": "52.529606"}
{"text": "( c ) storing in a memory associated with said machine the semantic relation structure in association with the headword in the lexical knowledge base ; and .( d ) augmenting the lexical knowledge base by : .( 1 ) inverting the semantic relation structure ; and .", "label": "", "metadata": {}, "score": "52.6435"}
{"text": "In this way , it is possible to build a Component Language ( 800 ) in which each Language Element ( 100 ) is cohered with one or more Software Components ( 500 ) in a Language Component ( 700 ) .", "label": "", "metadata": {}, "score": "52.695847"}
{"text": "FIG .3 is inverted and stored in the lexical knowledge base ( together with every other semantic relation structure stored in the knowledge base ) .This step entails a 4 part procedure .First , the semantic relation structure is traversed , adding the corresponding inverse semantic relation ( where there is already an existing semantic relation ) between each value and its headword .", "label": "", "metadata": {}, "score": "52.759937"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 20 , wherein said parser filters remove parse trees that violate one of statistical and ontological criteria for well - formedness .", "label": "", "metadata": {}, "score": "52.83744"}
{"text": "Description .This application claims priority from U.S. Provisional Application No .60/097,643 filed Aug. 24 , 1998 .BACKGROUND OF THE INVENTION .The present invention is directed to a natural language sentence parser .Natural language processing is hindered by the inability of machines to recognize the function of words as they appear in their context .", "label": "", "metadata": {}, "score": "53.115414"}
{"text": "There are substitution rules which take the original tokens and substitute the same number of tokens but with syntactic identifiers that are narrower in scope constituting only a subset of the original syntactic possibilities .Another type of rule is referred to as a concatenation rule in which the result of the rule reduces the number of tokens .", "label": "", "metadata": {}, "score": "53.163696"}
{"text": "New rules can make use of rules defined at lower levels , some of which remain stable across different applications .In order to simplify the process of evaluation and shorten the development cycle , we have created visualization tools ( based on XML , CSS and CGI scripts ) , that can display the results in a browser .", "label": "", "metadata": {}, "score": "53.22592"}
{"text": "The system and method of the present invention also provides a robust feature - checking system that accounts for semantic compatibility as well as syntactic compatibility .The ontology of the present invention converts all inflected words to their canonical forms .", "label": "", "metadata": {}, "score": "53.2502"}
{"text": "Each application of a rule narrows the syntactic possibilities .When no further changes can be made by the processor using the first set of rules , the processor performs matching consecutive tokens 28 in the resulting narrower set of possible interpretations against a second set of rules .", "label": "", "metadata": {}, "score": "53.25662"}
{"text": "Most semantic knowledge which is required in Natural Language Processing ( NLP ) or , e.g. , in Artificial Intelligence ( AI ) , has had to be built by hand , or hand - coded .Because the task of hand - coding semantic knowledge is time - consuming , these applications have necessarily been limited to a specific domain .", "label": "", "metadata": {}, "score": "53.284164"}
{"text": "The above data structure naturally lends itself to one particular algorithm for comparing the identity or subsumption of ontological features .The algorithm relies on the implementation of the tree by associating with each node in the tree an integer value that represents the position of that node within the hierarchical structure .", "label": "", "metadata": {}, "score": "53.301575"}
{"text": "What kind of information depends on the language .Building a parse tree is not usually an issue as grammars ( hence parse - trees too ) are often tortured to fit a parsing technique .What may be useful is building an abstract syntax tree ( AST ) that is close to the language semantics .", "label": "", "metadata": {}, "score": "53.387543"}
{"text": "After the request is constructed , it is sent over a network to a Request Broker ( 1300 ) that serves as a repository of Language Components ( 700 ) .In the first method , after the Request Broker ( 1300 ) receives a request for a Language Component ( 700 ) , it uses the unrecognized syntactic appearance and the types of Language Components ( 700 ) that were passed to locate the missing dependency .", "label": "", "metadata": {}, "score": "53.417828"}
{"text": "The experiments show that our approach described is capable of delivering high - precision results , while maintaining sufficient levels of recall .The high level of abstraction of the rules used by the system , which are considerably more powerful and versatile than finite - state approaches , allows speedy interactive development and validation .", "label": "", "metadata": {}, "score": "53.45734"}
{"text": "I have a VHDL elaboration engine / simulator .As I understand it , the language syntax allows for ambiguities at syntax level .That is , an assignment .can be interpreted as picking a child of the bus by index .", "label": "", "metadata": {}, "score": "53.46949"}
{"text": "A method for parsing a sentence having a series of words and punctuation marks comprising : .( a ) identifying for each of the words a token comprised of a list of syntactic identifiers corresponding to the word ; .( b ) token merging consecutive tokens by matching consecutive tokens against a first list of rules to produce a narrower set of possible syntactic interpretations ; .", "label": "", "metadata": {}, "score": "53.55819"}
{"text": "This is a format which is well suited for storage in a relational DB or for analysis with Data Mining algorithms .The dependency relations , together with intermediate results of the pipeline ( tokens , terms , chunks , sentences ) are stored in a Knowledge Base ( KB ) , which can then be queried by a separate module , described later in section \" Relation Mining \" .", "label": "", "metadata": {}, "score": "53.699196"}
{"text": "1 is a block diagram of a computer system incorporating an embodiment of a Language Element .FIG .2 is a block diagram of a computer system incorporating an embodiment of a Computer Language .FIG .3 is a block diagram of a computer system incorporating an embodiment of a Syntactic Definition .", "label": "", "metadata": {}, "score": "53.802208"}
{"text": "The processor has not yet determined whether \" this \" is an object or subject .This rule identifies the second pronoun with its objective case .This rule transforms the original tokens into the syntactic possibilities shown in Table 5 .", "label": "", "metadata": {}, "score": "53.84456"}
{"text": "It is possible to write a grammar that uses only character tokens as terminal symbols , thereby eliminating the need for a scanner , but this would make the parser larger and slower .The user should implement a scanner that segments the input text , and turns it into one or more lists of tokens .", "label": "", "metadata": {}, "score": "53.967644"}
{"text": "The advantage of relying on a broad coverage parser is that the parser need not be modified or rewritten in the course of extending the approach to other dictionaries .We see this as an important consideration , given that the huge semantic resources needed for broad - coverage NLP can only be acquired through the merging of multiple on - line dictionaries , as well as the analysis of encyclopedias and other sources .", "label": "", "metadata": {}, "score": "54.00051"}
{"text": "All applications making use of the fact that the output of the ontology - based parser is an ontological entity may realize enormous speed benefits from the parameterized ontology that the parser utilizes .Background of the Invention .Numerous techniques have been developed to process natural language input .", "label": "", "metadata": {}, "score": "54.011482"}
{"text": "The system of the present invention maintains arguments as variables during the parsing process , and automatically fills in long - distance dependencies as part of the parsing process .No post - parsing analysis is needed to obtain this benefit , and the parsing time is not impacted by the maintenance of these variables , thus resulting in faster parsing execution .", "label": "", "metadata": {}, "score": "54.236298"}
{"text": "Processing continues now into the second set of rules .In the second set of rules , the sequence pronoun - verb - pronoun is transformed into a clause .The frame begin - clause - end is transformed into a sentence .", "label": "", "metadata": {}, "score": "54.2421"}
{"text": "The method of .The method of .claim 6 in which the parser is a broad coverage parser .The method of .claim 6 in which the parsing step includes : .( 1 ) applying a first set of rules to the segment of text to yield a syntactic structure corresponding thereto ; and .", "label": "", "metadata": {}, "score": "54.26477"}
{"text": "The decision - making process occurs at intermediate parsing stages , and parse probabilities are considered before all parse paths have been pursued .Intermediate parse probability calculations have to be stored , and the system has to check for intermediate feature clashes .", "label": "", "metadata": {}, "score": "54.317955"}
{"text": "The dictionary or supplement can be continually updated to include results established for unknowns through morphological analysis .After identifying parts of speech for a word , additional syntactic identifiers may be assigned 22 .These may include attributes of a word such as tense of a verb , e.g. , past or present .", "label": "", "metadata": {}, "score": "54.39058"}
{"text": "Traditionally such approaches have been limited by the brittleness of the existing parsers .However , recent advances in probabilistic - based parsing allow to overcome such limitations and render such approaches competitive .We discuss below a few systems that make use of full parsing approaches for the analysis of biomedical literature .", "label": "", "metadata": {}, "score": "54.452396"}
{"text": "The rules narrow the possible syntactic interpretations for the words in the sentence .After exhausting application of the first set of rules , the program moves to the second set of rules .The program reiterates back and forth between the sets of rules until no further reductions in the syntactic interpretation can be made .", "label": "", "metadata": {}, "score": "54.539036"}
{"text": "FIG .5 .The term language element is defined for the purposes of the embodiment presented here as an element that is part of the grammar of a language .In some implementations , language elements can inherit from each other .", "label": "", "metadata": {}, "score": "54.55031"}
{"text": "It is important to note , however , that a concordance of such terms does not make explicit the semantic relation , if any , which holds between the headword and a concordance term .As such , the presence of concordance terms for a headword does not augment the semantic information for that headword , nor does it facilitate any NL processing task , such as resolving syntactic ambiguity .", "label": "", "metadata": {}, "score": "54.60901"}
{"text": "Although most of the ideas represented in this work were not actually implemented , this dissertation foreshadowed many of the issues which continue to confront researchers in computational lexicography .Chodorow et al .( 1985 ) relied on string - matching to automatically extract genus terms for nouns and verbs from the on - line version of Webster 's Seventh New Collegiate Dictionary ( Webster 7 ) .", "label": "", "metadata": {}, "score": "54.66397"}
{"text": "Therefore for this experiment we use an existing manually annotated corpus .However , in [ 2 ] we describe how our system can cope with an automatically annotated corpus using an external tool for the detection of the domain entities and terminology .", "label": "", "metadata": {}, "score": "54.73339"}
{"text": "Other sentences simply evade the standard conventions which are captured by the rules .Sentences that can not be fully parsed through the inductive token merging program may be useful in suggesting additional rules for the first or second set that may make the inductive processing code more robust .", "label": "", "metadata": {}, "score": "54.812614"}
{"text": "An example of this analysis technique proceeds with reference to two sample definitions from the LDOCE : .In each of these definitions , a location relation holds between the headword ( in boldface ) and the word \" information , \" despite the fact that this relation is expressed differently in each case .", "label": "", "metadata": {}, "score": "54.885384"}
{"text": "This is useful in interpreting whether an action happened or did not happen when automatically processing the subject matter of a sentence .Modality such as foreshadowing , obligation , imperatives and possibility may be useful to the subject matter analysis .", "label": "", "metadata": {}, "score": "54.89592"}
{"text": "If a noun is found and it satisfies the restrictions of the adjective , the adjective filter will apply the selectional features of the adjective to the noun by adding all of the adjective 's selectional features to the noun 's set of selectional features .", "label": "", "metadata": {}, "score": "54.93964"}
{"text": "logic executed in the memory by the processor to grant access to the language components of the first set whose syntactic appearances the request broker matched , in order to enable self - assemblage of the language components of the first set with language components of the second set .", "label": "", "metadata": {}, "score": "54.96405"}
{"text": "More typically , rich tree structures are formed , with each value itself often being used as a headword , and associated with further relations and values . )The semantic relation structure identified in this fashion is then stored in association with the headword \" flower \" as part of the lexical knowledge base .", "label": "", "metadata": {}, "score": "55.030712"}
{"text": "In the first case , during the process of matching Language Components ( 700 ) against data , the Dependency Analyzer ( 900 ) keeps a record of all of the Language Components ( 700 ) that fail to match in the First Failure Record ( 901 ) .", "label": "", "metadata": {}, "score": "55.034885"}
{"text": "Since algorithm design and implementation are distinct and separable issues , an embodiment of a parameterized ontology 's data structures has not yet been discussed .The following is a suggested implementation .The proposed data structure includes an integer value , where each digit of the integer corresponds to a specific branch taken at the corresponding level in the tree .", "label": "", "metadata": {}, "score": "55.041374"}
{"text": "They are not even up to the task of parsing arbitrary Dr. Seuss books , let alone the ' ' Wall Street Journal ' ' .For example , Fong 's English parser , which is arguably the best piece of work of this kind , handles , in its current incarnation , just the example sentences in Lasnik and Uriagereka 's textbook ( 1988 ) .", "label": "", "metadata": {}, "score": "55.053772"}
{"text": "Adverbs detail the meaning of the verbs they accompany , but do not change them .Since the meaning of the sentence remains the same , adverbs can be removed to simplify parsing .The pseudo - predicate filter operates in one embodiment , as a query ontological parser .", "label": "", "metadata": {}, "score": "55.1279"}
{"text": "It does not always deliver a parse spanning the entire sentence , however it never fails completely , always delivering at least partial structures .Table 1 shows a comparison of two evaluations performed using the parser .For the first result , we apply the standard 500 sentence test set for dependency parsers , GREVAL [", "label": "", "metadata": {}, "score": "55.190594"}
{"text": "If more than one rule is satisfied by a token , both will be applied and the token may receive more than one dynamic attribute .Dynamic attributes are typically used to signify that a word would be expected to begin and end a phrase and , in the case of adverbs , that they can generally be skipped with respect to the beginning or ending of a phrase .", "label": "", "metadata": {}, "score": "55.193962"}
{"text": "Minnen G , Carroll J , Pearce D : Applied morphological processing of English .Natural Language Engineering 2001 , 7 ( 3 ) : 207 - 223 .View Article .Mikheev A : Automatic rule induction for unknown word guessing .", "label": "", "metadata": {}, "score": "55.443733"}
{"text": "The computer program product of . claim 13 wherein said second inductive merging program code identifies in conjunction with the second set of rules identifies clause structures in the sentence .A sentence parser comprising : . a tokenization module that receives a sentence comprised of a string of words and generates syntactic possibilities for the words of the sentence ; . a replaceable set of first substitution and concatenation rules ; . a replaceable set of second substitution and concatenation rules specific to a collection of tokens ; and .", "label": "", "metadata": {}, "score": "55.524017"}
{"text": "The method of .The method of .claim 15 in which the identifying step includes automatically parsing the text with a natural language parser , the parsing including : . applying a first set of rules to the text to yield a syntactic structure corresponding thereto ; . applying a second set of rules to the syntactic structure to produce a corresponding logical form ; and .", "label": "", "metadata": {}, "score": "55.54492"}
{"text": "A system for self - assembling software components , the system comprising : . a processor ; . a memory coupled to the processor ; .a first processing unit to provide the at least one section of the code to request access to the at least one language component that the dependency analyzer discovered ; . a second processing unit to access and/or receive the at least one requested language component in view of the at least one section of the code ; and .", "label": "", "metadata": {}, "score": "55.57599"}
{"text": "As a general matter , sentences will be analyzed sequentially comparing each token in sequence with the set of rules to see if any apply .There are occasional times when applying the tokens to a set of rules that more than one rule will apply to the tokens under consideration .", "label": "", "metadata": {}, "score": "55.75888"}
{"text": "In object - oriented programming , for example , programmers can find the data used by a method by looking in the method 's class and can find the methods that use a piece of data by looking in the data 's class .", "label": "", "metadata": {}, "score": "55.872124"}
{"text": "A system for self - assembling software components is described herein .Other features of the present invention will be apparent from the accompanying drawings and from the detailed description which follows .BRIEF DESCRIPTION OF THE DRAWINGS .The accompanying drawings , which are incorporated in and form a part of this specification , illustrate embodiments of the invention and , together with the description , serve to explain the principles of the invention , wherein ; .", "label": "", "metadata": {}, "score": "55.88525"}
{"text": "Crucially , a limitation of this assumption is that substantially more effort must be applied in crafting the ontology , since re - indexing large volumes of text becomes extraordinarily expensive as the text grows .The designers of a parameterized ontology must be certain that their coverage is adequate before making a decision to freeze the structure .", "label": "", "metadata": {}, "score": "55.890488"}
{"text": "Third , we recognize that the assumptions about syntactic structure used by the Penn Treebank ( and other treebanks ) differ in many details from those of the P&P tradition .In particular , P&P work generally assumes a far more articulated syntactic structure than is generally employed in other frameworks .", "label": "", "metadata": {}, "score": "56.0054"}
{"text": "Chomsky sketched this view in ' ' Some Notes on Economy of Derivation and Representation ' ' in 1991 , and then presented a detailed account in his book ' 'The Minimalist Program ' ' in 1995 .Much subsequent theoretical work has been done within the MP .", "label": "", "metadata": {}, "score": "56.057518"}
{"text": "Method and system for compiling a lexical knowledge base US 7383169 B1 .Abstract .A lexical knowledge base is compiled automatically from a machine - readable source ( such as an on - line dictionary or unstructured text ) .The preferred embodiment of the invention makes use of \" backward linking , \" by which inverse semantic relations are discerned from the text and used to augment the knowledge base .", "label": "", "metadata": {}, "score": "56.078316"}
{"text": "The storage of the lexical knowledge base is also conventional , and uses the entity - attribute - value type of data structure commonly used in databases .Preferably , each dictionary entry is divided into sense entries , each stored with its own set of semantic relations .", "label": "", "metadata": {}, "score": "56.096657"}
{"text": "The first type of request is created when the Request Creator ( 1200 ) receives the name of the Language Component ( 700 ) that failed to match with the unrecognized syntactic appearances and creates a request from these two pieces of data .", "label": "", "metadata": {}, "score": "56.13475"}
{"text": "Second and Subsequent Passes .Certain semantic relations , most notably hypernym , can be extracted reliably in the first pass through an on - line dictionary .( A \" pass \" is here considered to mean the sequence of steps shown in solid lines in .", "label": "", "metadata": {}, "score": "56.236362"}
{"text": "The method of . claim 5 which includes : . providing a natural language corpus ; . using the machine to analyze the corpus to identify a collection of text segments therein ; . performing steps ( a)-(d ) a first time on the identified text segments to produce an augmented lexical knowledge base , the augmentation of the knowledge base serving to enhance subsequent text parsing ; and .", "label": "", "metadata": {}, "score": "56.284927"}
{"text": "The LALR parser is widely used and is better known as the approach used by parser generators such as yacc and bison .While the description is a preferred embodiment , it will be understood that any implementation of a context - free grammar within a similar architecture , including such variants as an LALR-2 parser ( which looks ahead by two words ) , are within the scope of the present invention .", "label": "", "metadata": {}, "score": "56.310417"}
{"text": "For example , in figure 2 it can be seen that each result bears the name of the rule that generated it ( last argument of the third column ) .This allows immediate detection of problems and their quick correction .", "label": "", "metadata": {}, "score": "56.312874"}
{"text": "These terms , and their associated relations to \" flower , \" are then stored as part of the lexical knowledge base for the term \" flower .\" While the foregoing paragraph illustrates the concept of \" backward linking , \" it omits several of the other steps in our preferred embodiment .", "label": "", "metadata": {}, "score": "56.366146"}
{"text": "( 3 ) applying a third set of rules to the logical forms to obtain semantic relation structures , said structures including at least one instance of a triple comprising a headword , a semantic relation , and a value .A system comprising : .", "label": "", "metadata": {}, "score": "56.480087"}
{"text": "After briefly introducing the GENIA corpus in section \" Corpus Analysis \" , we detail the processing steps that have been adopted in order to extract a rich set of linguistic and domain - specific information .Section \" Relation Mining \" shows in particular how the intermediate results of data analysis are used in the Relation Mining task .", "label": "", "metadata": {}, "score": "56.645607"}
{"text": "On the task of extracting human protein interactions they report 91 % precision and 21 % recall .GENIES [29 ] is a system , based on a DCG grammar , which processes biomedical literature in order to detect information about cellular pathways .", "label": "", "metadata": {}, "score": "56.663933"}
{"text": "The term syntactic appearances is defined for the purposes of the embodiment presented here as the raw data and syntactic appearances directly associated with a component in a language or a set of descriptions expressed as raw data and syntactic appearances that specify the component .", "label": "", "metadata": {}, "score": "56.74975"}
{"text": "Head - Driven Statistical Models for Natural Language Parsing .PhD Dissertation , University of Pennsylvania .Fong , Sandiway .Computational Properties of Principled - Based Grammatical Theories , AI Laboratory , MIT .Fong , Sandiway .Computation with Probes and Goals : A Parsing Perspective . ' '", "label": "", "metadata": {}, "score": "56.91368"}
{"text": "Surely it is long past time to ask for some substantive evidence in the way of a robust grammar induction system that this view of grammar induction is computationally viable .Most other major theoretical models of grammar have succeeded in yielding robust parsers in far less time , despite the fact that they do not , as far we know , make analogous claims about the nature of language learning .", "label": "", "metadata": {}, "score": "57.05095"}
{"text": "Rindflesch T , Fiszman M , Libbus B : Semantic Interpretation for the Biomedical Literature .Medical Informatics : Advances in Knowledge Management and Data Mining in Biomedicine ( Edited by : Chen H , Fuller WHS , Friedman C ) .", "label": "", "metadata": {}, "score": "57.096436"}
{"text": "Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .It has a completely transparent interface between surface syntax and underlying semantic representation , including predicate - argument structure , quantification and information structure .", "label": "", "metadata": {}, "score": "57.211952"}
{"text": "A space is inserted between consecutive tokens to delimit the beginning and end of each token .A space is sometimes indicated in the appendices as an underscore .Iterative processing through a plurality of sets of rules is very helpful in dealing with parsing of a sentence that includes a multiplicity of clauses .", "label": "", "metadata": {}, "score": "57.22341"}
{"text": "After any change caused by a rule , the dynamic attribute rules can be applied to the result to , in effect , update the appropriate dynamic attributes for that portion of the sentence .In the enhanced embodiment of the invention , the transformation caused by a rule can operate upon the attributes , removing attributes or saving particular attributes .", "label": "", "metadata": {}, "score": "57.236687"}
{"text": "Having described several embodiments of the concept - based indexing and search system in accordance with the present invention , it is believed that other modifications , variations and changes will be suggested to those skilled in the art in view of the description set forth above .", "label": "", "metadata": {}, "score": "57.24572"}
{"text": "These nodes are interconnected by arcs labeled with semantic relations .A small fragment of the graph surrounding the word \" book \" is shown in Dolan et al .( 1993 ) .The following example is part of the lexical knowledge base entry for \" book \" which results from application of our method to the LDOCE dictionary .", "label": "", "metadata": {}, "score": "57.264664"}
{"text": "A system for self - assembling software components is described herein .Method and system for creating self - assembling components through component languages US 8112744 B2 .Abstract .A system for self - assembling software components is described herein .", "label": "", "metadata": {}, "score": "57.396202"}
{"text": "It would certainly be possible to compute these dynamically , since any tree - search algorithm must keep track of which branches it traverses in trying to locate a particular node .However , as the search backtracks and corrects its path a fair number of adjustments and recalculations of the current node value would likely result .", "label": "", "metadata": {}, "score": "57.449722"}
{"text": "Memory system for storing and retrieving experience and knowledge with natural language utilizing state representation data , word sense numbers , function codes , directed graphs , context memory , and/or purpose relations Affiliated with .Affiliated with .Affiliated with .", "label": "", "metadata": {}, "score": "57.594696"}
{"text": "UG and External Systems .Amsterdam : John Benjamins .Klein , Dan and Manning , Christopher .Natural Language Grammar Induction using a Constituent - Context Model . ' 'In Thomas G. Dietterich , Suzanna Becker , and Zoubin Ghahramani ( eds ) , Advances in Neural Information Processing Systems 14 ( NIPS 2001 ) .", "label": "", "metadata": {}, "score": "57.64154"}
{"text": "It should be readily apparent that the ordering of elements of the code can be arbitrary , but must be used consistently in order to compare features .There are two ways to construct a parameterized ontology .The first method is to simply freeze an existing ontology , write a program to find the maximum tree depths and number of branches , and then write another program to recode the pointer information into array elements and depths .", "label": "", "metadata": {}, "score": "57.78705"}
{"text": "Removing the P&P component must seriously degrade performance .Second , the particular choice of parameters and their possible settings , must conform to some recognized version of a P&P theory proposed in the literature .We recognize that it may be necessary to augment the set of accepted parameters with additional conditions that are motivated by particular problems in learning grammatical structures .", "label": "", "metadata": {}, "score": "57.794662"}
{"text": "Hakenberg J , Plake C , Leser U , Kirsch H , Rebholz - Schuhmann D : LLL'05 Challenge : Genie Interaction Extraction - Identification of Language Patterns Based on Alignment and Finite State Automata .Romacker M , Grandjean N , Parisot P , Kreim O , Cronenberger D , Vachon T , Peitsch M : The UltraLink : An Expert System for Contextual Hyperlinking in Knowledge Management .", "label": "", "metadata": {}, "score": "57.85913"}
{"text": "In this embodiment , the Language Element ( 100 ) , the Association ( 400 ) , and the Software Component ( 500 ) are merged together into a single programming unit called the Language Component ( 700 ) .The Language Element ( 100 ) of the resulting programming unit defines the syntactic appearances of the Language Component ( 700 ) in the language .", "label": "", "metadata": {}, "score": "57.871742"}
{"text": "The modal verb filter will contain a set of modal verbs similar to the stop word list contained in stop word filter .Any Lexeme whose text is in that set and whose concept is a verb is identified as a modal verb , and will be removed .", "label": "", "metadata": {}, "score": "57.931065"}
{"text": "We have implemented patterns and rules that can cope with these cases , but they have not been evaluated yet , and therefore for the present study they are not further considered .Ontology - based queries .If a domain Ontology is available , our system can make use of it in the query process , by using the types as restrictions for the arguments .", "label": "", "metadata": {}, "score": "57.955803"}
{"text": "For example , in an information retrieval application , it is capable of pulling out stopwords and unintended query words ( as in the pseudo - concept and pseudo - predicate filters ) .In the embodiment discussed above , the grammar violation checking of the system and method of the present invention filters both by the probability of a syntactically successful parse and the compatibility of the lexical semantics of words in the ontology .", "label": "", "metadata": {}, "score": "58.257523"}
{"text": "The inductive token merging code , on the other hand , will determine which single rule to apply first .In a preferred embodiment , preference is given to a substitution rule over a concatenation rule .A substitution rule will narrow the syntactic possibilities by more narrowly defining a particular token .", "label": "", "metadata": {}, "score": "58.454506"}
{"text": "If a word can not be found 18 in the dictionary or the supplement , morphological analysis 20 may be useful to transform a word into a word that is present on the dictionary .Morphological analysis includes such commonly known tasks as removing suffixes from a word such as -ed , -ing , -s or changing -ied to \" y \" .", "label": "", "metadata": {}, "score": "58.49019"}
{"text": "High - quality domain entity recognition is therefore key to successful parsing in the biomedical domain , as we show in [ 20 ] .Methods : Relation mining .Our approach to relation mining is based on 3 levels of rules .", "label": "", "metadata": {}, "score": "58.50201"}
{"text": "These attempts all demonstrate that to construct a semantic knowledge base by hand is extremely difficult .While it may be relatively simple to make decisions about how to capture words representing concrete concepts , to adequately capture the meaning of more abstract words can be much more problematic , involving difficult and sometimes arbitrary decisions about what semantic properties of a concept might be relevant .", "label": "", "metadata": {}, "score": "58.652905"}
{"text": "The grammar starts with an optional header section .The header is put first in the generated file , before the module declaration .The purpose of the header is to provide a means to make the documentation generated by EDoc look nicer .", "label": "", "metadata": {}, "score": "58.751244"}
{"text": "Languages such as Japanese or Russian , which permit free ordering of words , but mark intended usage by morphological changes , would be difficult to parse using the Brash system .The patent to Hemphill et al .( U.S. Pat .", "label": "", "metadata": {}, "score": "58.835876"}
{"text": "7 . is a block diagram of a computer system incorporating an embodiment of a Language Component .FIG .8 . is a block diagram of a computer system incorporating an embodiment of a Component Language .FIG .9 . is a block diagram of a computer system incorporating an embodiment of a Dependency Analyzer .", "label": "", "metadata": {}, "score": "58.97632"}
{"text": "The first step is the identification of all biological relevant entities ( genes , proteins , diseases , etc . ) .The task is made particularly difficult by the high ambiguity of the entity names in this domain : in addition to a high degree of polysemy and synonymy , very common words can be used as names of entities [ 1 ] .", "label": "", "metadata": {}, "score": "59.044838"}
{"text": "( d ) augmenting the lexical knowledge base by : .( 1 ) inverting the semantic relation structure ; and .( 2 ) storing in said memory , in association with the primary value term , the inverted complex semantic relation structure , said stored inverted complex semantic relation structure including the lower level relation and the lower level value term .", "label": "", "metadata": {}, "score": "59.120445"}
{"text": "If the word exists within the ontology 140 , it is returned as an ontological entity ; if not , it is returned as a word tagged with default assumptions about its ontological status .In one embodiment , words are automatically assumed to be nouns ; however , the words may be other parts of speech .", "label": "", "metadata": {}, "score": "59.29847"}
{"text": "We are only asking for supervised grammar induction , when , in fact , unsupervised learning on the basis of parameterized principles would be the more reasonable test of the model 's viability .P&P advocates have long eschewed the existence of negative evidence in the learning process , and insisted that grammar induction takes place with very little external data .", "label": "", "metadata": {}, "score": "59.65303"}
{"text": "Consequently , a parser that handles both of these conditions is needed .The parser 230 must pursue all possible parse trees , in effect branching and pursuing more than one path at every ambiguity .The standard LALR parser is a finite state machine designed to build a parse tree from the set of grammar rules ( called productions ) one input symbol at a time .", "label": "", "metadata": {}, "score": "59.66516"}
{"text": "Once all of the tokens have their list of syntactic identifiers , it can be helpful in parsing a sentence to perform multi - word matching 24 .For all words that are not articles , such as \" the \" or \" a \" , consecutive words are matched against the dictionary to learn if any matches can be found .", "label": "", "metadata": {}, "score": "59.693886"}
{"text": "Rules for resolving parts of speech can grow to be extremely numerous .The rules may change depending on the type of input sources , such as news reports or speech .For that reason , it is undesirable to incorporate rules into the program code itself .", "label": "", "metadata": {}, "score": "59.771774"}
{"text": "Grammars are models of competence , parsers are models of performance .Reply : No we are not .Please note that we have been careful to impose no requirements on algorithms for learning or for the resulting parser .Thus we make no claims and set no expectations on mode of implementation ( i.e. performance ) .", "label": "", "metadata": {}, "score": "59.79082"}
{"text": "The Dependency Analyzer ( 900 ) , in turn , determines information about missing dependencies .The Request Creator ( 1200 ) then uses this information to construct a request that is sent to the Request Broker ( 1300 ) via the Download Manager ( 1201 ) .", "label": "", "metadata": {}, "score": "59.88837"}
{"text": "Those other concepts are the arguments of the predicate , and are generally nouns , because predicate relationships are usually between entities .As stated previously , the ontological parser has two major components , a sentence lexer 100 and a parser 200 .", "label": "", "metadata": {}, "score": "59.991978"}
{"text": "Besides , there might be a significant time lag between the publication of a result and its introduction into such databases .Relevant articles have to be selected and accurately read by human experts looking for the core information .This process is usually referred to as curation of the article .", "label": "", "metadata": {}, "score": "60.027786"}
{"text": "The SkipAhead Parser ( 902 ) would then return to the position where it failed to match \" i \" and would skip ahead one character and try to finish the match .In this case , the match would succeed and the data \" i \" and the Language Element ( 100 ) type of \" Number \" could then be stored in the system .", "label": "", "metadata": {}, "score": "60.067215"}
{"text": "Locn .book .Purp . enjoyment .LocnOf . read .HypOf .browse .Using the Semantic Knowledge Base .A semantic knowledge base constructed using the principles of the present invention not only improves the accuracy of natural language processing techniques known in the prior art ; it also enables new analysis techniques not previously possible .", "label": "", "metadata": {}, "score": "60.079082"}
{"text": "Schneider G , Rinaldi F , Dowdall J : Fast , Deep - Linguistic Statistical Minimalist Dependency Parsing .COLING-2004 workshop on Recent Advances in Dependency Grammars , August 2004 , Geneva , Switzerland 2004 .Schneider G : Extracting and Using Trace - Free Functional Dependencies from the Penn Treebank to Reduce Parsing Complexity .", "label": "", "metadata": {}, "score": "60.18796"}
{"text": "Finally , the inverted semantic relation structures are stored in the lexical knowledge base on the entries for the top headword of each structure .FIG .4 illustrates the result of this inversion process for the term \" sell \" ( which is stored on the entry \" sell \" in the lexical knowledge base ) .", "label": "", "metadata": {}, "score": "60.19734"}
{"text": "Those skilled in the art will recognize that knowledge bases produced according to the present invention will permit a large number of NLP and AI systems to overcome longstanding limitations .Rather than undertake an exhaustive listing of such situations , we note simply what may be the archetypical AI application : machine translation .", "label": "", "metadata": {}, "score": "60.226837"}
{"text": "Reply : Certainly this is true .The obvious question here is why this has been the case .Positing a theory that makes such far reaching claims about mechanisms underlying language learning would seem to us to commit the adherents of such a theory to the task of demonstrating its viability through implementation of a large scale model .", "label": "", "metadata": {}, "score": "60.255306"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 3 , wherein said numbers can be subtracted to determine if features are in agreement , wherein a non - negative number indicates agreement .", "label": "", "metadata": {}, "score": "60.272053"}
{"text": "A still further embodiment follows up on the method with deductive token merging .When several rules in a given list are matches for a sentence , in accordance with an embodiment of the invention , a longer of the applicable rules is applied .", "label": "", "metadata": {}, "score": "60.360756"}
{"text": "This cohesion guarantees that both the producer and consumer of a software component will agree on the names of the component , its properties , and behavior without any prior communication .This increases the reusability of software as a whole and enables disjoint groups of developers to collaborate in a distributed manner without needing to communicate with each other .", "label": "", "metadata": {}, "score": "60.37668"}
{"text": "Other dictionaries have not limited the vocabulary used to express definitions and so there are no restrictions on the number of backlinks that are found processing these dictionaries . )On - line dictionaries thus represent formidable sources of \" common sense \" knowledge about the world , a long sought - after resource in AI .", "label": "", "metadata": {}, "score": "60.410446"}
{"text": "part_of .book .bibliography .part_of .book . proofread .typical_object . book .Concluding Remarks .As is conventional in natural language processing , the present invention can be implemented using a variety of different computer systems .The one on which we did our work is a personal computer using an Intel 66 MHz 80486 microprocessor , running the Microsoft Windows 3.1 operating system .", "label": "", "metadata": {}, "score": "60.647125"}
{"text": "Alternatively , analysis may be conducted to plot news trends and how they relate to various stock market performance indices .Numerous such analyses are possible but in order to obtain meaningful interpretation from any such analysis , the system must be able to parse sentences in the raw data .", "label": "", "metadata": {}, "score": "60.670807"}
{"text": "The iterative inductive token merging fully exhausting a first level of rules that deal with phrases before going on to the second level of rules which is directed more towards clauses is helpful in separately parsing the clauses prior to obtaining a parse that satisfies the entire sentence .", "label": "", "metadata": {}, "score": "60.69029"}
{"text": "2002 ' ' Parsing the Wall Street Journal using a lexical- functional grammar and discriminative estimation techniques . ' ' Proceedings 40th Meeting Association for Computational Linguistics , Philadelphia .Linguistic Field(s ) : Computational Linguistics Discipline of Linguistics Language Acquisition Syntax Text / Corpus Linguistics An ontology - based parser incorporates both a system and method for converting natural - language text into predicate - argument format that can be easily used by a variety of applications , including search engines , summarization applications , categorization applications , and word processors .", "label": "", "metadata": {}, "score": "60.692055"}
{"text": "Next come the grammar rules .Each rule has the general form .The left hand side is a non - terminal category .The right hand side is a sequence of one or more non - terminal or terminal symbols with spaces between .", "label": "", "metadata": {}, "score": "60.71804"}
{"text": "A key to intelligent design is leaving room for expansion .As long as the maximum depth of trees is not reached , adding additional levels is transparent .The trade - off in a parameterized ontology is selecting the size of a data structure so that it is no larger than it needs to be , but with adequate room for correcting mistakes or expanding coverage later on .", "label": "", "metadata": {}, "score": "60.79217"}
{"text": "In this sample embodiment , this predicate is then passed through the parser filters , where it successfully passes the parse probability and selectional feature compatibility tests .In the foregoing example , \" have \" is a verb unlikely to have any selectional restrictions on arguments .", "label": "", "metadata": {}, "score": "60.85246"}
{"text": "A side benefit from this algorithm is that it provides an intuitive , natural ranking algorithm .Larger values from the subtraction operation mean further distance apart in the tree , so even when two concepts are in the same branch , the representation provides a convenient metric of conceptual distance .", "label": "", "metadata": {}, "score": "60.91938"}
{"text": "Conclusions and future work .In this paper we have presented an approach aimed at supporting the process of extraction of core relational information from scientific literature in the biomedical domain .We have based our experiments on an extended version of the manually - annotated GENIA corpus .", "label": "", "metadata": {}, "score": "60.91954"}
{"text": "Reynar JC , Ratnaparkhi A : A Maximum Entropy Approach to Identifying Sentence Boundaries .Proceedings of the Fifth Conference on Applied Natural Language Processing Washington , D.C. : University of Pennsylvania 1997 .Ratnaparkhi A : A Maximum Entropy Part - Of - Speech Tagger .", "label": "", "metadata": {}, "score": "60.948883"}
{"text": "This assumption is that the number of branches in an ontological hierarchy , and their depth , can be determined by designing it to fixed parameters at the time of creation , and by selecting maximum values for the branches and the depths .", "label": "", "metadata": {}, "score": "61.094376"}
{"text": "Not unusually , the values themselves can be headwords having one or more semantic relations to further values , etc . .The .FIG .3 structure is stored in association with the entry in the lexical knowledge base for the top headword ( i.e. \" market \" ) .", "label": "", "metadata": {}, "score": "61.10301"}
{"text": "Three different packrat parsers for the Java language are presented here , demonstrating the construction of packrat parsers in Haskell using primitive pattern matching , using monadic combinators , and by automatic generation from a declarative parser specification .The prototype packrat parser generator developed for the third case itself uses a packrat parser to read its parser specifications , and supports full TDPL notation extended with semantic predicates , allowing parsing decisions to depend on the semantic values of other syntactic entities .", "label": "", "metadata": {}, "score": "61.110344"}
{"text": "Such a filter / formatter would need , at a minimum , to distinguish between periods that are found inside a sentence from those which are found at the end of a sentence .The beginnings and ends of sentence are marked .", "label": "", "metadata": {}, "score": "61.239876"}
{"text": "For example , another possible encoding of the ontology tree might involve a 40-digit decimal number .In such a case , 4 digits could be assigned to each node of the tree , implying that the tree could have up to 10 levels of depth .", "label": "", "metadata": {}, "score": "61.273144"}
{"text": "a parse tree converter that receives the output of said parser component and converts said parse trees into predicates .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in . claim 19 , wherein said parser component further comprises : . parser filters operating on said predicates to remove erroneous predicates .", "label": "", "metadata": {}, "score": "61.30995"}
{"text": "In accordance with an embodiment of the invention , the disclosed method for natural language parsing may be implemented as a computer program product for use with a computer system .The communication link may be either a tangible link ( e.g. , optical or wire communication lines ) or a communication link implemented with wireless techniques ( e.g. , microwave , infrared or other transmission techniques ) .", "label": "", "metadata": {}, "score": "61.316856"}
{"text": "In accordance with a preferred embodiment , the sequence of elements is split into three consecutive sectors .A sector of elements that is subject to transformation by the rule , is preceded by a first sector of elements and followed by a third sector of elements .", "label": "", "metadata": {}, "score": "61.339066"}
{"text": "6 shows the semantic network of .FIG .6 with elaboration .FIG .7 is an illustration of another exemplary semantic network .DETAILED DESCRIPTION .We now describe our use of DB methods to automatically create a semantic knowledge base from an on - line dictionary .", "label": "", "metadata": {}, "score": "61.341446"}
{"text": "The noun must follow either immediately after the adjective , or have only adjective and conjunction words appearing between the noun and the adjective .If no such noun or conjunction is found , the adjective filter will veto the sentence .", "label": "", "metadata": {}, "score": "61.447647"}
{"text": "( d ) token merging the narrower set of possible interpretations by matching the narrower set of possible interpretations against a second list of rules to map the narrower set of possible interpretations into a parse for the sentence having a still narrower set of possible interpretations ; . wherein the second set of rules comprises substitution and concatenation rules specific to a collection of tokens .", "label": "", "metadata": {}, "score": "61.540894"}
{"text": "One of the simplest is to create a standard non - recursive parser that saves its state every time it fails to match a Language Element ( 100 ) .This trivial modification would allow a programmer to easily recover the data position of the failure and the name of the Language Element ( 100 ) that failed to match .", "label": "", "metadata": {}, "score": "61.56792"}
{"text": "Results : Evaluation .The approach followed for creating rules starts from a set of relations that are of particular interest in this domain , such as : activate , bind , block , regulate , control , express .The rule developer is offered a view over all the sentences that might include one of the selected relations ( detected using as keywords the verbs that express such relation and all their grammatical inflections ) .", "label": "", "metadata": {}, "score": "61.58435"}
{"text": "For example although the invention has been described as using structured text - such as a dictionary - for the machine readable knowledge , in other applications unstructured text , such as an encyclopedia or other more general text , can be used .", "label": "", "metadata": {}, "score": "61.64875"}
{"text": "Instead , they must traverse the list of links and compare structures on a node - by - node basis to guarantee identity .Complicating this procedure is the fact that concepts may be cross - linked across multiple branches of a tree , sharing multiple structures .", "label": "", "metadata": {}, "score": "61.671616"}
{"text": "Inflections are indicated in the list of attributes .The tokens are passed to the inductive merging code for matching with the first set of rules .The plus after the dynamic attribute [ @#1S ] indicates that it can be satisfied by matching with zero , 1 or more tokens having that dynamic attribute .", "label": "", "metadata": {}, "score": "61.684128"}
{"text": "The first column lists the different syntactic identifiers produced by the dictionaries .The second column lists identifiers from a select set of syntactic identifiers .Syntactic identifiers from the select set are added to the token for any identifier not in the select set .", "label": "", "metadata": {}, "score": "61.722355"}
{"text": "A grammar to parse list expressions ( with empty associated code ) : .Nonterminals list elements element .Terminals atom ' ( ' ' ) ' .Rootsymbol list .When a grammar rule is used by the parser to parse ( part of ) the input string as a grammatical phrase , the associated code is evaluated , and the value of the last expression becomes the value of the parsed phrase .", "label": "", "metadata": {}, "score": "62.03723"}
{"text": "The pseudo - concept filter operates in one embodiment , a query ontological parser .It removes concepts from queries , which are not likely to be the actual concept the user intends .Pseudo - concepts are largely nouns , and can be captured by a stop word list .", "label": "", "metadata": {}, "score": "62.15593"}
{"text": "Similarly , the filter would need to check twice to determine that \" car \" is in agreement with \" transportation , \" and once for \" vehicle . \"In contrast , a parameterized ontology assigns numbers to these concepts , such that each level is a larger number than the previous level .", "label": "", "metadata": {}, "score": "62.303383"}
{"text": "In the second case , the Dependency Analyzer ( 900 ) determines that a missing dependency exist when a description of a component does not exist on the local computer and stores information about the missing dependency in the Second Failure Record ( 1000 ) .", "label": "", "metadata": {}, "score": "62.338017"}
{"text": "The parser is a tool for analyzing syntactic relationships between entities .Referring to .FIG .1 , the sentence lexer 100 is shown .Document iterator 120 receives documents or text input 110 , and outputs individual sentences to the lexer 130 .", "label": "", "metadata": {}, "score": "62.342968"}
{"text": "The Endsymbol may be declared in the grammar file ( see below ) .The simplest case is to segment the input string into a list of identifiers ( atoms ) and use those atoms both as categories and values of the tokens .", "label": "", "metadata": {}, "score": "62.41458"}
{"text": "Embodiments with Alternative Linguistic Programming Units .In one set of alternative embodiments , the Sym is replaced with an alternative linguistic programming unit .For example , in one alternative embodiment using a linguistic programming unit , Syms are replaced with monadic combinators , a programming unit commonly used in functional programming languages .", "label": "", "metadata": {}, "score": "62.435783"}
{"text": "THE CHALLENGE .We challenge someone to produce , by May of 2008 , a working P&P parser that can be trained in a supervised fashion on a standard treebank , such as the Penn Treebank , and perform in a range comparable to state - of - the - art statistical parsers .", "label": "", "metadata": {}, "score": "62.438694"}
{"text": "Returns a descriptive string in English of an error tuple returned by yecc : file/1,2 .This function is mainly used by the compiler invoking Yecc .Pre - Processing .A scanner to pre - process the text ( program , etc . ) to be parsed is not provided in the yecc module .", "label": "", "metadata": {}, "score": "62.484417"}
{"text": "The resulting client code contains code to marshall calls made to the client class to the server class .The resulting server class contains both the implementation of the component and code to translate calls received from the client code to the corresponding calls in the implementation of the component .", "label": "", "metadata": {}, "score": "62.490627"}
{"text": "The stop word filter will contain a set of words accepted as stop words ; any lexeme whose text is in that set is considered to be a stop word .An adjective filter serves to remove lexemes representing adjective concepts from sentences .", "label": "", "metadata": {}, "score": "62.518658"}
{"text": "( e ) inverting the first collection of semantic relation structures to yield a second collection of corresponding , inverted semantic relation structures ; and .( f ) storing data from the second collection of corresponding , inverted semantic relation structures in said memory .", "label": "", "metadata": {}, "score": "62.519215"}
{"text": "dep(prep , X3 , By ) , pos(X2 , ' VBN ' ) , .lemma(By , [ ' by ' , ' through ' , ' via ' ] ) ] ) .Syntactic rules capture general linguistic phenomena and as such are highly reusable across different domains .", "label": "", "metadata": {}, "score": "62.53695"}
{"text": "claim 23 in which only the first set of semantic relations includes \" user , \" \" domain \" and \" manner .\" The method of . claim 26 in which the iterative parsing includes : .( 1 ) applying a first set of rules to the collection of texts to yield a collection of syntactic structures corresponding thereto ; .", "label": "", "metadata": {}, "score": "62.703934"}
{"text": "\" It is worth noting that once the first digit difference is detected , there is no further need to compute remaining digits .They diverge at level 3 , the third digit in the representation , and thereafter lie along completely different sub - trees that do not intersect .", "label": "", "metadata": {}, "score": "62.718647"}
{"text": "This operation may be accomplished in several ways : .If the ontology used by the parser only contains string labels for the nodes in a tree structure , the tree leading to the restriction must be established as a sub - tree of the selectional features of the argument .", "label": "", "metadata": {}, "score": "62.767754"}
{"text": "In this way , the present invention is independent of both network technology and topology .An Embodiment of a Request Broker .In one embodiment , the Request Broker ( 1300 ) uses the Request Parser ( 1301 ) to parse the request and determines what type of request it is .", "label": "", "metadata": {}, "score": "62.776108"}
{"text": "There are various efficient parsers available for CCG .Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .It has a completely transparent interface between surface syntax and underlying semantic representation , including predicate - argument structure , quantification and information structure .", "label": "", "metadata": {}, "score": "62.843254"}
{"text": "The parser could simply use a grammar that does not distinguish between indexed_name and type_conversion , and leave the distinction for a later processing stage , when the lexical entities have been identified and their \" nature \" is known : array , type or function name .", "label": "", "metadata": {}, "score": "63.02253"}
{"text": "3 is a semantic relation structure corresponding to the logical form of .FIG .2 . FIG .4 is an inverted semantic relation structure derived from the semantic relation structure of .FIG .3 .FIG .5 is an illustration of an exemplary semantic network discussed in the specification .", "label": "", "metadata": {}, "score": "63.31515"}
{"text": "Predicate structures are representations of logical relationships between the words in a sentence .Every predicate structure contains a predicate , which is either a verb or a preposition , and a set of arguments , which may be any part of speech .", "label": "", "metadata": {}, "score": "63.39693"}
{"text": "Generating a Parser .To call the parser generator , use the following command : . yecc : file(Grammarfile ) .An error message from Yecc will be shown if the grammar is not of the LALR type ( for example too ambiguous ) .", "label": "", "metadata": {}, "score": "63.47638"}
{"text": "4 . is a block diagram of a computer system incorporating an embodiment of an Association .FIG .5 . is a block diagram of a computer system incorporating an embodiment of a Software Component .FIG .6 . is a block diagram of a computer system incorporating an embodiment of a Semantic Definition .", "label": "", "metadata": {}, "score": "63.549683"}
{"text": "However , it is clear from the tree above that not all differences are equally meaningful .In order for the magnitude of the difference to be relevant , it must first be the case that one of the concepts inherits all the properties of the others .", "label": "", "metadata": {}, "score": "63.60698"}
{"text": "13 . is a block diagram of a computer system incorporating an embodiment of a Request Broker .FIG .14 . is a block diagram of a computer system incorporating an embodiment of a Child Description .DETAILED DESCRIPTION .Preface .", "label": "", "metadata": {}, "score": "63.700127"}
{"text": "A rule includes a set of conditions which if met , will indicate a particular result which has the affect of narrowing the possible syntactic interpretations of the sentence .The set of conditions is determined by a series of elements .", "label": "", "metadata": {}, "score": "63.79972"}
{"text": "At every cycle , a new character is read from the input stream and the character and current state are used to look up , in the action table , which action to perform .The actions are in one of the following forms : .", "label": "", "metadata": {}, "score": "63.80435"}
{"text": "\" This is shown in .FIG .7 .The discovery of a sequence of links connecting two words in the network is crucially driven by evidence from the syntax of the input sentence .The preposition \" for \" in the prepositional phrase \" for this chapter \" will bias the system to prefer paths which link the verb \" research \" to \" chapter \" through a purpose relation .", "label": "", "metadata": {}, "score": "63.825417"}
{"text": "- babou Apr 23 ' 14 at 8:50 .@Val Note that it is possible for a language definition to allow for ambiguities that can not be resolved by semantics .This is not necessarily a syntactic ambiguity ( what is syntactic ? ) , but syntactic ambiguity could be treated the same way .", "label": "", "metadata": {}, "score": "63.880157"}
{"text": "Thanks .- Val Apr 23 ' 14 at 5:41 .@Val There is no absolute rule on how to organize a compiler or interpreter .Most languages are built in such a way that lexical items can be associated with a prior definition allowing to know whatever is needed for parsing .", "label": "", "metadata": {}, "score": "63.886906"}
{"text": "Bioinformatics 2005 , 22 ( 6 ) : 645 - 650 .View Article PubMed .Daraselia N , Egorov S , Yazhuk A , Novichkova S , Yuryev A , Mazo I : Extracting Protein Function Information from MEDLINE Using a Full - Sentence Parser .", "label": "", "metadata": {}, "score": "63.928177"}
{"text": "The parse probability filter vetoes parse trees that fall below a minimum probability for valid semantic interpretation .The parse probability filter will calculate the probability of a sentence parse by taking the product of the probabilities of the syntactic rules used to generate a given parse tree .", "label": "", "metadata": {}, "score": "63.999344"}
{"text": "Table 2 shows the results obtained on a subset of the relations extracted by the system .We asked the domain experts to evaluate each relation and each argument of the relation , and mark them according to the following guidelines : .", "label": "", "metadata": {}, "score": "64.05985"}
{"text": "Because \" amino_acid \" is a supertype of \" protein_molecule \" , according to the given ontology ( although this might appear incorrect to a domain expert ) , the results of the latter include ( and expand ) the results of the former .", "label": "", "metadata": {}, "score": "64.0691"}
{"text": "A concatenation rule , on the other hand , will reduce the number of tokens .If more than one substitution rule or more than one concatenation rule is applicable to the sentence , preference is given to the rule that has a longer list of elements including those in the before sector , the after sector and the original sector .", "label": "", "metadata": {}, "score": "64.14905"}
{"text": "The method of .claim 18 in which the natural language parser analyzes for at least 8 of the following semantic relations : part , part_of , typical_subject , typical_subject_of , typical_object , typical_object_of , purpose , purpose_of , location_of , located_at , and synonym .", "label": "", "metadata": {}, "score": "64.16432"}
{"text": "As the set of rules is gradually enriched , so are the possible lexico - syntactic variants that can be captured .For example in figure 2 , the last of the examples shown is a case of a complex rule designed to capture the pattern \" A triggers the H of B \" , where H represent a nominalized verb ( activation , regulation , etc . ) .", "label": "", "metadata": {}, "score": "64.185684"}
{"text": "If the attributes and behaviors match , the name of the Language Component ( 700 ) is passed to the Response Creator ( 1303 ) .The Response Creator ( 1303 ) then sends the Language Component ( 700 ) across the network to the program that requested it .", "label": "", "metadata": {}, "score": "64.19001"}
{"text": "EPILOGUE .We will close by noting that we are in no way suggesting that the construction of a trainable wide - coverage P&P - based parser is impossible .Since no one has attempted this , and no one has even sketched a proposal for how to do it , we simply do not know if it is possible .", "label": "", "metadata": {}, "score": "64.25011"}
{"text": "LNAI 3581 .Huang M , Zhu X , Payan DG , Qu K , Li M : Discovering Patterns to Extract Protein - Protein Interactions from Full Texts .OUP Bioinformatics 2004 , 20 ( 18 ) : 3604 - 3612 .", "label": "", "metadata": {}, "score": "64.377106"}
{"text": "The difference is simply a digit - by - digit comparison that starts with the most significant bit and continues until the first decimal digit difference is located .Importantly , though , the differences due to inheritance along incompatible sub - trees do not correspond to elements of natural - language meaning .", "label": "", "metadata": {}, "score": "64.45701"}
{"text": "For example : .Rootsymbol sentence .This symbol should appear in the lhs of at least one grammar rule .This is the most general syntactic category which the parser ultimately will parse every input string into .After the rootsymbol declaration comes an optional declaration of the end_of_input symbol that your scanner is expected to use .", "label": "", "metadata": {}, "score": "64.704346"}
{"text": "FIG .3 , for the input string ' ab . 'An example of a context - free grammar that would be used in implementing the parser is as follows : .The modified LALR parser generator , grammar , and modified LALR parsing engine discussed previously should generate a non - deterministic recursive parser .", "label": "", "metadata": {}, "score": "64.72861"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 1 , wherein said sentence lexer comprises : . a document iterator that receives text input and outputs individual sentences ; . a lexer that receives said individual sentences from said document iterator and outputs individual words ; and . an ontology that receives said individual words from said lexer and returns ontological entities or words tagged with default assumptions about an ontological status of said individual words to said lexer .", "label": "", "metadata": {}, "score": "64.76121"}
{"text": "The class reduction code 25 , thus , provides identifiers from the select set for each token .This constitutes a simple yet powerful reduction technique that narrows the number of syntactic possibilities right at the start .The syntactic identifiers in a rule can concentrate on those classes permitted by the select set of identifiers .", "label": "", "metadata": {}, "score": "64.826126"}
{"text": "Because this mutual guessing game seldom succeeds , most programmers who want to reuse a component have to manually lookup the names the producer has chosen for the class , its methods , and attributes .The requirement for human intervention limits the utility of distributed components since it requires a manual process every time a software component is reused .", "label": "", "metadata": {}, "score": "64.84249"}
{"text": "On failing to download the missing dependency from any of the nodes , the Download Manager ( 1201 ) returns failure , otherwise it returns success .In another implementation , rather than containing a list of nodes , the Download Manager ( 1201 ) contains the name of a central server to download Language Components ( 700 ) from .", "label": "", "metadata": {}, "score": "64.99492"}
{"text": "Such characteristics determined by suffixes as tense or plural or singular may be tracked as an attribute .Subject matter analysis of the sentence after parsing can be enhanced by including semantically useful information in the attributes for example , such information may indicate whether a word indicates hostile conduct or friendly conduct , or whether a word indicates a negation .", "label": "", "metadata": {}, "score": "65.03486"}
{"text": "REFERENCES .Berwick , Robert .Locality Principles and the Acquisition of Syntactic Knowledge .PhD Dissertation , MIT .Charniak , Eugene .Statistical parsing with a context - free grammar and word statistics ' ' , Proceedings of the Fourteenth National Conference on Artificial Intelligence AAAI Press / MIT Press , Menlo Park .", "label": "", "metadata": {}, "score": "65.09939"}
{"text": "Boxer produces standard DRS syntax , uses a neo - Davidsonian analysis for events ( with thematic roles from VerbNet ) , incorporates Van der Sandt 's algorithm for presupposition , is 100 % compatible with first - order logic ( FOL ) , and normalises cardinal and date expressions .", "label": "", "metadata": {}, "score": "65.11723"}
{"text": "They are syntactically marked because they can have several PP arguments .Biomedical relational nouns like overexpression or transcription are absent from the Penn Treebank or rare .We use an unsupervised approach based on [ 19 ] to learn relational nouns from Medline .", "label": "", "metadata": {}, "score": "65.15706"}
{"text": "In another alternative embodiment , the present invention is implemented in a programming language with the help of a parser .Tokens and higher - level language elements that the parser matches are associated with programming units .On encountering unknown tokens , the alternative embodiment can search for the missing component by specifying the type of the component that is normally matched there and the tokens that could not be matched .", "label": "", "metadata": {}, "score": "65.17463"}
{"text": "The CORBA and the J2EE specifications attempt to solve the problem by providing a naming service that can be used to look for a component by specifying its name and its method signature .Other technologies from companies like Hewlett Packard and organizations like the W3C allow programmers to specify the inheritance details of a component or its attributes .", "label": "", "metadata": {}, "score": "65.323586"}
{"text": "BRIEF DESCRIPTION OF THE DRAWING .FIG .1 is a flow chart of an embodiment of the invention .DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS .Referring now to FIG .1 , an embodiment of the invention comprised of a method performed in a data processing system such as a computer will be described .", "label": "", "metadata": {}, "score": "65.46861"}
{"text": "Treebanks : Building and Using Parsed Corpora ( Edited by : Abeill\u00e9 A ) .Dordrecht : Kluwer 2003 , 299 - 316 .Lin D : Dependency - based Evaluation of MINIPAR .Workshop on the Evaluation of Parsing Systems , Granada , Spain 1998 .", "label": "", "metadata": {}, "score": "65.50606"}
{"text": "Yet further , it will be recognized that some semantic relations are more useful than others in subsequent use of the knowledge base .In a variation of the preferred embodiment , a weighting technique is used in which each semantic relation is assigned a relative weight based on its information value with respect to other semantic relations .", "label": "", "metadata": {}, "score": "65.622215"}
{"text": "The Language Component ( 700 ) in this alternative embodiment is composed of a cohered Semantic Definition ( 600 ) and Syntactic Definition ( 300 ) .The Semantic Definition ( 600 ) defines the meaning of the Syntactic Definition ( 300 ) and is itself composed of a Software Component ( 500 ) containing Discrete Code ( 501 ) .", "label": "", "metadata": {}, "score": "65.64819"}
{"text": "This shortcoming arises from the fact that the names of classes , methods , and attributes are not strictly tied to their definitions in object - oriented programming .As a result , the provider of a component has to guess the names of the class , methods , and attributes that the programmer writing the client program will want .", "label": "", "metadata": {}, "score": "65.679504"}
{"text": "The equivalence rules expressed above allow the user to formulate powerful queries which capture all the defined variants of the given configuration .For example , the query below returns all the sentences containing a control relation , where A and B are instantiated respectively by the agent and the target of the relation : . applyRel(xrel(['control ' , A , B ] ) ) .", "label": "", "metadata": {}, "score": "65.690796"}
{"text": "The interaction with researchers who work on pharmaceutical topics will clearly provide very valuable feedback .This will help us to better customize our rules and to evaluate the quality of our approach in an iterative manner .A long - term goal is the combination of the results into complex pathway networks , which can then be presented graphically to the users .", "label": "", "metadata": {}, "score": "65.72606"}
{"text": "The present invention relates to an ontological parser for natural language processing .More particularly , the present invention relates to a system and method for ontological parsing of natural language that provides a simple knowledge - base - style representation format for the manipulation of natural - language documents .", "label": "", "metadata": {}, "score": "65.87399"}
{"text": "One embodiment of a computer language can be seen in .FIG .2 .The term dependency is defined for the purposes of the embodiment presented here as a segment of code that a program needs in order to run or build .", "label": "", "metadata": {}, "score": "65.90257"}
{"text": "Iteration of this technique can further enhance the results .The foregoing and additional features and advantages of the present invention will be more readily apparent from the following detailed description thereof , which proceeds with reference to the accompanying drawings .", "label": "", "metadata": {}, "score": "65.94353"}
{"text": "The Response Creator ( 1303 ) then sends that Language Component ( 700 ) to the program that requested it .Then , for each Child Description ( 1400 ) in the Child List ( 1302 ) , the component is loaded using the Component Name ( 1401 ) and the attributes and behaviors expressed in the description are checked to see if they match .", "label": "", "metadata": {}, "score": "65.97644"}
{"text": "This enables a distributed form of development in which producers of components publish components on a network and consumers reuse them to build applications .Despite the advantages of networked components , networked component technology have not yet been widely adopted .", "label": "", "metadata": {}, "score": "66.03012"}
{"text": "The filter formatter needs to distinguish between periods that are found in the middle of a sentence and those which are found at the end of a sentence .Each sentence may then be provided to a parser for determining the syntax of the Each sentence may then be provided to a parser for determining the syntax of the sentence .", "label": "", "metadata": {}, "score": "66.05122"}
{"text": "This is a type of attribute that is assigned in accordance with rules such as given in the example of Appendix B. Once the tokens have been determined from the class reduction step , the dynamic attribute rules can be applied to the tokens .", "label": "", "metadata": {}, "score": "66.10591"}
{"text": "The pappy package .Packrat parsing is a novel and practical method for implementing linear - time parsers for grammars defined in Top - Down Parsing Language ( TDPL ) .While TDPL was originally created as a formal model for top - down parsers with backtracking capability , this thesis extends TDPL into a powerful general - purpose notation for describing language syntax , providing a compelling alternative to traditional context - free grammars ( CFGs ) .", "label": "", "metadata": {}, "score": "66.181854"}
{"text": "The word string may be electronically provided as a series of characters .The input string may have been stored electronically , read with an optical character reader from a textual image , input through a keyboard or provided by any other suitable means .", "label": "", "metadata": {}, "score": "66.182556"}
{"text": "Such counted information can then be displayed or analyzed in chart or report format .The reliability of the analysis can be significantly enhanced by providing a parser that reliably identifies the proper syntax of the sentence .SUMMARY OF THE INVENTION .", "label": "", "metadata": {}, "score": "66.212074"}
{"text": "A predicate structure is a data type that includes a predicate and multiple additional concepts ; as a grouping of concepts , it is itself a concept .An ontology is a hierarchically organized complex data structure that provides a context for the lexical meaning of concepts .", "label": "", "metadata": {}, "score": "66.2267"}
{"text": "BACKGROUND .Software component technologies , like CORBA and J2EE , provide software building blocks that allow developers to easily share and reuse code .Software components increase the reusability of software by enforcing usage through well - defined interfaces that , in their most common implementations , are automatically generated by vendor supplied tools .", "label": "", "metadata": {}, "score": "66.22844"}
{"text": "In another alternative embodiment , the wiring technology of a component framework is coupled with the present invention to create a complete solution in which the present invention discovers components using the communication protocol .In this way , legacy software using existing component technologies like CORBA , SOAP , and J2EE can be improved with the present invention .", "label": "", "metadata": {}, "score": "66.233894"}
{"text": "If the Language Component ( 700 ) is successfully found , it can then be successfully downloaded and compiled .An Embodiment of a Download Manager .In one embodiment , the Download Manager ( 1201 ) contains a list of nodes known as a Node List ( 1202 ) from which it is possible to download Language Components ( 700 ) .", "label": "", "metadata": {}, "score": "66.2869"}
{"text": "Still another object of the present invention is to provide a system and method for parsing natural language input that transforms data using a syntactic parser and ontology , where the ontology is used as a lexical resource .Yet another object of the present invention is to provide a system and method for parsing natural language input that provides ontological entities as output that are predicate - argument structures .", "label": "", "metadata": {}, "score": "66.342834"}
{"text": "If that fails , it rewinds to the next Matcher Failure ( 1100 ) and repeats the process .If none of the entries in the First Failure Record ( 1100 ) succeed using the SkipAhead Parser ( 902 ) , the entire match fails .", "label": "", "metadata": {}, "score": "66.36566"}
{"text": "Knowledge bases contain instances of real data , which represent a location somewhere within the ontology .Validating the equivalence of an instance with a concept in an ontology entails comparing the features of an instance with the features of a concept .", "label": "", "metadata": {}, "score": "66.37728"}
{"text": "Rinaldi F , Schneider G , Kaljurand K , Hess M , Andronis C , Konstanti O , Persidis A : Mining of Functional Relations between Genes and Proteins over Biomedical Scientific Literature using a Deep - Linguistic Approach .Journal of Artificial Intelligence in Medicine 2006 , in press .", "label": "", "metadata": {}, "score": "66.41236"}
{"text": "Thus , an element with a + may be compared with the tokens in the sentence but need not find a match as long as the remaining sequence of elements provides a suitable match with the consecutive tokens in the sentence .", "label": "", "metadata": {}, "score": "66.42863"}
{"text": "In the absence of a gold standard , only approximative recall values can be reported .In [ 2 ] we report a value of 40 % for a measure that we call \" worst - case recall \" , which basically implies that our actual recall is at least as good as this value .", "label": "", "metadata": {}, "score": "66.45148"}
{"text": "For the rules shown in the appendices the following conventions have been adopted .Of course , other symbols and different symbol interpretations may be adopted for use with embodiments of the invention .Symbols are used to provide greater flexibility in writing rules so that each listing of identifiers does not require an exact one - to - one match .", "label": "", "metadata": {}, "score": "66.46575"}
{"text": "The attributes for the tokens corresponding to the second element are also called for .An exclamation point is used in the indicator \" !NEG \" to indicate that it toggles on and off when combined with another such negative indicator .", "label": "", "metadata": {}, "score": "66.4908"}
{"text": "An Embodiment of Language Components .In one embodiment , the Language Component ( 700 ) is a Sym , as described in the patent filing \" A Method and System For Creating Software Programs by Coupling Syntactic and Semantic Relationships \" ( Ser .", "label": "", "metadata": {}, "score": "66.620285"}
{"text": "The : 2 determines that the meaning of the verb phrase is determined by the meaning of the token corresponding to the third element of the rule .In this case , the meaning \" have \" is thus determined .The dynamic attributes are also calculated at this time applying the [ @#1E ] and [ @#1B ] to the verb token .", "label": "", "metadata": {}, "score": "66.653206"}
{"text": "claim 6 , wherein said predicates and arguments are represented by encodings comprising at least one digit separated into multiple groups to provide multiple ontological levels and a branching factor at each node .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in . claim 2 , further comprising lexer filters for modifying said individual sentences based on word meanings .", "label": "", "metadata": {}, "score": "66.736595"}
{"text": "Wiley 2006 , in press .Copyright .\u00a9 Rinaldi et al .2006 .This article is published under license to BioMed Central Ltd. Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .", "label": "", "metadata": {}, "score": "66.77167"}
{"text": "Semantic queries .The next step is then to combine different syntactic patterns to yield a semantic rule .A generic relation between two arguments ( A and B ) , mediated by a verb or an equivalent relational noun ( H ) , is most commonly expressed by one of the following patterns : . semRel(xrel([H , A , B ] ) , active([A , H , B ] ) ) . semRel(xrel([H , A , B ] ) , passive([B , H , A ] ) ) . semRel(xrel([H , A , B ] ) , nominalization([H , B , A ] ) ) .", "label": "", "metadata": {}, "score": "66.973045"}
{"text": "Proc of EACL 03 , Budapest , Hungary 2003 , 291 - 296 .Rinaldi F , Schneider G , Kaljurand K , Hess M , Andronis C , Persidis A , Konstanti O : Relation Mining over a Corpus of Scientific Literature .", "label": "", "metadata": {}, "score": "67.03184"}
{"text": "The standard LALR parser generator algorithm fails when the grammar does not provide the parser generator enough information to decide whether the correction to perform given a certain current state and input symbol is to shift or to reduce .The generator algorithm also fails when the grammar does not provide the parser generator enough information to decide which of two or more rules should be reduced .", "label": "", "metadata": {}, "score": "67.18707"}
{"text": "The apparatus of .claim 28 in which the parsing means is a broad coverage parser .Description .FIELD OF THE INVENTION .The present invention relates to the field of natural language processing ( NLP ) , and more particularly relates to a method and system for compiling a lexical knowledge base useful in such processing .", "label": "", "metadata": {}, "score": "67.22482"}
{"text": "1 acts upon a sentence .The sentence goes through the process of token isolation 14 on the data processing system .Token isolation is a known process for identifying individual words and grammatical markings .Each word or grammatical marking is assigned a token .", "label": "", "metadata": {}, "score": "67.2336"}
{"text": "Even the important fact that flowers prototypically have a pleasant scent goes unmentioned .In this case , however , such a strategy is not especially productive , yielding general information about plants but no specific details about flowers .The question then remains : how to acquire the semantic knowledge required for an unrestricted domain .", "label": "", "metadata": {}, "score": "67.40024"}
{"text": "However , it can also be that paranthis are applied to a type .I wonder .The elaborator should take the parse tree , instantiate objects and tie them together resolving the names .However , the parser has no idea if the prefix at the parensis is a type or array .", "label": "", "metadata": {}, "score": "67.57121"}
{"text": "The functions of a word are indicated by the word 's syntax .The task is complicated by the fact that words can be used in several parts of speech .For instance , the word \" fine \" could be a noun , a verb , an adjective , or an adverb .", "label": "", "metadata": {}, "score": "67.66954"}
{"text": "Syntactic queries .We have written a set of syntactic rules that capture some of the most important syntactic phenomena , as in the example below , which encodes the passive case : .synRel(passive , [ X1 , X2 , X3 ] , .", "label": "", "metadata": {}, "score": "67.804344"}
{"text": "Bioinformatics 2003 , 19 ( 13 ) : 1699 - 1706 .View Article PubMed .Friedman C , Kra P , Krauthammer MH , Rzhetsky A : GENIES : a Natural - Language Processing System for the Extraction of Molecular Pathways from Journal Articles .", "label": "", "metadata": {}, "score": "67.93775"}
{"text": "The term concept as used herein means an abstract formal representation of meaning , which corresponds to multiple generic or specific words in multiple languages .Concepts may represent the meanings of individual words or phrases , or the meanings of entire sentences .", "label": "", "metadata": {}, "score": "67.95802"}
{"text": "To address this problem , we have found it advantageous to process the on - line dictionary a second time , making use of the knowledge base assembled in the first pass as an aid to parsing .After the first pass , for example , the knowledge base has assembled a collection of hypernyms for \" gold . \"", "label": "", "metadata": {}, "score": "68.05911"}
{"text": "In the preferred embodiment , the headwords / values in the semantic relation structures may be sense disambiguated , i.e. they may each have an indication of the dictionary sense of the word they denote .Example : \" Book \" .", "label": "", "metadata": {}, "score": "68.11362"}
{"text": "For both arguments the exact results [ Y ] are above 50 % .When we slightly relax the precision criteria and include the cases [ A ] where the argument has been correctly identified , but incorrectly expanded , precision jumps to about 90 % .", "label": "", "metadata": {}, "score": "68.15056"}
{"text": "Another object of the present invention is to provide a system and method for parsing natural language input that realizes enormous speed benefits from the parameterized ontology that the parser utilizes .BRIEF DESCRIPTION OF THE DRAWINGS .These and other attributes of the present invention will be described with respect to the following drawings in which : .", "label": "", "metadata": {}, "score": "68.22054"}
{"text": "Parse tree converter 240 receives the output of the parser 230 , and converts the parse trees into predicates .Following the Parse tree converter , parser filters 250 operate or the predicates to remove erroneously generated predicates based on rules about the probability of syntactic analyses , as well as rules about the compatibility of concepts with each other .", "label": "", "metadata": {}, "score": "68.28833"}
{"text": "A minus sign is used in the rule results to indicate that a particular syntactic identifier that follows the minus sign is to be removed from the list of syntactic identifiers in the particular token .A colon is used to refer to semantic meaning .", "label": "", "metadata": {}, "score": "68.305305"}
{"text": "It is contemplated that a user will modify the rules to better operate in the environment in which they are being used .The condition for each of the rules shows a bunch of elements that have been separated into three sectors .", "label": "", "metadata": {}, "score": "68.37078"}
{"text": "Additionally , the Computational Knowledge Management and Text Mining unit at Novartis supports a number of custom tailored text mining solutions for disease areas and pipelines .One of the core components is an annotator that we intend to apply for the entity recognition task .", "label": "", "metadata": {}, "score": "68.44818"}
{"text": "The system of .claim 1 wherein the request broker receives a set of allowed types of language components .The system of .claim 1 wherein a computer on a network self - assembles the language components from other computers on the network as needed .", "label": "", "metadata": {}, "score": "68.51344"}
{"text": "We are currently setting up a framework for an intensive collaboration , which will allow us to apply the approach described in this paper to non - annotated corpora , using term recognition tools at Novartis .Since 2001 , Novartis has information extraction and text mining applications in place that are used by hundreds of associates [ 32 ] .", "label": "", "metadata": {}, "score": "68.52052"}
{"text": "Disambiguation .A semantic knowledge base in this form allows a computer important new ways to explore the information available .For example , Jensen and Binot ( 1987 ) show how information automatically extracted from Webster 7 entries can be used to determine the proper attachment of ambiguous prepositional phrases .", "label": "", "metadata": {}, "score": "68.54553"}
{"text": "The backward linking begins by inverting each of the semantic relation structures generated by the foregoing steps .For example , becomes ( the inverse of the semantic relation part of is part ) .Each inverted semantic relation structure is then used to augment the lexical knowledge base .", "label": "", "metadata": {}, "score": "68.67894"}
{"text": "Refer to the yacc documentation on the use of operator precedence .The output file contains Erlang source code for a parser module with module name equal to the Parserfile parameter .After compilation , the parser can be called as follows ( the module name is assumed to be myparser ): .", "label": "", "metadata": {}, "score": "68.79367"}
{"text": "A simple search through LDOCE for noun entries which mention flower in their definitions , however , will allow us to arrive at a much more detailed picture of its meaning .It is further possible to compile an exhaustive list of flowers and flowering plants , a few of which are given in ( 8) ( LDOCE contains scores of such entries ) .", "label": "", "metadata": {}, "score": "68.84387"}
{"text": "View Article PubMed .Yakushiji A , Miyao Y , Tateisi Y , Tsujii J : Biomedical Information Extraction with Predicate - Argument Structure Patterns .Proceedings of the First International Symposium on Semantic Mining in Biomedicine 2005 , 60 - 69 .", "label": "", "metadata": {}, "score": "69.06636"}
{"text": "The method of .claim 15 in which : . the identified semantic relation structure includes a headword , a primary relation , and a primary value ; .the primary value includes a primary value term , a lower level relation , and a lower level value term ; and .", "label": "", "metadata": {}, "score": "69.07592"}
{"text": "The processing continues with the first set of rules .Table 3 shows the tokens after this rule has been applied .The processor continues through the first level of rules .PROG stands for progressive tense .The result is given below in Table 4 .", "label": "", "metadata": {}, "score": "69.09997"}
{"text": "A ] cases can be considered almost correct , as it easy ( by simply examining the highlighted arguments ) to detect the correct boundaries of the argument , should that be required .Unresolved pronouns [ P ] need a reader to deal with a substantially larger context ( e.g. \" this protein \" , referring to a protein mentioned in the previous sentence ) .", "label": "", "metadata": {}, "score": "69.29698"}
{"text": "A grammar for parsing infix arithmetic expressions into prefix notation , without operator precedence : .The same with operator precedence becomes simpler : .Rootsymbol E. Left 100 ' + ' .An overloaded minus operator : .Nonterminals E uminus .", "label": "", "metadata": {}, "score": "69.30934"}
{"text": "Current development efforts , led by Michael White , are focused on making the realizer practical to use in dialogue systems .For the latest news about OpenCCG , check out the SourceForge project page .The C&C Parser and Supertagger .", "label": "", "metadata": {}, "score": "69.3157"}
{"text": "The values initially associated with terminal category phrases , i.e. input tokens , are the token tuples themselves .Below is an example of the grammar above with structure building code added : .With this code added to the grammar rules , the parser produces the following value ( structure ) when parsing the input string ( a b c ) .", "label": "", "metadata": {}, "score": "69.33176"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 11 , wherein said adverb filter removes lexemes containing adverb concepts from said individual sentences .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "69.383835"}
{"text": "This example proceeds with reference to the following definition for the term \" market \" : .After application of the syntactic and logical rules , the tree - like logical form of .FIG .2 results .In this representation , the terms followed by the number \" 1 \" denote words found in the definition being parsed ( which definition is the first sense among the many senses defined in the dictionary ) .", "label": "", "metadata": {}, "score": "69.38611"}
{"text": "The method of .The method of .The method of .The method of .The method of .The method of .A computer program product for use on a computer system for parsing sentences , the computer program product comprising a computer usable medium having computer readable program code thereon , the computer readable program comprising : . tokenizing program code that provides tokens , each comprised of a list of syntactic identifiers , for the works of a sentence ; . first inductive merging program code applying a first set of rules to consecutive tokens in a sentence processed by said tokenizing program code to produce a narrower set of syntactic interpretations ; and . second inductive merging program code applying a second set of rules comprising substitution and concatenation rules specific to a collection of tokens to the narrower set of syntactic interpretations .", "label": "", "metadata": {}, "score": "69.429436"}
{"text": "FIG .1 is a flow chart illustrating a method for generating a lexical knowledge base according to one embodiment of the present invention .FIG .2 is a logical form produced from a definition of the word \" market \" in accordance with one embodiment of the present invention .", "label": "", "metadata": {}, "score": "69.45987"}
{"text": "First , the system must use P&P in a non - trivial way .So for example , using a standard machine learning algorithm to extract a statistical parser like those in existence , supplemented by a transducer that maps Penn Tree Bank structures into P&P annotations would not satisfy the challenge .", "label": "", "metadata": {}, "score": "69.48065"}
{"text": "Thus , in the second pass , gold can be recognized as a material , and the semantic relation linking \" chain \" and \" gold \" can thus be accurately identified as that of material rather than part_of .Still further improvements in accuracy may be achieved by performing not just two passes , but three or more .", "label": "", "metadata": {}, "score": "69.599846"}
{"text": "7 is another example parse tree incorporating real words according to the present invention .DETAILED DESCRIPTION OF THE INVENTION .In the following detailed discussion of the present invention , numerous terms , specific to the subject matter of a system and method for concept - based searching , are used .", "label": "", "metadata": {}, "score": "69.62747"}
{"text": "In accordance with a further embodiment of the invention , sentence parsing and subject matter analysis can be enhanced by making use of the variety of syntactic identifiers .To distinguish for the computer between the additional attributes and those of the parts of speech , a presently preferred embodiment creates the parts of speech syntactic identifiers between angle brackets whereas the attributes are between straight brackets .", "label": "", "metadata": {}, "score": "69.71343"}
{"text": "Overview .Lexical knowledge is poorly characterized by even the best definition of a word .The foregoing example of the definition for \" flower \" amply proves the point .Humans , by virtue of their ability to understand a definition in the relational context of a well developed prior knowledge base , can intuitively compensate for many such definitional deficiencies .", "label": "", "metadata": {}, "score": "69.74448"}
{"text": "These methods and all others are equivalent for the purposes of the present invention .An Embodiment of a Request Creator .In one embodiment , the Request Creator ( 1200 ) repeatedly tries to download the missing dependencies by looking in the Second Failure Record ( 1000 ) and the First Failure Record ( 901 ) .", "label": "", "metadata": {}, "score": "69.768295"}
{"text": "I do not see how can I distinguish between value_expression and type_conversion at syntactic level .My parser parses both as indexed_name and name resolution , when fails to find array object , falls back into type conversion .I am asking if such case analysis it the only way to handle the problem or more strighnforward approach exists that I am missing ?", "label": "", "metadata": {}, "score": "69.77496"}
{"text": "Packrat parsing also provides better composition properties than LL / LR parsing , making it more suitable for dynamic or extensible languages .The primary disadvantage of packrat parsing is its storage cost , which is a constant multiple of the total input size rather than being proportional to the nesting depth of the syntactic constructs appearing in the input .", "label": "", "metadata": {}, "score": "69.8575"}
{"text": "Dunja Mladinic , Turning Yahoo into an Automatic Web Page Classifier , ECAI 98:13th European Conference on Artificial Intelligence , Brighton , UK , Aug. 23 to Aug. 28 , 1998 , pp .473 - 474 , John Wiley & Sons , Ltd. .", "label": "", "metadata": {}, "score": "70.029175"}
{"text": "claim 15 in which the identifying step includes string searching the text to discern semantic relation structures .The method of .claim 15 in which : . step ( A ) includes : .( a ) providing a natural language corpus ; .", "label": "", "metadata": {}, "score": "70.23886"}
{"text": "Instead , the steps have only been concerned with the original dictionary definition for the word \" flower . \"Further , it should be noted that these steps , per se , are well known in the art , being found in many other NLP analysis systems ( albeit not in the context of extracting semantic relations from the logical form of definitions in on - line dictionaries ) .", "label": "", "metadata": {}, "score": "70.36147"}
{"text": "We can then subtract numbers to see if the features are in agreement , and a non - negative result suffices to prove this .Since 1 is nonnegative , we know that the features are in agreement .If concepts are identical , they will subtract to zero , which is equivalent to passing the filter by having two identical strings .", "label": "", "metadata": {}, "score": "70.38492"}
{"text": "Each word and grammatical marking becomes the subject of a dictionary look - up process 16 .The dictionary look - up 16 tags each token with all of its eligible parts of speech .Parts of speech are one type of syntactic identifier discussed herein .", "label": "", "metadata": {}, "score": "70.51682"}
{"text": "Consider a sample path through an ontology : .In this example , if the argument position of a predicate must be an example of transportation , then any of the three more - specific words will be an acceptable argument for the predicate .", "label": "", "metadata": {}, "score": "70.81108"}
{"text": "In a nominalization ( e.g. \" The inhibition of B by A \" ) the relation is expressed by a relational noun , while the two arguments are expressed by prepositional - phrase attachments .The argument A will be referred to as the agent , B as the target , adopting the terminology used in [ 21 ] .", "label": "", "metadata": {}, "score": "70.82905"}
{"text": "It is used for suppressing the warning about conflicts that is ordinarily given if the grammar is ambiguous .An example : .Expect 2 .The warning is given if the number of shift / reduce conflicts differs from 2 , or if there are reduce / reduce conflicts .", "label": "", "metadata": {}, "score": "70.86641"}
{"text": "While the description of the invention will be presented here , it will be understood that this description is not intended to limit the invention .On the contrary , the invention presented here is intended to cover alternatives , modifications , and equivalents , which may be included within the spirit and the scope of the invention as defined in the claims .", "label": "", "metadata": {}, "score": "70.867"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 11 , wherein said noun filter groups proper nouns into single lexical nouns .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "70.91666"}
{"text": "These relations may have as their values either ( a ) word(s ) or embedded relation(s ) .A simple semantic relation is composed of a triple including : ( 1 ) a headword ( e.g. \" flower \" ) ; ( 2 ) a semantic relation ( e.g. \" part of \" ) ; and ( 3 ) a value ( e.g. \" plant \" ) .", "label": "", "metadata": {}, "score": "70.98293"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 6 , wherein a first digit difference between two nodes provides a measure of the degree of ontological proximity of two concepts .", "label": "", "metadata": {}, "score": "70.99428"}
{"text": "The path starts at the root node ( Level 1 ) and takes the 2nd branch to level 2 , then takes the 3rd branch from that node to get to level 3 .The final \" 0 \" is a terminator , indicating that this particular node of the tree is not at the lowest possible level of the tree ; it does not necessarily indicate that no nodes branch from this level .", "label": "", "metadata": {}, "score": "71.013596"}
{"text": "Software .OpenCCG : The OpenNLP library .OpenCCG , the OpenNLP CCG Library , is an open source natural language processing library written in Java , which provides parsing and realization services based on Mark Steedman 's Combinatory Categorial Grammar ( CCG ) formalism .", "label": "", "metadata": {}, "score": "71.104904"}
{"text": "Since the parser is both probabilistic and operating on multiple streams of possible ontological entities , it is necessary to prune out spurious parse trees generated by the parser 230 .Parser filters 250 are designed to prune out spurious parse trees generated by the parser 230 , by removing trees that violate either statistical or ontological criteria for well - formed - ness .", "label": "", "metadata": {}, "score": "71.11626"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 11 , wherein said pseudo - concept filter removes concepts from queries .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "71.124176"}
{"text": "This representation also provides optimized execution of the difference comparison , since using hexadecimals instead of decimals optimizes the logical digit - by - digit comparison to a computer - efficient byte - by - byte comparison .It should also be noted that the above examples of decimal , hexadecimal , or multi - digit hexadecimal are typical parameter choices for the node encoding included in the present invention .", "label": "", "metadata": {}, "score": "71.130295"}
{"text": "If the ontological tree structure is carefully crafted , proximity within the tree should , in some measure , correspond to ontological proximity .Therefore , detecting the first digit difference , as above , gives a reasonable measure of the degree of ontological proximity of the two concepts .", "label": "", "metadata": {}, "score": "71.2578"}
{"text": "The WordNet Dictionary may be supplemented to improve its performance in a user 's particular application depending upon the subject area and type of writing that is being analyzed .Supplementation may include an additional listing of words and their associated parts of speech as well as a list of exceptions which may provide parts of speech different from and to be substituted for those found in the WordNet Dictionary .", "label": "", "metadata": {}, "score": "71.2636"}
{"text": "Those skilled in the art should appreciate that such computer instructions can be written in a number of programming languages for use with many computer architectures or operating systems .Furthermore , such instructions may be stored in any memory device , such as semiconductor , magnetic , optical , or other memory devices , and may be transmitted using a communications technology , such as optical , infrared , microwave , or other transmission technologies .", "label": "", "metadata": {}, "score": "71.2945"}
{"text": "PhD thesis University of Pennsylvania , Philadelphia , USA 1999 .Marcus M , Santorini B , Marcinkiewicz M : Building a Large Annotated Corpus of English : the Penn Treebank .Computational Linguistics 1993 , 19 : 313 - 330 .", "label": "", "metadata": {}, "score": "71.38086"}
{"text": "Syms enable more scalable software programs through the cohesion of syntactic and semantic relationships .This cohesion enables the inheritance and polymorphism of data , methods , and relationships , increasing the reusability of software as a whole .A Sym defines the set of syntactic appearances that are associated with a Language Component ( 700 ) in its Self - Description and the semantics or meaning of those syntactic appearances in its Definition .", "label": "", "metadata": {}, "score": "71.38855"}
{"text": "Two rules are included in this example of a pseudo - concept filter implementation .The first rule is that any word relating to the user , or his current situation , such as \" I \" or \" me \" is always deleted .", "label": "", "metadata": {}, "score": "71.43297"}
{"text": "Institute of Computational Linguistics , IFI , University of Zurich .Novartis Pharma AG .References .Jensen LJ , Saric J , Bork P : Literature mining for the biologist : from information retrieval to biological discovery .Nature Reviews Genetics 2006 , 7 : 119 - 129 .", "label": "", "metadata": {}, "score": "71.55691"}
{"text": "The default ( \" \" ) is to add the extension .erl to Grammarfile stripped of the . yrl extension .Indicates a customized prologue file which the user may want to use instead of the default file lib / parsetools / include / yeccpre.hrl which is otherwise included at the beginning of the resulting parser file .", "label": "", "metadata": {}, "score": "71.581825"}
{"text": "The file erl_parse . yrl in the lib / stdlib / src directory contains the grammar for Erlang .Note .Syntactic tests are used in the code associated with some rules , and an error is thrown ( and caught by the generated parser to produce an error message ) when a test fails .", "label": "", "metadata": {}, "score": "71.59161"}
{"text": "The method of .claim 11 which includes : . when performing step ( b ) the first time , extracting a first set of semantic relations ; and .when performing step ( b ) the second time , identifying a second set of semantic relations , the second set of semantic relations being different from the first .", "label": "", "metadata": {}, "score": "71.82212"}
{"text": "A method of ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 28 , further comprising the step of vetoing parse trees having conflicts between selectional features of concepts serving as arguments to a second concept and restrictions of said second concept .", "label": "", "metadata": {}, "score": "72.03006"}
{"text": "In the language of mathematics , the only number that meets this criteria is the imaginary number .In this way , the SkipAhead Parser ( 902 ) will have determined enough information to find the missing Language Component ( 700 ) and , in the present invention , the Software Component ( 500 ) that was associated with it that defines the meaning of imaginary numbers .", "label": "", "metadata": {}, "score": "72.19856"}
{"text": "The term software component is defined for the purposes of the embodiment presented here as a segment of discrete code that performs a function and that is normally distributed as a separate unit to enable greater reuse .JavaBeans , COM components , Syms , methods , objects , and CORBA components are all examples of software components .", "label": "", "metadata": {}, "score": "72.26378"}
{"text": "Reduce actions cause the parser to finish the current production and replace the assembled symbols with the symbol that replaces them ; .Accepts cause the parser to finish assembling a complete parse tree and halt ; .Errors cause the parser to give up because no grammar rule is available to reconcile what has already been parsed with what remains in the input stream .", "label": "", "metadata": {}, "score": "72.41591"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 11 , wherein said stop word filter removes stop words from said individual sentences .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "72.46693"}
{"text": "The method of . claim 5 in which the semantic relation structure includes at least one element in addition to a headword , a semantic relation , and a value .The method of .claim 6 in which : .the value of the extracted semantic relation structure includes a primary value term , a lower level relation , and a lower level value term ; and .", "label": "", "metadata": {}, "score": "72.47652"}
{"text": "trivial use of the assumptions of the P&P approach to syntax .Again , this is the point of the challenge , given that P&P makes very strong claims about how these grammatical assumptions are essential to language learning .Objection 2 : There have been very few people working in P&P parsing .", "label": "", "metadata": {}, "score": "72.52205"}
{"text": "Further analysis may include marking an unknown word that is in all capitals as an acronym , a subclass of noun .An unknown word with initial capital only can be marked as a proper noun .An unknown hyphenated word may be given a token with noun and adjective as the possible parts of speech .", "label": "", "metadata": {}, "score": "72.549515"}
{"text": "The associated code contains pseudo variables ' $ 1 ' , ' $ 2 ' , ' $ 3 ' , etc . which refer to ( are bound to ) the values associated previously by the parser with the symbols of the right hand side of the rule .", "label": "", "metadata": {}, "score": "72.58855"}
{"text": "10 . is a block diagram of a computer system incorporating an embodiment of a Second Failure Record .FIG .11 . is a block diagram of a computer system incorporating an embodiment of a Matcher Failure .FIG .12 . is a block diagram of a computer system incorporating an embodiment of a Request Creator and Download Manager .", "label": "", "metadata": {}, "score": "72.67226"}
{"text": "A proper noun is any word or phrase representing a non - generic noun concept .Although a number of proper nouns are already present in the lexicon , they are already properly treated as regular lexical items .Since proper nouns behave syntactically as regular nouns , there is no need to distinguish proper nouns and nouns already in the lexicon .", "label": "", "metadata": {}, "score": "72.72569"}
{"text": "The tools are written in C++ and have been designed to be efficient enough for large - scale NLP tasks .StatCCG .StatCCG is a statistical CCG parser ( trained on CCGbank ) written by Julia Hockenmaier .Executables are available here .", "label": "", "metadata": {}, "score": "72.88011"}
{"text": "This knowledge , which originally was explicit only in the definition of \" flower , \" is now explicit in the entry for \" plant \" as well .After the knowledge base has been augmented with the inverted semantic relation structures , it is sometimes desirable to repeat the entire process .", "label": "", "metadata": {}, "score": "72.984085"}
{"text": "A method of ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 39 , wherein a most significant digit difference between two nodes provides a measure of the degree of ontological proximity of two concepts .", "label": "", "metadata": {}, "score": "73.10893"}
{"text": "7,343,596 , which claims the priority of U.S. Provisional Application No .60/365,963 , filed Mar. 19 , 2002 , the disclosure of which is incorporated by reference herein in its entirety .FIELD OF THE INVENTION .The present invention relates generally to a method and system for creating reusable software components .", "label": "", "metadata": {}, "score": "73.13156"}
{"text": "This assumes that this is the first line of the input text , and that ' $ end ' is the distinguished end_of_input symbol .The Erlang scanner in the io module can be used as a starting point when writing a new scanner .", "label": "", "metadata": {}, "score": "73.18261"}
{"text": "( f ) augmenting the lexical knowledge base by storing data from the second collection of corresponding , inverted semantic relation structures .The method of .The method of .The method of .claim 23 in which only the first set of semantic relations includes \" hypernym .", "label": "", "metadata": {}, "score": "73.49733"}
{"text": "The call format may be different if a customized prologue file has been included when generating the parser instead of the default file lib / parsetools / include / yeccpre.hrl .Message is something which may be converted into a string by calling Module : format_error(Message ) and printed with io : format/3 .", "label": "", "metadata": {}, "score": "73.56637"}
{"text": "Default is false .If this flag is set , an extra field containing Warnings is added to the tuple returned upon success .Default is false .This is a short form for both return_errors and return_warnings .Determines whether the parser generator should give full information about resolved and unresolved parse action conflicts ( true ) , or only about those conflicts that prevent a parser from being generated from the input grammar ( false , the default ) .", "label": "", "metadata": {}, "score": "73.66766"}
{"text": "claim 28 , wherein the step of parsing comprises the step of looking ahead one word , scanning input from left - to - right , and constructing said parse tree .A method of ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "73.68808"}
{"text": "Why bother ?Reply : This is exactly the case that we exclude as not satisfying the challenge .The P&P approach makes claims not only about the nature of syntactic representation but the way in which grammar is acquired .Because it purports to be first and foremost a learning theory , it is necessary to show that this model can yield a robust grammar learning device in order for the framework to sustain any credibility .", "label": "", "metadata": {}, "score": "73.75302"}
{"text": "Next , the semantic relations are extracted from the logical form representation of .FIG .2 , resulting in the semantic relation structure of .FIG .3 .In this representation , the top headword is the term being defined , \" market . \"", "label": "", "metadata": {}, "score": "73.76052"}
{"text": "claim 6 , wherein said parse trees is represented by modified hexadecimal digits that have an octet of hexadecimal pairs to provide eight ontological levels and a branching factor at each node of 256 .A method of ontological parsing that converts natural - language text into predicate - argument format comprising the steps of : . converting a natural language sentence into a sequence of ontological entities that are tagged with part - of - speech information ; and . converting said sequence of ontological entities into predicate structures using a two - stage process that analyzes the grammatical structure of the natural language sentence and binds arguments into predicates .", "label": "", "metadata": {}, "score": "73.769104"}
{"text": "POSSIBLE OBJECTIONS .We outline here some possible objections to our challenge that might be raised by proponents of P&P approaches to grammar .These objections are anticipated , in part , on the basis of the experience of one of the authors with a prior debate on the scientific foundations of Minimalism .", "label": "", "metadata": {}, "score": "73.818275"}
{"text": "Lexer filters 150 are modular plug - ins , which modify sentences based on knowledge about word meanings .The preferred embodiment contains several filters 150 , although more may be developed , and existing filters may be removed from future versions , without altering the scope of the invention .", "label": "", "metadata": {}, "score": "73.90245"}
{"text": "Pisa , Italy : ECML / PKDD 2004 , 11 - 18 .Kaljurand K , Rinaldi F , Schneider G : Prolog - based query interface to syntactic dependencies extracted from biomedical literature .Tech rep IFI , University of Zurich 2006 .", "label": "", "metadata": {}, "score": "73.92541"}
{"text": "claim 23 , wherein said parse probability filter vetoes parse trees that fall below a minimum probability for semantic interpretation .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 1 , wherein said system is modular to permit the use of any part - of - speech - tagged ontology .", "label": "", "metadata": {}, "score": "73.93373"}
{"text": "The after elements are used to correspond with the token or tokens appearing after the tokens to be transformed .The column labeled \" original \" indicates the elements that are to be matched against the tokens to be transformed .The various elements are separated by a space or underscore to indicate that each element is to be applied to a separate token .", "label": "", "metadata": {}, "score": "74.00946"}
{"text": "A method of ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 28 , further comprising the step of vetoing parse trees that fall below a minimum probability for semantic interpretation .A method of ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "74.05326"}
{"text": "Certain rules are assigned precedence : each rule gets its precedence from the last terminal symbol mentioned in the right hand side of the rule .It is also possible to declare precedence for non - terminals , \" one level up \" .", "label": "", "metadata": {}, "score": "74.19531"}
{"text": "Consequently , ten is too small to constrain the branching factor for each level .The use of a hexadecimal representation would improve this some by increasing the branching factor to 16 .Thus , using a 16-digit ( i.e. , a 64-bit ) hexadecimal number gives 16 branches at each node for 16 levels : 16 16 possible concepts .", "label": "", "metadata": {}, "score": "74.23379"}
{"text": "A feature of the present invention that seeks to redress this deficiency of each definition taken separately is the notion of \" backward linking . \"Instead , such traditional definitional information is here augmented by information gleaned from other dictionary entries which use the term \" flower \" in their definitions .", "label": "", "metadata": {}, "score": "74.319305"}
{"text": "Boxer is developed by Johan Bos and generates formal semantic representations for CCG grammars .Boxer takes as input CCG ( Combinatory Categorial Grammar ) derivations and produces DRSs ( Discourse Representation Structures , from Hans Kamp 's Discourse Representation Theory ) as output .", "label": "", "metadata": {}, "score": "74.34195"}
{"text": "authority ( n,7 ) : a person , book , etc . , mentioned as the place where one found certain information .In this example , hypernym indicates an is_a relationship ; the location relation has as its value the verb \" find , \" which has its own semantic relation : typical_object , whose value is \" information . \"", "label": "", "metadata": {}, "score": "74.38585"}
{"text": "A if the relation is correct and biologically significant , but includes too much or too little information ( for example because an informative PP is not highlighted or a non informative PP is highlighted ) , treat as correct .P if the relation appears correct , but an anaphora needs to be resolved , treat as incorrect .", "label": "", "metadata": {}, "score": "74.834335"}
{"text": "( e ) reiterating steps b - d until no further token merging is possible .The method of . claim 2 further comprising deductive token merging upon completion of said step of reiterating .The method of .claim 3 wherein said step of deductive token merging includes reducing the list of syntactic identifiers for a word by selecting a syntactic identifier most commonly used for the word .", "label": "", "metadata": {}, "score": "74.86865"}
{"text": "Each Software Component ( 500 ) is a unit of Discrete Code ( 501 ) .Software Components ( 500 ) in most implementations can inherit from each other and a collection of Software Components ( 500 ) can define a program or the meaning of a Computer Language ( 200 ) .", "label": "", "metadata": {}, "score": "75.05304"}
{"text": "claim 38 , further comprising the step of representing said parse trees by modified hexadecimal numbers that have an octet of hexadecimal pairs to provide eight ontological levels and a branching factor at each node of 256 .A method of ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "75.06566"}
{"text": "The prior art includes three distinct classes of inventions for finding components on a network .In the first class , a component reference work is created .In this approach , the component reference work might be an encyclopedia , a source list , a knowledge base , a database management system , or a catalog .", "label": "", "metadata": {}, "score": "75.12846"}
{"text": "One such semantic relation is that of hypernym ( Hyp ) .This relation has three values , \" building , \" \" square \" and \" place . \"( That is , a market is a building ; a market is a square ; and a market is a place . )", "label": "", "metadata": {}, "score": "75.20162"}
{"text": "Pseudo - predicate verbs include \" give \" , \" show \" , and \" find \" .Not all instances of these verbs are pseudo - predicates ; however , the first instance of them in a query often is .", "label": "", "metadata": {}, "score": "75.21601"}
{"text": "2 , 3 and 4 .The sequence of steps , and the rich tree - like representations of the resultant logical form and semantic relation structures that can thereby develop , may be better appreciated by consideration of .FIGS .", "label": "", "metadata": {}, "score": "75.289566"}
{"text": "The collection of Matcher Failures ( 1100 ) in a match are stored in the First Failure Record ( 901 ) .If the parse is unsuccessful , the SkipAhead Parser ( 902 ) can return to the most recent and most specific Matcher Failure ( 1100 ) and skip elements of data until the match succeeds or fails .", "label": "", "metadata": {}, "score": "75.39438"}
{"text": "The modal verb filter removes modal verbs from sentence objects .Modal verbs are verbs such as \" should \" , \" could \" , and \" would \" .Such verbs alter the conditions under which a sentence is true , but do not affect the basic meaning of the sentence .", "label": "", "metadata": {}, "score": "75.45671"}
{"text": "In keeping with the maxim that a patent should not teach , but preferably omit , what is known in the prior art , we have not belabored the elements of our preferred implementation which borrow from this prior art .( We have , however , particularly cited certain prior art where it reflects our \" best mode . \")", "label": "", "metadata": {}, "score": "75.51897"}
{"text": "Similar features will have similar paths through the tree .Referring to .FIG .5 , an example is illustrated .Node A is represented with the decimal number \" 1212 . \"Node B is represented with the decimal number \" 1220 .", "label": "", "metadata": {}, "score": "75.579544"}
{"text": "The number [ 0 ] refers to the first element in the original sequence ; the number [ 1 ] applies to the second element ; and the number [ 2 ] refers to the third element in the original sequence .", "label": "", "metadata": {}, "score": "75.61629"}
{"text": "The configuration of the parser 200 is shown in FIG .2 .First , the sentence receiver 220 obtains sentences 210 consisting of ontological entities produced by the sentence lexer 100 .These sentences are parsed by the parser 230 , which is designed to use a context - free grammar , although other grammatical models may be used without departing from the scope and spirit of the invention .", "label": "", "metadata": {}, "score": "75.88507"}
{"text": "A dynamic attribute can be used to avoid merging tokens prematurely .For instance , without dynamic attributes the phrase \" a student \" in \" formed a student group in the school \" can be prematurely merged into a noun phrase .", "label": "", "metadata": {}, "score": "75.90715"}
{"text": "If the associated code is empty , the separating colon ' : ' is also omitted .A final dot marks the end of the rule ., etc . , have to be enclosed in single quotes when used as terminal or non - terminal symbols in grammar rules .", "label": "", "metadata": {}, "score": "76.0164"}
{"text": "FIG .8 , as is familiar to those skilled in the art , a personal computer 100 of the sort referenced above includes a central processing unit ( CPU ) 102 and a memory system 104 that communicate through a bus structure 106 .", "label": "", "metadata": {}, "score": "76.0838"}
{"text": "This , for example , makes it possible to parse from a file , token by token .The tokenizer used above has to be implemented so as to return one of the following : .This conforms to the format used by the scanner in the Erlang io library module .", "label": "", "metadata": {}, "score": "76.13572"}
{"text": "It is intended that the scope of the invention be defined by the claims appended hereto and their equivalents .Computer system and computer implemented process for representing software system descriptions and for generating executable computer programs and computer system configurations from software system descriptions .", "label": "", "metadata": {}, "score": "76.20073"}
{"text": "A more general approach to scanner implementation is to use a scanner generator .A scanner generator in Erlang called leex is under development .Grammar Definition Format .Erlang style comments , starting with a ' % ' , are allowed in grammar files .", "label": "", "metadata": {}, "score": "76.44113"}
{"text": "The present invention is believed to finally offer the promise of a solution to this problem .In view of the wide variety of different applications to which the principles of our invention can be put , it should be recognized that the detailed methods and systems are illustrative only and should not be taken as limiting the scope of our invention .", "label": "", "metadata": {}, "score": "76.51036"}
{"text": "EXPORTS .Grammarfile is the file of declarations and grammar rules .Returns ok upon success , or error if there are errors .An Erlang file containing the parser is created if there are no errors .The options are : .", "label": "", "metadata": {}, "score": "76.74761"}
{"text": "Endsymbol ' $ end ' .Next comes one or more declarations of operator precedences , if needed .These are used to resolve shift / reduce conflicts ( see yacc documentation ) .Examples of operator declarations : .Left 300 ' + ' .", "label": "", "metadata": {}, "score": "76.883026"}
{"text": "A 10-digit decimal number allows 10 10 , or 10 billion possible concepts to be stored in the tree .That is a sufficient number of total concepts , but the branching factor is too small .There can be a maximum of ten possible branches out of each node to the next level .", "label": "", "metadata": {}, "score": "76.923904"}
{"text": "Once that rule has been applied , the phrase \" a fine vase \" can be merged into a noun phrase regardless of whether the word \" fine \" is a noun or an adjective .The ability to use a computer to determine the appropriate syntax for sentences permits computers to participate in analysis of enormous amounts of information such as news reports from around the world .", "label": "", "metadata": {}, "score": "76.98697"}
{"text": "Section \" Related Work \" surveys related work .We conclude by describing plans for future work in section \" Conclusions and Future Work \" .Methods : Corpus analysis .The base abstracts were selected from Medline using the keywords \" Human \" , \" Blood Cells \" , and \" Transcription Factors \" .", "label": "", "metadata": {}, "score": "77.38543"}
{"text": "The contexts in which these associated terms are found are then heuristically analyzed to discern semantic relationships between each of these terms and the original word \" flower . \"( It should be noted that not all definitions which mention \" flower \" will have a semantic relation with \" flower \" as the value . )", "label": "", "metadata": {}, "score": "77.460434"}
{"text": "I 'm sure that would solve all of your problems .- Dave Clarke Apr 22 ' 14 at 21:06 .Are prefix and type_mark tokens returned by the lexer ?I think the answer to your question is going to be something to the effect that you have to keep a symbol table around while doing lexing .", "label": "", "metadata": {}, "score": "77.765976"}
{"text": "Schneider G : A broad - coverage , representationally minimal LFG Parser : chunks and F - structures are sufficient .The 10th international LFG Conference ( LFG 2005 ) ( Edited by : Butt M , King TH ) .Bergen , Norway : CSLI 2005 .", "label": "", "metadata": {}, "score": "77.94025"}
{"text": "In Unix applications , the standard C library is frequently a dependency and , in Windows applications , the Microsoft Foundation Classes are frequently dependencies .The term inheritance is well known in the field of software and should be understood and construed broadly for the purposes of the embodiment presented here .", "label": "", "metadata": {}, "score": "78.23855"}
{"text": "This query returns all the relations where \" NF - kappa B \" is involved as a target ( e.g. \" In T cells , NF - kappa B is activated upon cellular treatment by phorbol esters and the cytokine tumor necrosis factor alpha . \" )", "label": "", "metadata": {}, "score": "78.55015"}
{"text": "Unary 300 uminus .The Yecc grammar that is used for parsing grammar files , including itself : .Nonterminals grammar declaration rule head symbol symbols attached_code token tokens .Rootsymbol grammar .Endsymbol ' $ end ' .Erlang code .", "label": "", "metadata": {}, "score": "78.768295"}
{"text": "Our method allows the following information to be extracted from the definition of \" plant , \" and these semantic relations are added to this sense entry for \" plant \" : . flower ( n,1 ) \" the part of a plant , often beautiful and coloured , that produces seeds or fruit \" .", "label": "", "metadata": {}, "score": "78.83049"}
{"text": "I researched the 19th century for this chapter .The book is coming along really well , although it needs to be proofread and the bibliography is too long .Our semantic knowledge base makes it possible to discover the links between these sentences , providing an explanation for the otherwise mysterious use of definite articles preceding \" book \" and \" bibliography \" in the second .", "label": "", "metadata": {}, "score": "78.83897"}
{"text": "Acknowledgements .We are indebted to the creators of the GENIA corpus for providing such a valuable resource .Special thanks to Manfred Klenner for very important comments and suggestions .This article has been published as part of BMC Bioinformatics Volume 7 , Supplement 3 , 2006 : Second International Symposium on Semantic Mining in Biomedicine .", "label": "", "metadata": {}, "score": "78.878265"}
{"text": "claim 3 , wherein said numbers can be subtracted to determine if features are in agreement , wherein a negative number indicates feature incompatibility .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "79.133575"}
{"text": "Information overload is one of the most widely felt problems in our modern society .Individuals have access to a previously unimaginable flood of new information and professionals are confronted in their daily activities with a cornucopia of relevant results .Especially for biomedical scientific literature , there is a pressing need for an efficient approach to access and extract information , in a format that can be easily assimilated by humans or further processed by other automated tools .", "label": "", "metadata": {}, "score": "79.140594"}
{"text": "It must , however , contain the necessary export declarations .The default is indicated by \" \" .Causes errors to be printed as they occur .Default is true .Causes warnings to be printed as they occur .Default is true .", "label": "", "metadata": {}, "score": "79.27188"}
{"text": "Embodiments with Interactive User Systems .In one set of alternative embodiments , a user provides input to an interactive system and , on encountering user input that the system does not recognize , the present invention is used to automatically download or reference the missing dependencies across a network .", "label": "", "metadata": {}, "score": "80.10043"}
{"text": "( 1 ) inverting the semantic relation structure ; and .( 2 ) storing , in association with the value , the inverted semantic relation structure .The system of .claim 28 in which : .the value of the extracted semantic relation structure includes a primary value term , a lower level relation , and a lower level value term ; and .", "label": "", "metadata": {}, "score": "80.30239"}
{"text": "claim 20 further comprising a multiword comparator .The sentence parser of .claim 20 further comprising a deductive processor arranged to operate on the syntactic possibilities remaining from said iterative inductive processor so as to further reduce the syntactic possibilities for the sentence .", "label": "", "metadata": {}, "score": "80.302536"}
{"text": "Only rules that produce a narrowing transformation to the syntactic possibilities need be considered .It may be helpful to an understanding of the embodiment described herein to provide an example .Let us analyze the example sentence : \" He could not possibly have been doing this .", "label": "", "metadata": {}, "score": "80.31899"}
{"text": "claim 12 in which only the first set of semantic relations includes \" hypernym .\" The method of .claim 12 in which only the first set of semantic relations includes \" user , \" \" domain \" and \" manner . \"", "label": "", "metadata": {}, "score": "80.47034"}
{"text": "claim 3 in which the parsing step includes string searching the corpus by machine to discern semantic relation structures .A method for generating a lexical knowledge base in a machine , said generating comprising the steps : .( a ) using a natural language parser associated with said machine to parse a segment of text to obtain a logical form ; .", "label": "", "metadata": {}, "score": "80.47531"}
{"text": "Despite such an improvement over a decimal representation , the branching factor of only 16 is still unacceptably small .A solution to this is to use a modified hexadecimal representation .Since it is unlikely that a reasonable , specialized ontology will need more than eight levels of general concept representation , a 16-digit hexadecimal number can be interpreted slightly differently , as an octet of hexadecimal pairs : .", "label": "", "metadata": {}, "score": "80.50022"}
{"text": "claim 30 , further comprising the step of assigning numbers to said concepts .A method of ontological parsing that converts natural - language text into predicate - argument format as recited in . claim 34 , further comprising the step of subtracting said numbers to determine if features are in agreement , wherein a negative number indicates feature incompatibility .", "label": "", "metadata": {}, "score": "80.590744"}
{"text": "The system of .claim 10 wherein the dependency analyzer fails to match the at least one section of the code , and the at least one requested language component implements a subset of the at least one language used by the at least one section of code .", "label": "", "metadata": {}, "score": "80.70738"}
{"text": "The foregoing descriptions of specific embodiments of the present invention have been presented for purposes of illustration and description .They are not intended to be exhaustive or to limit the invention to the precise forms disclosed , and obviously many modifications and variations are possible in light of the above teaching .", "label": "", "metadata": {}, "score": "80.76583"}
{"text": "A typical case is the word \" flower \" in Longman Dictionary of Contemporary English ( henceforth , LDOCE ) whose primary sense is noteworthy more for the information it omits than for what it provides : . flower ( n,1 ) \" the part of a plant , often beautiful and coloured , that produces seeds or fruit \" .", "label": "", "metadata": {}, "score": "80.90832"}
{"text": "4 is an example parse tree according to the present invention ; .FIG .5 is another example parse tree according to the present invention ; .FIG .6 is another example parse tree according to the present invention ; and .", "label": "", "metadata": {}, "score": "81.03023"}
{"text": "4 .Each arrowhead in .FIG .4 represents a concept node .The deeper into the tree ( i.e. , the higher the numbered level of the concept node ) , the more specific the concept is .Consider one path through FIG .", "label": "", "metadata": {}, "score": "81.17827"}
{"text": "A Computer Language ( 200 ) is defined as a collection of Language Elements ( 100 ) .In addition to this embodiment , those familiar with the state of the art know that there are almost an endless number of different ways to define language elements from monads to the definitions in BNF and EBNF grammars .", "label": "", "metadata": {}, "score": "81.275055"}
{"text": "If there is no associated code after the right hand side of the rule , the value ' $ undefined ' is associated with the phrase .The right hand side of a grammar rule may be empty .This is indicated by using the special symbol ' $ empty ' as rhs .", "label": "", "metadata": {}, "score": "81.33615"}
{"text": "It can also appear at the right hand side of rules .Next comes a declaration of the terminal categories , which are the categories of tokens produced by the scanner .For example : .Terminals article adjective noun verb .", "label": "", "metadata": {}, "score": "81.3488"}
{"text": "Wandering Logic Apr 22 ' 14 at 21:08 . 1 Answer 1 .There is no reason to \" distinguish between value_expression and type_conversion \" since , according to the grammar a type_conversion is a value_expression .You probably mean to distinguish between indexed_name and type_conversion ... and possibly also function_call , but you do not give its syntax , so I am not sure .", "label": "", "metadata": {}, "score": "81.71461"}
{"text": "A predicate structure built from \" eat \" might thus require that the object of the predicate have a code beginning with \" 112 .\" As can be seen from the tree shown , it is clear that all the foods listed inherit the \" 112 \" prefix .", "label": "", "metadata": {}, "score": "81.7596"}
{"text": "One of the advantages of the Novartis annotator is that it is built on a huge terminology with more than 1 Million terms .The terms contain gene names , targets , modes of action , diseases , geographic locations , products and companies .", "label": "", "metadata": {}, "score": "81.785645"}
{"text": "Similar to the lexer filters 150 , the parser filters 250 may be chained together to form a list of filters to be applied to each candidate parse tree .Each parser filter 250 will keep track of the filter that should be applied immediately before it , and will submit candidate parse trees to that filter before performing a filtering function .", "label": "", "metadata": {}, "score": "81.8053"}
{"text": "This section must start with the pseudo declaration , or key words .Erlang code .No syntax rule definitions or other declarations may follow this section .To avoid conflicts with internal variables , do not use variable names beginning with two underscore characters ( ' _ _ ' ) in the Erlang code in this section , or in the code associated with the individual syntax rules .", "label": "", "metadata": {}, "score": "81.97693"}
{"text": "claim 28 , further comprising the step of modifying said natural language sentence based on word meanings .A method of ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 28 , further comprising the steps of : . receiving sentences including ontological entities ; . parsing said sentences including ontological entities into parse trees representing concepts in the corresponding sentence including ontological entities ; and . converting said parse trees into predicates .", "label": "", "metadata": {}, "score": "82.009636"}
{"text": "Thus , for example , the node to Node A 's immediate left , is represented by \" 1211 .\" When the difference comparison is made , it works out to be \" 0001 , \" which implies a correspondingly close ontological relationship between the two concepts .", "label": "", "metadata": {}, "score": "82.03533"}
{"text": "claim 22 , wherein said parser filters include a selectional restriction filter and a parse probability filter .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 23 , wherein said selectional restriction filter vetoes parse trees having conflicts between selectional features of concepts serving as arguments to a second concept and restrictions of said second concept .", "label": "", "metadata": {}, "score": "82.259705"}
{"text": "As mentioned above , this definition is noteworthy more for the information that it omits than for what it provides .Missing from this definition is any detailed description of the physical structure of flowers , information about what kinds of plants have flowers , and so on .", "label": "", "metadata": {}, "score": "82.263596"}
{"text": "The value of the Parserfile option stripped of the .erl extension is used by Yecc as the module name of the generated parser file .Yecc will add the extension . yrl to the Grammarfile name , the extension .hrl to the Includefile name , and the extension .", "label": "", "metadata": {}, "score": "82.41524"}
{"text": "In fact , we would be delighted if someone succeeds in meeting our challenge .Such success would convince us that the P&P enterprise is , after all , a testable theory with genuine scientific content .Richard Sproat , Department of Linguistics Department of Electrical and Computer Engineering Beckman Institute University of Illinois at Urbana - Champaign .", "label": "", "metadata": {}, "score": "82.56067"}
{"text": "205 - 6 , for a complete list . )It will be noted that the structure may be viewed as circular in arrangement , with a link connecting the \" or1 \" in the bottom right to the \" or1 \" at the top of the diagram ( link not here shown ) .", "label": "", "metadata": {}, "score": "82.595535"}
{"text": "Anaphora .Another problem for which a rich semantic knowledge base provides a solution is that of anaphora : pronouns and definite noun phrase 's referring back to some entity introduced earlier in the discourse .Sentences in a discourse are often linked by anaphora and it is important in any NLP or AI application to correctly identify the antecedent , i.e. , the word which the anaphor points back to , ( or forward to in the case of cataphora ) .", "label": "", "metadata": {}, "score": "82.60229"}
{"text": "For example , consider a tree shown in FIG .7 .It is clear that in some cases , it is useful to know the distance between words , but that it is not equally useful in all cases .However , since neither of these terms shares any properties beyond \" organic \" with \" amino acid , \" it is not helpful to know the distance between \" bread \" and \" amino acid , \" even though they are only one level apart .", "label": "", "metadata": {}, "score": "83.027176"}
{"text": "claim 1 in which the natural language parser analyzes for at least 8 of the following semantic relations : part , part_of , typical_subject , typical_subject_of , typical_object , typical_object_of , purpose , purpose_of , location_of , located_at , and synonym .", "label": "", "metadata": {}, "score": "83.405365"}
{"text": "claim 10 wherein the at least one requested language component is automatically used to run the at least one section of code upon access being granted .The system of . claim 10 further comprising an interactive system wherein the at least one section of code is unrecognized user input .", "label": "", "metadata": {}, "score": "84.33991"}
{"text": "claim 10 wherein a computer on a network comprising the dependency analyzer self - assembles the at least one requested language component from at least one other computer on the network .The system of .claim 10 wherein each language component comprises a description of legal ways that a collection of language components and/or tokens are related to each other and at least one software component that implements what those relationships mean .", "label": "", "metadata": {}, "score": "84.34336"}
{"text": "A selectional restriction filter vetoes any parse tree where there are conflicts between the selectional features of the concepts serving as arguments to another concept and the restrictions of that concept .Selectional restrictions are imposed on the argument positions of predicate structures .", "label": "", "metadata": {}, "score": "84.39351"}
{"text": "( 5 ) I researched the 19th century for this chapter .The prepositional phrase attachment in this sentence is unambiguous : any native speaker of English will infer first of all that writing / reading the chapter in question required researching the 19th century , and further , that the speaker is writing / reading a book .", "label": "", "metadata": {}, "score": "84.595"}
{"text": "This would add 8 bytes of total storage to each node in the tree .For a 10,000-concept tree , this is only 80 KB .For a 100,000-concept tree , it is 800 KB .And for a 1,000,000-concept tree , it is 8 MB .", "label": "", "metadata": {}, "score": "84.66897"}
{"text": "( In other words , \" meet \" has the purposes \" buy \" and \" sell , \" both of which have a typical object of \" goods , \" and finally , that \" people \" are the ones doing the \" meet\"ing . )", "label": "", "metadata": {}, "score": "84.68625"}
{"text": "claim 10 wherein the at least one requested language component is coupled with at least one different component technology and self - assemblage with the set of language components occurs through a communication protocol of the at least one different component technology .", "label": "", "metadata": {}, "score": "84.77768"}
{"text": "Background .The biomedical domain is witnessing a rapid growth of the amount of published scientific results , which makes it increasingly difficult to filter the core information .There is a real need for support tools that ' digest ' the published results and extract the most important information .", "label": "", "metadata": {}, "score": "85.17592"}
{"text": "For adding semantic relations to the words which are the value of lower level relations , all relations to the original headword must be inverted .The inversion of typical_object is typical_object_of , and the inversion of purpose is purpose_of .The following semantic relation is added to the entry for insect based on the information extracted from \" corolla \" : .", "label": "", "metadata": {}, "score": "85.45707"}
{"text": "In a chemistry component language , for example , text like \" H \" or \" Cl \" would be associated with a Hydrogen and Chlorine components respectively and higher - level elements of the language like Atom and Molecule would be associated with Atom and Molecule components .", "label": "", "metadata": {}, "score": "85.82179"}
{"text": "claim 1 wherein the language components of the first set are coupled with at least one different component technology and self - assemblage with the second set of language components occurs through a communication protocol of the at least one different component technology .", "label": "", "metadata": {}, "score": "85.88788"}
{"text": "claim 1 wherein the matching language components implement a subset of the at least one language used by the at least one section of code and are self - assembled with language components of the second set .The system of .", "label": "", "metadata": {}, "score": "86.09616"}
{"text": "This relation has one value , namely \" meet . \"( That is , a \" market \" is the location of \" meet .The value \" meet , \" however , is a headword itself as respects three further terms in the definition : \" buy , \" \" sell \" and \" people . \" The semantic relation structure reflects this relationship by further labelled links of purpose ( Purp , for the values \" buy \" and \" sell \" ) and typical subject ( Tsub , for the value \" people \" ) .", "label": "", "metadata": {}, "score": "86.58865"}
{"text": "claim 10 wherein the at least one requested language component is described by the at least one section of code .The system of .claim 10 wherein the dependency analyzer sends a set of allowed types of the at least one requested language component .", "label": "", "metadata": {}, "score": "87.00008"}
{"text": "As used herein , the number 1 is the broadest class , 2 is a subset of 1 and 3 is a subset of 2 .The dynamic attributes can be revised after each token merging narrowing of syntactic possibilities .The dynamic attributes are useful components that may be incorporated as elements of rules , in accordance with an enhanced embodiment of this invention .", "label": "", "metadata": {}, "score": "87.02519"}
{"text": "MODULE .MODULE SUMMARY .LALR-1 Parser Generator .DESCRIPTION .An LALR-1 parser generator for Erlang , similar to yacc .Takes a BNF grammar definition as input , and produces Erlang code for a parser .To understand this text , you also have to look at the yacc documentation in the UNIX(TM ) manual .", "label": "", "metadata": {}, "score": "87.425125"}
{"text": "Description .Applicants hereby incorporate by reference co - pending application Ser .No .09/627,295 filed in the U.S. Patent and Trademark Office on Jul. 27 , 2000 , entitled \" Concept - Based Search and Retrieval System . \" BACKGROUND OF THE INVENTION .", "label": "", "metadata": {}, "score": "87.46417"}
{"text": "Objection 3 : The MP is a research program , not a fully developed theory .Therefore it ca n't be expected to yield a model that can be implemented as a broad coverage processing device .Reply : This is a remarkable dodge .", "label": "", "metadata": {}, "score": "88.672935"}
{"text": "claim 1 wherein the first set of rules comprises substitution and concatenation rules and wherein substitution is preferred over concatenation when both may be applied to a series of tokens in the step of token merging consecutive tokens .The method of .", "label": "", "metadata": {}, "score": "89.42142"}
{"text": "claim 1 in which the parsing and extracting steps include : .( a ) providing a natural language corpus : .( b ) analyzing the corpus by machine to identify a set of text segments therein ; .( c ) automatically discerning from the text segments a first collection of complex semantic relation structures ; and .", "label": "", "metadata": {}, "score": "89.85783"}
{"text": "claim 10 wherein the at least one language is a formal and/or natural language .Description .RELATED APPLICATIONS .This application is a continuation application of U.S. patent application Ser .No .10/310,098 , filed Dec. 4 , 2002 , now U.S. Pat .", "label": "", "metadata": {}, "score": "90.02619"}
{"text": "( 1 ) I ate a fish with bones .The relevant semantic information from Webster 7 that allows a heuristic to decide that \" with bones \" should be attached to \" fish \" is : .The semantic network that allows this attachment to be made is shown in .", "label": "", "metadata": {}, "score": "91.13684"}
{"text": "Alternatively , it could be the text \" the atom with one proton \" since this specifies the Hydrogen component even though it does not directly reference it by name .The term syntactic relationship is defined for the purposes of the embodiment presented here as the legal ways that programming elements can be related to each other .", "label": "", "metadata": {}, "score": "92.7065"}
{"text": "Following that , it would be passed to the lexer 120 , which would access the ontology 140 , and return the sequence : .The - det octopus - noun have - verb a - det heart - noun .Here , det stands for determiner , which is a word with a purely grammatical function , namely specifying a noun phrase .", "label": "", "metadata": {}, "score": "93.49501"}
{"text": "The computer program product of .claim 14 further comprising deductive token merging code for reducing synactic possibilities after completing execution of said reiteration program code .The computer program product of .The computer program product of . claim 13 further comprising multiword matching program code .", "label": "", "metadata": {}, "score": "93.77547"}
{"text": "claim 1 wherein each language component comprises a description of legal ways that a collection of language components and/or tokens are related to each other and at least one software component that implements what those relationships mean .The system of .", "label": "", "metadata": {}, "score": "94.16916"}
{"text": "claim 1 wherein the request broker finds only a subset of the language components of the first set that implement the at least one section of code written in the at least one language and access is granted to that subset .", "label": "", "metadata": {}, "score": "94.282005"}
{"text": "For example : .Header \" % % Copyright ( C ) \" \" % % @private \" \" % % @Author John \" .Next comes a declaration of the nonterminal categories to be used in the rules .For example : .", "label": "", "metadata": {}, "score": "95.028305"}
{"text": "However , the relation between \" chain \" and \" gold \" is more tricky .Given the definition 's structure , it would appear that the semantic relation linking \" chain \" and \" gold \" is part_of ( i.e. chain part_of gold ) ; this , however , is not correct .", "label": "", "metadata": {}, "score": "97.636246"}
{"text": "5 .If we replace the word \" fish \" in this sentence with any of its hyponyms , such as \" salmon , \" the heuristic above will fail to find any semantic association between this prepositional phrase and the noun it modifies : .", "label": "", "metadata": {}, "score": "97.9303"}
{"text": "For example , the following restrictions can be used in a query in order to limit the type of the agent to be \" protein_molecule \" : . applyRel(xrel(['control ' , type : ' G#protein_molecule ' , _ ] ) ) .", "label": "", "metadata": {}, "score": "98.29939"}
{"text": "The Dependency Analyzer ( 900 ) , in this case , would determine that an Atom with the syntactic appearance \" H \" was the missing dependency .An example of the second case is the description \" an atom with one proton \" also within the context of a chemistry Component Language ( 800 ) .", "label": "", "metadata": {}, "score": "99.0493"}
{"text": "Input device 118 can be a keyboard , mouse , or other device for providing input data to the computer .Output device 116 can be a display device , printer , or other device for providing output data from the computer .", "label": "", "metadata": {}, "score": "100.0386"}
{"text": "One of the most complicating factors in resolving parts of speech of words in English is that many nouns can also be verbs .The articles , adjectives , and possessive pronouns are very important cues to resolve this problem , as illustrated in the case of \" a fine vase . \"", "label": "", "metadata": {}, "score": "101.025955"}
{"text": "The inversion of the part_of relationship is the part relationship .The following semantic relation will be added to the entry for \" flower \" : . flower part : corolla .Having processed the definition of \" flower \" and the definition of \" corolla , \" the entry for \" flower \" now is the following : . flower ( n,1 ) \" the part of a plant , often beautiful and coloured , that produces seeds or fruit \" .", "label": "", "metadata": {}, "score": "101.95999"}
{"text": "Adding sense numbers wherever they are available produces the following entry of \" flower \" : .The second semantic relation extracted for the word \" corolla \" is : corolla purpose attract .Finally , this semantic relation is also added to the entry for the words which are the value of the lower level relations , in this example : \" insect .", "label": "", "metadata": {}, "score": "102.154724"}
{"text": "For example , when the headword \" corolla \" is being processed , first its definition is parsed and then the heuristic rules are applied .Below are shown some of the semantic relations which have been extracted from the parsed definition of \" corolla \" ; these relations are added to this sense entry of \" corolla \" : . corolla ( n , 1 ) \" the part of a flower formed by the petals , usu . brightly coloured to attract insects \" .", "label": "", "metadata": {}, "score": "106.38614"}
{"text": "Memory system 104 further generally includes secondary storage 122 in the form of floppy disks , hard disks , or CD - ROM storage for long term mass storage .Personal computer 100 further typically includes one or more input devices 118 and output devices 116 .", "label": "", "metadata": {}, "score": "107.05034"}
{"text": "\" We can thus discover a complete path through the dictionary linking \" bone \" to \" salmon , \" as shown in .FIG .6 .However , even if we allow such chains of hypernym links to be exploited in processing , this approach sometimes fails to discover what might intuitively be an obvious semantic connection between two words .", "label": "", "metadata": {}, "score": "111.3044"}
{"text": "Memory system 104 generally includes high - speed main memory 114 in the form of a medium such as random access memory ( RAM ) and read only memory ( ROM ) semiconductor devices .Main memory 114 stores programs such as a computer 's operating system and currently running application programs .", "label": "", "metadata": {}, "score": "112.404785"}
{"text": "Thus , when the sentence passes through the lexer filters 150 as discussed in the previous example embodiment , the stop word filter removes \" a \" and \" the , \" leaving : . octopus - noun have - verb heart - noun .", "label": "", "metadata": {}, "score": "113.25979"}
{"text": "1 . )Other semantic relations , however , are more difficult to identify without an established knowledge base .A simple example may help illustrate the point .Consider the following definition of necklace : . necklace : a chain of gold .", "label": "", "metadata": {}, "score": "114.038666"}
{"text": "Suppose that a user of a search engine which makes use of this parser asks the question : .Do octopuses have hearts ?The sentence lexer 100 will read the question , and a sentence made of ontological entities is produced .", "label": "", "metadata": {}, "score": "115.441284"}
{"text": "Do - verb octopus - noun have - verb heart - noun .In the preferred embodiment 's lexer filters , the pseudo predicate filter removes the first verb \" do , \" because it is not the main verb of the sentence . \"", "label": "", "metadata": {}, "score": "116.25197"}
{"text": "In the parser 220 , the tree shown in .FIG .6 is produced .The parse tree converter 230 then converts this tree into a predicate , where octopus is the subject of have , and heart is the object .", "label": "", "metadata": {}, "score": "119.95665"}
{"text": "The example sentence is : .The octopus has a heart .First , the sentence lexer 100 would process this sentence .The first component of the sentence lexer 100 , the document iterator 110 , would extract this sentence from the document it was contained in .", "label": "", "metadata": {}, "score": "123.13971"}
