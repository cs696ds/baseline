{"text": "Unordered list items are not numbered .Both types of lists are made up of sequences of list items defined by the li element .This example illustrates the basic structure of a list .The li element defines a list item within an ordered , unordered , or navigation list .", "label": "", "metadata": {}, "score": "38.53205"}
{"text": "Unordered list items are not numbered .Both types of lists are made up of sequences of list items defined by the li element .This example illustrates the basic structure of a list .The li element defines a list item within an ordered , unordered , or navigation list .", "label": "", "metadata": {}, "score": "38.53205"}
{"text": "Given a single input document , a global , total order can be defined on nodes .In general , however , it may not be possible to define a global order , for example when a data model instance contains nodes from multiple input documents .", "label": "", "metadata": {}, "score": "39.731987"}
{"text": "Both types of lists are made up of sequences of list items defined by the LI element ( whose end tag may be omitted ) .This example illustrates the basic structure of a list . ... first list item ... .", "label": "", "metadata": {}, "score": "40.302616"}
{"text": "Some of the descriptions of the resolved issues are obsolete w.r.t . to the current version of the document .Peter suggests having a special - purpose kind of a ValueNode that represents lists of simple types .An advantage of this approach is that the constraint that lists of simple types be homogeneous / monomorphic can be enforced .", "label": "", "metadata": {}, "score": "41.806656"}
{"text": "For example , an attribute 's value could be modeled as a list of ValueNodes : .A disadvantage of this approach is that the monomorphism constraint on lists derived from simple types is not enforced .However , given a type system for Query , such a constraint could be enforced .", "label": "", "metadata": {}, "score": "42.05212"}
{"text": "Let me summarize my issues with a node - centric datamodel right at the beginning .The first two are mentioned in the doc later on : .As long as ( 1 ) the data represents a tree , ( 2 ) easy bi - directional is not required , ( 3 ) projection / extension operations with object - preserving semantics are not required , a node - centric datamodel is isomorphic to an edge - centric datamodel and is easier to represent and understand .", "label": "", "metadata": {}, "score": "42.5558"}
{"text": "For LI only .This attribute sets the number of the current list item .Ordered and unordered lists are rendered in an identical manner except that visual user agents number ordered list items .User agents may present those numbers in a variety of ways .", "label": "", "metadata": {}, "score": "42.693577"}
{"text": "A document is represented by a unique DocNode , which corresponds to a document information item in the Infoset .A DocNode has the constructor docNode , which takes a URI reference and a non - empty ordered forest of its children nodes : .", "label": "", "metadata": {}, "score": "43.03144"}
{"text": "The previous list , for example , is an unordered list , created with the ul element : .Unordered information .Ordered information .Navigation information .Definitions .An ordered list , created using the ol element , should contain information where order should be emphasized , as in a recipe : .", "label": "", "metadata": {}, "score": "43.389153"}
{"text": "For example , in the data model , the basic collection is a forest , i.e. , a list of Nodes .The forest constructor creates a singleton forest from one Node ; or it creates a forest from two forests by concatenating the two forests : .", "label": "", "metadata": {}, "score": "43.704178"}
{"text": "It is often useful to make ordered forests unordered and unordered forests ordered .The listtobag function takes any ordered forest and returns an unordered forest .The copy function takes any data - model value and returns a copy of that value .", "label": "", "metadata": {}, "score": "44.159397"}
{"text": "The following is an informative description of the behavior of some current visual user agents when formatting lists .Style sheets allow better control of list formatting ( e.g. , for numbering , language - dependent conventions , indenting , etc . ) .", "label": "", "metadata": {}, "score": "44.79124"}
{"text": "The behavior of navigation lists in non - visual user agents is unspecified .This example illustrates the basic structure of a nested navigation list : .Contents Introduction Terms May Must Should Conformance References ... .Ordered and unordered lists are rendered in an identical manner except that visual user agents number ordered list items .", "label": "", "metadata": {}, "score": "45.85605"}
{"text": "The behavior of navigation lists in non - visual user agents is unspecified .This example illustrates the basic structure of a nested navigation list : .Contents Introduction Terms May Must Should Conformance References ... .Ordered and unordered lists are rendered in an identical manner except that visual user agents number ordered list items .", "label": "", "metadata": {}, "score": "45.85605"}
{"text": "An instance of the XML Query data model represents one or more complete XML documents or document parts .As with the Infoset , the XML Query Data Model specifies what information in the documents is accessible , but it does not specify the programming - language interfaces or bindings used to represent or access the data .", "label": "", "metadata": {}, "score": "45.939373"}
{"text": "Using an HTML list gives the content the proper semantic structure , as well as a \" list - ish \" visual effect .This has important benefits such as allowing screen readers to tell users with visual impairments they are reading a list , rather than just reading out a confusing jumble of text and numbers .", "label": "", "metadata": {}, "score": "46.04702"}
{"text": "Lists are used to group related pieces of information together , so they are clearly associated with each other and easy to read .In modern web development lists are workhorse elements , frequently used for navigation as well as general content .", "label": "", "metadata": {}, "score": "46.10777"}
{"text": "description list - used to display name / value pairs such as terms and their definitions , or times and events .Each one has a specific purpose and meaning - they are not interchangeable .Unordered lists .Unordered lists , or bulleted lists , are used when a set of items can be placed in any order .", "label": "", "metadata": {}, "score": "47.18769"}
{"text": "It may be necessary for a query to have access to a value 's type during query execution , i.e. , at run time .Because an instance of an XML Schema is also an XML document ( see XML Representation of Schemas and Schema Components in [ XMLSchema Part 1 ] ) , a document 's schema can be represented as an instance of the data model .", "label": "", "metadata": {}, "score": "47.796585"}
{"text": "Lists may contain : .Unordered information .The previous list , for example , is an unordered list , created with the UL element : .Unordered information .Ordered information .Definitions .An ordered list , created using the OL element , should contain information where order should be emphasized , as in a recipe : .", "label": "", "metadata": {}, "score": "47.839718"}
{"text": "There are three list types in HTML : . unordered list - used to group a set of related items , in no particular order . ordered list - used to group a set of related items , in a specific order .", "label": "", "metadata": {}, "score": "47.985992"}
{"text": "Lists are good from a structural point of view as they help create a well - structured , more accessible , easy - to - maintain document .In this part , we will cover the different list types available in HTML , when and how you should use them , with a couple of practical examples at the end .", "label": "", "metadata": {}, "score": "48.195763"}
{"text": "For collections , a new collection is constructed that contains a copy of every value in the collection .6 Example .We use the following XML document to illustrate the information contained in an instance of the data model : .", "label": "", "metadata": {}, "score": "48.23858"}
{"text": "Because XML documents are tree - structured , we define the XML Query data model using conventional terminology for trees .Various mathematical representations of trees exist ( see [ CLR ] ) .The tree - constructor representation models a tree by recursive application of a tree - creation function to a list of children trees [ Knuth ] .", "label": "", "metadata": {}, "score": "48.50389"}
{"text": "One serialization operator may emit a node value in [ Canonical XML ] .Other operators may choose other serializations .B.2 Order operators .Given an instance of the data model , an ordering relation on its nodes can be defined .", "label": "", "metadata": {}, "score": "48.840096"}
{"text": "Am I defining terms or associating other name / value pairs ?If yes , use a description list .If no , do n't use a description list - go on to the next question .Is the order of the list items important ?", "label": "", "metadata": {}, "score": "48.952496"}
{"text": "Information items .The basic concept in the Infoset is an InfoItem .An InfoItem is one of ten item types : .Exactly one ElemItem is required in the psv_doc_children list and it is the root element of the document tree .", "label": "", "metadata": {}, "score": "48.955105"}
{"text": "This presentation is similar to that in the definition of the XSLT data model [ Wadler ] .We use the terms node type to refer to the kind of a tree node ; schema type to refer to an XML Schema type ; and unit type to refer to either a node or schema type .", "label": "", "metadata": {}, "score": "48.993046"}
{"text": "The XPath and Infoset data models are examples of node - labeled , tree - constructor representations .The XML Query Data Model ( hence ' ' data model ' ' ) is a node - labeled , tree - constructor representation , but also includes a concept of node identity .", "label": "", "metadata": {}, "score": "49.057312"}
{"text": "The XML schema for this document is : .For this example , we chose an XML document that includes an XML Schema to illustrate the relationship between document content and its associated schema type information .In general , an XML Schema is not required , that is , the data model can represent a schemaless , well - formed XML document with the default typing described in this document .", "label": "", "metadata": {}, "score": "49.201538"}
{"text": "4.1 Ordered forests .The constructor [ ] constructs the empty ordered forest .The constructor cons creates a new ordered forest containing the unit value ( i.e. , a Node or SimpleSchemaType ) of its first argument followed by the values in its second argument .", "label": "", "metadata": {}, "score": "49.206787"}
{"text": "Beginning ordered lists with numbers other than 1 .It is possible to get an ordered list to start with a number other than 1 ( or i , or I , etc . ) .This is useful if you have a single list of items , but you want to break the list up with some kind of note , or some other related information .", "label": "", "metadata": {}, "score": "49.440247"}
{"text": "Beginning ordered lists with numbers other than 1 .It is possible to get an ordered list to start with a number other than 1 ( or i , or I , etc . ) .This is useful if you have a single list of items , but you want to break the list up with some kind of note , or some other related information .", "label": "", "metadata": {}, "score": "49.440247"}
{"text": "In this case , referent may return an ordered forest containing NaR .A ValueNode has fifteen additional accessors , each of which returns true if the ValueNode is of the specified type .An InfoItemNode is an opaque value that preserves those information items that are not of interest to the data model or query language , but are required by the underlying Infoset implementation .", "label": "", "metadata": {}, "score": "49.552002"}
{"text": "A document may refer directly to a DTD , and a document may be paired with an XML Schema , which may be derived from one or more XML Schema documents .It is also possible for an XML document to have no DTD or associated schema , i.e. , it is ' ' schemaless ' ' .", "label": "", "metadata": {}, "score": "49.79679"}
{"text": "Unlike the graph model , the data model does not support both nodes and edges as first - class concepts .We note , however , whenever a graph model may be more flexible or concise .2.1 Types and signatures .", "label": "", "metadata": {}, "score": "50.17917"}
{"text": "Using text instead of a list makes more work for you and can create problems for your document 's readers .So if your document needs a list , you should use the correct HTML list .Nesting lists .A list item can contain another entire list - this is known as \" nesting \" a list .", "label": "", "metadata": {}, "score": "50.49338"}
{"text": "Together , these two documents [ will ] provide a precise semantics for [ XML Query Language ] , the XML Query Language .This section describes the status of this document at the time of its publication .Other documents may supersede this document .", "label": "", "metadata": {}, "score": "50.877724"}
{"text": "Assume that I pose a query that projects name and address but hides the age of a person element .While both operations transform the context , I find the former to be more elegant than the later .MF : To align with XPath and the Algebra , the data model is node centric .", "label": "", "metadata": {}, "score": "51.00762"}
{"text": "When trying to decide what type of list to use , you can usually decide by asking two simple questions : .Am I defining terms or associating other name / value pairs ?If yes , use a description list .", "label": "", "metadata": {}, "score": "51.35671"}
{"text": "The XML Query Data Model defines formally the information contained in the input to an XML Query processor ; in other words , an XML Query processor evaluates a query on an instance of the XML Query Data Model .Our model is based on the XML Information Set , but it requires the following new features to meet the XML Query Working Group 's requirements : .", "label": "", "metadata": {}, "score": "51.72659"}
{"text": "So if your document needs a list , you should use the correct HTML list .Nesting lists .A list item can contain another entire list - this is known as \" nesting \" a list .It is useful for things like tables of contents , such as the one at the start of this article : .", "label": "", "metadata": {}, "score": "52.083675"}
{"text": "An XML document is represented by its distinguished document node , which is a DocNode .A document part is a sub - tree of a document and is represented by an ElemNode , ValueNode , PINode , or CommentNode .An instance of the data model represents one or more complete documents or document parts and may be unordered or ordered .", "label": "", "metadata": {}, "score": "52.373142"}
{"text": "4 Collections .In addition to Nodes , the data model supports two kinds of collections : ordered forests and unordered forests .It is convenient to think of ordered forests as lists and unordered forests as bags .Unlike conventional lists and bags , however , collections are ' ' flat ' ' , i.e. , collections may not be nested in other collections .", "label": "", "metadata": {}, "score": "52.74344"}
{"text": "HTML5 has changed the definition of this type of list to the more general \" description list \" because designers and developers were all too often using description lists to mark up name / value groups that were n't items and descriptions .", "label": "", "metadata": {}, "score": "52.774574"}
{"text": "HTML5 has changed the definition of this type of list to the more general \" description list \" because designers and developers were all too often using description lists to mark up name / value groups that were n't items and descriptions .", "label": "", "metadata": {}, "score": "52.774574"}
{"text": "If you have to change the order of the list items in an ordered list , you simply move around the list item elements .If you wrote the numbers in manually you would have to go through and change every single item 's number to correct the order - which is tedious to say the least !", "label": "", "metadata": {}, "score": "53.173607"}
{"text": "We use the same notation to match and deconstruct list values .For example , this function maps all \" a \" values in a list to \" b \" values by deconstructing and matching the argument list L : .The case expression matches its list argument L against each list pattern and evaluates the right - hand - side of the first pattern that matches L .", "label": "", "metadata": {}, "score": "53.25423"}
{"text": "For a schemaless document , the data model defines a default schema ; in this case , the Def_Type value for all ElemNode s is the ur - type definition [ XMLSchema Part 1 ] .The accessors name , namespaces , attributes , children , and type returns an ElemNode 's constituent parts .", "label": "", "metadata": {}, "score": "53.6534"}
{"text": "A.4 Element items .The following accessors are defined on element information items : . else kids .This function extracts components from the ElemItem , transforms them into instances of data - model values , and then constructs an ElemNode value .", "label": "", "metadata": {}, "score": "53.807877"}
{"text": "We discourage authors from using lists purely as a means of indenting text .This is a stylistic issue and is properly handled by style sheets .Definition lists vary only slightly from other types of lists in that list items consist of two parts : a term and a description .", "label": "", "metadata": {}, "score": "53.929813"}
{"text": "If you wrote the numbers in manually you would have to go through and change every single item 's number to correct the order - which is tedious to say the least !Using an HTML list allows you to style the list properly - you can use CSS to style just the list elements .", "label": "", "metadata": {}, "score": "54.161095"}
{"text": "Note that the StringValue constructor preserves the original CDATA item in a InfoItemNode .The function dm_collapse_strings synthesizes a single string value from multiple CDATA items .It does this by collapsing one or more consecutive StringValues in its argument list , each of which must have the simple schema type string , into one StringValue whose content is the concatenation of the values of the consecutive StringValues .", "label": "", "metadata": {}, "score": "54.17442"}
{"text": "We assume above that if an element 's type is a simple type , its list of children must contain one string value .The function dm_coerce_string coerces its string - valued second argument into an instance of the simple type referenced by its first argument .", "label": "", "metadata": {}, "score": "54.23815"}
{"text": "It is a better practice for everyone , not least yourself when you need to maintain your sites later on .Lists are used to group related pieces of information together , so they are clearly associated with each other and easy to read .", "label": "", "metadata": {}, "score": "54.29483"}
{"text": "The function union creates a new unordered forest containing the disjoint union of the values in each of its arguments .The function diff creates a new unordered forest containing the values that occur in its first argument , but not in its second argument .", "label": "", "metadata": {}, "score": "54.402878"}
{"text": "The first constructor takes a tag value , an unordered forest of NSNode namespaces , an unordered forest of AttrNode attributes , an ordered forest of children nodes , and a reference to the node 's type : .The second constructor takes an unordered set of NSNode namespaces , an ordered forest of nodes that includes the element 's attributes and children nodes , and a reference to the node 's type .", "label": "", "metadata": {}, "score": "54.45943"}
{"text": "Order operators must be defined over a particular instance of the data model .The functions return an integer order value given an instance of the data model and a node contained in that instance .B.3 Accessors for reference values .", "label": "", "metadata": {}, "score": "54.4993"}
{"text": "The attributes accessor returns an unordered , not an ordered , forest so the list function converts ( non - deterministically ) an ordered forest to an ordered one .The links accessor is analogous to idrefs , but returns non - null URI values that occur in the element 's attributes and children components ; it is defined as : .", "label": "", "metadata": {}, "score": "54.499626"}
{"text": "For a document that refers directly to a DTD , we assume a mapping from the DTD to an equivalent schema is provided , and the PSV Infoset provides this equivalent schema .For a schemaless document , a default schema is provided by the data model , and we specify in this document that default schema .", "label": "", "metadata": {}, "score": "54.59839"}
{"text": "Is the order of the list items important ?If yes , use an ordered list .If no , use an unordered list .The difference between HTML lists and text .You may be wondering what the difference is between an HTML list and some text with bullets or numbers written in by hand .", "label": "", "metadata": {}, "score": "54.799957"}
{"text": "Uniform treatment of all edges ( even the so far anonymous containment edges ) makes defining operations easier since they are more orthogonal .With the possibility of distinguishing \" type \" from \" name \" , even subelement names now semantically represent relationship names .", "label": "", "metadata": {}, "score": "54.829945"}
{"text": "Note : This mapping does not capture an element item 's keyref values , which are maintained in the element item 's identity constraints table .The identity constraints table is created for ' ' bookkeeping purposes ' ' by an XML Schema processor ( see [ XMLSchema Part 1 ] ) .", "label": "", "metadata": {}, "score": "54.91091"}
{"text": "[] : [ UnitType ] .For example , .An ordered forest has three accessors .The empty accessor returns true if its argument is the ordered forest list and false otherwise .The head accessor returns the first value in a non - empty ordered forest .", "label": "", "metadata": {}, "score": "55.302757"}
{"text": "If you just use a blob of text , you will find it more difficult to style the individual items in any useful manner , as the elements used will be the same as used for every other piece of text .", "label": "", "metadata": {}, "score": "55.37889"}
{"text": "In this part of the Web Standards Curriculum , we will cover the different list types available in HTML , when and how you should use them , with a couple of practical examples at the end .The three list types .", "label": "", "metadata": {}, "score": "55.401283"}
{"text": "In the XPath data model , every kind of node has an associated string value , i.e. , a string serialization of the node 's value .The data model already provides an operator for serializing a ValueNode as a string .", "label": "", "metadata": {}, "score": "55.612343"}
{"text": "The complex and simple types in the example schema are represented below : .For conciseness , we eliminate the definitions of builtin schema components , e.g. , complexType , and of primitive simple types , e.g. , string . 7 Constraints on the data model .", "label": "", "metadata": {}, "score": "55.707535"}
{"text": "5 Operators and functions on data - model values .In addition to constructors and accessors , the data model provides several basic functions on data model values .Document ( or global ) order refers to the total order among all elements in a document .", "label": "", "metadata": {}, "score": "55.75544"}
{"text": "We discourage authors from using lists purely as a means of indenting text .This is a stylistic issue and is properly handled by style sheets .10.2 Unordered lists ( UL ) , ordered lists ( OL ) , and list items ( LI ) .", "label": "", "metadata": {}, "score": "56.262833"}
{"text": "We assume that an instance of the data model is derived from an instance of the XML Information Set [ XML Information Set ] after XML Schema validation .Such an instance is called a ' ' PSV Infoset ' ' , for post schema - validated Infoset .", "label": "", "metadata": {}, "score": "56.476192"}
{"text": "Issue-0006 : Collections .Date : Oct-2000 .We need a more thorough definition of collections , perhaps in a separate section , which includes bags and defines collections formally .In particular , the algebra ( probably ) will not support arbitrarily nested collections ( i.e. , lists of lists , sets of sets , etc . ) .", "label": "", "metadata": {}, "score": "56.77838"}
{"text": "This has important benefits such as allowing screen readers to tell users with visual impairments they are reading a list , rather than just reading out a confusing jumble of text and numbers .To put it another way : text and lists are not the same .", "label": "", "metadata": {}, "score": "56.88806"}
{"text": "We define the data model using a functional notation .We chose this notation because it is simple and permits a precise and concise definition of the data model .The notation is presented in the next section .Although the notation has a functional style , we emphasize that the data model can be realized in a variety of programming languages and styles , for example , as object classes and methods in an object - oriented language .", "label": "", "metadata": {}, "score": "56.909233"}
{"text": "The term data - model type refers to any node , schema , or collection type .The term signature refers to a constructor 's or accessor 's function type , i.e. , the function 's zero or more input types and its one output type .", "label": "", "metadata": {}, "score": "57.104362"}
{"text": "This corresponds to the order of appearance of their opening tags in the XML serialization and is equivalent to the definition used in [ XPath Recommendation ] .It returns false if the first node is equal to or after the second node in document order .", "label": "", "metadata": {}, "score": "57.319542"}
{"text": "DEPRECATED EXAMPLE : . ...Level one , number one ... .Details about number order .In ordered lists , it is not possible to continue list numbering automatically from a previous list or to hide numbering of some list items .", "label": "", "metadata": {}, "score": "58.05235"}
{"text": "The following operations are defined on lists and are used in the function definitions : . [ ] constructs the empty list .[n ] constructs a list with one element n .h : : t constructs a list with head element h and tail list t .", "label": "", "metadata": {}, "score": "58.287292"}
{"text": "3 Nodes .The basic concept in the data model is a Node .A Node is one of nine node types : document , element , value , attribute , namespace ( NS ) , processing instruction ( PI ) , comment , information item , or node reference .", "label": "", "metadata": {}, "score": "58.770916"}
{"text": "If a key value does not represent a valid reference , the ' ' not a reference ' ' value , NaR , may be used .3.9 Values .A ValueNode is the disjoint union of fourteen kinds of simple - type values ; each value kind has an associated constructor .", "label": "", "metadata": {}, "score": "58.964645"}
{"text": "Unique parent : the parent accessor is a many - to - one function , i.e. , a node has exactly one parent .Element constructor : in the ordered forest of nodes that includes the element 's attributes and children nodes , attributes must precede all other nodes .", "label": "", "metadata": {}, "score": "59.06511"}
{"text": "Ordered information .Navigation information .Definitions .An ordered list , created using the ol element , should contain information where order should be emphasized , as in a recipe : .Mix dry ingredients thoroughly .Definition lists , created using the dl element , generally consist of a series of term / definition pairs ( although definition lists may have other applications ) .", "label": "", "metadata": {}, "score": "59.087757"}
{"text": "In the definition of the data model , we mention several algebraic operators .These and other candidate operators are identified in the Candidate Operators for XML Query Algebra appendix .The complete algebra will be defined in a future document .", "label": "", "metadata": {}, "score": "59.346603"}
{"text": "The function dm_node maps an information item to a reference to a data - model node .All information items are preserved in the data model , but the document type , skipped entity reference , entity markers , and character data markers are represented by the opaque data type InfoItemNode .", "label": "", "metadata": {}, "score": "59.48282"}
{"text": "Authors must not use lists purely as a means of indenting text .This is a stylistic issue and is properly handled by style sheets .Definition lists vary only slightly from other types of lists in that list items consist of two parts : a term and a description .", "label": "", "metadata": {}, "score": "59.805847"}
{"text": "Node references : We assume that the representation of a node reference is defined by the query system that implements the data model , not by the query language itself .Node references are not serialized , i.e. , they exist only for use by the query system , and they are not guaranteed to be globally unique or persistent , although some implementation of the data model may choose to support persistent node references .", "label": "", "metadata": {}, "score": "60.013313"}
{"text": "Chapter One .Section One .Section Two .Section Three .Chapter Two .Chapter Three .The key to nesting lists is to remember that the nested list should relate to one specific list item .To reflect that in the code , the nested list is contained inside that list item .", "label": "", "metadata": {}, "score": "60.16617"}
{"text": "For example , a StringValue always contains a string value and a reference to the representation of a primitive or derived type whose base type is string .For example , a product 's ' 'Sku ' ' number could be represented by the string value : . where the Sku type is derived from string : .", "label": "", "metadata": {}, "score": "60.21688"}
{"text": "Definition lists , created using the dl element , generally consist of a series of term / definition pairs ( although definition lists may have other applications ) .Thus , when advertising a product , one might use a definition list : .", "label": "", "metadata": {}, "score": "60.429543"}
{"text": "Definition lists , created using the DL element , generally consist of a series of term / definition pairs ( although definition lists may have other applications ) .Thus , when advertising a product , one might use a definition list : .", "label": "", "metadata": {}, "score": "60.429543"}
{"text": "Name Value that applies to the preceding name Name Name Value that applies to both of the preceding names Name that can have one of the following values One value of the name Another value of the name .Choosing between list types .", "label": "", "metadata": {}, "score": "60.647865"}
{"text": "Chapter One Section One Section Two Section Three Chapter Two Chapter Three .Nested lists often form the basis for website navigation menus , as they are a good way to define the hierarchical structure of the website .Theoretically you can nest as many lists as you like , although in practice it can become confusing to nest lists too deeply .", "label": "", "metadata": {}, "score": "60.693443"}
{"text": "Chapter One Section One Section Two Section Three Chapter Two Chapter Three .Nested lists often form the basis for website navigation menus , as they are a good way to define the hierarchical structure of the website .Theoretically you can nest as many lists as you like , although in practice it can become confusing to nest lists too deeply .", "label": "", "metadata": {}, "score": "60.693443"}
{"text": "Section One .Section Two .Section Three .Chapter Two .Chapter Three .The key to nesting lists is to remember that the nested list should relate to one specific list item .To reflect that in the code , the nested list is contained inside that list item .", "label": "", "metadata": {}, "score": "60.94872"}
{"text": "The nine node types are defined in the following subsections .Note that an implementation of the data model in an object - oriented language might choose to make Node an interface ( or an abstract class ) and to make each node type a concrete class that implements the Node interface ( or a sub - class of the abstract class Node ) .", "label": "", "metadata": {}, "score": "61.231796"}
{"text": "Let 's step through the process of creating this site .Main page markup .HTML Cooking School Recipes .You have three categories of recipe to represent , and the order is not important - an unordered list is most appropriate for these , so add the following to your page : .", "label": "", "metadata": {}, "score": "61.687912"}
{"text": "Let 's step through the process of creating this site .Main page markup .HTML Cooking School Recipes .You have three categories of recipe to represent , and the order is not important - an unordered list is most appropriate for these , so add the following to your page : .", "label": "", "metadata": {}, "score": "61.687912"}
{"text": "A simple type is either primitive ( e.g. , string , boolean , float , double , ID , IDREF ) or derived ( e.g. , language , NMTOKEN , long , etc . , or user defined ) [ XMLSchema Part 1 ] .", "label": "", "metadata": {}, "score": "61.78125"}
{"text": "For convenience , the algebra may define additional accessor functions that produce the references associated with a particular element .For example , the idrefs function takes an ElemNode and returns a list of references to element nodes that are referenced by IDREF values in the element 's attribute and children components ; this accessor is defined in terms of existing accessors : . is read as follows : return the list of the referent values of each node c such that c is a child of n and c is a IDREFValue .", "label": "", "metadata": {}, "score": "61.970375"}
{"text": "Description lists associate specific names and their values within a list , for example items in an ingredient list and their descriptions , article metadata such as authors and categories and their values , or competition winners and the years in which they won .", "label": "", "metadata": {}, "score": "62.562634"}
{"text": "Description lists associate specific names and their values within a list , for example items in an ingredient list and their descriptions , article metadata such as authors and categories and their values , or competition winners and the years in which they won .", "label": "", "metadata": {}, "score": "62.562634"}
{"text": "Each one has a specific purpose and meaning - they are not interchangeable .Unordered lists .Unordered lists , or bulleted lists , are used when a set of items can be placed in any order .An example is a shopping list : . milk . bread . butter . coffee beans .", "label": "", "metadata": {}, "score": "62.637947"}
{"text": "A navigation list is required to start with a label element that defines the label for the list .On visual user agents , the default presentation behavior is as follows : .When the label element 's content is selected , the navigation list 's li element contents are displayed .", "label": "", "metadata": {}, "score": "62.708836"}
{"text": "A navigation list is required to start with a label element that defines the label for the list .On visual user agents , the default presentation behavior is as follows : .When the label element 's content is selected , the navigation list 's li element contents are displayed .", "label": "", "metadata": {}, "score": "62.708836"}
{"text": "Step by step example .Let 's run through a step by step example , to put all of this together .Consider the following scenario : .You are creating a small website for the HTML Cooking School .On the main page , you are to show a list of categorised recipes , linking through to recipe pages .", "label": "", "metadata": {}, "score": "63.237625"}
{"text": "Step by step example .Let 's run through a step by step example , to put all of this together .Consider the following scenario : .You are creating a small website for the HTML Cooking School .On the main page , you are to show a list of categorised recipes , linking through to recipe pages .", "label": "", "metadata": {}, "score": "63.237625"}
{"text": "Ed .Note : We note here that the data model does not currently represent key values and key reference values as described in XML Schema Part 1 : Structures [ XMLSchema Part 1 ] .In a future draft of this document , keys and key references will be represented in the data model .", "label": "", "metadata": {}, "score": "63.795933"}
{"text": "It is a draft document and may be updated , replaced or made obsolete by other documents at any time .It is inappropriate to use W3C Working Drafts as reference material or to cite them as other than \" work in progress \" .", "label": "", "metadata": {}, "score": "63.994614"}
{"text": "Numbering continues from the new value for subsequent list items .For example : . makes this list item number 30 . makes this list item number 40 .makes this list item number 41 .Definition lists vary only slightly from other types of lists in that list items consist of two parts : a term and a description .", "label": "", "metadata": {}, "score": "64.44335"}
{"text": "If an li element has an href attribute , and that element 's contents are selected , the link defined by the href attribute is followed .If the nl element is de - selected , it 's contents are removed from the display .", "label": "", "metadata": {}, "score": "64.496"}
{"text": "If an li element has an href attribute , and that element 's contents are selected , the link defined by the href attribute is followed .If the nl element is de - selected , it 's contents are removed from the display .", "label": "", "metadata": {}, "score": "64.496"}
{"text": "The function dm_docNode maps a document information item ( DocItem ) to a document node ( DocNode ): .In the definition of kids , list_map applies the function dm_node to each child of the DocItem value d ; this constructs a new list of children nodes , each of which has type Node .", "label": "", "metadata": {}, "score": "64.68473"}
{"text": "The data model represents document type , skipped entity reference , entity markers , and character data markers as instances of the opaque data type InfoItemNode .For completeness , the following accessors are defined for these information items .psv_entity_marker_parent : DocTypeItem .", "label": "", "metadata": {}, "score": "65.08264"}
{"text": "Unordered forests .The constructor add creates a new unordered forest containing the unit value of its first argument and the values in its second argument .An unordered forest has two accessors .The empty accessor returns true if its argument is the empty unordered forest and false otherwise .", "label": "", "metadata": {}, "score": "65.24139"}
{"text": "B Candidate Operators for XML Query Algebra .There is a close correspondence between the data model and the algebraic operations that are applied to instances of the data model .In this appendix , we identify those algebraic operators that are candidate operators for the algebra .", "label": "", "metadata": {}, "score": "65.93235"}
{"text": "For the OL element , possible values for the type attribute are summarized in the table below ( the are case - sensitive ) : .Note that the type attribute is deprecated and list styles should be handled through style sheets .", "label": "", "metadata": {}, "score": "66.41482"}
{"text": "Date : Oct-2000 .Cite : The current representation of reference values is too much IDREF(S ) centric .I would prefer a more general representation for XLink and the schema ( and potentially graph operation ) introduced reference mechanisms .Issue-0013 : Equality operators on collections .", "label": "", "metadata": {}, "score": "66.50101"}
{"text": "An ElemNode 's tag is a qualified name value , QNameValue .An ElemNode 's set of namespaces contain one namespace node for each distinct namespace that is declared explicitly on the element .The node 's children is an ordered forest of ElemNode , ValueNode , PINode , CommentNode , and InfoItemNode values .", "label": "", "metadata": {}, "score": "67.05998"}
{"text": "The XPath data model does not model the complex type of a node .This definition adds Def_Type to an element node , and it also adds ValueNode and InfoItemNode as permissible children of an element node .3.4 Attributes .An AttrNode has the constructor attrNode , which takes the attribute 's name and value : .", "label": "", "metadata": {}, "score": "67.389984"}
{"text": "As soon as backwards pointers are introduced into a node - centric model , the representation becomes more complex and less elegant .Transforming data becomes more complex since the backwards pointer becomes part of the object state .Thus , if I define views where an element changes the parent , in the edge - centric case , this just adds a new relationship , the object state is unchanged , in the node - centric approach , I need to express now two parents in the object state .", "label": "", "metadata": {}, "score": "67.39653"}
{"text": "Traditional Georgian numbering ( an , ban , gan ... ) .Traditional Armenian numbering ( mek , yerku , yerek ... ) .Again , you can use CSS to change the style of your ordered lists .Ordered list markup .", "label": "", "metadata": {}, "score": "68.03001"}
{"text": "Traditional Georgian numbering ( an , ban , gan ... ) .Traditional Armenian numbering ( mek , yerku , yerek ... ) .Again , you can use CSS to change the style of your ordered lists .Ordered list markup .", "label": "", "metadata": {}, "score": "68.03001"}
{"text": "A namespace node may not contain a non - null prefix and a null uri .The function ref is surjective , i.e. , it is onto .The mechanism for implementing a reference node is implementation dependent , for example , a reference node might be represented by a key value , an object identifier , an XPointer value , etc . .", "label": "", "metadata": {}, "score": "68.26614"}
{"text": "Ed .Note : In a future draft of this document , a mapping from the XML Query data model into the Infoset will be provided .A.1 Notation and pseudo - code syntax .For example , psv_elem_attributes is the accessor that returns an element item 's attributes property .", "label": "", "metadata": {}, "score": "68.377235"}
{"text": "Cool in the pan over a wire rack .By this stage you should have a clear understanding of the three different list types in HTML .Using the step - by - step example , you should have created all three and learned how to nest lists inside list items .", "label": "", "metadata": {}, "score": "68.508224"}
{"text": "Cool in the pan over a wire rack .By this stage you should have a clear understanding of the three different list types in HTML .Using the step - by - step example , you should have created all three and learned how to nest lists inside list items .", "label": "", "metadata": {}, "score": "68.50823"}
{"text": "In the excerpt below , every OL element belonging to the class \" withroman \" will have roman numerals in front of its list items .Step one ...Step two ... .The rendering of a definition list also depends on the user agent .", "label": "", "metadata": {}, "score": "68.613754"}
{"text": "The ordering of issues is irrelevant .Furthermore , each issue has a mnemonic header , a date , an optional description , and an optional resolution .For convenience , resolved issues are displayed in green .Some of the issues contain references to W3C internal archives .", "label": "", "metadata": {}, "score": "69.648254"}
{"text": "Publication History .Detailed facts of importance to specialist readers are published as \" Supporting Information \" .Such documents are peer - reviewed , but not copy - edited or typeset .They are made available as submitted by the authors .", "label": "", "metadata": {}, "score": "70.210945"}
{"text": "Name Value that applies to the preceding name .Name Name .Value that applies to both of the preceding names .Name that can have one of the following values .One value of the name Another value of the name .", "label": "", "metadata": {}, "score": "71.10678"}
{"text": "The data model assumes that the character information items for an atomic value ( e.g. , string , integer , floating - point number ) are not interleaved with other information items ( e.g. , PIs or comments ) .If the character information items for an atomic value are interleaved with other information items ( e.g. , PIs or comments ) , those information items are not preserved in the data model .", "label": "", "metadata": {}, "score": "71.41135"}
{"text": "The data model assumes that the character information items for an atomic value ( e.g. , string , integer , floating - point number ) are not interleaved with other information items ( e.g. , PIs or comments ) .If the character information items for an atomic value are interleaved with other information items ( e.g. , PIs or comments ) , those information items are not preserved in the data model .", "label": "", "metadata": {}, "score": "71.41135"}
{"text": "Date : Oct-2000 .Cite : Sometimes one wants to use different schemata over the same basic XML fragment .So I would rather start with that in principle , the data model is schemaless and can provide the data model of any XML fragment given a schema .", "label": "", "metadata": {}, "score": "71.638954"}
{"text": "Date : Oct-2000 .In XML Schema , facets such as ' ' nullable ' ' is associated with an element declaration , which is a element name , complex type pair .If the query language needs access to such facets , we may need to replace Def_Type by a reference to the element declaration .", "label": "", "metadata": {}, "score": "71.76013"}
{"text": "The value D1 represents a DocNode ; the values E1 , E2 , etc . represent ElemNode s ; the values A1 , etc . represent AttrNode s ; the values N1 , etc . represent NSNode s. .A graphical depiction of the data - model instance , containing the information described in the text above , is also included .", "label": "", "metadata": {}, "score": "72.01607"}
{"text": "For example , .The function list_flatten takes a list of lists and returns the flattened list : .The function set_map applies a function to every member of a set and returns the transformed set ; list_map is analogous for lists : .", "label": "", "metadata": {}, "score": "72.8226"}
{"text": "If a referent is not in the data - model instance , referent returns NaR , the ' ' not a reference ' ' value .In a data - model instance of a PSV infoset , every IDREF and keyref value is guaranteed to refer to a ElemNode in the data - model instance .", "label": "", "metadata": {}, "score": "73.589966"}
{"text": "How each value is presented depends on the user agent .User agents should attempt to present a \" disc \" as a small filled - in circle , a \" circle \" as a small circle outline , and a \" square \" as a small square outline .", "label": "", "metadata": {}, "score": "73.8276"}
{"text": "If no , use an unordered list .The difference between HTML lists and text .You may be wondering what the difference is between an HTML list and some text with bullets or numbers written in by hand .Well , there are several advantages to using an HTML list : .", "label": "", "metadata": {}, "score": "74.82254"}
{"text": "Although APIs once limited their exposure to internet giants and developers , everyone from the Federal Government to General Motors are now incorporating an API into their market strategy .Today , API transactions [ ... ]The previous list , for example , is an unordered list , created with the ul element : .", "label": "", "metadata": {}, "score": "75.094696"}
{"text": "This function assumes that the character information items for an atomic value ( e.g. , string , integer , floating - point number ) are not interleaved with other information items ( e.g. , PIs or comments ) .If the character information items for an atomic value are interleaved with other information items ( e.g. , PIs or comments ) , those information items are not preserved in the data model .", "label": "", "metadata": {}, "score": "75.17493"}
{"text": "Commun . , 2015 , 51 , 50 , 10083 CrossRef .3 Carlos A. Mora , Antoine F. Herzog , Renzo A. Raso , Wendelin J. Stark , Programmable living material containing reporter micro - organisms permits quantitative detection of oligosaccharides , Biomaterials , 2015 , 61 , 1 CrossRef .", "label": "", "metadata": {}, "score": "75.39148"}
{"text": "Name Value Name Value Name Value .This is rendered as follows : .Name Value Name Value Name Value .In this example , we associate more than one value with a name , and vice versa : .Name Value that applies to the preceding name Name Name Value that applies to both of the preceding name Name that can have both of the following values One value of the name Another value of the name .", "label": "", "metadata": {}, "score": "75.54196"}
{"text": "Name Value Name Value Name Value .This is rendered as follows : .Name Value Name Value Name Value .In this example , we associate more than one value with a name , and vice versa : .Name Value that applies to the preceding name Name Name Value that applies to both of the preceding name Name that can have both of the following values One value of the name Another value of the name .", "label": "", "metadata": {}, "score": "75.54196"}
{"text": "Biomol .Chem . , 2015 , 13 , 10 , 3048 CrossRef .8 D. Karamanis , E. Kyritsi , S. Krimpalis , Well - ordered nanoporous materials for low - temperature water phase changes and solar evaporative cooling , Solar Energy Materials and Solar Cells , 2015 , 139 , 34 CrossRef .", "label": "", "metadata": {}, "score": "75.73271"}
{"text": "Any queries ( other than missing content ) should be directed to the corresponding author for the article .Citing Literature .Number of times cited : 20 . 1 Dowan Kim , Eunsu Lee , Heon Sang Lee , Jinhwan Yoon , Energy Efficient Glazing for Adaptive Solar Control Fabricated with Photothermotropic Hydrogels Containing Graphene Oxide , Scientific Reports , 2015 , 5 , 7646 CrossRef .", "label": "", "metadata": {}, "score": "75.93501"}
{"text": "Def_string ) , . list_append(i1 , i2 ) ) ) : : t2 ) .return nsNode ( stringValue(psv_ns_prefix i , Def_string ) , [ ] ) , .A.7 Processing instruction items .The following accessors are defined on processing - instruction information items : .", "label": "", "metadata": {}, "score": "76.15134"}
{"text": "The accessor parent returns a the unique parent of an ElemNode or if no parent exists , the NaR , not a reference value .If an ElemNode is the root node of a document , parent will return the corresponding DocNode , unless a document node does not exist , in which case parent returns NaR , the ' ' not a reference ' ' value .", "label": "", "metadata": {}, "score": "76.224014"}
{"text": "Mix ingredients together .Place ingredients in a baking dish .Bake in oven for an hour .Remove from oven .Allow to stand for ten minutes .Serve .If the list items were moved around into a different order , the information would no longer make sense : .", "label": "", "metadata": {}, "score": "76.42093"}
{"text": "Mix ingredients together .Place ingredients in a baking dish .Bake in oven for an hour .Remove from oven .Allow to stand for ten minutes .Serve .If the list items were moved around into a different order , the information would no longer make sense : .", "label": "", "metadata": {}, "score": "76.42093"}
{"text": "For OL only .This attribute specifies the starting number of the first item in an ordered list .The default starting number is \" 1 \" .Note that while the value of this attribute is an integer , the corresponding label may be non - numeric .", "label": "", "metadata": {}, "score": "78.3357"}
{"text": "These items are all part of one list , however , you could put the items in any order and the list would still make sense : . bread . coffee beans . milk . butter .You can use CSS to change the bullet to one of several default styles , use your own image , or even display the list without bullets - we'll look at how to do that in the Styling lists and links article .", "label": "", "metadata": {}, "score": "78.505005"}
{"text": "Currently , Congress.gov provides access to legislation and member profiles while the site remains in beta .Congress.gov plans to \" operate as a beta site for the next year to gather feedback and the refine the functionality . \" As the platform progresses , additional data will be accessible ( i.e. Congressional Record , Committee Reports , Nominations , Treaties , Senate Executive Communications , and House Executive Communications ) .", "label": "", "metadata": {}, "score": "78.61198"}
{"text": "20 Jiadong Zhou , Yanfeng Gao , Zongtao Zhang , Hongjie Luo , Chuanxiang Cao , Zhang Chen , Lei Dai , Xinling Liu , VO2 thermochromic smart window for energy savings and generation , Scientific Reports , 2013 , 3 CrossRef HTML offers authors several mechanisms for specifying lists of information .", "label": "", "metadata": {}, "score": "79.5097"}
{"text": "You can use CSS to change the bullet to one of several default styles , use your own image , or even display the list without bullets - we'll look at how to do that in the Styling lists and links article .", "label": "", "metadata": {}, "score": "79.71858"}
{"text": "Both elements have the same structure as UL , just different rendering .In practice , a user agent will render a DIR or MENU list exactly as a UL list .The Library of Congress announced the successor to Thomas.gov ( the current site to access congressional information ) .", "label": "", "metadata": {}, "score": "80.45834"}
{"text": "bread coffee beans milk butter .Ordered lists .Ordered lists , or numbered lists , are used to display a list of items that need to be placed in a specific order .An example would be cooking instructions , which must be completed in order for the recipe to work : .", "label": "", "metadata": {}, "score": "80.80946"}
{"text": "bread coffee beans milk butter .Ordered lists .Ordered lists , or numbered lists , are used to display a list of items that need to be placed in a specific order .An example would be cooking instructions , which must be completed in order for the recipe to work : .", "label": "", "metadata": {}, "score": "80.80946"}
{"text": "12 Weidong Liang , Pinsong Chen , Hanxue Sun , Zhaoqi Zhu , An Li , Innovative spongy attapulgite loaded with n - carboxylic acids as composite phase change materials for thermal energy storage , RSC Advances , 2014 , 4 , 73 , 38535 CrossRef .", "label": "", "metadata": {}, "score": "80.86148"}
{"text": "Bake in oven for an hour .Serve .Remove from oven .Place ingredients in a baking dish .Allow to stand for ten minutes .Mix ingredients together .Ordered lists can be displayed with one of several numbering or alphabetic systems - that is , letters or numbers .", "label": "", "metadata": {}, "score": "81.25661"}
{"text": "Bake in oven for an hour .Serve .Remove from oven .Place ingredients in a baking dish .Allow to stand for ten minutes .Mix ingredients together .Ordered lists can be displayed with one of several numbering or alphabetic systems - that is , letters or numbers .", "label": "", "metadata": {}, "score": "81.25661"}
{"text": "Lower cost .The new version of this product costs significantly less than the previous one !Easier to use .We 've changed the product so that it 's much easier to use !Safe for kids .You can leave your kids alone in a room with this product and they wo n't get hurt ( not a guarantee ) . defined in XHTML as : .", "label": "", "metadata": {}, "score": "81.588715"}
{"text": "6 Yan Xin , Hong Wang , Bo - wen Liu , Jin - ying Yuan , Synthesis and MALDI - TOF characterization of \u03b2 - CD core ATRP initiators and RAFT chain transfers with different degrees of substitution , Chinese Journal of Polymer Science , 2015 , 33 , 1 , 36 CrossRef .", "label": "", "metadata": {}, "score": "82.27632"}
{"text": "In particular , wherever an instance of Def_S is expected , we assume an instance of S ' is permitted if and only if S ' is derived from simple type S .For example , the derived simple type long has base type integer , so an instance of long can be modeled by an IntegerValue whose type is Ref(Def_long ) , i.e. , it refers to the definition of the derived type long : .", "label": "", "metadata": {}, "score": "82.50342"}
{"text": "The new version of this product costs significantly less than the previous one !Easier to use .We 've changed the product so that it 's much easier to use !Safe for kids .You can leave your kids alone in a room with this product and they wo n't get hurt ( not a guarantee ) . defined in XHTML as : .", "label": "", "metadata": {}, "score": "83.23872"}
{"text": "17 Jing Zhao , Kexin Jiao , Jing Yang , Changcheng He , Huiliang Wang , Mechanically strong and thermosensitive macromolecular microsphere composite poly(N - isopropylacrylamide ) hydrogels , Polymer , 2013 , 54 , 6 , 1596 CrossRef .18 Artjom D\u00f6ring , Wolfgang Birnbaum , Dirk Kuckling , Responsive hydrogels - structurally and dimensionally optimized smart frameworks for applications in catalysis , micro - system technology and material science , Chemical Society Reviews , 2013 , 42 , 17 , 7391 CrossRef .", "label": "", "metadata": {}, "score": "83.60327"}
{"text": "14Xiong Tao , Kun Liu , Wen Li , Afang Zhang , Remarkable structure effects on thermoresponsive properties of dendritic macromolecules , Polymer , 2014 , 55 , 16 , 3672 CrossRef .15 R. Hoogenboom , Smart Polymers and their Applications , 2014 , 15 CrossRef .", "label": "", "metadata": {}, "score": "83.85265"}
{"text": "Remove from oven .Allow to stand for ten minutes .Serve .Note that this attribute was deprecated in HTML 4 , so it will make your page not validate if you are using an HTML4 strict doctype .If you want to make use of such functionality in an HTML4 strict page , and it absolutely has to validate , you can do it using CSS Counters instead .", "label": "", "metadata": {}, "score": "85.5607"}
{"text": "Remove from oven .Allow to stand for ten minutes .Serve .Note that this attribute was deprecated in HTML 4 , so it will make your page not validate if you are using an HTML4 strict doctype .If you want to make use of such functionality in an HTML4 strict page , and it absolutely has to validate , you can do it using CSS Counters instead .", "label": "", "metadata": {}, "score": "85.5607"}
{"text": "It is a better practice for everyone , not least yourself when you need to maintain your sites later on .", "label": "", "metadata": {}, "score": "85.72733"}
{"text": "By continuing to browse this site you agree to us using cookies as described in About Cookies .Abstract .Buildings can be effectively cooled by a bioinspired sweating - like action based on thermoresponsive hydrogels ( PNIPAM ) , which press out their stored water when exceeding the lower critical solution temperature .", "label": "", "metadata": {}, "score": "85.86476"}
{"text": "This gives the following result : .Gather ingredients .Mix ingredients together .Place ingredients in a baking dish .Before you place the ingredients in the baking dish , preheat the oven to 180 degrees centigrade/350 degrees farenheit in readiness for the next step .", "label": "", "metadata": {}, "score": "86.91043"}
{"text": "This gives the following result : .Gather ingredients .Mix ingredients together .Place ingredients in a baking dish .Before you place the ingredients in the baking dish , preheat the oven to 180 degrees centigrade/350 degrees fahrenheit in readiness for the next step .", "label": "", "metadata": {}, "score": "87.59038"}
{"text": "For both OL and UL , the type attribute specifies rendering options for visual user agents .For the UL element , possible values for the type attribute are disc , square , and circle .The default value depends on the level of nesting of the current list .", "label": "", "metadata": {}, "score": "87.62323"}
{"text": "You can associate more than one value with a single name , or vice versa .For example , the term \" coffee \" can have several meanings , and you could show them one after the other : . coffee a beverage made from roasted , ground coffee beans a cup of coffee a social gathering at which coffee is consumed a medium to dark brown colour .", "label": "", "metadata": {}, "score": "87.91906"}
{"text": "You can associate more than one value with a single name , or vice versa .For example , the term \" coffee \" can have several meanings , and you could show them one after the other : . coffee a beverage made from roasted , ground coffee beans a cup of coffee a social gathering at which coffee is consumed a medium to dark brown colour .", "label": "", "metadata": {}, "score": "87.91906"}
{"text": "You could write an ingredients list like so : . milk A white , liquid dairy product . bread A baked food made of flour or meal . butter A yellow , solid dairy product . coffee beans The seeds of the fruit from certain coffee trees .", "label": "", "metadata": {}, "score": "87.98117"}
{"text": "You could write an ingredients list like so : . milk A white , liquid dairy product . bread A baked food made of flour or meal . butter A yellow , solid dairy product . coffee beans The seeds of the fruit from certain coffee trees .", "label": "", "metadata": {}, "score": "87.98117"}
{"text": "Add the following to your HTML , below the unordered list in the previous step : .Notes on ingredients Castor Sugar Finely granulated white sugar .Self - raising flour A pre - mixed combination of flour and leavening agents ( usually salt and baking powder ) .", "label": "", "metadata": {}, "score": "88.06877"}
{"text": "Add the following to your HTML , below the unordered list in the previous step : .Notes on ingredients Castor Sugar Finely granulated white sugar .Self - raising flour A pre - mixed combination of flour and leavening agents ( usually salt and baking powder ) .", "label": "", "metadata": {}, "score": "88.06877"}
{"text": "Cool in the pan over a wire rack .Recipe page markup .Create another properly - formed HTML document , and save it as stepbystep-recipe.html .Add the following headings to it : .Simple Sponge Cake Ingredients Notes on ingredients Method .", "label": "", "metadata": {}, "score": "88.13307"}
{"text": "Cool in the pan over a wire rack .Recipe page markup .Create another properly - formed HTML document , and save it as stepbystep-recipe.html .Add the following headings to it : .Simple Sponge Cake Ingredients Notes on ingredients Method .", "label": "", "metadata": {}, "score": "88.13307"}
{"text": "The new version of this product costs significantly less than the previous one !Easier to use .We 've changed the product so that it 's much easier to use !Safe for kids .You can leave your kids alone in a room with this product and they wo n't get hurt ( not a guarantee ) . defined in HTML as : .", "label": "", "metadata": {}, "score": "88.59109"}
{"text": "The Library of Congress developed Congress.gov using open sourced platform ( SOLR ) .Discussions surrounding a Thomas replacement started roughly a year ago , and development began in January 2012 .According to Library of Congress Web Services Chief , Jim Karamanis , Congressional leadership has been \" very supportive \" of the project and the Web Services team has been \" excited [ about the project ] for an entire year .", "label": "", "metadata": {}, "score": "89.47845"}
{"text": "Issue-0010 : Node identity .Date : Oct-2000 .Should the data model require that an implementation guarantee that the identity of a node is always preserved ?MF : The data model always preserves node identity ; the only operator that does not preserve node identity is copy .", "label": "", "metadata": {}, "score": "89.536316"}
{"text": "The description is given with a dd element that contains block - level content .Here is an example : .Dweeb young excitable person who may mature into a Nerd or Geek Hacker a clever programmer Nerd technically bright but socially inept person .", "label": "", "metadata": {}, "score": "90.08745"}
{"text": "The description is given with a dd element that contains block - level content .Here is an example : .Dweeb young excitable person who may mature into a Nerd or Geek Hacker a clever programmer Nerd technically bright but socially inept person .", "label": "", "metadata": {}, "score": "90.08745"}
{"text": "Date : 17-Jan-2001 .Should the element constructor elemNode also permit unordered forests of children ?Special thanks are due to the following members of the Library of Congress Staff for their assistance with this exhibition : .Jeremy Adamson , Gay Colyer , Kristi Finefield , Jeanne Korda , Phil Michel , John Minichino , Barbara Natanson , Pete Richey , Barbara Story , Woody Woodis , Helena Zinkham , Prints and Photographs Division .", "label": "", "metadata": {}, "score": "91.978745"}
{"text": "Center Centre A point equidistant from all points on the surface of a sphere .In some field sports , the player who holds the middle position on the field , court , or forward line .Another application of dl , for example , is for marking up dialogues , with each dt naming a speaker , and each dd containing his or her words .", "label": "", "metadata": {}, "score": "93.04733"}
{"text": "Center Centre A point equidistant from all points on the surface of a sphere .In some field sports , the player who holds the middle position on the field , court , or forward line .Another application of dl , for example , is for marking up dialogues , with each dt naming a speaker , and each dd containing his or her words .", "label": "", "metadata": {}, "score": "93.04733"}
{"text": "Center Centre A point equidistant from all points on the surface of a sphere .In some field sports , the player who holds the middle position on the field , court , or forward line .Another application of DL , for example , is for marking up dialogues , with each DT naming a speaker , and each DD containing his or her words .", "label": "", "metadata": {}, "score": "93.04733"}
{"text": "Now you need to add the recipes as sub - items , for example \" Plain Sponge \" , \" Chocolate Cake \" and \" Apple Tea Cake \" are all part of the \" Cakes \" category .To do this , you need to create a nested list within each item .", "label": "", "metadata": {}, "score": "93.168304"}
{"text": "Now you need to add the recipes as sub - items , for example \" Plain Sponge \" , \" Chocolate Cake \" and \" Apple Tea Cake \" are all part of the \" Cakes \" category .To do this , you need to create a nested list within each item .", "label": "", "metadata": {}, "score": "93.168304"}
{"text": "Easier to use We 've changed the product so that it 's much easier to use !Safe for kids You can leave your kids alone in a room with this product and they wo n't get hurt ( not a guarantee ) .", "label": "", "metadata": {}, "score": "93.971436"}
{"text": "Easier to use We 've changed the product so that it 's much easier to use !Safe for kids You can leave your kids alone in a room with this product and they wo n't get hurt ( not a guarantee ) .", "label": "", "metadata": {}, "score": "93.971436"}
{"text": "Easier to use We 've changed the product so that it 's much easier to use !Safe for kids You can leave your kids alone in a room with this product and they wo n't get hurt ( not a guarantee ) .", "label": "", "metadata": {}, "score": "93.971436"}
{"text": "An unordered list therefore makes sense .Ingredients 3 eggs 100 g castor sugar 85 g self - raising flour .The notes on the ingredients are there to properly define what some of the ingredients are .You need to associate the ingredient - the name - with its value .", "label": "", "metadata": {}, "score": "94.196304"}
{"text": "An unordered list therefore makes sense .Ingredients 3 eggs 100 g castor sugar 85 g self - raising flour .The notes on the ingredients are there to properly define what some of the ingredients are .You need to associate the ingredient - the name - with its value .", "label": "", "metadata": {}, "score": "94.196304"}
{"text": "This is useful to show variations of a term , all of which have the same meaning : . soda pop fizzy drink cola a sweet , carbonated beverage .Description lists are different from the other kinds of list , as they use names and values instead of list items .", "label": "", "metadata": {}, "score": "94.88286"}
{"text": "This is useful to show variations of a term , all of which have the same meaning : . soda pop fizzy drink cola a sweet , carbonated beverage .Description lists are different from the other kinds of list , as they use names and values instead of list items .", "label": "", "metadata": {}, "score": "94.88286"}
{"text": "Dweeb young excitable person who may mature into a Nerd or Geek Cracker hacker on the Internet Nerd male so into the Net that he forgets his wife 's birthday .The DIR element was designed to be used for creating multicolumn directory lists .", "label": "", "metadata": {}, "score": "96.879105"}
{"text": "There is a lot of content on the web that should have been placed into a list , but was just thrown into a generic element with some line break tags .It 's a lazy practice that causes far more problems than it solves - so do n't do it !", "label": "", "metadata": {}, "score": "96.92779"}
{"text": "There is a lot of content on the web that should have been placed into a list , but was just thrown into a generic element with some line break tags .It 's a lazy practice that causes far more problems than it solves - so do n't do it !", "label": "", "metadata": {}, "score": "96.9278"}
{"text": "The HTML Cooking School has supplied the sponge recipe to you in a text file , looking like this : .Simple Sponge Cake Ingredients 3 eggs 100 g castor sugar 85 g self - raising flour Notes on ingredients : Caster Sugar - Finely granulated white sugar .", "label": "", "metadata": {}, "score": "97.1063"}
{"text": "The HTML Cooking School has supplied the sponge recipe to you in a text file , looking like this : .Simple Sponge Cake Ingredients 3 eggs 100 g castor sugar 85 g self - raising flour Notes on ingredients : Caster Sugar - Finely granulated white sugar .", "label": "", "metadata": {}, "score": "97.1063"}
{"text": "The Thomas.gov system receives more than 10 million visits per year ; however TechPresident states : . \" the Library of Congress feels that the existing system can no longer support the demands and capabilities of a modern online interface , especially on mobile devices . \"", "label": "", "metadata": {}, "score": "97.97775"}
{"text": "Lowercase classical Greek : ( \u03ad , \u03ae , \u03af ... ) .Numbers .Decimal numbers ( 1 , 2 , 3 ... ) .Decimal numbers with leading zeros ( 01 , 02 , 03 ... ) .Lowercase Roman numerals ( i , ii , iii ... ) .", "label": "", "metadata": {}, "score": "98.30913"}
{"text": "Lowercase classical Greek : ( \u03ad , \u03ae , \u03af ... ) .Numbers .Decimal numbers ( 1 , 2 , 3 ... ) .Decimal numbers with leading zeros ( 01 , 02 , 03 ... ) .Lowercase Roman numerals ( i , ii , iii ... ) .", "label": "", "metadata": {}, "score": "98.30913"}
{"text": "Method 1 .Preheat the oven to 190 \u00b0 C . 2 .Grease a 20 cm round cake pan .In a medium bowl , whip together the eggs and castor sugar until fluffy .Fold in flour .Pour mixture into the prepared pan .", "label": "", "metadata": {}, "score": "98.70598"}
{"text": "Method 1 .Preheat the oven to 190 \u00b0 C . 2 .Grease a 20 cm round cake pan .In a medium bowl , whip together the eggs and castor sugar until fluffy .Fold in flour .Pour mixture into the prepared pan .", "label": "", "metadata": {}, "score": "98.70598"}
{"text": "Method Preheat the oven to 190 \u00b0 C .Grease a 20 cm round cake pan .In a medium bowl , whip together the eggs and castor sugar until fluffy .Fold in flour .Pour mixture into the prepared pan .", "label": "", "metadata": {}, "score": "99.10134"}
{"text": "Method Preheat the oven to 190 \u00b0 C .Grease a 20 cm round cake pan .In a medium bowl , whip together the eggs and castor sugar until fluffy .Fold in flour .Pour mixture into the prepared pan .", "label": "", "metadata": {}, "score": "99.10135"}
{"text": "The description is given with a DD element that contains block - level content .Here is an example : .Dweeb young excitable person who may mature into a Nerd or Geek Cracker hacker on the Internet Nerd male so into the Net that he forgets his wife 's birthday .", "label": "", "metadata": {}, "score": "102.224945"}
{"text": "credits .released April 3 , 2015 .Recorded in various places between 2013 - 2015 by Vic Karamanis .All drums played by Vyronas Psaras .Collapse Drums recorded by Marianna Koupa .Keys on Care by Marianna Koupa Keys on Words written by Steve Proestakis .", "label": "", "metadata": {}, "score": "103.852066"}
{"text": "The three categories are : . Cakes ( including recipes for Plain Sponge , Chocolate Cake and Apple Tea Cake ) .Biscuits ( including recipes for ANZAC Biscuits , Jam Drops and Melting Moments ) .Quickbreads ( including recipes for Damper and Scones ) .", "label": "", "metadata": {}, "score": "104.88762"}
{"text": "The three categories are : . Cakes ( including recipes for Plain Sponge , Chocolate Cake and Apple Tea Cake ) .Biscuits ( including recipes for ANZAC Biscuits , Jam Drops and Melting Moments ) .Quickbreads ( including recipes for Damper and Scones ) .", "label": "", "metadata": {}, "score": "104.88762"}
{"text": "Exhibition and Brochure Design James Symons and Sheila Harrington , Studio Five , Washington , D.C. .Jim Karamanis , Thip Padavong , Rohit Gupta , Laura Moiseev , Phillip Buggs , Umesh Kant , Qun Lai , Dan Trachtman , Laurent Teyssere , Anand Ramanan , Angel Ortiz , Web Services .", "label": "", "metadata": {}, "score": "106.264435"}
{"text": "Audrey Fischer , Samuel McLemore , John Sayers , Charles Stanhope , Public Affairs Office .Ronnie Hawkins , Domenic Sergi , Information Technology Services .Julie Mangin and Elizabeth Miller , Network Development and Marc Standards Office ; .Stanley Bandong , Graphic Art Services .", "label": "", "metadata": {}, "score": "107.00145"}
{"text": "2 eggs . salt , pepper .The procedure : .Mix dry ingredients thoroughly .Pour in wet ingredients .Mix for 10 minutes .Bake for one hour at 300 degrees .Notes : .The recipe may be improved by adding raisins .", "label": "", "metadata": {}, "score": "107.39917"}
{"text": "2 eggs . salt , pepper .The procedure : .Mix dry ingredients thoroughly .Pour in wet ingredients .Mix for 10 minutes .Bake for one hour at 300 degrees .Notes : .The recipe may be improved by adding raisins .", "label": "", "metadata": {}, "score": "107.39917"}
{"text": "2 eggs . salt , pepper .The procedure : .Mix dry ingredients thoroughly .Pour in wet ingredients .Mix for 10 minutes .Bake for one hour at 300 degrees .Notes : .The recipe may be improved by adding raisins .", "label": "", "metadata": {}, "score": "107.39917"}
{"text": "To make things easier for the tutorial , I 'll get you to link all of the recipes to one single recipe page ( html links lets build a web explains HTML links in depth]. )Recipes Cakes Plain Sponge Chocolate Cake Apple Tea Cake Biscuits ANZAC Biscuits Jam Drops Melting Moments Breads / quickbreads Damper Scones .", "label": "", "metadata": {}, "score": "113.01226"}
{"text": "To make things easier for the tutorial , I 'll get you to link all of the recipes to one single recipe page ( html links lets build a web explains HTML links in depth]. )Recipes Cakes Plain Sponge Chocolate Cake Apple Tea Cake Biscuits ANZAC Biscuits Jam Drops Melting Moments Breads / quickbreads Damper Scones .", "label": "", "metadata": {}, "score": "113.01226"}
{"text": "Photo cover from Les archives de Christian Boltanski 1965 - 1988 installation .Photos and layout by Vasilis Bekas .Special thanx to Marianna Koupa , Spyros Thivaios and Vagelis Markou .Thanx to everyone who supported our crowd funding campaign or helped in any other way .", "label": "", "metadata": {}, "score": "114.57329"}
{"text": "About the author : Eric Carter Eric the founder of Dartsand and Corporate Counsel for a specialty technology distributor .He is a frequent contributor to technology media outlets and also serves as primary legal counsel for multiple startups in the Real Estate , Virtual Assistant , and Software Development Industries .", "label": "", "metadata": {}, "score": "120.400154"}
{"text": "about .adolf plays the jazz have nothing to do whatsoever with politics and fascism especially .In essence , the band is formed in 2002 , even though the first song created under the name adolf plays the jazz was created in 1998 .", "label": "", "metadata": {}, "score": "121.36563"}
{"text": "All cartoons shown in this online exhibition are with permission by the Herb Block Foundation .Cartoons by Herbert Block ( \" Herblock \" ) are protected by copyright .Privacy and publicity rights may also apply .For permission , contact : Our site uses cookies to improve your experience .", "label": "", "metadata": {}, "score": "121.86932"}
