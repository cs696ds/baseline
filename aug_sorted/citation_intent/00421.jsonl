{"text": "CCG . )It is quite easy to use with pre - trained models , but creating one 's own models is a slightly different story .Although the software is distributed with a wealth of scripts that should make training easy , differences between systems and dependencies on various libraries make the task of getting the training code to work a bit daunting .", "label": "", "metadata": {}, "score": "51.873947"}
{"text": "CCG . )It is quite easy to use with pre - trained models , but creating one 's own models is a slightly . different story .Although the software is distributed with a wealth of scripts that should make training easy , differences between systems and dependencies on various libraries make the task of getting the training code to work a bit daunting .", "label": "", "metadata": {}, "score": "52.352097"}
{"text": "( which should have multiple cores and at least around 40 GB of main memory ) .The steps to take on other recent Linux distributions should be very similar .Revision as of 03:55 , 10 September 2013 .The C&C Parser is an advanced statistical parser using the framework of Combinatory Categorial Grammar ( CCG ) .", "label": "", "metadata": {}, "score": "52.970287"}
{"text": "Current development efforts , led by Michael White , are focused on making the realizer practical to use in dialogue systems .For the latest news about OpenCCG , check out the SourceForge project page .The C&C Parser and Supertagger .", "label": "", "metadata": {}, "score": "55.515347"}
{"text": "Current development efforts , led by Michael White , are focused on making the realizer practical to use in dialogue systems .For the latest news about OpenCCG , check out the SourceForge project page .The C&C Parser and Supertagger .", "label": "", "metadata": {}, "score": "55.515347"}
{"text": "Current development efforts , led by Michael White , are focused on making the realizer practical to use in dialogue systems .For the latest news about OpenCCG , check out the SourceForge project page .The C&C Parser and Supertagger .", "label": "", "metadata": {}, "score": "55.515347"}
{"text": "Current development efforts , led by Michael White , are focused on making the realizer practical to use in dialogue systems .For the latest news about OpenCCG , check out the OpenCCG page on SourceForge .The C&C Parser and Supertagger .", "label": "", "metadata": {}, "score": "55.920414"}
{"text": "The first linguistic and psycholinguistic arguments for basing the grammar on combinators were put forth by Mark Steedman and Anna Szabolcsi .More recent prominent proponents of the approach are Jacobson and Baldridge .One of the key publications of CCG is The Syntactic Process by Mark Steedman .", "label": "", "metadata": {}, "score": "56.429935"}
{"text": "It is also possible to output FOL formulas translated from the DRSs .Version 1.0 comprises 1,000 texts with CCG analyses for each sentence and semantic representations for each text .Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .", "label": "", "metadata": {}, "score": "56.93792"}
{"text": "More recent prominent proponents of the approach are Jacobson and Baldridge .CCG relies on combinatory logic , which has the same expressive power as the lambda calculus , but builds its expressions differently .The first linguistic and psycholinguistic arguments for basing the grammar on combinators were put forth by Mark Steedman and Anna Szabolcsi .", "label": "", "metadata": {}, "score": "57.928185"}
{"text": "It is also possible to output FOL formulas translated from the DRSs .CCGbank pairs syntactic derivations with sets of word - word dependencies which approximate the underlying predicate - argument structure .The translation process and linguistic analyses are explained in the manual .", "label": "", "metadata": {}, "score": "57.962025"}
{"text": "It is also possible to output FOL formulas translated from the DRSs .CCGbank pairs syntactic derivations with sets of word - word dependencies which approximate the underlying predicate - argument structure .The translation process and linguistic analyses are explained in the manual .", "label": "", "metadata": {}, "score": "57.962025"}
{"text": "It is also possible to output FOL formulas translated from the DRSs .CCGbank pairs syntactic derivations with sets of word - word dependencies which approximate the underlying predicate - argument structure .The translation process and linguistic analyses are explained in the manual .", "label": "", "metadata": {}, "score": "57.962025"}
{"text": "It is also possible to output FOL formulas translated from the DRSs .CCGbank pairs syntactic derivations with sets of word - word dependencies which approximate the underlying predicate - argument structure .The translation process and linguistic analyses are explained in the manual .", "label": "", "metadata": {}, "score": "57.962025"}
{"text": "It is also possible to output FOL formulas translated from the DRSs .CCGbank pairs syntactic derivations with sets of word - word dependencies which approximate the underlying predicate - argument structure .The translation process and linguistic analyses are explained in the manual .", "label": "", "metadata": {}, "score": "57.962025"}
{"text": "It is also possible to output FOL formulas translated from the DRSs .CCGbank pairs syntactic derivations with sets of word - word dependencies which .approximate the underlying predicate - argument structure .original annotation .The LDC distribution also contains machine - readable versions .", "label": "", "metadata": {}, "score": "57.983948"}
{"text": "The C&C CCG parser and supertagger form part of the language processing tools developed by James Curran and Stephan Clark .The tools are written in C++ and have been designed to be efficient enough for large - scale NLP tasks .", "label": "", "metadata": {}, "score": "58.004135"}
{"text": "CCG relies on combinatory logic , which has the same expressive power as the lambda calculus , but builds its expressions differently .The first linguistic and psycholinguistic arguments for basing the grammar on combinators were put forth by Mark Steedman and Anna Szabolcsi .", "label": "", "metadata": {}, "score": "58.182453"}
{"text": "CCG relies on combinatory logic , which has the same expressive power as the lambda calculus , but builds its expressions differently .The first linguistic and psycholinguistic arguments for basing the grammar on combinators were put forth by Mark Steedman and Anna Szabolcsi .", "label": "", "metadata": {}, "score": "58.182453"}
{"text": "The following are detailed step - by - step instructions to replicate the ( almost ) exact figures reported in Clark&Curran ( 2007)Stephen Clark and James Curran ( 2007 ) : Wide - Coverage Efficient Statistical Parsing with CCG and Log - Linear Models .", "label": "", "metadata": {}, "score": "58.870693"}
{"text": "The C&C Parser is an advanced statistical parser using the framework of Combinatory Categorial Grammar ( CCG ) .It is quite easy to use with pre - trained models , but creating one 's own models is a slightly different story .", "label": "", "metadata": {}, "score": "58.966713"}
{"text": "The following are . terse but .detailed step - by - step instructions to replicate the ( almost ) exact figures reported in Clark&Curran ( 2007)Stephen Clark and James Curran ( 2007 ) : Wide - Coverage Efficient Statistical Parsing with CCG and Log - Linear Models .", "label": "", "metadata": {}, "score": "60.451515"}
{"text": "The following are detailed step - by - step instructions to replicate the ( almost ) exact figures reported in Clark&Curran ( 2007 ) [ 1 ] on a single 64-bit Ubuntu 12.04 machine .The steps to take on other recent Linux distributions should be very similar .", "label": "", "metadata": {}, "score": "62.079277"}
{"text": "The tools are written in C++ and have been designed to be efficient enough for large - scale NLP tasks .StatCCG .StatCCG is a statistical CCG parser ( trained on CCGbank ) written by Julia Hockenmaier .Executables are available here .", "label": "", "metadata": {}, "score": "62.29075"}
{"text": "The tools are written in C++ and have been designed to be efficient enough for large - scale NLP tasks .StatCCG .StatCCG is a statistical CCG parser ( trained on CCGbank ) written by Julia Hockenmaier .Executables are available here .", "label": "", "metadata": {}, "score": "62.29075"}
{"text": "The tools are written in C++ and have been designed to be efficient enough for large - scale NLP tasks .StatCCG .StatCCG is a statistical CCG parser ( trained on CCGbank ) written by Julia Hockenmaier .Executables are available here .", "label": "", "metadata": {}, "score": "62.29075"}
{"text": "The tools are written in C++ and have been designed to be efficient enough for large - scale NLP tasks .StatCCG .StatCCG is a statistical CCG parser ( trained on CCGbank ) written by Julia Hockenmaier .Executables are available here .", "label": "", "metadata": {}, "score": "62.29075"}
{"text": "The tools are written in C++ and have been designed to be efficient enough for large - scale NLP tasks .StatCCG .StatCCG is a statistical CCG parser ( trained on CCGbank ) written by Julia Hockenmaier .Executables are available here .", "label": "", "metadata": {}, "score": "62.29075"}
{"text": "The tools are written in C++ and have been designed to be efficient enough for large - scale NLP tasks .StatCCG .StatCCG is a statistical CCG parser ( trained on CCGbank ) written by Julia Hockenmaier .Executables are available here .", "label": "", "metadata": {}, "score": "62.29075"}
{"text": "Available here .Bos , J. , Clark , S. , Curran , J.R. & Hockenmaier , J. ( 2004 ) .Wide - coverage semantic representations from a CCG parser .In Proceedings of COLING-04 , pp.1240 - 1246 , Geneva , Switzerland .", "label": "", "metadata": {}, "score": "62.302593"}
{"text": "In all versions , the file structure corresponds exactly to that of the original Treebank .Version 1.0 comprises 1,000 texts with CCG analyses for each sentence and semantic representations for each text .This is a very incomplete list of publications .", "label": "", "metadata": {}, "score": "62.345848"}
{"text": "The Syntactic Process ' ' by Mark Steedman .There are various efficient parsers available for CCG . is an open source natural language processing library written in .Java , which provides parsing and realization services based on Mark Steedman 's .", "label": "", "metadata": {}, "score": "63.09302"}
{"text": "It has a completely transparent interface between surface syntax and underlying semantic representation , including predicate - argument structure , quantification and information structure .MIT Press ] ] .Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .", "label": "", "metadata": {}, "score": "63.369907"}
{"text": "CSLI Lecture Notes 24 , ed . by Sag and Szabolcsi .Stanford , CSLI Publications .Resource Sensitivity in Binding and Anaphora , ed . by Kruijff and Oehrle .Kluwer , 215 - 229 .In Proceedings of ACL 2002 .", "label": "", "metadata": {}, "score": "63.519005"}
{"text": "The LDC distribution also contains machine - readable versions of the data , which contain the syntactic derivations and the corresponding lists of word - word dependencies , as well as a file that is searchable by Doug Rohde 's TGrep2 ( version 1.15 ) .", "label": "", "metadata": {}, "score": "63.62452"}
{"text": "The LDC distribution also contains machine - readable versions of the data , which contain the syntactic derivations and the corresponding lists of word - word dependencies , as well as a file that is searchable by Doug Rohde 's TGrep2 ( version 1.15 ) .", "label": "", "metadata": {}, "score": "63.62452"}
{"text": "The LDC distribution also contains machine - readable versions of the data , which contain the syntactic derivations and the corresponding lists of word - word dependencies , as well as a file that is searchable by Doug Rohde 's TGrep2 ( version 1.15 ) .", "label": "", "metadata": {}, "score": "63.62452"}
{"text": "The LDC distribution also contains machine - readable versions of the data , which contain the syntactic derivations and the corresponding lists of word - word dependencies , as well as a file that is searchable by Doug Rohde 's TGrep2 ( version 1.15 ) .", "label": "", "metadata": {}, "score": "63.62452"}
{"text": "The LDC distribution also contains machine - readable versions of the data , which contain the syntactic derivations and the corresponding lists of word - word dependencies , as well as a file that is searchable by Doug Rohde 's TGrep2 ( version 1.15 ) .", "label": "", "metadata": {}, "score": "63.62452"}
{"text": "Although the software is distributed with a wealth of scripts that should make training easy , differences between systems and dependencies on various libraries make the task of getting the training code to work a bit daunting .The following are detailed step - by - step instructions to replicate the ( almost ) exact figures reported in Clark&Curran ( 2007 ) [ 1 ] on a single 64-bit Ubuntu 12.04 machine ( which should have multiple cores and at least around 40 GB of main memory ) .", "label": "", "metadata": {}, "score": "63.821102"}
{"text": "Revision as of 14:38 , 6 August 2008 .Contents .Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .It has a completely transparent interface between surface syntax and underlying semantic representation , including predicate - argument structure , quantification and information structure .", "label": "", "metadata": {}, "score": "64.62509"}
{"text": "Kluwer , 215 - 229 .Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .It has a completely transparent interface between surface syntax and underlying semantic representation , including predicate - argument structure , quantification and information structure .", "label": "", "metadata": {}, "score": "64.74527"}
{"text": "Software .OpenCCG : The OpenNLP library .OpenCCG , the OpenNLP CCG Library , is an open source natural language processing library written in Java , which provides parsing and realization services based on Mark Steedman 's Combinatory Categorial Grammar ( CCG ) formalism .", "label": "", "metadata": {}, "score": "65.00667"}
{"text": "One of the key publications of CCG is ' 'The Syntactic Process ' ' by Mark Steedman .There are various efficient parsers available for CCG .One of the key publications of CCG is ' 'The Syntactic Process ' ' by Mark Steedman .", "label": "", "metadata": {}, "score": "65.106834"}
{"text": "Resource Sensitivity in Binding and Anaphora , ed . by Kruijff and Oehrle .Kluwer , 215 - 229 .C&C . )It is quite easy to use with pre - trained models , but creating one 's own models is a slightly . differnt stories .", "label": "", "metadata": {}, "score": "65.15687"}
{"text": "StatCCG is a statistical CCG parser ( trained on CCGbank ) written by Julia Hockenmaier .Executables are available here Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .It has a completely transparent interface between surface syntax and underlying semantic representation , including predicate - argument structure , quantification and information structure .", "label": "", "metadata": {}, "score": "65.65813"}
{"text": "Resource Sensitivity in Binding and Anaphora , ed . by Kruijff and Oehrle .Kluwer , 215 - 229 .It takes as input CCG ( Combinatory Categorial Grammar ) derivations and produces DRSs ( Discourse Representation Structures , from Hans Kamp 's Discourse Representation Theory ) as output .", "label": "", "metadata": {}, "score": "66.05174"}
{"text": "OpenCCG : The OpenNLP library .OpenCCG , the OpenNLP CCG Library , is an open source natural language processing library written in Java , which provides parsing and realization services based on Mark Steedman 's 's Combinatory Categorial Grammar ( CCG ) formalism .", "label": "", "metadata": {}, "score": "66.09603"}
{"text": "Revision as of 00:49 , 12 August 2008 .Contents .Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .It has a completely transparent interface between surface syntax and underlying semantic representation , including predicate - argument structure , quantification and information structure .", "label": "", "metadata": {}, "score": "66.339676"}
{"text": "There are various efficient parsers available for CCG .Software .OpenCCG : The OpenNLP CCG library .OpenCCG , the OpenNLP CCG Library , is an open source natural language processing library written in Java , which provides parsing and realization services based on Mark Steedman 's Combinatory Categorial Grammar ( CCG ) formalism .", "label": "", "metadata": {}, "score": "66.73826"}
{"text": "There are various efficient parsers available for CCG .Software .OpenCCG : The OpenNLP CCG library .OpenCCG , the OpenNLP CCG Library , is an open source natural language processing library written in Java , which provides parsing and realization services based on Mark Steedman 's Combinatory Categorial Grammar ( CCG ) formalism .", "label": "", "metadata": {}, "score": "66.73826"}
{"text": "There are various efficient parsers available for CCG .Software .OpenCCG : The OpenNLP CCG library .OpenCCG , the OpenNLP CCG Library , is an open source natural language processing library written in Java , which provides parsing and realization services based on Mark Steedman 's Combinatory Categorial Grammar ( CCG ) formalism .", "label": "", "metadata": {}, "score": "66.73826"}
{"text": "There are various efficient parsers available for CCG .Software .OpenCCG : The OpenNLP CCG library .OpenCCG , the OpenNLP CCG Library , is an open source natural language processing library written in Java , which provides parsing and realization services based on Mark Steedman 's Combinatory Categorial Grammar ( CCG ) formalism .", "label": "", "metadata": {}, "score": "66.73826"}
{"text": "OpenCCG : The OpenNLP library .OpenCCG , the OpenNLP CCG Library , is an open source natural language processing library written in Java , which provides parsing and realization services based on Mark Steedman 's Combinatory Categorial Grammar ( CCG ) formalism .", "label": "", "metadata": {}, "score": "66.75531"}
{"text": "Kluwer , 215 - 229 .Difference between revisions of \" Combinatory Categorial Grammar \" .( New page : Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .It has a completely transparent interface between surface syntax and unde ... ) .", "label": "", "metadata": {}, "score": "66.88362"}
{"text": "Steedman , M. ( with Baldridge , J. ) ( forthcoming ) .Combinatory categorial grammar .To appear in Non - transformational syntax ( eds .Borsley , R. & Borjars , K. ) .Available here .Clark , S. & Curran , J.R. ( 2007 ) .", "label": "", "metadata": {}, "score": "67.377594"}
{"text": "$ SCRIPTS / create_model_hybrid ' pwd ' $ NUMNODES working/ .$ SCRIPTS / train_model_hybrid ' pwd ' $ NUMNODES working/ . # Evaluate the parser model : C&C . )It is quite easy to use with pre - trained models , but creating one 's own models is a slightly different story .", "label": "", "metadata": {}, "score": "68.31015"}
{"text": "Current development efforts , led by Michael White , are focused on making the realizer practical to use in dialogue systems .For the latest news about OpenCCG , check out the OpenCCG page on SourceForge .You can also look at some of the projects using OpenCCG .", "label": "", "metadata": {}, "score": "68.546234"}
{"text": "Current development efforts , led by Michael White , are focused on making the realizer practical to use in dialogue systems .For the latest news about OpenCCG , check out the OpenCCG page on SourceForge .You can also look at some of the projects using OpenCCG .", "label": "", "metadata": {}, "score": "68.546234"}
{"text": "Jacobson interprets personal pronouns as the combinator I , and their binding is aided by a complex combinator Z , as in \" Mary lost her way \" .Z is definable using W and B. .CCG is known to define the same language class as tree - adjoining grammar , linear indexed grammar , and head grammar , and is said to be mildly context - sensitive .", "label": "", "metadata": {}, "score": "72.57875"}
{"text": "Jacobson interprets personal pronouns as the combinator I , and their binding is aided by a complex combinator Z , as in \" Mary lost her way \" .Z is definable using W and B. .CCG is known to define the same language class as tree - adjoining grammar , linear indexed grammar , and head grammar , and is said to be mildly context - sensitive .", "label": "", "metadata": {}, "score": "72.57875"}
{"text": "Jacobson interprets personal pronouns as the combinator I , and their binding is aided by a complex combinator Z , as in \" Mary lost her way \" .Z is definable using W and B. .CCG is known to define the same language class as tree - adjoining grammar , linear indexed grammar , and head grammar , and is said to be mildly context - sensitive .", "label": "", "metadata": {}, "score": "72.57875"}
{"text": "Jacobson interprets personal pronouns as the combinator I , and their binding is aided by a complex combinator Z , as in \" Mary lost her way \" .Z is definable using W and B. .CCG is known to define the same language class as tree - adjoining grammar , linear indexed grammar , and head grammar , and is said to be mildly context - sensitive .", "label": "", "metadata": {}, "score": "72.57875"}
{"text": "Jacobson interprets personal pronouns as the combinator I , and their binding is aided by a complex combinator Z , as in \" Mary lost her way \" .Z is definable using W and B. .CCG is known to define the same language class as tree - adjoining grammar , linear indexed grammar , and head grammar , and is said to be mildly context - sensitive .", "label": "", "metadata": {}, "score": "72.57875"}
{"text": "The MIT Press .Linguistics and Philosophy 22 , 1999 .Natural Language and Linguistic Theory 5 , 403 - 439 .Semantics and Contextual Expression , ed . by Bartsch , van Benthem , and van Emde Boas .Foris , 294 - 318 .", "label": "", "metadata": {}, "score": "73.23228"}
{"text": "Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .It has a completely transparent interface between surface syntax and underlying semantic representation , including predicate - argument structure , quantification and information structure .", "label": "", "metadata": {}, "score": "74.37032"}
{"text": "Combinatory Categorial Grammar ( CCG ) is an efficiently parseable , yet linguistically expressive grammar formalism .It has a completely transparent interface between surface syntax and underlying semantic representation , including predicate - argument structure , quantification and information structure .", "label": "", "metadata": {}, "score": "74.37032"}
{"text": "# Work around non - portable sed -f shebang .$ SCRIPTS / create_data .# TODO patches to make the scripts work with the LDC version of CCGbank should .# go here .# Make ext directory . mkdir $ EXT . # Install Boost library ( Ubuntu does n't seem to have a version that is compiled .", "label": "", "metadata": {}, "score": "74.74945"}
{"text": "It is also possible to output FOL formulas translated from the DRSs .Boxer takes as input CCG ( Combinatory Categorial Grammar ) derivations and produces DRSs ( Discourse Representation Structures , from Hans Kamp 's Discourse Representation Theory ) as output .", "label": "", "metadata": {}, "score": "75.69299"}
{"text": "Bos , J. ( 2008 ) .Wide - coverage semantic analysis with Boxer . 2ndConference on semantics in text processing .Available here .Garrette , D. , Erk , K. & Mooney , R. ( 2011 ) .Integrating logical representations with probabilistic information using Markov logic .", "label": "", "metadata": {}, "score": "75.719894"}
{"text": "It has a completely transparent interface between surface syntax and underlying semantic representation , including predicate - argument structure , quantification and information structure .CCG relies on combinatory logic , which has the same expressive power as the lambda calculus , but builds its expressions differently .", "label": "", "metadata": {}, "score": "75.944336"}
{"text": "It has a completely transparent interface between surface syntax and underlying semantic representation , including predicate - argument structure , quantification and information structure .CCG relies on combinatory logic , which has the same expressive power as the lambda calculus , but builds its expressions differently .", "label": "", "metadata": {}, "score": "75.944336"}
{"text": "Boxer is developed by Johan Bos and generates semantic representations .It takes as input CCG ( Combinatory Categorial Grammar ) derivations and produces DRSs ( Discourse Representation Structures , from Hans Kamp 's Discourse Representation Theory ) as output .It is distributed with the C&C tools .", "label": "", "metadata": {}, "score": "76.3069"}
{"text": "$ SCRIPTS / count_features .# Work around non - portable sed -f shebang .$ SCRIPTS / create_data .# TODO patches to make the scripts work with the LDC version of CCGbank should .# go here .# Make ext directory . mkdir $ EXT . # Install Boost library ( Ubuntu does n't seem to have a version that is compiled .", "label": "", "metadata": {}, "score": "76.72501"}
{"text": "They were initially written up by Kilian Evang ; thanks are due to Tim Dawborn , Stephen Clark and James Curran for advice without which I would probably never have gotten it to run .cd $ CANDC_PREFIX .# Some patches to fix various problems with the scripts provided : . # Use a temp directory different from /tmp since that often does n't have enough .", "label": "", "metadata": {}, "score": "77.03247"}
{"text": "The library makes use of multi - modal extensions to CCG developed by .( the precursor to OpenCCG ) .For the latest news about OpenCCG , check out the .The VisCCG tool for working with grammars is available as part of the OpenCCG source code and distribution .", "label": "", "metadata": {}, "score": "77.08904"}
{"text": "In Computational linguistics , 33(4 ) , pp.493 - 552 .Available here .Cann , R. ( 1993 ) .Formal semantics .Cambridge University Press .( Google Books , UL , etc . )Bos , J. & Blackburn , P. ( 2004 ) .", "label": "", "metadata": {}, "score": "77.97188"}
{"text": "This module provides an introduction to the formal syntax and semantics of natural language , in particular Montague - style compositional semantics using a Categorial Grammar model of syntax .Half of the module will focus on the theory of syntax , followed by an example of how recent advances in parsing technology allow such a theory to be implemented in practice , operating on naturally occurring text .", "label": "", "metadata": {}, "score": "78.919395"}
{"text": "Boxer is developed by Johan Bos and generates formal semantic representations for CCG grammars .Boxer takes as input CCG ( Combinatory Categorial Grammar ) derivations and produces DRSs ( Discourse Representation Structures , from Hans Kamp 's Discourse Representation Theory ) as output .", "label": "", "metadata": {}, "score": "78.94804"}
{"text": "Boxer is developed by Johan Bos and generates formal semantic representations for CCG grammars .Boxer takes as input CCG ( Combinatory Categorial Grammar ) derivations and produces DRSs ( Discourse Representation Structures , from Hans Kamp 's Discourse Representation Theory ) as output .", "label": "", "metadata": {}, "score": "78.94804"}
{"text": "Boxer is developed by Johan Bos and generates formal semantic representations for CCG grammars .Boxer takes as input CCG ( Combinatory Categorial Grammar ) derivations and produces DRSs ( Discourse Representation Structures , from Hans Kamp 's Discourse Representation Theory ) as output .", "label": "", "metadata": {}, "score": "78.94804"}
{"text": "Boxer is developed by Johan Bos and generates formal semantic representations for CCG grammars .Boxer takes as input CCG ( Combinatory Categorial Grammar ) derivations and produces DRSs ( Discourse Representation Structures , from Hans Kamp 's Discourse Representation Theory ) as output .", "label": "", "metadata": {}, "score": "78.94804"}
{"text": "Boxer is developed by Johan Bos and generates formal semantic representations for CCG grammars .Boxer takes as input CCG ( Combinatory Categorial Grammar ) derivations and produces DRSs ( Discourse Representation Structures , from Hans Kamp 's Discourse Representation Theory ) as output .", "label": "", "metadata": {}, "score": "78.94804"}
{"text": "Foris , 294 - 318 .Szabolcsi , Anna ( 1992 ) , \" Combinatory grammar and projection from the lexicon . \"Lexical Matters .CSLI Lecture Notes 24 , ed . by Sag and Szabolcsi .Stanford , CSLI Publications .", "label": "", "metadata": {}, "score": "79.09296"}
{"text": "Foris , 294 - 318 .Szabolcsi , Anna ( 1992 ) , \" Combinatory grammar and projection from the lexicon . \"Lexical Matters .CSLI Lecture Notes 24 , ed . by Sag and Szabolcsi .Stanford , CSLI Publications .", "label": "", "metadata": {}, "score": "79.09296"}
{"text": "$ SCRIPTS / create_model_hybrid ' pwd ' $ NUMNODES working/ .$ SCRIPTS / train_model_hybrid ' pwd ' $ NUMNODES working/ . # Evaluate the parser model : Syntax and Semantics of Natural Language .Principal lecturers : Prof Ted Briscoe , Dr Stephen Clark Taken by : MPhil ACS , Part III Code : L107 Hours : 16 Prerequisites : L100 Introduction to Natural Language Processing and R07 Introductory Logic for students who have not taken a course in logic before .", "label": "", "metadata": {}, "score": "79.2453"}
{"text": "Boxer produces standard DRS syntax , uses a neo - Davidsonian analysis for events ( with thematic roles from VerbNet ) , incorporates Van der Sandt 's algorithm for presupposition , is 100 % compatible with first - order logic ( FOL ) , and normalises cardinal and date expressions .", "label": "", "metadata": {}, "score": "79.66377"}
{"text": "Boxer produces standard DRS syntax , uses a neo - Davidsonian analysis for events ( with thematic roles from VerbNet ) , incorporates Van der Sandt 's algorithm for presupposition , is 100 % compatible with first - order logic ( FOL ) , and normalises cardinal and date expressions .", "label": "", "metadata": {}, "score": "79.66377"}
{"text": "Boxer produces standard DRS syntax , uses a neo - Davidsonian analysis for events ( with thematic roles from VerbNet ) , incorporates Van der Sandt 's algorithm for presupposition , is 100 % compatible with first - order logic ( FOL ) , and normalises cardinal and date expressions .", "label": "", "metadata": {}, "score": "79.66377"}
{"text": "Boxer produces standard DRS syntax , uses a neo - Davidsonian analysis for events ( with thematic roles from VerbNet ) , incorporates Van der Sandt 's algorithm for presupposition , is 100 % compatible with first - order logic ( FOL ) , and normalises cardinal and date expressions .", "label": "", "metadata": {}, "score": "79.66377"}
{"text": "Boxer produces standard DRS syntax , uses a neo - Davidsonian analysis for events ( with thematic roles from VerbNet ) , incorporates Van der Sandt 's algorithm for presupposition , is 100 % compatible with first - order logic ( FOL ) , and normalises cardinal and date expressions .", "label": "", "metadata": {}, "score": "79.66377"}
{"text": "Boxer produces standard DRS syntax , uses a neo - Davidsonian analysis for events ( with thematic roles from VerbNet ) , incorporates Van der Sandt 's algorithm for presupposition , is 100 % compatible with first - order logic ( FOL ) , and normalises cardinal and date expressions .", "label": "", "metadata": {}, "score": "79.66377"}
{"text": "Boxer produces standard DRS syntax , uses a neo - Davidsonian analysis for events ( with thematic roles from VerbNet ) , incorporates Van der Sandt 's algorithm for presupposition , is 100 % compatible with first - order logic ( FOL ) , and normalises cardinal and date expressions .", "label": "", "metadata": {}, "score": "79.66377"}
{"text": "Boxer produces standard DRS syntax , uses a neo - Davidsonian analysis for events ( with thematic roles from VerbNet ) , incorporates Van der Sandt 's algorithm for presupposition , is 100 % compatible with first - order logic ( FOL ) , and normalises cardinal and date expressions .", "label": "", "metadata": {}, "score": "79.66377"}
{"text": "The MIT Press .Steedman , Mark ( 2000 ) , The Syntactic Process .The MIT Press .Szabolcsi , Anna ( 1989 ) , \" Bound variables in syntax ( are there any ? )Semantics and Contextual Expression , ed . by Bartsch , van Benthem , and van Emde Boas .", "label": "", "metadata": {}, "score": "80.013504"}
{"text": "The MIT Press .Steedman , Mark ( 2000 ) , The Syntactic Process .The MIT Press .Szabolcsi , Anna ( 1989 ) , \" Bound variables in syntax ( are there any ? )Semantics and Contextual Expression , ed . by Bartsch , van Benthem , and van Emde Boas .", "label": "", "metadata": {}, "score": "80.013504"}
{"text": "Jacobson interprets personal pronouns as the combinator I , and their binding is aided by a complex combinator Z , as in \" Mary lost her way \" .Z is definable using W and B. .Boxer takes as input CCG ( Combinatory Categorial Grammar ) derivations and produces DRSs ( Discourse Representation Structures , from Hans Kamp 's Discourse Representation Theory ) as output .", "label": "", "metadata": {}, "score": "81.04874"}
{"text": "The tools are written in C++ and have been designed to be efficient enough for large - scale NLP tasks .StatCCG is a statistical CCG parser ( trained on CCGbank ) written by Julia Hockenmaier .Boxer takes as input CCG ( Combinatory Categorial Grammar ) derivations and produces DRSs ( Discourse Representation Structures , from Hans Kamp 's Discourse Representation Theory ) as output .", "label": "", "metadata": {}, "score": "81.37621"}
{"text": "$ SCRIPTS / create_data $ CCGBANK $ NUMNODES working/ .# Train the POS tagger and Supertagger : .$ SCRIPTS / train_taggers working/ . # Evaluate the supertagger model to ensure its results are sane : .$ SCRIPTS / cl07_table4 working/ . # Create the model_hybrid directory and empty config file : . mkdir working / model_hybrid . touch working / model_hybrid / config .", "label": "", "metadata": {}, "score": "81.73396"}
{"text": "$ SCRIPTS / create_data $ CCGBANK $ NUMNODES working/ .# Train the POS tagger and Supertagger : .$ SCRIPTS / train_taggers working/ . # Evaluate the supertagger model to ensure its results are sane : .$ SCRIPTS / cl07_table4 working/ . # Create the model_hybrid directory and empty config file : . mkdir working / model_hybrid . touch working / model_hybrid / config .", "label": "", "metadata": {}, "score": "81.73396"}
{"text": "# Some patches to fix various problems with the scripts provided : . # Use a temp directory different from /tmp since that often does n't have enough .# space : . # Replace /bin / env by /usr / bin / env .", "label": "", "metadata": {}, "score": "82.6086"}
{"text": "More recent . prominent .The first linguistic and psycholinguistic arguments for basing the grammar on combinators were put forth by Mark Steedman and Anna Szabolcsi .More recent proponents of the approach are Jacobson and Baldridge .For example , the [ [ combinator ] ] B ( the compositor ) is useful in creating long - distance dependencies , as in \" Who do you think Mary is talking about ? \" and the combinator W ( the duplicator ) is useful as the lexical interpretation of reflexive pronouns , as in \" Mary talks about herself \" .", "label": "", "metadata": {}, "score": "83.755905"}
{"text": "In Proceedings of the Workshop on Grammar Engineering Across Frameworks .Stanford , CA .In Proceedings of COLING-2008 .Manchester , UK .In Proceedings of ACL / HLT-2008 .Columbus , OH .Proceedings of COLING 2004 .In Proceedings of ENLG 2003 .", "label": "", "metadata": {}, "score": "84.01482"}
{"text": "understand how this approach to meaning can be combined with probabilistic inference ; . gain an appreciation of how syntactic and semantic theory can be implemented in practice .Assessment .Four ticked take - home tests or short practicals .Each ticked test is worth 5 % of the final assessment for the course .", "label": "", "metadata": {}, "score": "84.95629"}
{"text": "One final take - home exam covering all the material taken at beginning of Easter Term .Final take - home exam will contribute 80 % to the final assessment .Questions set and marked by Professor Briscoe and Dr Clark .", "label": "", "metadata": {}, "score": "85.999435"}
{"text": "jam # Boost 's build script wo n't build MPI .# library without this for some reason . mkdir $ EXT / install .cd $ EXT / install .# get it from Sourceforge . tar -xzf boost_1_53_0.tar.gz . cd boost_1_53_0 . /b2 install .", "label": "", "metadata": {}, "score": "86.255615"}
{"text": "jam # Boost 's build script wo n't build MPI .# library without this for some reason . mkdir $ EXT / install .cd $ EXT / install .# get it from Sourceforge . tar -xzf boost_1_53_0.tar.gz . cd boost_1_53_0 . /b2 install .", "label": "", "metadata": {}, "score": "86.255615"}
{"text": "Steedman , Mark ( 1987 ) , \" Combinatory grammars and parasitic gaps \" .Natural Language and Linguistic Theory 5 , 403 - 439 .Articles in books or collections .Szabolcsi , Anna ( 1989 ) , \" Bound variables in syntax ( are there any ? )", "label": "", "metadata": {}, "score": "86.66661"}
{"text": "Steedman , Mark ( 1987 ) , \" Combinatory grammars and parasitic gaps \" .Natural Language and Linguistic Theory 5 , 403 - 439 .Articles in books or collections .Szabolcsi , Anna ( 1989 ) , \" Bound variables in syntax ( are there any ? )", "label": "", "metadata": {}, "score": "86.66661"}
{"text": "The steps to take on other recent Linux distributions should be very similar .Please extend the instructions with more detail , helpful hints and notes on other operating systems !Please extend the instructions with more detail , helpful hints and notes on other operating systems !", "label": "", "metadata": {}, "score": "87.29823"}
{"text": "The first linguistic and psycholinguistic arguments for basing the grammar on combinators were put forth by Mark Steedman and Anna Szabolcsi .More recent prominent proponents of the approach are Jacobson and Baldridge .For example , the combinator B ( the compositor ) is useful in creating long - distance dependencies , as in \" Who do you think Mary is talking about ? \" and the combinator W ( the duplicator ) is useful as the lexical interpretation of reflexive pronouns , as in \" Mary talks about herself \" .", "label": "", "metadata": {}, "score": "87.74625"}
{"text": "The first linguistic and psycholinguistic arguments for basing the grammar on combinators were put forth by Mark Steedman and Anna Szabolcsi .More recent prominent proponents of the approach are Jacobson and Baldridge .For example , the combinator B ( the compositor ) is useful in creating long - distance dependencies , as in \" Who do you think Mary is talking about ? \" and the combinator W ( the duplicator ) is useful as the lexical interpretation of reflexive pronouns , as in \" Mary talks about herself \" .", "label": "", "metadata": {}, "score": "87.74625"}
{"text": "Books .Curry , Haskell B. and Richard Feys ( 1958 ) , Combinatory Logic , Vol .North - Holland .Steedman , Mark ( 1996 ) , Surface Structure and Interpretation .The MIT Press .Journal Articles .Jacobson , Pauline ( 1999 ) , \" Towards a variable - free semantics . \"", "label": "", "metadata": {}, "score": "88.41574"}
{"text": "Books .Curry , Haskell B. and Richard Feys ( 1958 ) , Combinatory Logic , Vol .North - Holland .Steedman , Mark ( 1996 ) , Surface Structure and Interpretation .The MIT Press .Journal Articles .Jacobson , Pauline ( 1999 ) , \" Towards a variable - free semantics . \"", "label": "", "metadata": {}, "score": "88.41574"}
{"text": "Publications .Baldridge , Jason ( 2002 ) , \" Lexically Specified Derivational Control in Combinatory Categorial Grammar . \"PhD Dissertation .Univ . of Edinburgh .Curry , Haskell B. and Richard Feys ( 1958 ) , Combinatory Logic , Vol .", "label": "", "metadata": {}, "score": "88.86827"}
{"text": "Publications .Baldridge , Jason ( 2002 ) , \" Lexically Specified Derivational Control in Combinatory Categorial Grammar . \"PhD Dissertation .Univ . of Edinburgh .Curry , Haskell B. and Richard Feys ( 1958 ) , Combinatory Logic , Vol .", "label": "", "metadata": {}, "score": "88.86827"}
{"text": "More recent proponents of the approach are Jacobson and Baldridge .For example , the combinator B ( the compositor ) is useful in creating long - distance dependencies , as in \" Who do you think Mary is talking about ? \" and the combinator W ( the duplicator ) is useful as the lexical interpretation of reflexive pronouns , as in \" Mary talks about herself \" .", "label": "", "metadata": {}, "score": "89.8013"}
{"text": "Jacobson interprets personal pronouns as the combinator I , and their binding is aided by a complex combinator Z , as in \" Mary lost her way \" .Z is definable using W and B. .For example , the [ [ combinator ] ] B ( the compositor ) is useful in creating long - distance dependencies , as in \" Who do you think Mary is talking about ? \" and the combinator W ( the duplicator ) is useful as the lexical interpretation of reflexive pronouns , as in \" Mary talks about herself \" .", "label": "", "metadata": {}, "score": "90.523544"}
{"text": "Jacobson , Pauline ( 1999 ) , \" Towards a variable - free semantics . \"Linguistics and Philosophy 22 , 1999 .Steedman , Mark ( 1987 ) , \" Combinatory grammars and parasitic gaps \" .Natural Language and Linguistic Theory 5 , 403 - 439 .", "label": "", "metadata": {}, "score": "91.66293"}
{"text": "Jacobson , Pauline ( 1999 ) , \" Towards a variable - free semantics . \"Linguistics and Philosophy 22 , 1999 .Steedman , Mark ( 1987 ) , \" Combinatory grammars and parasitic gaps \" .Natural Language and Linguistic Theory 5 , 403 - 439 .", "label": "", "metadata": {}, "score": "91.66293"}
{"text": "Objectives .understand how the syntax of natural language sentences can be modelled using a type - driven ( Combinatory ) Categorial Grammar ; .understand how a wide - coverage grammar of English can be constructed ; .understand how the meaning of natural language sentences can be modelled using a logical , model - theoretic approach ; .", "label": "", "metadata": {}, "score": "94.00882"}
{"text": "Szabolcsi , Anna ( 1992 ) , \" Combinatory grammar and projection from the lexicon . \"Lexical Matters .CSLI Lecture Notes 24 , ed . by Sag and Szabolcsi .Stanford , CSLI Publications .Szabolcsi , Anna ( 2003 ) , \" Binding on the fly : Cross - sentential anaphora in variable - free semantics \" .", "label": "", "metadata": {}, "score": "94.729195"}
{"text": "Szabolcsi , Anna ( 1992 ) , \" Combinatory grammar and projection from the lexicon . \"Lexical Matters .CSLI Lecture Notes 24 , ed . by Sag and Szabolcsi .Stanford , CSLI Publications .Szabolcsi , Anna ( 2003 ) , \" Binding on the fly : Cross - sentential anaphora in variable - free semantics \" .", "label": "", "metadata": {}, "score": "94.729195"}
{"text": "tar jxf mrmpi-22Apr09 . tbz2 .cd mrmpi-22Apr09/src . make -f Makefile.linux clean . make -f Makefile.linux .h $ EXT / include . cp libmrmpi.a $ EXT / lib .# Build C&C . cd $ CANDC . make -f Makefile.linux all train bin / generate . # Create data .", "label": "", "metadata": {}, "score": "95.29607"}
{"text": "tar jxf mrmpi-22Apr09 . tbz2 .cd mrmpi-22Apr09/src . make -f Makefile.linux clean . make -f Makefile.linux .h $ EXT / include . cp libmrmpi.a $ EXT / lib .# Build C&C . cd $ CANDC . make -f Makefile.linux all train bin / generate . # Create data .", "label": "", "metadata": {}, "score": "95.29607"}
{"text": "IRCS Report 95 - 17 .PhD thesis .University of Pennsylvania .MSc thesis , School of Cognitive Science , Division of Informatics , University of Edinburgh .Ph .D Dissertation , Department of Computer and Information Science , University of Pennsylvania .", "label": "", "metadata": {}, "score": "98.30591"}
{"text": "Please extend the instructions with more detail , helpful hints and notes on other operating systems !They were initially written up by Kilian Evang based on instructions from Tim Dawborn ; thanks are due to Tim and also to Stephen Clark and James Curran for advice without which I would probably never have gotten it to run .", "label": "", "metadata": {}, "score": "100.73099"}
{"text": "The Groningen Meaning Bank .The Groningen Meaning Bank is an annotated corpus of public domain texts .Version 1.0 comprises 1,000 texts with CCG analyses for each sentence and semantic representations for each text .Publications .This is a very incomplete list of publications .", "label": "", "metadata": {}, "score": "101.22889"}
{"text": "The Groningen Meaning Bank .The Groningen Meaning Bank is an annotated corpus of public domain texts .Version 1.0 comprises 1,000 texts with CCG analyses for each sentence and semantic representations for each text .Publications .This is a very incomplete list of publications .", "label": "", "metadata": {}, "score": "101.22889"}
{"text": "For example , the [ [ combinator ] ] B ( the compositor ) is useful in creating long - distance dependencies , as in \" Who do you think Mary is talking about ? \" and the combinator W ( the duplicator ) is useful as the lexical interpretation of reflexive pronouns , as in \" Mary talks about herself \" .", "label": "", "metadata": {}, "score": "101.313034"}
{"text": "For example , the combinator B ( the compositor ) is useful in creating long - distance dependencies , as in \" Who do you think Mary is talking about ? \" and the combinator W ( the duplicator ) is useful as the lexical interpretation of reflexive pronouns , as in \" Mary talks about herself \" .", "label": "", "metadata": {}, "score": "101.8304"}
{"text": "Univ . of Edinburgh .Alternative Phrases : Theoretical Analysis and Practical Applications , PhD thesis , University of Edinburgh .Data and Models for Statistical Parsing with Combinatory Categorial Grammar , PhD thesis , University of Edinburgh .Computational Analysis of the Syntax and Interpretation of ' Free ' Word - order in Turkish .", "label": "", "metadata": {}, "score": "104.27899"}
{"text": "Available here .\u00a9 2013 Computer Laboratory , University of Cambridge Information provided by Prof Ted Briscoe", "label": "", "metadata": {}, "score": "113.45622"}
