{"text": "It is possible to separately access the original raw data and the set of deduced statements if required , see above .If the inference model is changed by adding or removing statements through the normal API then this will trigger further rule firings .", "label": "", "metadata": {}, "score": "24.50586"}
{"text": "When the inference Model is queried then the query is translated into a goal and the engine attempts to satisfy that goal by matching to any stored triples and by goal resolution against the backward chaining rules .Except as noted below rules will be executed in top - to - bottom , left - to - right order with backtracking , as in SLD resolution .", "label": "", "metadata": {}, "score": "24.849903"}
{"text": "It is perfectly possible , though not a good idea , to write rules that will loop infinitely at this point .Once the preparation phase is complete the inference graph will act as if it were the union of all the statements in the original model together with all the statements in the internal deductions graph generated by the rule firings .", "label": "", "metadata": {}, "score": "26.31512"}
{"text": "Any such change the model will usually cause all current deductions and temporary rules to be discarded and inference will start again from scratch at the next query .Some reasoners , such as the RETE - based forward rule engine , can work incrementally .", "label": "", "metadata": {}, "score": "26.49002"}
{"text": "When the inference Model is updated by adding or removing statements all tabled results are discarded by an internal reset ( ) and the next query will rebuild the tabled results from scratch .Note that backward rules can only have one consequent so that if writing rules that might be run in either backward or forward mode then they should be limited to a single consequent each .", "label": "", "metadata": {}, "score": "26.716955"}
{"text": "Note that there are no loops in the above data flows .The backward rules are not employed when searching for matches to forward rule terms .This two - phase execution is simple to understand and keeps the semantics of the rule engines straightforward .", "label": "", "metadata": {}, "score": "27.728333"}
{"text": "Sites not respecting this rule potentially produce errors in trees ' reconstruction ; they thus have to be masked .In the FIGENIX 's phylogenomic inference pipeline , we use the \" Functional divergence test \" [ 35 ] ( at individual domain level ) to detect sites not evolving under neutrality .", "label": "", "metadata": {}, "score": "28.669634"}
{"text": "If in the above example there were ways that the subPropertyOf relation could be derived from some other relations then that derivation would have to be accessible to the forward rules for the above to be complete .Updates to an inference Model working in hybrid mode will discard all the tabled LP results , as they do in the pure backward case .", "label": "", "metadata": {}, "score": "30.196413"}
{"text": "A system that can automatically generate satisfactory ( if not ideal ) text definitions ( see right pane of Figure 1 ) from the logical descriptions brings obvious advantages , since maintenance of both types of definition is effectively devolved to curating only the logical description .", "label": "", "metadata": {}, "score": "30.198395"}
{"text": "Also note the difference in behavior between queries like SPARQL queries , and rules like N3 or SWRL rules .One activation of a rule is like a query , but the result of the activation is added to the Knowledge Base , and can possibly trigger other rules .", "label": "", "metadata": {}, "score": "30.761776"}
{"text": "However , a weak point of the book is the authors ' assumption about the reader 's knowledge .The formalisms used for examples are used without being explained .It is true that the attribute - value matrix is a well - known format for representation of data , but still a short explanation would have been helpful .", "label": "", "metadata": {}, "score": "31.196732"}
{"text": "p , ? a ? q ? a ?p ?b ) ] .would precompile all the declared subPropertyOf relationships into simple chain rules which would only fire if the query goal references a property which actually has a sub property .", "label": "", "metadata": {}, "score": "33.106117"}
{"text": "This allowed the ontology hierarchies displayed in the interface to be easily manipulated and changed , simply by adding additional defined classes , making them more maintainable and easier to adapt to user requirements that could potentially evolve over time .This modular approach to ontology design is similar to that described in [ 6 ] .", "label": "", "metadata": {}, "score": "33.12615"}
{"text": "While textual definitions are human - facing , logical definitions are primarily machine - facing .They allow ontologies to be built and deployed with the support of automated reasoners [ 3 - 6 ] .The explicit axiomatisation can be checked for its logical coherence ( to remove contradictory statements ) and to complete the subsumption hierarchy through the inference of subsumption or is - a relationships .", "label": "", "metadata": {}, "score": "33.229073"}
{"text": "Conclusions .We have presented a prototype for the specific NLG task of generating text definitions from logical descriptions of classes .We verbalised a selection of classes from the OWL axioms in EFO and undertook two informal surveys .Whilst it is not possible to draw statistically significant conclusions from these kinds of survey , they have suggested that the text definitions we generated are understandable and useful within the context of an ontology with sparse use of text definitions .", "label": "", "metadata": {}, "score": "33.475643"}
{"text": "The three different processing levels correspond to different rule sets . rules \" on the classpath and so could , in principle , be overridden by applications wishing to modify the rules .Performance for in - memory queries appears to be good .", "label": "", "metadata": {}, "score": "33.754917"}
{"text": "Then , dynamically , the N3 triples from newly added N3 sources are added .Also , when an N3 source is deactivated or ( re)activated , the corresponding N3 triples are removed or added .Now when the Drools engine is launched , inference brings all consequences of the current triples in the user KB .", "label": "", "metadata": {}, "score": "34.101135"}
{"text": "While these latter platforms allowed both a gain in the time cost and avoid errors due to the manual manipulation of files , they still strongly require intervention of human experts at various steps .Here we present an automated annotation platform featuring an expert system that substitutes for human expertise at various steps and , thus , allows more complete automation than ever considered .", "label": "", "metadata": {}, "score": "34.149048"}
{"text": "In that way a sequence of add and removes can be undertaken without redundant work being performed at each change .In some applications it can be convenient to trigger the initial processing ahead of time to reduce the latency of the first query .", "label": "", "metadata": {}, "score": "34.33341"}
{"text": "Most of these systems are used later in the book for exemplification and comparison .Natural language generation is a field in which difficult problems arise .The second chapter of the book discusses some of these problems .For example , the cost of building an NLG system has to be considered .", "label": "", "metadata": {}, "score": "35.226513"}
{"text": "The completion of the subsumption hierarchy is something that we could do as part of the on - line tool , via the OWL API [ 32 ] , but the costs in an on - line setting can be high .", "label": "", "metadata": {}, "score": "35.317978"}
{"text": "When this feature is launched , if all properties and classes are not declared , a new N3 file is added to project , with a skeleton ontology for missing declarations .The generation rules look in the whole current projet for undeclared properties and classes in plain data triples ( individuals ) , incomplete declarations and rules .", "label": "", "metadata": {}, "score": "35.47174"}
{"text": "n3 ) .When you deactivate one of these , Drools automatically removes the conclusion drown precedently about the light .Manipulating projects .Sub - projects .To avoid repeating infrastructure rules and/or data , it is possible to put these in a project that will be imported as a sub - project in the main project .", "label": "", "metadata": {}, "score": "35.558514"}
{"text": "At key steps of these \" pipelines \" , expert biologists are often required to make important decisions , modify the dataset , compare intermediate results , manually handle and convert several files ( and so on ... ) which is labor intensive and can be error prone .", "label": "", "metadata": {}, "score": "35.567833"}
{"text": "The application described here uses NLG to automatically provide text - based definitions from an ontology that has logical descriptions of its entities , so avoiding the bottleneck of authoring these definitions by hand .Results .Sentence generation is accomplished using a generic grammar based on logical patterns in OWL , together with a lexicon for realising atomic entities .", "label": "", "metadata": {}, "score": "35.59794"}
{"text": "As shown on table 7 , approaches like Homologene give rather reliable predictions of orthologs when single copy genes are studied .In contrast , such approaches systematically fail to detect specific genes duplications and are thus unable to find paralogous genes .", "label": "", "metadata": {}, "score": "35.703434"}
{"text": "The preferences file in N3 offer features like Eclipse extensions points and Spring and Guice dependency injection .The extra advantage is that you can have rules adding intelligence , and , being built on a dynamic ( stateful )Knowledge Base , it can react to events and property changes .", "label": "", "metadata": {}, "score": "35.99278"}
{"text": "With the current reasoners this is an expensive operation , involving the temporary creation of an entire new model with the additional posits added and all inference has to start again from scratch .Thus it is worth considering preloading your data with expressions you might need to query over .", "label": "", "metadata": {}, "score": "36.12635"}
{"text": "Typically the ontology languages used with the semantic web allow constraints to be expressed , the validation interface is used to detect when such constraints are violated by some data set .A simple but typical example is that of datatype ranges in RDFS .", "label": "", "metadata": {}, "score": "36.22934"}
{"text": "Queries to the model will not report such statements .This is useful to enable non - monotonic forward rules to define flag predicates which are only used for inference control and do not \" pollute \" the inference results .As a simple illustration suppose we wish to create a simple ontology language in which we can declare one property as being the concatenation of two others and to build a rule reasoner to implement this .", "label": "", "metadata": {}, "score": "36.300507"}
{"text": "Several attempts have been made in the development of annotation platforms automating some of these pipelines , particularly in the field of structural annotation ( for example the Ensembl pipeline [ 10 ] , or the Otto system [ 11 ] ) .", "label": "", "metadata": {}, "score": "36.36289"}
{"text": "To overcome this and force the InfModel to reconsult the raw data use the InfModel.rebind ( ) call .Finally , some reasoners can store both intermediate and final query results between calls .This can substantially reduce the cost of working with the inference services but at the expense of memory usage .", "label": "", "metadata": {}, "score": "36.410023"}
{"text": "A rule set is simply a List of Rules .For convenience a rather simple parser is included with Rule which allows rules to be specified in reasonably compact form in text source files .However , it would be perfectly possible to define alternative parsers which handle rules encoded using , say , XML or RDF and generate Rule objects as output .", "label": "", "metadata": {}, "score": "36.41586"}
{"text": "Possibility to scan a database of trees for a given topology .Automatic extraction of experimentally verified functional information for all detected orthologs and paralogs .Functionality not available .While comparison between pairwise - based and phylogenomic - based approaches to detect homology relationship can appear biased , it illustrates what kind of information is missed by the widely - used pairwise approaches and what kind of systematic errors they are likely to produce and spread on biological databases .", "label": "", "metadata": {}, "score": "36.595497"}
{"text": "For a text definition we need to group together related axioms that relate to the concept being defined .Such descriptions can have many relationships of the same kind , such as an entity having multiple parts , and these need to be aggregated to reduce needless redundancy .", "label": "", "metadata": {}, "score": "36.623158"}
{"text": "For example , at step 1 to choose sequences from a BLAST [ 16 ] output that are more likely to be homologous to the query sequence .At step 2 to eliminate sequences producing biases in the alignment or having a divergent composition , and to mask sites with highly divergent evolution .", "label": "", "metadata": {}, "score": "36.838474"}
{"text": "Any forward rules which assert new backward rules will instantiate those rules according to the forward variable bindings and pass the instantiated rules on to the backward engine .Queries are answered by using the backward chaining LP engine , employing the merge of the supplied and generated rules applied to the merge of the raw and deduced data .", "label": "", "metadata": {}, "score": "36.86116"}
{"text": "By comparison , the original N3 queries are translated by Drools rules that produce only objects of class TripleResult , which do not participate in the inference .With the technology of original N3 queries , the result return was completely linked to the process of inference , and there is only one query per project .", "label": "", "metadata": {}, "score": "36.875114"}
{"text": "Once the owl constructs are used then substantial reasoning can be required .The most expensive aspect of the supported constructs is the equality reasoning implied by use of cardinality restrictions and FunctionalProperties .The current rule set implements equality reasoning by identifying all sameAs deductions during the initial forward \" prepare \" phase .", "label": "", "metadata": {}, "score": "37.023544"}
{"text": "Discussion .They constitute \" native \" expert module gateways that do not have their counterpart in the Ensembl or BioPipe architectures .Such architectures thus still abundantly require human expertise and can not fully automate processes such as phylogenomics inference .", "label": "", "metadata": {}, "score": "37.179966"}
{"text": "add several data sources to the project ( SPARQL , or RDF , etc ) .extract or transform the data sources through domain specific N3 rules .add N3 rules to generate RDF / N3 nodes corresponding to the XML Schema for export .", "label": "", "metadata": {}, "score": "37.258495"}
{"text": "In particular , we can use the forward rules to compile a set of backward rules from the ontology information in the dataset .As a simple example consider trying to implement the RDFS subPropertyOf entailments using a rule engine .A simple approach would involve rules like : . a ? q ?", "label": "", "metadata": {}, "score": "37.60655"}
{"text": "Performance ( especially memory use ) of the fuller reasoner configuration still leaves something to be desired and will the subject of future work - time permitting .See also subsection 5 for notes on more specific limitations of the current implementation .", "label": "", "metadata": {}, "score": "37.62689"}
{"text": "y ) ] .One final aspect of the general rule engine to mention is that of validation rules .We described earlier how reasoners can implement a validate call which returns a set of error reports and warnings about inconsistencies in a dataset .", "label": "", "metadata": {}, "score": "37.76293"}
{"text": "Several ways for choosing the words and discourse relations are discussed using a large number of examples .Once the lexicalisation decides how different concepts are expressed in words and syntactic structures , the aggregation module improves the readability of the generated text by combining similar sentences .", "label": "", "metadata": {}, "score": "38.002716"}
{"text": "We thus anticipate that the OWL rule reasoner will be most suited to applications involving primarily instance reasoning with relatively simple , regular ontologies and least suited to applications involving large rich ontologies .A better characterisation of the tradeoffs involved would be useful and will be sought .", "label": "", "metadata": {}, "score": "38.086273"}
{"text": "It is slightly higher performance , and somewhat more space efficient , than the alternative of using the pure rule engines to performance transitive closure but its main advantage is that it implements the direct / minimal version of those relations as well as the transitively closed version .", "label": "", "metadata": {}, "score": "38.209976"}
{"text": "p ?b ) .Such a rule would work but every goal would match the head of this rule and so every query would invoke a dynamic test for whether there was a subProperty of the property being queried for .", "label": "", "metadata": {}, "score": "38.283997"}
{"text": "Moreover , it is emphasised that there are cases when people are reluctant to use an NLG system ( especially in those cases when errors in text can have important implications e.g. health related contexts ) .However , when an NLG system is built , a corpus to determine the user requirements has to be assembled .", "label": "", "metadata": {}, "score": "38.294327"}
{"text": "Typically the easiest way to work with such indirect and direct relations is to use the Ontology API which hides the grubby details of these property aliases .It is sometimes useful to be able to trace where an inferred statement was generated from .", "label": "", "metadata": {}, "score": "38.376694"}
{"text": "The major problem shared by these two approaches is that none give a representation of the evolutionary history and behavior of the genes .Thus , possibly useful information to understand gene function are missed , such as , for example , the detection of sites responsible of functional divergence between two groups of paralogy or the evaluation of the rate of evolution possibly indicating functional shifts between homologous genes .", "label": "", "metadata": {}, "score": "38.41867"}
{"text": "The phylogenomic inference pipeline that we integrated and automated in the platform is mainly the one described in Abi - rached et al .2002 [ 29 ] , and in Vienne et al .2003 [ 30 ] , the pipeline is described on Figure 2 's legend .", "label": "", "metadata": {}, "score": "38.524418"}
{"text": "It might not be the same Java object but it uses the same Java object to hold the underlying data graph .Some reasoners , notably the forward chaining rule engine , store the deduced statements in a concrete form and this set of deductions can be obtained separately by using the getDeductionsModel ( ) call .", "label": "", "metadata": {}, "score": "38.621223"}
{"text": "Nevertheless , these methods require a high degree of biological expertise , are time consuming , complex , and are difficult to automate in their whole [ 4 , 8 - 9 ] .Aside from detecting protein coding genes and predicting their function , structural and functional annotation also have other aims such as detecting regulatory elements , repetitive elements , non protein - coding genes ( i.e. miRNA ) , or other important genomic features .", "label": "", "metadata": {}, "score": "38.816208"}
{"text": "The rule reasoner can optionally run a sequence of procedural preprocessing hooks over the data at the time the inference graph is prepared .These procedural hooks can be used to perform tests or translations which are slow or inconvenient to express in rule form .", "label": "", "metadata": {}, "score": "38.86354"}
{"text": "// launch a search that is in the KB ./query.n3 \" ) ; .// launch a search from an N3 query string .S _ :p ?One can consider a forward chaining rule engine like the Drools based ITripleStoreRETE object like a very flexible MVC framework .", "label": "", "metadata": {}, "score": "38.891495"}
{"text": "In particular , some applications of interest to ourselves involve ontology transformation which very often implies the need to support property composition .This is something straightforward to express in rule - based form and harder to express in standard Description Logics .", "label": "", "metadata": {}, "score": "38.96583"}
{"text": "So one could export an N3 project as a main ontology importing the N3/RDF sources ( but the non RDF sources would have to be translated once for all ) .The N3 rules should be translated to SWRL rules ( FEATURE NOT IMPLEMENTED ) .", "label": "", "metadata": {}, "score": "39.14693"}
{"text": "As a second example , we 'll look at ways to define a property as being both symmetric and transitive .Of course , this can be done directly in OWL but there are times when one might wish to do this outside of the full OWL rule set and , in any case , it makes for a compact illustration .", "label": "", "metadata": {}, "score": "39.194557"}
{"text": "That is , they work by using rules to propagate the if- and only - if- implications of the OWL constructs on instance data .Reasoning about classes is done indirectly - for each declared class a prototypical instance is created and elaborated .", "label": "", "metadata": {}, "score": "39.435013"}
{"text": "This returns a iterator over a set Derviation objects through which a brief description of the source of the derivation can be obtained .Typically understanding this involves tracing the sources for other statements which were used in this derivation and the Derivation .", "label": "", "metadata": {}, "score": "39.53076"}
{"text": "An example of projects including these rules to generate a CRUD mini - application from an UML or eCore model , and using project pipeline ( a.k.a . post - processing project ) are here : .Reading plain XML files or XML Schema .", "label": "", "metadata": {}, "score": "39.64044"}
{"text": "The document planner produces a general structure of the document .As the authors argue in chapter 5 , this structure is too general to produce text directly from it .As a result , they introduce an intermediate module , microplanning , which involves lexicalisation , aggregation and generation of referring expressions .", "label": "", "metadata": {}, "score": "39.72099"}
{"text": "n3 .Drools use case . re - use a project like above .launch Drools : click on the Drools icon on the far right .This new inference engine provided by EulerGUI leverages on Drools 's RETE forward chaining algorithm .", "label": "", "metadata": {}, "score": "39.725594"}
{"text": "The other more complex example is from the step 2 , which consists of producing a reliable multiple alignment with elimination of sequences and masking of positions producing biases in the alignment or improper for phylogenetic reconstruction .This step is crucial in the phylogenomic approach because depending of the quality of the alignment in terms of phylogenetic signal and noise , a reliable phylogeny may not be able to be produced .", "label": "", "metadata": {}, "score": "39.850067"}
{"text": "The algorithm carries out the same search for every lexical entry , so that each atomic entity is associated with a subset of relevant axioms .The grouping of axioms within each subset occurs in the next stage .Aggregating similar axioms .", "label": "", "metadata": {}, "score": "39.880127"}
{"text": "There would still be repetition , but it would be of a more relevant word .Some more complex grammatical structures might also be used , but possibly at a cost of ' easy reading ' .Again , future work will test more variations of sentence forms .", "label": "", "metadata": {}, "score": "40.01645"}
{"text": "Import to N3/RDF .N - Triples , Turtle , and N3 formats .The N3 language , that allows to express facts , classes and properties , and rules , is a convergence language in whose format every data format is translatable .", "label": "", "metadata": {}, "score": "40.140602"}
{"text": "A second possible weakness is performance .A query to an InfModel is generally expensive and involves lots of queries to the data .The outer InfModel in our layered case will typically issue a lot of queries to the inner model , each of which may trigger more inferenece .", "label": "", "metadata": {}, "score": "40.177624"}
{"text": "The rule based approach can not offer a complete solution for OWL / Lite , let alone the OWL / Full fragment corresponding to the OWL / Lite constructs .In addition the current implementation is still under development and may well have ommisions and oversights .", "label": "", "metadata": {}, "score": "40.201603"}
{"text": "Reading a Java classes tree .Model Driven Architecture is an acknowledged practice in software development .This paradigm states that a huge part of a software development cycle is in fact a reflexion on the models underlying the application code : data models , workflow models , business rules , classes relationships , code dependencies , etc . .", "label": "", "metadata": {}, "score": "40.322224"}
{"text": "Also known as \" embedded Java objects \" , this means that Java object within the N3+Java Knowledge Base react to rules in real time .It leverages on the embedded Drools forward chaining inference engine .On an architectural point of view , this is very important .", "label": "", "metadata": {}, "score": "40.330498"}
{"text": "There is no guarantee of the order in which matching rules will fire or the order in which body terms will be tested , however once a rule fires its head - terms will be executed in left - to - right sequence .", "label": "", "metadata": {}, "score": "40.4143"}
{"text": "Then the reasoner can demonstrate that classes A and B are equivalent , in particular that any instance of A is an instance of B and vice versa .However , given a model just containing the first set of assertions you can not directly query the inference model for the individual triples that make up cardinality(P,1 ) .", "label": "", "metadata": {}, "score": "40.537212"}
{"text": "A more thorough exploration of all aspects of these renderings is necessary .There is , however , a suggestion that a variety of output styles is possible and needed , with some being closer to domain language , some making more of OWL 's semantics explicit whilst others preserve more of the ontology 's form .", "label": "", "metadata": {}, "score": "40.551704"}
{"text": "Structural annotation methods can be classified into several types : .Ab - initio methods , based on content sensor and detectors to discriminate between coding and non - coding regions , and then decipher a putative gene .Homology - based methods use evolutionary conservation concepts to deduce gene localization and structure .", "label": "", "metadata": {}, "score": "40.565254"}
{"text": "X ) ] [ ( ?A ? P ?A ?P ?B ) , ( ?B ?P ?C ) ] ] .Sometimes one wishes to write generic inference rules but combine them with some RDFS or OWL infernece .", "label": "", "metadata": {}, "score": "40.592026"}
{"text": "Actually , it would be possible to introduce comprehension axioms for simple cases like this example .We have , so far , chosen not to do so .First , since the OWL / full closure is generally infiite , some limitation on comprehension inferences seems to be useful .", "label": "", "metadata": {}, "score": "40.61673"}
{"text": "This call is not necessary in other cases , any query will automatically trigger an internal prepare phase if one is required .There are times when the data in a model bound into an InfModel can is changed \" behind the scenes \" instead of through calls to the InfModel .", "label": "", "metadata": {}, "score": "40.668274"}
{"text": "The subproperty and subclass lattices are eagerly computed and stored in a compact in - memory form using the TransitiveReasoner ( see below ) .The identification of which container membership properties ( properties like rdf:_1 ) are present is implemented using a preprocessing hook .", "label": "", "metadata": {}, "score": "40.828026"}
{"text": "This makes it possible to build rules , such as the template above , which are ignored unless validation has been switched on - thus avoiding potential overhead in normal operation .This is optional and the \" validation on ( ) \" guard can be omitted .", "label": "", "metadata": {}, "score": "40.854095"}
{"text": "The default API supports accessing all entailed information at the level of individual triples .This is surprisingly flexible but there are queries which can not be easily supported this way .The first such is when the query needs to make reference to an expression which is not already present in the data .", "label": "", "metadata": {}, "score": "40.950905"}
{"text": "Accurate and up - to - date information about third party Java open sources libraries can be found on this dependencies page generated by Maven , including transitive dependencies , dependency tree , repository locations and more .Install external tools .", "label": "", "metadata": {}, "score": "41.015"}
{"text": "Because the order of triples in a Model is not defined then this is one violation to strict top - to - bottom execution .Essentially all ground facts are consulted before all rule clauses but the ordering of ground facts is arbitrary .", "label": "", "metadata": {}, "score": "41.067734"}
{"text": "Inference of Orthologs and paralogs through comparison of gene trees with a reference species tree .Retrieval of experimentally verified functional data for orthologs and paralogs to the query sequence , on Web databases ( Gene Ontology , MGI and NCBI 's dbEST ) .", "label": "", "metadata": {}, "score": "41.13572"}
{"text": "The parameter being set is identified by the corresponding configuration property .For the built in reasoners the available configuration parameters are described below and are predefined in the ReasonerVocabulary class .The parameter value can normally be a String or a structured value .", "label": "", "metadata": {}, "score": "41.147697"}
{"text": "In both cases the arguments may be variables or bound values and the supplied RuleContext object can be used to dereference bound variables and to bind new variables .Once the Builtin has been defined then an instance of it needs to be registered with BuiltinRegistry for it to be seen by the rule parser and interpreters .", "label": "", "metadata": {}, "score": "41.272766"}
{"text": "The chosen architecture is also compared with other existing layouts , emphasising its advantages and weaknesses .A positive aspect of this discussion is the fact that it can be used not only for building NLG systems , but also for all kinds of natural language systems .", "label": "", "metadata": {}, "score": "41.28355"}
{"text": "When all the rules for verbalisation are settled and tested , a Java implementation will be developed .Third , the methods used for deriving lexical entries from identifiers and labels are rudimentary ( and of course they assume that these names are based on English ) .", "label": "", "metadata": {}, "score": "41.29989"}
{"text": "This part of the analysis is based on empiric rules specified by biologists , rather than on an algorithmic approach .EK and ED units are thus gateways to the expert system , which purpose is to take decisions , using genomic knowledge and data provided by EK units during pipeline processing .", "label": "", "metadata": {}, "score": "41.389435"}
{"text": "P ?X ?P ?Y ) ] .These rules work but they compute the complete symmetric - transitive closure of p when the graph is first prepared .Suppose we have a lot of p values but only want to query some of them it would be better to compute the closure on demand using backward rules .", "label": "", "metadata": {}, "score": "41.513847"}
{"text": "As an example to illustrate the potential of an expert system in automating complex and human intervention - requiring pipelines ; we focused on the phylogenomic functional inference pipeline .Phylogenomic functional inference is , as previously introduced , labor intensive , time consuming , requires a high level of expertise and human intervention at various different steps .", "label": "", "metadata": {}, "score": "41.658768"}
{"text": "These methods avoid most of the false homology inference problems , and allow distinguishing between orthologous and paralogous genes [ 4 , 6 ] .Orthologous genes , which are produced by a speciation event , are more likely to share the same function than paralogous genes which originate from duplications [ 7 ] .", "label": "", "metadata": {}, "score": "41.737717"}
{"text": "Complete automation of complex pipelines through the use of an expert system , although providing obvious gains in time cost , does not necessarily presume of the quality of the produced results .We addressed this question by evaluating the quality of the results and the performance of FIGENIX 's pipelines .", "label": "", "metadata": {}, "score": "41.802094"}
{"text": "For more details about all the steps and functionalities automated in the pipeline see material and methods sections of the 2002 and 2003 phylogenomic papers [ 29 , 30 ] .From the query sequence , a dataset of putative homologous sequences is first built by BLAST [ 16 ] on a protein database like NR .", "label": "", "metadata": {}, "score": "41.85193"}
{"text": "This covered a range of common encoding paradigms in OWL - a collection of restrictions upon another kind of entity , some only necessary conditions and some that were both necessary and sufficient .This subset used some of the more common properties used in EFO .", "label": "", "metadata": {}, "score": "41.862263"}
{"text": "Future extensions will improve the formatting capabilities and flexibility of this mechanism .First , as mentioned earlier , the rule engines themselves only see rules in terms of the Rule Java object .Thus applications are free to define an alternative rule syntax so long as it can be compiled into Rule objects .", "label": "", "metadata": {}, "score": "41.875107"}
{"text": "If an RDF statement asserts an object value for that property which lies outside the given value space there is an inconsistency .To test for inconsistencies with a data set using a reasoner we use the InfModel.validate ( ) interface .", "label": "", "metadata": {}, "score": "42.04751"}
{"text": "Before being sent for phylogenetic reconstruction , multiple alignments need to be corrected for various different biases .Among those corrections , sites having high rates of evolution must be removed from the multiple alignment .Similarly , sites for which the rate of substitution is highly divergent in two or more paralogous groups , underlying a possible \" non neutrality \" , should also be removed .", "label": "", "metadata": {}, "score": "42.075333"}
{"text": "The various engine configurations are all accessible through a single parameterized reasoner GenericRuleReasoner .At a minimum a GenericRuleReasoner requires a ruleset to define its behaviour .A GenericRuleReasoner instance with a ruleset can be used like any of the other reasoners described above - that is it can be bound to a data model and used to answer queries to the resulting inference model .", "label": "", "metadata": {}, "score": "42.084427"}
{"text": "That term is used because it generally arises from an error in the ontology .However , it is not a logical inconsistency - i.e. something giving rise to a contradiction .Having an instance of such a class is , clearly a logical error .", "label": "", "metadata": {}, "score": "42.204666"}
{"text": "The OWLMicro reasoner just supports RDFS plus the various property axioms , intersectionOf , unionOf ( partial ) and hasValue .It omits the cardinality restrictions and equality axioms , which enables it to achieve much higher performance .Constructs .Supported by .", "label": "", "metadata": {}, "score": "42.306503"}
{"text": "B rdfs : subClassOf ?C ) ] .will successfully compute the transitive closure of the subClassOf relation .Any query of the form ( , rdfs : subClassOf , ) will be satisfied by a mixture of ground facts and resolution of rule r1 .", "label": "", "metadata": {}, "score": "42.342857"}
{"text": "sequence or in parallel , depending on the number of participants .The .workshop will focus on the following topics : . - Formal semantics and NLG .In several subareas of NLG ( generation of referring expressions , . lexicalization , among others ) methods of formal semantics have . already been used successfully .", "label": "", "metadata": {}, "score": "42.547935"}
{"text": "It is sometimes useful to launch a pipeline of projects .That is , the result of launching a project is added to the inputs of the next project in the pipeline , which is launched , and so on .This is achieved by adding a post - processing project to the current project , by clicking in relevant entry in \" File \" pulldown menu .", "label": "", "metadata": {}, "score": "42.55762"}
{"text": "Phylogenomic inference is , as stated in Background , a labor - intensive , complex and highly human - dependant process .These are the main reasons why other processes of functional and homology inference which are less complex and more straightforward ( ie pairwise - based ) , have been considered for automation .", "label": "", "metadata": {}, "score": "42.603424"}
{"text": "For many applications one simply creates a model incorporating some inference step , using the ModelFactory methods , and then just works within the standard Jena Model API to access the entailed statements .However , sometimes it is necessary to gain more control over the processing or to access additional reasoner features not available as virtual triples .", "label": "", "metadata": {}, "score": "42.714703"}
{"text": "Proceedings of the Reasoning Web .2005 , Springer , 213 - 250 .full_text .View Article .Hielkema F , Mellish C , Edwards P : Using WYSIWYM to create an open - ended interface for the semantic Grid .", "label": "", "metadata": {}, "score": "42.72902"}
{"text": "Precisely the rule - based formalization allows a radical separation between business and implementation .A key point is that you do n't have to generate ( Java ) business classes from model ( ontologies ) ; business data are represented as RDF triples in memory and on storage , and rules are interpreted by a rule engine .", "label": "", "metadata": {}, "score": "42.78803"}
{"text": "For all of the built in reasoners the separation is arbitrary .The prime value of this separation is to allow some deductions from one set of data ( typically some schema definitions ) to be efficiently applied to several subsidiary sets of data ( typically sets of instance data ) .", "label": "", "metadata": {}, "score": "42.8189"}
{"text": "As a side effect , it downloads all refered Ontologies to current project , but does not add them to the project ( they are just put in the N3 cache ) .The process is incremental .Everytime you document a property or class , you modify the generated rdfs : comment , and it will not be re - generated the next time .", "label": "", "metadata": {}, "score": "42.907898"}
{"text": "This is a static class though which the set of reasoners currently available can be examined .It is possible to register new reasoner types and to dynamically search for reasoners of a given type .The ReasonerRegistry also provides convenient access to prebuilt instances of the main supplied reasoners .", "label": "", "metadata": {}, "score": "43.09534"}
{"text": "Usually , at the end of this step , an expert biologist manually examines the topology of each tree , runs different tests to compare trees one to one and finally tries to produce a projection onto a unique consensus topology of all the information from the three trees .", "label": "", "metadata": {}, "score": "43.20375"}
{"text": "E.g. an input form is generated in a few milliseconds directly from the OWL model ( see Java Swing application generator ) !Then , it leverages on Drools rule engine to keep a stateful Knowledge base , so that one can add new triples in a new N3 source , and the results will be updated .", "label": "", "metadata": {}, "score": "43.231857"}
{"text": "Input limitations .Performance and size limitations of the input sequence both depend on several parameters and on the type of pipeline used .For phylogenetic inference the size of the query protein , the number of homologs , and the number of domains all account in the global performance of the pipeline .", "label": "", "metadata": {}, "score": "43.24932"}
{"text": "Written in a C++-like style , it could confuse some readers unfamiliar with object - oriented programming .A solution could be to explain uncommon notions at the end of the book in an appendix .In this way the flow of reading is not interrupted , and a reader , who is unfamiliar with any of these concepts , could clarify them .", "label": "", "metadata": {}, "score": "43.314888"}
{"text": "Some of these issues are being addressed in our current research , such as experimenting with grouping axioms under ordered sub - headings ( as suggested by [ 31 ] in an analysis of encyclopedia entries ) .Arguably this is to be expected , since the definitions are being evaluated here for different purposes , but this also suggests that there is a trade - off between fluent , readable English and semantic precision .", "label": "", "metadata": {}, "score": "43.427208"}
{"text": "This mode is well appropriated to the way the \" expert system \" takes part in task execution ( as illustrated in the examples detailed hereafter ) .As shown further , the choice of a rule based system like PROLOG , offers a great \" expression capability \" in very short and powerful sentences used to model scientists ' knowledge and methods .", "label": "", "metadata": {}, "score": "43.445152"}
{"text": "-Sites not under neutral evolution [ 35 ] .Once domains are \" purified \" , and after congruent domains selection with HOMPART test from PAUP package [ 20 ] , a new alignment is built by merging preserved parts of domains ' alignments .", "label": "", "metadata": {}, "score": "43.471695"}
{"text": "The lexicalize_messageblocks is the \" main \" module of the lexicalization .For each message block in a textplan , it generates one or more possible lexicalizations which are then realized by the realization module .The lexicalization module generates lexicalizations ( in HLDS - XML format ) for each message , which are used by the lexicalize_messageblocks module to form lexicalizations of complete message blocks .", "label": "", "metadata": {}, "score": "43.48137"}
{"text": "The lexicalize_messageblocks is the \" main \" module of the lexicalization .For each message block in a textplan , it generates one or more possible lexicalizations which are then realized by the realization module .The lexicalization module generates lexicalizations ( in HLDS - XML format ) for each message , which are used by the lexicalize_messageblocks module to form lexicalizations of complete message blocks .", "label": "", "metadata": {}, "score": "43.48137"}
{"text": "This and the following stage belong to the process labelled ' Planner ' in Figure 4 .Once the lexicon has been built , the ontology is searched for axioms that describe each class , property and individual in the lexicon ( i.e. , each atomic entity ) .", "label": "", "metadata": {}, "score": "43.70501"}
{"text": "Note also that several SPARQL public endpoints produce an empty result and no warning , or a just a HTTP 500 error , when there is something wrong with CONSTRUCT queries .This was the case with dbpedia ( running a Virtuoso server ) , when the property is not a literal .", "label": "", "metadata": {}, "score": "43.758755"}
{"text": "Results are of course more specific and sensitive than ab - initio methods used alone since our hybrid approach includes homology based predictions .Our approach resembles the one used in Procrustes [ 38 ] , with two main differences : .", "label": "", "metadata": {}, "score": "43.800262"}
{"text": "Finally , we can check for inconsistencies within the data by using the validation interface : . validate ( ) ; if ( validity . out . out .getReports ( ) ; i .Report ) i . next ( ) ; System . out .", "label": "", "metadata": {}, "score": "43.86974"}
{"text": "Search .In EulerGUI there is another style of queries , called search .There can be as many searches as you want in an EulerGUI project .The search is decoupled from the inference ; it searches the facts currently in the knowledge base , be it the initial facts , or the facts inferred after one or more inference launch .", "label": "", "metadata": {}, "score": "43.96561"}
{"text": "P , ?X ) will all be tabled because the property variable might match one of the tabled properties .Thus the rule set : .[ r1 : ( ?A rdfs : subClassOf ?A rdfs : subClassOf ?", "label": "", "metadata": {}, "score": "43.974922"}
{"text": "The \" Annotation Engine \" obligatorily works in conjunction with an \" Expert System \" .This module integrates static empiric rules associated with genomic knowledge extracted from the laboratory scientists and dynamic information given during the pipeline execution .This module was developed with PROLOG language ( see Table 1 ) ( Colmerauer , unpublished , 1972 ) with GNU PROLOG FOR JAVA interpreter [ 28 ] .", "label": "", "metadata": {}, "score": "44.144707"}
{"text": "This \" i d \" message block in turn consists of several messages , e.g. an \" authors \" message and a \" title \" message .The realization module takes a lexicalized phrase or sentence ( in HLDS - XML format ) and converts it into a surface realization ( with the help of OpenCCGs tccg executable ) .", "label": "", "metadata": {}, "score": "44.169228"}
{"text": "This \" i d \" message block in turn consists of several messages , e.g. an \" authors \" message and a \" title \" message .The realization module takes a lexicalized phrase or sentence ( in HLDS - XML format ) and converts it into a surface realization ( with the help of OpenCCGs tccg executable ) .", "label": "", "metadata": {}, "score": "44.169228"}
{"text": "The default rule engine is based on the standard RETE algorithm ( C.L Forgy , RETE :A fast algorithm for the many pattern / many object pattern match problem , Artificial Intelligence 1982 ) which is optimized for such incremental changes .", "label": "", "metadata": {}, "score": "44.176834"}
{"text": "The current release includes a starting set of primitives which are sufficient for the RDFS and OWL implementations but is easily extensible .A rule for the rule - based reasoner is defined by a Java Rule object with a list of body terms ( premises ) , a list of head terms ( conclusions ) and an optional name and optional direction .", "label": "", "metadata": {}, "score": "44.233604"}
{"text": "Therefore , in order to take full advantage of these results , it is necessary to display them in a format which is appropriate for the algorithm and can be easily understood by humans .Such formats can be histograms for values that change over time ( e.g. share prices ) , text for weather reports , etc .", "label": "", "metadata": {}, "score": "44.34208"}
{"text": "The provision of textual definitions is one of the OBO Foundry [ 2 ] criteria ; they are a cornerstone of making an ontology usable by its human users .By distinguishing one entity from another , a definition should promote understanding and clarity in its community of users .", "label": "", "metadata": {}, "score": "44.35512"}
{"text": "The TransitiveReasoner provides support for storing and traversing class and property lattices .This implements just the transitive and symmetric properties of rdfs : subPropertyOf and rdfs : subClassOf .It is not all that exciting on its own but is one of the building blocks used for the more complex reasoners .", "label": "", "metadata": {}, "score": "44.356567"}
{"text": "Prerequisites .In order to generate sentences ( instead of abstract sentence descriptions ) , you will need to install OpenCCG ( tested with version 0.9.5 ) .Make sure that you can call tccg from the command line , e.g. by adding the openccg / bin directory to your $ PATH .", "label": "", "metadata": {}, "score": "44.365005"}
{"text": "This allows load balancing inside the FIGENIX platform .Fault tolerance is not yet implemented but can easily be integrated to this kind of architecture .The Relational Database Management System , which is responsible for the persistence of annotation tasks ( pipelines instances ) and the genomic results produced during tasks executions , is POSTGRESQL [ 24 ] .", "label": "", "metadata": {}, "score": "44.451427"}
{"text": "Figure 2 ( panel A ) shows a similar unordered , sentence per axiom output from EFO .Table 1 gives a comparison of the systems that verbalise OWL .Ungrouped , grouped , and grouped and aggregated verbalisations of OWL descriptions .", "label": "", "metadata": {}, "score": "44.478806"}
{"text": "Correct generation of referring expressions is very important for the overall readability of a text .On the one hand , if there are ambiguities , the text will not be easily understood .On the other hand , a text which always specifies full NPs will be too repetitive .", "label": "", "metadata": {}, "score": "44.53832"}
{"text": "The N3 facts and rules are translated to Drools facts and rules , using a single Triple Java class ( see Drools engine details below ) .Cache for Drools compilations .The inconvenient with Drools is that the compilation is quite slow , and can last a few seconds , even for three rules .", "label": "", "metadata": {}, "score": "44.58759"}
{"text": "The usage is as for plain XML files ; the suffix .xsd is is recognized .SPARQL queries as N3 sources .The body of queries has a syntax similar to N3 .In EulerGUI , the result of a SPARQL query is considered as an N3 source , just like other sources ( like RDF , UML , XML ... ) .", "label": "", "metadata": {}, "score": "44.61161"}
{"text": "Thus layering is still present though you have finer grain control - all your inferences you want the RDFS / OWL rules to see should be forward , all the inferences which need all of the results of the RDFS / OWL rules should be backward .", "label": "", "metadata": {}, "score": "44.655357"}
{"text": "( use a rule in user KB ) .- in Tools menu , add an action to add in project a generated file describing RDF properties used in the project 's rules and other undefined properties and classes not found in refered ontologies ( use existing rule base rule - documentor .", "label": "", "metadata": {}, "score": "44.671738"}
{"text": "embedding in multi - media and hypertext environments .Consequently , the . automated production of language is associated with a large number of .highly diverse tasks whose appropriate orchestration in high quality . poses a variety of theoretical and practical problems .", "label": "", "metadata": {}, "score": "44.69413"}
{"text": "In order to generate sentences ( instead of abstract sentence descriptions ) , you will need to install OpenCCG ( tested with version 0.9.5 ) .Make sure that at least tccg is in your $ PATH .Under Linux , you 'd have to add something like this to your .", "label": "", "metadata": {}, "score": "44.716625"}
{"text": "As can be seen , the lexicon is reliant on the names / labels provided by the ontology builder , and uses no other source of evidence .The treatment of identifiers ( minus namespace ) and labels is slightly different , on the assumption that capital letters will be used often as word boundaries in identifiers , but not in labels .", "label": "", "metadata": {}, "score": "44.85991"}
{"text": "- search for a string in ( activated ) N3 sources .( leverage on the jEdit 's hypersearch feature : just add a parag . in doc . ) - instantiating Java objects : instead of the hard - coded stuff , use N3 rules . creating explicitly the instructions : new , method calls , and assignments ; .", "label": "", "metadata": {}, "score": "44.977844"}
{"text": "The overall structure of the inference machinery is illustrated below .Applications normally access the inference machinery by using the ModelFactory to associate a data set with some reasoner to create a new Model .Queries to the created model will return not only those statements that were present in the original data but also additional statements than can be derived from the data using the rules or other inference mechanisms implemented by the reasoner .", "label": "", "metadata": {}, "score": "45.01962"}
{"text": "The OWL Micro reasoner , which is but a small extension of RDFS , does suppor the direct queries .This does not affect querying though the Ontology API , which works around this limitation .It only affects direct RDF accesses to the inference model .", "label": "", "metadata": {}, "score": "45.03456"}
{"text": "If working with the Ontology API it is not always necessary to explicitly locate a reasoner .The prebuilt instances of OntModelSpec provide easy access to the appropriate reasoners to use for different Ontology configurations .Similarly , if all you want is a plain RDF Model with RDFS inference included then the convenience methods ModelFactory.createRDFSModel can be used .", "label": "", "metadata": {}, "score": "45.044003"}
{"text": "The correlation of an axiom in OWL and a natural language sentence is intuitive , and generating natural language statements from ontologies is a widespread approach .The task of generating texts from ontologies has been called ' ontology verbalisation ' ( see [ 10 ] ) .", "label": "", "metadata": {}, "score": "45.081528"}
{"text": "The current release includes a default OWL reasoner and two small / faster configurations .Each of the configurations is intended to be a sound implementation of a subset of OWL / full semantics but none of them is complete ( in the technical sense ) .", "label": "", "metadata": {}, "score": "45.133636"}
{"text": "The code then looks something like this : .// Create an ( RDF ) specification of a hybrid reasoner which // loads its data from an external file . rules \" ) ; .create(configuration ) ; .loadModel(\"file : data / demoData .", "label": "", "metadata": {}, "score": "45.205334"}
{"text": "Computational methods of functional annotation are mainly divided into two types : .Similarity based approaches intending to infer a function based on the pairwise similarity of a given sequence with a sequence of known function .These approaches have been criticized for their propensity of propagating annotation errors [ 2 ] deducing false homology relationships [ 3 , 4 ] , and thus producing systematic errors [ 5 ] .", "label": "", "metadata": {}, "score": "45.272194"}
{"text": "Develop a custom equality reasoner which can handle the \" owl : sameAs \" and related processing more efficiently that the plain rules engine .Tune the RETE engine to perform better with highly non - ground patterns .Tune the LP engine to further reduce memory usage ( in particular explore subsumption tabling rather than the current variant tabling ) .", "label": "", "metadata": {}, "score": "45.300137"}
{"text": "However , those example rules are overly specialized .It would be better to define a new class of property to indicate symmetric - transitive properties and and make demo : p a member of that class .We can generalize the rules to support this : .", "label": "", "metadata": {}, "score": "45.332375"}
{"text": "As a datalog language the rule syntax is a little surprising because it restricts all properties to be binary ( as in RDF ) and allows variables in any position including the property position .In effect , rules of the form : .", "label": "", "metadata": {}, "score": "45.370316"}
{"text": "The WeatherReporter is used for exemplifying the way of selecting and representing the information communicated by the system ( referred to in the book as messages ) .Important issues , like granularity and the level of abstraction of the messages , are discussed .", "label": "", "metadata": {}, "score": "45.412163"}
{"text": "In particular , the Ontology API provides convenient ways to link appropriate reasoners into the OntModel s that it constructs .As part of the general RDF API we also provide an InfModel , this is an extension to the normal Model interface that provides additional control and access to an underlying inference graph .", "label": "", "metadata": {}, "score": "45.428413"}
{"text": "4 ] ) , with rules for ( nearly ) every logical pattern in OWL - DL ; this grammar will consult the lexicon whenever it needs to express an atomic entity .As an example , here is the rule used for realising a two - argument statement with the functor equivalentClasses ; as can be seen , it presupposes a further rule for realising classes by indefinite noun phrases : .", "label": "", "metadata": {}, "score": "45.46019"}
{"text": "There are others tasks relativement independant : . can entail lots of simplifications , using reactive mixed rules , but lots of changes . set SPARQL endpoints for queries , and for storing ( also set in global configuration ) .extension points for adding features in N3 configuration file .", "label": "", "metadata": {}, "score": "45.480278"}
{"text": "The same syntax applies for associations end names , with or without cardinality : .Landlord owner 1 ---- property 1 .Also this is consistent with the idea that UMLT input should be part of a \" model shell \" , where one can enter model and facts line by line , while a diagram is populated at once for each line .", "label": "", "metadata": {}, "score": "45.51748"}
{"text": "When configured in full mode ( see below for configuration information ) then the RDFS reasoner implements all RDFS entailments except for the bNode closure rules .These closure rules imply , for example , that for all triples of the form : .", "label": "", "metadata": {}, "score": "45.53655"}
{"text": "Phylogenomic inference can be summarized into five main steps : .Creation of a dataset of sequences homologous to the sequence of interest .Multiple alignment of these sequences , with elimination of data producing bias , noise , or distorting the evolutionary signal .", "label": "", "metadata": {}, "score": "45.566994"}
{"text": "Depending on these congruence tests , conclusion could be drawn for the whole tree or only for subtrees .It also allows evaluating the reliability of the tree .In the phylogenomic inference pipeline , two EK units give to the expert system the results of NJ , MP and ML topologies comparison tests produced by the automatically launched \" TEMPLETON winning sites \" test [ 20 ] and KISHINO - HASEGAWA test [ 34 ] .", "label": "", "metadata": {}, "score": "45.570316"}
{"text": "Part of the application of ontologies in this way is to present the ontology in question in as comprehensible a manner as possible .EFO has many logical definitions , but at the start of this work had few manually written text definitions .", "label": "", "metadata": {}, "score": "45.576164"}
{"text": "where \" triple/3 \" is a hidden implicit predicate .Internally , this transformation is not actually used , instead the rules are implemented directly .In addition , all the data in the raw model supplied to the engine is treated as if it were a set of triple(s , p , o ) facts which are prepended to the front of the rule set .", "label": "", "metadata": {}, "score": "45.592667"}
{"text": "The second type of operation that is not obviously convenient at the triple level involves distinguishing between direct and indirect relationships .If a relation is transitive , for example rdfs : subClassOf , then we can define the notion of the minimal or direct form of the relationship from which all other values of the relation can be derived by transitive closure .", "label": "", "metadata": {}, "score": "45.648697"}
{"text": "b ) ( ?b eg : p ? a eg : p ?A short cut , useful when the rules are defined in local text files using the syntax described earlier , is the ruleSet parameter which gives a file name which should be loadable from either the classpath or relative to the current working directory .", "label": "", "metadata": {}, "score": "45.669968"}
{"text": "None .FIGENIX 's phylogenomic inference pipeline also has specific differences with each of the two methods ( Table 8 ) .None of the compared methods already available propose functionalities such as for example the fusion of trees constructed by different methods , tests on domains and repeats congruence and their evolutionary behavior .", "label": "", "metadata": {}, "score": "45.673786"}
{"text": "However , in some cases , such when as building a hierarchical UI widget to represent the graph , it is more convenient to only see the direct relations ( iii ) .This is achieved by defining special direct aliases for those relations which can be queried this way .", "label": "", "metadata": {}, "score": "45.729126"}
{"text": "- add statistics for sources as tooltips ( or in another tab ) : # of triples , and rules .- check linguistic quality : detect misspellings , etc ... .- search in all sources : literal , URI , blank node , or variable ; .", "label": "", "metadata": {}, "score": "45.73343"}
{"text": "In this case , the fusion is done on the NJ topology ( branches ' lengths can be displayed but are not shown here to keep the tree easily readable ) .That means that topologies are strongly congruent .The bootstrap values are given for the three methods when a node exists as identical in the three trees .", "label": "", "metadata": {}, "score": "45.767548"}
{"text": "We apply rules for grouping and aggregation [ 28 ] , using generic methods applicable to any ontology , so as to provide coherent descriptions for each class ( or individual or property ) .From a computational linguistics perspective , ontology verbalisation has some unusual features .", "label": "", "metadata": {}, "score": "45.809998"}
{"text": "The hybrid rule system allows us to get round this by using forward rules to recognize any demo : TransProp declarations once and to generate the appropriate backward rules : .[ rule1 : ( ?X ?P ?Y ?", "label": "", "metadata": {}, "score": "45.831345"}
{"text": "One other respondant gave scores of 1 - 3 , but no comments .Table 4 includes all responses and even when including these two outliers , the responses appear to have shown an improvement on the first survey .The results from the first part of the second survey suggested that the simple improvements made to the NLG tool had removed some of the prior issues raised , although other difficulties still remained : .", "label": "", "metadata": {}, "score": "45.85444"}
{"text": "However , the machinery is designed to be quite general and , in particular , it includes a generic rule engine that can be used for many RDF processing or transformation tasks .We will try to use the term inference to refer to the abstract process of deriving additional information and the term reasoner to refer to a specific code object that performs this task .", "label": "", "metadata": {}, "score": "45.908653"}
{"text": "Whereas using the triple - based approach we can only ask if there are any instances of some class already defined ( though it could be defined by a bNode rather than be explicitly named ) .To overcome this limitation the InfModel API supports a notion of \" posit \" , that is a set of assertions which can be used to temporarily declare new information such as the definition of some class expression .", "label": "", "metadata": {}, "score": "45.93027"}
{"text": "pdf .Piwek , P. and K. van Deemter ( 2006 ) .Constraint - based Natural Language Generation : A Survey .Technical Report 2006/03 , Computing Department , The Open University .pdf bib .Tutorials .Dale & Reiter 's ANLP-97 Tutorial on Building Applied Natural Language Generation Systems .", "label": "", "metadata": {}, "score": "45.964336"}
{"text": "Internally everything is expressed in N3 syntax , being a convergence language that allows to express data ( facts ) , classes and properties , and rules .N3 is the main language for the Semantic Web , being much more readable and concise than RDF ( Resource Description Format ) .", "label": "", "metadata": {}, "score": "46.10427"}
{"text": "In verbalising any ontology we aim for texts that are useful and understandable , but not necessarily of the highest quality , using methods that are domain - general .The challenge is thus to find generic techniques for : . grouping related axioms on the same class ; . realising logical patterns in English ; . aggregating axioms sharing a common pattern , such as use of the same property , so that they can be expressed efficiently in a single sentence , and . inferring lexical entries for atomic entities ( classes and properties ) from identifiers and labels in the ontology , with due attention to details like correct parts of speech and plural forms .", "label": "", "metadata": {}, "score": "46.111465"}
{"text": "Background .This paper presents a prototype tool for generating textual definitions for an ontology from logical definitions using the Experimental Factor Ontology ( EFO ) [ 1 ] as a case study .The heart of ontology building is the definition of entities in a domain .", "label": "", "metadata": {}, "score": "46.11322"}
{"text": "Constructing a lexicon .In this stage , labelled ' Lexicon Generator ' in Figure 4 , a provisional lexical entry is computed for each entity identifier .To do this , the program first checks whether a label is provided in an annotation assertion ; if so , the lexical entry is based on this label , otherwise it is based on the identifier itself .", "label": "", "metadata": {}, "score": "46.174698"}
{"text": "The knowledge to be modeled and the different possible cases are shown in Table 3 and Table 4 , and the corresponding PROLOG code is shown and commented on Appendix 1 .T indicates support from Templeton test .K indicates support from Kishino - HaseGawa test . \" best \" tree if the same in the two tests with congruent tree labeled : pl or lp or nl or ln or np or pn .", "label": "", "metadata": {}, "score": "46.212013"}
{"text": "This gathers all the sentences pertinent to genetic disorder into one place .The right - hand box ( C ) shows the aggregated version of the grouped output .The repetition of the subclass axioms is replaced by a list construct .", "label": "", "metadata": {}, "score": "46.258175"}
{"text": "For example , if we were to listStatements on inf Model we would see that it also \" includes \" all the RDFS axioms , of which there are quite a lot .It is sometimes useful to suppress these and only see the \" interesting \" entailments .", "label": "", "metadata": {}, "score": "46.267357"}
{"text": "As expected , the most concise aggregated form ( Q13d ) was judged most natural to read , although less faithful to OWL .One of the aggregated forms ( Q13c ) had a serious structural ambiguity which participants apparently detected , since they all rejected it .", "label": "", "metadata": {}, "score": "46.27658"}
{"text": "This should be called before any queries are made to the inference model .As an illustration suppose that we have a raw data model which asserts three triples : . and suppose that we have a trivial rule set which computes the transitive closure over relation eg : p .", "label": "", "metadata": {}, "score": "46.278137"}
{"text": "THIS IS WORK IN PROGRESS .We already have with the D\u00e9ductions form generator a means of leveraging OWL models .But now writing a model becomes a bottleneck in the software process .The N3 language is much more compact and human readable than RDF / XML but , inspired by UML class diagrams , we come with a syntax even more compact .", "label": "", "metadata": {}, "score": "46.279556"}
{"text": "We provide three implementations a default ( \" full \" one ) , a slightly cut down \" mini \" and a rather smaller / faster \" micro \" .The default OWL rule reasoner ( ReasonerRegistry.getOWLReasoner ( ) ) supports the constructs as listed below .", "label": "", "metadata": {}, "score": "46.28942"}
{"text": "LINGUIST List 12.786 .We d Mar 21 2001 .Review : Reiter and Dale : Generation Systems .What follows is another discussion note contributed to our Book Discussion Forum .We expect these discussions to be informal and interactive ; and the author of the book discussed is cordially invited to join in .", "label": "", "metadata": {}, "score": "46.346264"}
{"text": "The database module handles the user input , queries the database and returns the results .facts converts those results into attribute value matrices .The propositions module evaluates those facts ( positive , negative , neutral ) .The textplan module takes those propositions and turns them into messages .", "label": "", "metadata": {}, "score": "46.394997"}
{"text": "The database module handles the user input , queries the database and returns the results .facts converts those results into attribute value matrices .The propositions module evaluates those facts ( positive , negative , neutral ) .The textplan module takes those propositions and turns them into messages .", "label": "", "metadata": {}, "score": "46.394997"}
{"text": "2007 , Association for Computational Linguistics , 69 - 72 .full_text .View Article .Funk A , Tablan V , Bontcheva K , Cunningham H , Davis B , Handschuh S : CLOnE : Controlled Language for Ontology Editing .", "label": "", "metadata": {}, "score": "46.407272"}
{"text": "It also generates type assertions for all resources and properties mentioned in the data ( rdf1 , rdfs4a , rdfs4b ) .Default .This omits the expensive checks for container membership properties and the \" everything is a resource \" and \" everything used as a property is one \" rules ( rdf1 , rdfs4a , rdfs4b ) .", "label": "", "metadata": {}, "score": "46.536644"}
{"text": "Users can propose a given application not currently available in FIGENIX to be included as a new A - unit .This allows for example to substitute a new more accurate or more adapted application to the application currently used in the available pipeline .", "label": "", "metadata": {}, "score": "46.609863"}
{"text": "Selecting the axioms relevant for describing each class .Aggregating axioms with a similar structure .Generating sentences from ( possibly aggregated ) axioms .The architecture of the system ( somewhat simplified ) is shown in Figure 4 .In this diagram , rectangles denote data files , including the input ( an OWL file ) and the output ( a text file ) , as well as various Prolog files computed along the way ( e.g. , the lexicon ) .", "label": "", "metadata": {}, "score": "46.61029"}
{"text": "The grammar of the program was substantially extended to cover not only EL + + but most of OWL-2 .We divided this second survey into two parts .In the first part we selected 10 generated descriptions , as before , to cover a wide range of property types and wordings , and asked the participants whether the generated English accurately captured the meaning of the OWL axioms .", "label": "", "metadata": {}, "score": "46.65425"}
{"text": "An ontology which is logically consistent but contains empty classes is regarded as valid ( that is isValid ( ) is false only if there is a logical inconsistency ) .Class expressions which can not be instantiated are treated as warnings rather than errors .", "label": "", "metadata": {}, "score": "46.73307"}
{"text": "For each domain alignment ( extracted from the original alignment ) , a bias correction phase is run , to eliminate : - Non - monophyletic \" repeats \" in a tree built with NJ [ 31 ] algorithm on CLUSTALW software . -", "label": "", "metadata": {}, "score": "46.744198"}
{"text": "LIMITATIONS .the right hand side ( RHS , consequence ) of the rule is not taken in account , the resul is determined by the antecedent .only a single implication per search file is allowed ( but possibly its LHS can have several triples ) .", "label": "", "metadata": {}, "score": "46.780098"}
{"text": "The inference engine result , if any , can be exported as XML by clicking on the third \" smile \" button on top right of the window .An example of a project exportable as XML is kml_n3 .n3p .", "label": "", "metadata": {}, "score": "46.820107"}
{"text": "In the case of the Drools engine , the N3/RDF / OWL Knowledge Base is stateful and dynamic .This means that every time you fire rules with the Drools button , all consequences of new facts ( and new rules by the way ) are added to the KB .", "label": "", "metadata": {}, "score": "46.830925"}
{"text": "Rule files may be loaded and parsed using : . or . or .In the first two cases ( reading from a URL or a BufferedReader ) the rule file is preprocessed by a simple processor which strips comments and supports some additional macro commands : .", "label": "", "metadata": {}, "score": "46.949745"}
{"text": "PROPenableTGCCaching .If true , causes an instance of the TransitiveReasoner to be inserted in the forward dataflow to cache the transitive closure of the subProperty and subClass lattices .PROPenableFunctorFiltering .If set to true , this causes the structured literals ( functors ) generated by rules to be filtered out of any final queries .", "label": "", "metadata": {}, "score": "46.976795"}
{"text": "When launching one of the rule engines , the effect is as if all the N3 sources of all the sub - projects were in the main project .Adding a sub - project is achieved by clicking on entry \" Import project ... \" or Import project from URL ... \" in \" File \" pulldown menu .", "label": "", "metadata": {}, "score": "47.062954"}
{"text": "We used a simple evaluation strategy of generating textual definitions from EFO and then showing them to potential EFO users for comment .We did two passes at this evaluation .From the observations made during the first pass , changes were made to the generation program that produced the definitions ; these were then presented in the second pass .", "label": "", "metadata": {}, "score": "47.092445"}
{"text": "This is probably the most useful mode but is not the default because it is a less complete implementation of the standard . reasoner . setParameter ( ReasonerVocabulary .PROPsetRDFSLevel , ReasonerVocabulary .RDFS_SIMPLE ) ; . or by constructing an RDF configuration description and passing that to the RDFSRuleReasonerFactory e.g. . createDefaultModel ( ) .", "label": "", "metadata": {}, "score": "47.1367"}
{"text": "Whereas the first two chapters are rather general introductions to the natural language generation field , chapter three presents the main concern of the book : the building of NLG systems .Given the complexity of this task , the advantages of a pipeline modular architecture are discussed .", "label": "", "metadata": {}, "score": "47.16954"}
{"text": "It there are any outstanding queries ( i.e. StmtIterators which have not been read to the end yet ) then those will be aborted ( the next hasNext( ) call will return false ) .When developing new reasoner configurations , especially new rule sets for the rule engines , it is sometimes useful to be able to trace the operations of the associated inference engine .", "label": "", "metadata": {}, "score": "47.19063"}
{"text": "With regards to Homologene , the problem is different ; it allows multiple species comparisons but the system is unable in a non - negligible proportion to provide all the orthologs that would be found through a phylogenetic reconstruction .What is more this system does not consider phylum - specific duplications and is unable to predict paralogy and co - orthology relationships .", "label": "", "metadata": {}, "score": "47.293144"}
{"text": "These two approaches also have specific limitations .For example , Inparanoid only allows two by two comparisons of proteomes and requires that genomes compared are fully sequenced and annotated with high quality , which reduces the scope of usable data .", "label": "", "metadata": {}, "score": "47.29988"}
{"text": "The rules in D\u00e9ductions are of course developed using EulerGUI .EulerGUI also aims to become a lightweight IDE for Artificial Intelligence ; N3 is able to represent full First Order Logic , and we plan to add more formats in input and output : TPTP , KIF , CLIPS , pure Prolog , and more reasonning engines like Prover9 .", "label": "", "metadata": {}, "score": "47.362915"}
{"text": "The application is now available as a web service [ 34 ] .The architecture of the OWL verbaliser .Architecture of the natural language definition generator .Transcoding to Prolog .This stage covers the processes called ' Transcoder ' , ' Identifier selector ' and ' Label selector ' in Figure 4 .", "label": "", "metadata": {}, "score": "47.392868"}
{"text": "The tabled results of each query are kept indefinitely .This means that queries can exploit all of the results of the subgoals involved in previous queries .In essence we build up a closure of the data set in response to successive queries .", "label": "", "metadata": {}, "score": "47.394035"}
{"text": "The browser window shows a Web page with part of an automatically generated functional report .One of the orthologs ( NTC1_MOUSE ) to the query sequence ( NOTCH_HSA ) is shown , including some associated functional terms .At the end of each phylogenomic pipeline ( Figure 5 ) , after orthologs detection was produced on the consensus tree , an additional process is run .", "label": "", "metadata": {}, "score": "47.555023"}
{"text": "If it is a local N3 file , it returns the local N3 file .And if it is a true N3 document from the Web , the full URI is returned .Using other API included in EulerGUI .Interpret Java instantiations and calls in N3 sources .", "label": "", "metadata": {}, "score": "47.629086"}
{"text": "- saving an N3 on the network ?Webdav ?FTP ? - \" exporting \" the project as an URL - encoded string , . ready for use with Codd portal .For that there could be an URL prefix in the GUI config .", "label": "", "metadata": {}, "score": "47.641953"}
{"text": "Any rules which fire that create additional triples do so in an internal deductions graph and can in turn trigger additional rules .There is a remove primitive that can be used to remove triples and such removals can also trigger rules to fire in removal mode .", "label": "", "metadata": {}, "score": "47.678127"}
{"text": "We have started to explore the appropriateness of our verbalisations for natural language definitions with informal surveys of potential users .The results already look promising and presentation of generated text definitions to users has suggested ways in which our techniques can be improved .", "label": "", "metadata": {}, "score": "47.723915"}
{"text": "- open one or more existing N3 files and make a project of it by D'n'D : ? - enhance link to Pellet : also classify instances .- maintain a list of problems from Pellet , from special N3 rules ) .", "label": "", "metadata": {}, "score": "47.744225"}
{"text": "The general form of the Derivation objects is quite abstract but in the case of the rule - based reasoners they have a more detailed internal structure that can be accessed - see RuleDerivation .Derviation information is rather expensive to compute and store .", "label": "", "metadata": {}, "score": "47.761345"}
{"text": "A builtin should implement the Builtin interface .The easiest way to achieve this is by subclassing BaseBuiltin and defining a name ( getName ) , the number of arguments expected ( getArgLength ) and one or both of bodyCall and headAction .", "label": "", "metadata": {}, "score": "47.780228"}
{"text": "Even within these constructs rule based implementations are limited in the extent to which they can handle equality reasoning - propositions provable by reasoning over concrete and introduced instances are covered but reasoning by cases is not supported .Nevertheless , the full reasoner passes the normative OWL working group positive and negative entailment tests for the supported constructs , though some tests need modification for the comprehension axioms ( see below ) .", "label": "", "metadata": {}, "score": "47.82705"}
{"text": "This language is very well adapted to data structures like lists and trees .In bioinformatics solutions , these kinds of structure are numerous and common .In a natural way , a PROLOG engine ( interpreter ) works in \" backward chaining \" mode , i.e. like a predicate verifier and not like a facts producer ( \" forward chaining \" ) .", "label": "", "metadata": {}, "score": "47.94377"}
{"text": "generate a Java object graph from special N3 triples ( there would be a N3 rule set . to translate the project file N3 vocabulary to a Java object graph .WORK IN PROGRESS , see rules in eulergui / site / rules ) .", "label": "", "metadata": {}, "score": "47.953354"}
{"text": "Once this has been developed in the GUI , the project ( minus step 1 ) can be reused in any Java application by adding a few lines of code ( see Using the EulerGUI API ) .Export as anything .", "label": "", "metadata": {}, "score": "47.959908"}
{"text": "In contrast , in the MAGPIE system , computations are done independently on asynchronously incoming data and a PROLOG daemon produces logical deductions , verifying them on the \" from data \" computed results .Other major differences in the concept and architecture of these two systems can be listed .", "label": "", "metadata": {}, "score": "48.078987"}
{"text": "Expert system usefulness examples .To illustrate the importance of a rules - based system , we selected two key examples in which the expert system substitutes for human expertise to take important decisions , to compare intermediate results , or deduce biological information .", "label": "", "metadata": {}, "score": "48.1674"}
{"text": "Specific differences between FIGENIX 's phylogenomic inference pipeline and other software .Choice of reconstruction method ( NJ by default ) but only one method at a time and no fusion with multiple methods .Comparison of the consensus tree with NCBI reference tree of life containing around 200,000 taxa .", "label": "", "metadata": {}, "score": "48.17093"}
{"text": "A \" Repository \" centralizes information concerning operating conditions of FIGENIX ( e.g. the load balancing ticket between \" Annotation Engines \" ) .The \" Annotation Engine \" is a component able to execute several annotation tasks at the same time ( multi - threading ) and , thus , to drive several pipelines .", "label": "", "metadata": {}, "score": "48.298073"}
{"text": "Once you have an instance of a reasoner it can then be attached to a set of RDF data to create an inference model .This can either be done by putting all the RDF data into one Model or by separating into two components - schema and instance data .", "label": "", "metadata": {}, "score": "48.3042"}
{"text": "Horrocks I : Ontologies and the semantic web .Communications of the ACM .View Article .Wroe C , Stevens R , Goble C , Ashburner M : A Methodology to Migrate the Gene Ontology to a Description Logic Environment Using DAML+OIL .", "label": "", "metadata": {}, "score": "48.396492"}
{"text": "Burge C , Karlin S : Prediction of complete gene structures in human genomic DNA .J Mol Biol 1997 , 268 : 78 - 94 .View Article PubMed .Krogh A : Two methods for improving performance of an HMM and their application for gene finding .", "label": "", "metadata": {}, "score": "48.450165"}
{"text": "PROPenableOWLTranslation .Boolean .If set to true this causes a procedural preprocessing step to be inserted in the dataflow which supports the OWL reasoner ( it translates intersectionOf clauses into groups of backward rules in a way that is clumsy to express in pure rule form ) .", "label": "", "metadata": {}, "score": "48.45114"}
{"text": "this one is a nice feature that rises architectural questions : . - helper for simple queries ( by subject , property , or object , or by class ) ; . - show triples as table ( all triples for same class on one table , .", "label": "", "metadata": {}, "score": "48.544186"}
{"text": "Chapter 4 details the first module of a NLG system : the document planner .The document planner is responsible for deciding which information is communicated and determine how this information should be structured for presentation .Two submodules are used : content determination and document structuring .", "label": "", "metadata": {}, "score": "48.546234"}
{"text": "The annotation of whole eukaryotic genomes would probably need more computational power .However , the global architecture of the platform has been designed to support multiple CPU and can thus potentially handle annotation of whole genomes with appropriate computational power .", "label": "", "metadata": {}, "score": "48.5783"}
{"text": "For example this starts the \" person \" generated application : .Inference engines .On top of the above advantages , EulerGUI framework adds the following : . integration with Semantic Web standards and SPARQL ; . integration with W3C 's OWL ontology recommandation , SWRL rule language , and consequently with ATTEMPTO Controled English .", "label": "", "metadata": {}, "score": "48.580677"}
{"text": "( boundReasoner , data ) ; .This creates a new reasoner , independent from the original , which contains the schema data .Any queries to an InfModel created using the boundReasoner will see the schema statements , the data statements and any statements entailed from the combination of the two .", "label": "", "metadata": {}, "score": "48.59659"}
{"text": "Each primitive can optionally be used in either the rule body , the rule head or both .If used in the rule body then as well as binding variables ( and any procedural side - effects like printing ) the primitive can act as a test - if it returns false the rule will not match .", "label": "", "metadata": {}, "score": "48.630585"}
{"text": "The RDFSRuleReasoner can be configured to work at three different compliance levels : .Full .This implements all of the RDFS axioms and closure rules with the exception of bNode entailments and datatypes ( rdfD 1 ) .See above for comments on these .", "label": "", "metadata": {}, "score": "48.73237"}
{"text": "Others ( e.g. the OWL reasoner ) does so using yet more rules .Validation rules take the general form : .First the validate call with \" switch on \" validation by insert an additional triple into the graph of the form : .", "label": "", "metadata": {}, "score": "48.741753"}
{"text": "Davis B , Iqbal AA , Funk A , Tablan V , Bontcheva K , Cunningham H , Handschuh S : RoundTrip Ontology Authoring .International Semantic Web Conference .Bontcheva K , Wilks Y : Automatic Report Generation from Ontologies : The MIAKT Approach .", "label": "", "metadata": {}, "score": "48.849678"}
{"text": "Affiliated with .Abstract .Background .Text definitions for entities within bio - ontologies are a cornerstone of the effort to gain a consensus in understanding and usage of those ontologies .Writing these definitions is , however , a considerable effort and there is often a lag between specification of the main part of an ontology ( logical descriptions and definitions of entities ) and the development of the text - based definitions .", "label": "", "metadata": {}, "score": "48.94265"}
{"text": "S ?P ?X. ?X ?P ?S ?P ?I did a hand translation into Drools of this N3 .One can see that N3 is more compact than Drools .An annoying thing is that implicit variable binding is not allowed in Drools , which makes it less declarative than N3 and Prolog , and complicates the translation .", "label": "", "metadata": {}, "score": "48.986744"}
{"text": "The code written by hand that remains is : .Point 1 has to be implemented by hand , but in many cases it amounts to retrieve the recursive closure of order 1 or 2 from a resource(s ) of interest .", "label": "", "metadata": {}, "score": "48.987465"}
{"text": "When a goal is tabled then all previously computed matches to that goal are recorded ( memoized ) and used when satisfying future similar goals .When such a tabled goal is called and all known answers have been consumed then the goal will suspend until some other execution branch has generated new results and then be resumed .", "label": "", "metadata": {}, "score": "49.042046"}
{"text": "By comparing topologies of these trees with PSCORE command ( \" Templeton winning sites \" test ) from PAUP package and KISHINO - HASEGAWA [ 34 ] test from TREE - PUZZLE package , fusion of these trees in a unique consensus tree is produced .", "label": "", "metadata": {}, "score": "49.13165"}
{"text": "For example , for an RDF graph representing an XHTML document , like simple.html.n3 , this predicate : . will be recognized as the root for the conversion to XML .Note that this does not have to be the first in the N3 document .", "label": "", "metadata": {}, "score": "49.193436"}
{"text": "No XML Schema is necessary , but when present , the translation is better .The ORIG . button to the far right gives access to the original XML document ( the button may not be visible readily , but you can make the window wider to reveal it ) .", "label": "", "metadata": {}, "score": "49.23058"}
{"text": "Results .Here we propose an innovative automated platform , FIGENIX , which includes an expert system capable to substitute to human expertise at several key steps .FIGENIX currently automates complex pipelines of structural and functional annotation under the supervision of the expert system ( which allows for example to make key decisions , check intermediate results or refine the dataset ) .", "label": "", "metadata": {}, "score": "49.23445"}
{"text": "New versions of applications ( such as BLAST , or HMMPFAM ) are not directly and automatically updated in FIGENIX , they are first tested , validated and if needed adapted ( due to possible changes in the input / output formats ) .", "label": "", "metadata": {}, "score": "49.234535"}
{"text": "References .Mathe C , Sagot MF , Schiex T , Rouze P : Current methods of gene prediction , their strengths and weaknesses .Nucleic Acids Res 2002 , 30 : 4103 - 4117 .View Article PubMed .Gilks WR , Audit B , De Angelis D , Tsoka S , Ouzounis CA : Modeling the percolation of annotation errors in a database of protein sequences .", "label": "", "metadata": {}, "score": "49.297295"}
{"text": "Translating N3 into Drools language .Forward chaining engine and First Order Logic .Drools is a forward chaining engine in Java , using the famous RETE algorithm .Compared to a full First Order Logic engine like Euler SEM or Prover9 , there is a loss in expressivity : . impossibility to have disjunctions in consequent .", "label": "", "metadata": {}, "score": "49.37377"}
{"text": "Our initial verbalisations made the OWL semantics explicit ( for example , by saying ' Every cell line is ... ' ) .This was found to be obstructive to understanding and we replaced it with a simple ' A cell line is ... ' formulation .", "label": "", "metadata": {}, "score": "49.453926"}
{"text": "This last category of steps accounted to date for the main difficulties in automating pipelines such as the one described here in their whole complexity .Results and discussion .Results .FIGENIX currently proposes 8 pipeline models allowing both structural and functional annotation .", "label": "", "metadata": {}, "score": "49.466393"}
{"text": "Clicking on a class in this tree view brings an input form for an instance of the class , using rules from D\u00e9ductions project , see \" Generated Swing applications \" .It allows to see the properties directly connected to a class , by properties ' domain and recusively by RDF sub - class relations .", "label": "", "metadata": {}, "score": "49.495304"}
{"text": "However , it has limitations compared to the Drools engine : creation of blank nodes step by step , like like when creating a form from a model , generally does not work and ends with a message : .Also Euler does not store a state ; it has no truth maintenance capabilities like Drools .", "label": "", "metadata": {}, "score": "49.564774"}
{"text": "As such , a definition states how an entity can be distinguished or recognised from other entities .Such definitions come in two styles with a common core aim : natural language or text definitions of an entity and logical definitions of an entity .", "label": "", "metadata": {}, "score": "49.623104"}
{"text": "First , fill the semantic gap by one ( or several ) N3 rule base realizing a transform of graph structures .Then the final step consists of applying the e : format builtin ( currently only in Euler engine ) , to output the desired character string .", "label": "", "metadata": {}, "score": "49.64287"}
{"text": "- Evaluation of NLG systems .Evaluation is an important factor for all NL systems , which is . notoriously underrepresented in the generation field .By focusing on .this topic , we hope to strengthen the empirical basis of NLG , .", "label": "", "metadata": {}, "score": "49.66108"}
{"text": "Otherwise , schema locations for well - known Schemata are hard - coded into EulerGUI ; the current known Schemata are defined here as a Map from namespaces to Schema locations in XMLSchemaCatalog.java .We took inspiration from these nice Wikipedia List_of_XML_schemas , and List_of_XML_markup_languages .", "label": "", "metadata": {}, "score": "49.67748"}
{"text": "Participants were also able to add specific comments to each definition .Survey 2 .The second survey was split into two parts .In the first part , a sample of 10 definitions was again selected based on the widest range of axioms ( i.e. number and type on each class ) .", "label": "", "metadata": {}, "score": "49.70038"}
{"text": "We used the same approach for all software ( gene prediction , domain detection , phylogenetic reconstruction , multiple alignment ... ) .Plugging of existing software without modification in our pipelines , allows us to use the most advanced bioinformatics software research development , with a very easy maintenance .", "label": "", "metadata": {}, "score": "49.71689"}
{"text": "With the ITripleStoreRETE object ( alias KB ) , you have total control on adding , removing , updating triples , launching inference , and query ; for example : .// adding an RDF triple in N3 ; the N3 syntax is used for each term , for instance here a string literal is between \" \" .", "label": "", "metadata": {}, "score": "49.718193"}
{"text": "Here is an overall data flow diagram including both inputs and inference engines : .The first row represents data formats .The arrow 1 is implemeted by ATTEMPTO .The arrow 2 is done by an N3 rule base applied in EulerGUI .", "label": "", "metadata": {}, "score": "49.79001"}
{"text": "We expect this situation where natural language definitions lag behind logical definitions to be prevalent in many ontologies that use this approach .Although capturing definitions in OWL statements is powerful , such formal language can be confusing to a user not familiar with OWL [ 9 ] .", "label": "", "metadata": {}, "score": "49.88329"}
{"text": "This was in reality an oversight , applying to labels a word division method ( based on capitalisation ) that is appropriate only for identifiers like # PartOf .This highlights the importance of paying attention to conventions of domain language , and was corrected in the program that generated the materials for Survey 2 .", "label": "", "metadata": {}, "score": "49.90055"}
{"text": "The Jena architecture makes it easy to construct such models but in the absence of caching we would expect the performance to be poor .Future work on adapting the rule engines to exploit the capabilities of the more sophisticated database backends will be considered .", "label": "", "metadata": {}, "score": "49.917015"}
{"text": "Apply the GenePredix pipeline on a sliding window .PhyloGenix : .Composition of GenePredix and ProtPhyloGenix pipelines .This model allows automatic structural and functional annotation of DNA sequences .Indeed it produces gene prediction in DNA sequences using GenePredix , and then performs phylogenomic functional inference for each putative gene using ProtPhyloGenix .", "label": "", "metadata": {}, "score": "49.92791"}
{"text": "The Model part are the facts inserted in the KB : triples for business facts , ordinary Java objects for the infrastructure .The Controler part are the rules , both business rules manipulating business facts , and mixed rules querying business facts and changing Java objects on the consequent side ( LHS ) of the rules .", "label": "", "metadata": {}, "score": "49.961227"}
{"text": "In fact a SPARQL query is semanticaly like an N3 search of an EulerGUI project .The difference is that a SPARQL query operates on an external RDF endpoint , whereas an N3 search operates on the whole RDF graph of the current project .", "label": "", "metadata": {}, "score": "50.00039"}
{"text": "This could be fixed .strConcat ( ?a1 , . an , ? t ) uriConcat ( ?a1 , . an , ? t ) .Concatenates the lexical form of all the arguments except the last , then binds the last argument to a plain literal ( strConcat ) or a URI node ( uriConcat ) with that lexical form .", "label": "", "metadata": {}, "score": "50.09365"}
{"text": "The results of the two surveys are not directly comparable as the style of evaluation and questions asked were not the same in each survey .However , it was noticeable that some of the criticisms in the first survey were not repeated in the second , suggesting some of these earlier problems had been resolved .", "label": "", "metadata": {}, "score": "50.111237"}
{"text": "Fuxi is also using a RETE engine to run N3 rules , so it 's really comparable to EulerGUI 's Drools engine .re - use a project like above .An article by the author of FuXi : mapping - rete - algorithm - to - fol - and - then - to - rdf .", "label": "", "metadata": {}, "score": "50.17803"}
{"text": "On . the other hand , SETIT will present future innovations .Conference topics : .Information Processing .Information Fusion , Neuronal Networks and Fuzzy Logic , .Rationing Methods , Data mining , .Signal Processing .Statistical Analysis , Signal Processing , .", "label": "", "metadata": {}, "score": "50.209732"}
{"text": "( In cwm , variables must of course end up getting bound before the log : include test can be done , or an infinite result set would result )Related : See includes .Euler built - ins .Below , the builtins implemented in the EulerGUI Drools N3 engine are highlighted .", "label": "", "metadata": {}, "score": "50.248264"}
{"text": "\" K \" indicates support from Kishino - HaseGawa test . \"A \" means support from all the tests .Suffix \" 1 \" indicates full congruence , \" 2 \" partial congruence , \" 3 \" non congruence .Example 2 : multiple alignment masking for sites not evolving under neutrality .", "label": "", "metadata": {}, "score": "50.301464"}
{"text": "use them ; some \" define \" I d 's in subject position , others \" use \" them in object position ; . also rule dependencies : some sources have property P1 in consequent , while others . have property P1 in antecedent .", "label": "", "metadata": {}, "score": "50.35936"}
{"text": "EFO uses the Web Ontology Language ( OWL ) [ 8 ] to produce a rich , axiomatic description of classes in the domain .The Gene Expression Atlas at EBI has successfully applied EFO in exactly this manner ; curated data are annotated with ontology terms and the axiomatisation is used to drive querying [ 7 ] .", "label": "", "metadata": {}, "score": "50.37516"}
{"text": "CLASS .CLASS app : subClassOrSameClass ?CLASS . - BUG : test with log : dtlit does not compile with Drools , . transtype from a variable .- find how to work with rules for generating XML , especially generate . ordered lists .", "label": "", "metadata": {}, "score": "50.428288"}
{"text": "As with the other reasoners there are a set of parameters , identified by RDF properties , to control behaviour of the GenericRuleReasoner .These parameters can be set using the Reasoner.setParameter call or passed into the Reasoner factory in an RDF Model .", "label": "", "metadata": {}, "score": "50.526127"}
{"text": "Their role is to \" substitute to \" human expertise and \" memory \" .Some of them keep information necessary for later reasoning , they are named expert knowledge units , or EK - units .Others take decisions concerning stream direction inside the graph or produce , on output stream , new data resulting from the analysis of the current situation in the data world of the task .", "label": "", "metadata": {}, "score": "50.552967"}
{"text": "getDerivation ( s ) ; i d .next ( ) ; deriv . flush ( ) ; .Which generates the output : .From an InfModel it is easy to retrieve the original , unchanged , data over which the model has been computed using the getRawModel ( ) call .", "label": "", "metadata": {}, "score": "50.571762"}
{"text": "On importing XML , Gloze is using a no schema mapping for elements that have no XML Schema information .This is quite satisfactory .Moreover , when XML Schema information is present , Gloze is able to add class information ( RDF type ) .", "label": "", "metadata": {}, "score": "50.61709"}
{"text": "( true ) ; // not needed in RDFS case reasoner . createInfModel( reasoner , data ) ; .Where the myrules.rules file will use @include to include one of the RDFS or OWL rule sets .One useful variant on this option , at least in simple cases , is to manually include a pure ( non - hybrid ) ruleset for the RDFS / OWL fragment you want so that there is no layering problem .", "label": "", "metadata": {}, "score": "50.63999"}
{"text": "Unit 's jobs can be executed in a parallel mode .This kind of parallelism , with explicit and large granularity , at the unit 's level , allows us to benefit from multi - processors hardware architecture , and also , by an appropriate deployment , from distribution on several CPUs .", "label": "", "metadata": {}, "score": "50.67232"}
{"text": "The full and mini configurations omit some of the performance tricks employed by the RDFS reasoner ( notably the use of the custom transitive reasoner ) making those OWL reasoner configurations slower than the RDFS reasoner on pure RDFS data ( typically around x3 - 4 slow down ) .", "label": "", "metadata": {}, "score": "50.807426"}
{"text": "The specialized reasoner can then be attached to different sets of instance data using bind calls .In situations where the same schema information is to be used multiple times with different sets of instance data then this technique allows for some reuse of inferences across the different uses of the schema .", "label": "", "metadata": {}, "score": "50.871353"}
{"text": "There is no need to generate POJO Java classes from the OWL model .This feature allows to keep business rules written 100 % in N3 and OWL , while other rules ( \" mixed rules \" ) have Java instantiation , property or method calls in their consequence side .", "label": "", "metadata": {}, "score": "50.885338"}
{"text": "They thus propose notable improvements to similarity based approaches and allow high throughput phylogenetic analysis .Existing methods propose either only one reconstruction method ( NJ for RIO ) or choice between several methods but only one by task and no comparison between multiple methods ( PhyloGenie ) .", "label": "", "metadata": {}, "score": "50.985893"}
{"text": "Rules will be used to combine those message into constituent sets and ultimately into one text plan .The textplan module also allows exporting those text plans in XML format .The rules module contains the rules used by be the textplan module to combine messages into constituent sets and textplans , respectively .", "label": "", "metadata": {}, "score": "50.988625"}
{"text": "Rules will be used to combine those message into constituent sets and ultimately into one text plan .The textplan module also allows exporting those text plans in XML format .The rules module contains the rules used by be the textplan module to combine messages into constituent sets and textplans , respectively .", "label": "", "metadata": {}, "score": "50.988625"}
{"text": "PubMed .Thompson JD , Higgins DG , Gibson TJ : CLUSTAL W : improving the sensitivity of progressive multiple sequence alignment through sequence weighting , position - specific gap penalties and weight matrix choice .Nucleic Acids Res 1994 , 22 : 4673 - 4680 .", "label": "", "metadata": {}, "score": "51.019035"}
{"text": "We are considering organizing an invited talk on the first and a panel .on the second topic .Substantial and original submissions on all . subfields of NLG , especially on the two special topics , are welcome .Accepted papers will be scheduled for presentation .", "label": "", "metadata": {}, "score": "51.02137"}
{"text": "It has a Maven repo ! - leverage LOD specifications to facilitate data discovery ( VOID ontology , etc ; to explore ) .See , related : \" Discovering Linked Data on the Web \" , and CKAN , CKAN API . -", "label": "", "metadata": {}, "score": "51.069935"}
{"text": "# etc ... .For the UML decorations , like cardinality and names of association ends , we thought at first about this syntax , which looks like real class diagrams : .Then we thought that this is not easy to type .", "label": "", "metadata": {}, "score": "51.081806"}
{"text": "Restricted to cardinalities of 0 or 1 , though higher cardinalities are partially supported in validation for the case of literal - valued properties .Mini omits the bNodes introduction in the minCardinality(1 ) case , see someValuesFrom above .The critical constructs which go beyond OWL / lite and are not supported in the Jena OWL reasoner are complementOf and oneOf .", "label": "", "metadata": {}, "score": "51.141434"}
{"text": "The phylogenomic functional inference pipeline shown in this paper and detailed in the supplement .TwinBaseMatix .Builds a FASTA database , eliminating redundant sequences obtained from two different query databases .For example , mixes protein coming from NR and Ensembl databases , and eliminates doubles .", "label": "", "metadata": {}, "score": "51.153114"}
{"text": "This is due to the fact that research in our laboratory is more eukaryotes - centered , but specific pipelines designed by experts of prokaryotic genomics could easily be integrated in the flexible architecture of FIGENIX .A complete list of the pipelines available today is presented on Table 5 .", "label": "", "metadata": {}, "score": "51.2938"}
{"text": "This is a rather larger and longer term task than the others above and is the least likely to happen in the near future .Introduction .The EulerGUI Integrated Development Environment ( IDE ) allows one to develop and run rules in N3 logic language , applied to data and models in various formats converted in N3 syntax ( Notation 3 ) .", "label": "", "metadata": {}, "score": "51.299316"}
{"text": "Zmasek CM , Eddy SR : A simple algorithm to infer gene duplication and speciation events on a gene tree .Bioinformatics 2001 , 17 : 821 - 828 .View Article PubMed .Jordan IK , Wolf YI , Koonin EV : Duplicated genes evolve slower than singletons despite the initial rate increase .", "label": "", "metadata": {}, "score": "51.427963"}
{"text": "The sentences appear in the order in which they occur in the input file .The middle box ( B ) shows the emboldened sentences from ( a ) sentences grouped according to the ' subject ' or topic of the sentence .", "label": "", "metadata": {}, "score": "51.50962"}
{"text": "Pipelines themselves are coded as XML files .We are developing a GUI ( graphical user interface ) for pipeline editing , dedicated to the biologists ' use .Scientists will be able to construct their own data flows , chaining available tool units .", "label": "", "metadata": {}, "score": "51.582317"}
{"text": "So extracting with SPARQL from an explicit RDF URL like the PeriodicTable.owl example is exactly the same as EulerGUI processing from a plain RDF source , except that in a project all sources are processed together with all the rules , which is more powerful .", "label": "", "metadata": {}, "score": "51.67653"}
{"text": "Composition of the two previous pipelines .This pipeline first builds a temporary protein database ( mixing two different databases and eliminating doubles ) .The phylogenomic inference process is then run using the built database .TwinESTMatix .Builds a FASTA database , mixing sequences obtained on the one hand from a filtered given database and on the other hand by a database of automatically clustered ESTs .", "label": "", "metadata": {}, "score": "51.7815"}
{"text": "These prototypical instances used to be visible to queries .From release 2.1 they are used internally but should not longer be visible .We noted above that the Jena reasoners support a separation of direct and indirect relations for transitive properties such as subClassOf .", "label": "", "metadata": {}, "score": "51.94336"}
{"text": "listMapAsObject ( ?s , ? p ?l ) listMapAsSubject ( ?l , ?p , ? o ) .These can only be used as actions in the head of a rule .They deduce a set of triples derived from the list argument ?", "label": "", "metadata": {}, "score": "52.001087"}
{"text": "Concerning the phylogenomic inference pipeline , several phylogenies produced by FIGENIX have already been validated in peer reviewed article [ 39 ] .The results of these phylogenies turned out to be congruent with previously published phylogenies ( e.g. the PSME , TAP and GRP78 families [ 40 , 41 ] ) .", "label": "", "metadata": {}, "score": "52.06923"}
{"text": "In a Swing based application ( like the generated forms in Rule based Swing applications ) , the event loop is the AWT ( Swing ) event thread .In this case , generic listeners for focus lost and buttons events are set , which translate the events into N3 triples , assert them in the KB , and call fireAllRules ( ) , see runtime architecture callbacks .", "label": "", "metadata": {}, "score": "52.069534"}
{"text": "PROPsetRDFSLevel , ReasonerVocabulary . createInfModel( reasoner , rdfsExample ) ; .Finally , supposing you have a more complex set of schema information , defined in a Model called schema , and you want to apply this schema to several sets of instance data without redoing too many of the same intermediate deductions .", "label": "", "metadata": {}, "score": "52.157818"}
{"text": "Comparison of the one - method tree with NCBI reference tree of life containing around 200,000 taxa .Automatic detection of speciation and duplications , of orthologs and paralogs .Automatic detection of speciation and duplications , of orthologs and paralogs .", "label": "", "metadata": {}, "score": "52.163364"}
{"text": "( reasoner , data ) ; .A typical example operation on such a model would be to find out all we know about a specific instance , for example the nForce mother board .This can be done using : . getResource ( \" urn : x - hp : eg / nForce \" ) ; System . out .", "label": "", "metadata": {}, "score": "52.186516"}
{"text": "Conclusion .The core engine and expert system of the FIGENIX platform currently handle complex annotation processes of broad interest for the genomic community .They could be easily adapted to new , or more specialized pipelines , such as for example the annotation of miRNAs , the classification of complex multigenic families , annotation of regulatory elements and other genomic features of interest .", "label": "", "metadata": {}, "score": "52.198036"}
{"text": "Reasoning Web ; Lecture Notes in Computer Science .2005 , Springer Berlin / Heidelberg , 3564 : 213 - 250 .full_text .Allemang D , Polikoff I : TopBraid , a multi - user environment for distributed authoring of ontologies .", "label": "", "metadata": {}, "score": "52.201267"}
{"text": "Computers as expert systems have been widely used for taking decisions on the basis of their inputs .For example , using a smoker 's answers to a questioner about his / her smoking habits , a program can suggest ways for giving up smoking .", "label": "", "metadata": {}, "score": "52.203827"}
{"text": "NOTE . button may be different from the original RDF source .In this case the original document is the HTML view of the URI ( because it is loaded directly by the editor jEdit ) .Show table view of N3 document .", "label": "", "metadata": {}, "score": "52.2045"}
{"text": "The sample also contained definitions for parts of the ontology other than just cell lines , since the second pass of the natural language generator went across all classes .For this reason , three of the examples were selected from subclasses of anatomy and disease .", "label": "", "metadata": {}, "score": "52.27096"}
{"text": "Once duplications are detected , the platform automatically deduces sequences orthologous to the query sequence ( here human Notch1 protein labeled \" NOTCH_HSA \" ) .At the end of this step , known and experimentally verified functions for all these sequences are automatically searched as shown in functional report on Figure 6 .", "label": "", "metadata": {}, "score": "52.32215"}
{"text": "Materials and method .Description generator .The description generator accepts as input an ontology encoded in OWL / RDF , and produces as output a text file that lists the atomic entities , in alphabetical order of their English names , accompanied by descriptions in English sentences .", "label": "", "metadata": {}, "score": "52.3946"}
{"text": "SubClassOf : ' cell line ' .A bdcm is a cell line .Example of natural language definitions generated from corresponding OWL axioms from the first iteration ( Survey 1 ) .For Survey 2 , the results are summarised in Table 4 , and examples of verbalisations generated by the program are shown in Table 5 .", "label": "", "metadata": {}, "score": "52.410027"}
{"text": "- write a set of rules for checking quality of rules , and display messages in a . convenient way ; . - integrate Attempto ( e.g. use the REST interface calling the ACE site ) .- integrate WordNet , to propose to user correspondences between .", "label": "", "metadata": {}, "score": "52.46875"}
{"text": "Too many literal - values for a DatatypeProperty restricted by a maxCardinality(N ) restriction .This reasoner is accessed using ModelFactory.createOntologyModel with the prebuilt OntModelSpec OWL_MEM_RULE_INF or manually via ReasonerRegistery.getOWLReasoner ( ) .There are no OWL - specific configuration parameters though the reasoner supports the standard control parameters : .", "label": "", "metadata": {}, "score": "52.487934"}
{"text": "J Mol Biol 2001 , 314 : 1041 - 1052 .View Article PubMed .Science 2001 , 291 : 1304 - 1351 .View Article PubMed .Potter SC , Clarke L , Curwen V , Keenan S , Mongin E , Searle SM , Stabenau A , Storey R , Clamp M : The Ensembl analysis pipeline .", "label": "", "metadata": {}, "score": "52.489876"}
{"text": "We therefore segment labels on the principle that the only word separators are spaces and underlines .Having derived a word string from the identifier or label , it remains to apply some simple transformations in order to obtain a lexical entry of the appropriate kind .", "label": "", "metadata": {}, "score": "52.494488"}
{"text": "For example one could create a GenericRuleReasoner whose base model is an external OWL reasoner .The chief weakness of the approach is that it is \" layered \" - the outer InfModel can see the results of the inner InfModel but not vice versa .", "label": "", "metadata": {}, "score": "52.506004"}
{"text": "Here is a very short example to explain how works a PROLOG program .Suppose we want to write a program able to verify that an element belongs to a list or able to enumerate list 's elements .In PROLOG we just have to describe \" belonging \" concepts .", "label": "", "metadata": {}, "score": "52.568306"}
{"text": "This mode does include all the axiomatic rules .Thus , for example , even querying an \" empty \" RDFS InfModel will return triples such as [ rdf : type rdfs : range rdfs : Class ] .Simple .This implements just the transitive closure of subPropertyOf and subClassOf relations , the domain and range entailments and the implications of subPropertyOf and subClassOf .", "label": "", "metadata": {}, "score": "52.58173"}
{"text": "paralogy_groups(PhylogeneticTree , ParalogyGroups ) : - .subtree_species(PhylogeneticTree , AnnotedPhylogeneticTree ) , .biggest_groups(AnnotedPhylogeneticTree , ParalogyGroups ) .( Rules with the same signature express a \" logical OR \" between them ) .% a leaf node which species is different as the one chosen as out group can belong to a paralogy group . character in a PROLOG rule means that if the first rule is successful , PROLOG engine does n't try other rules with same signature .", "label": "", "metadata": {}, "score": "52.637268"}
{"text": "p ?x ) for each ? x in the list ?l , listMapAsSubject asserts triples ( ? x ? p ?o ) . table ( ? p ) tableAll ( ) .Declare that all goals involving property ? p ( or all goals ) should be tabled by the backward engine . hide(p ) .", "label": "", "metadata": {}, "score": "52.641018"}
{"text": "Which prints the output : .Statement : [ urn : x - hp - jena : eg / a , urn : x - hp - jena : eg / q , Literal ] .Alternatively we could have created an empty inference model and then added in the statements directly to that model .", "label": "", "metadata": {}, "score": "52.670918"}
{"text": "The functor in an extended triple pattern is used to create and access structured literal values .The functorName can be any simple identifier and is not related to the execution of builtin procedural primitives , it is just a datastructure .", "label": "", "metadata": {}, "score": "52.682335"}
{"text": "If true , switches on exhaustive tracing of rule executions to the log4j info appender .Boolean .If true , causes derivation routes to be recorded internally so that future getDerivation calls can return useful information .The procedural primitives which can be called by the rules are each implemented by a Java object stored in a registry .", "label": "", "metadata": {}, "score": "52.71225"}
{"text": "That is all RDFS entailments found by the RDFS reasoner will also be found by the OWL reasoners and scaling on RDFS schemas should be similar ( though there are some costs , see later ) .The instance - based implementation technique is in keeping with this \" RDFS plus a bit \" approach .", "label": "", "metadata": {}, "score": "52.75692"}
{"text": "Two rounds of survey and improvement show that overall the generated English definitions are found to convey the intended meaning of the axiomatisation in a satisfactory manner .The surveys also suggested that one form of generated English will not be universally liked ; that intrusion of too much ' formal ontology ' was not liked ; and that too much explicit exposure of OWL semantics was also not liked .", "label": "", "metadata": {}, "score": "52.777214"}
{"text": "This good practice is recognized as cornerstone of software engineering , but it 's too easy to violate when writing both business logic and infrastructure logic in Java .With the EulerGUI + D\u00e9ductions framework : .no business logic is in Java ( or other precedural language ) ; . pure business logic are N3 rules that have no Java related URI prefixes , or OWL ontologies ; .", "label": "", "metadata": {}, "score": "52.81708"}
{"text": "- add Fuxi CWM compatible rule engine .- load project file from an URL . - project pipeline and project import . - reading and translating to N3 an UML or EMF eCore XMI file .- use parser4j in Drools engine , Graphviz and generated application ; . - import a project into another project .", "label": "", "metadata": {}, "score": "52.81871"}
{"text": "N3 jEdit editor : use hypersearch to find all occurences of a string in several files : either in a directory , or all opened buffers : .Export from N3/RDF .EulerGUI enables export from N3/RDF to any XML format that has an XML Schema description .", "label": "", "metadata": {}, "score": "52.970703"}
{"text": "To produce the descriptions , the program collects all the axioms relating to a given entity , groups them according to common structure , realises each group through an English sentence , and assembles the resulting sentences into a paragraph .Sentence generation is accomplished using a generic grammar based on logical patterns in OWL , together with a lexicon for realising atomic entities .", "label": "", "metadata": {}, "score": "52.979927"}
{"text": "NOTE : creating several plugins is an oportunity to factor some common semantic pattern of GUI insertion and event transmission .upgrade jEdit .some classes have been copied and modified ( bad practice ! ) from jEdit 4.3.1 ; jEdit is now at 4.5.0 ; upgrading can imply asking the jEdit team for some modification ; we are probably the only ones to use full jEdit as library ! completion in N3 editor .", "label": "", "metadata": {}, "score": "52.981606"}
{"text": "In the short term we will continue to generate EFO text definitions and improve their quality for that user group .It would appear that generated English that is faithful to both the OWL semantics of axioms and the full ontological nature of an axiom , whilst remaining readable , is far from easy .", "label": "", "metadata": {}, "score": "52.99646"}
{"text": "There is a facade and executable class to start a Rule Based Application with the EulerGUI framework , RuleBasedApplicationStarter .Here is how to bootstrap , assuming the internal rules and ontologies are an EulerGUI project in the classpath : .Here are typical usages , assuming we are inside an event loop .", "label": "", "metadata": {}, "score": "53.017937"}
{"text": "These examples are taken from the phylogenomic inference pipeline which is intentionally over - summarized in this section into 5 main steps ( detailed on the supplement ) .The whole phylogenomic inference pipeline included in FIGENIX contains 50 different steps ( figure 2 ) .", "label": "", "metadata": {}, "score": "53.020645"}
{"text": "generated forms could be leveraged .- make a Prot\u00e9g\u00e9 4.1 plugin , that would create an EulerGUI Project from the Prot\u00e9g\u00e9 documents , . open N3 + rules files or URL , and launch one of the reasoners . - export N3 rules as SWRL ; small problem : you must declare the predicates and classes , .", "label": "", "metadata": {}, "score": "53.045994"}
{"text": "The FIGENIX platform has today the capacity of detecting protein coding genes in raw nucleic sequences , of inferring their putative function through phylogenomic inference , of clustering ESTs and integrating them in phylogenomic analysis as well as gathering associated expression data .", "label": "", "metadata": {}, "score": "53.140923"}
{"text": "The times are in seconds , normalized to a 1.1GHz Pentium processor .The XSB figures are taken from a pre - published paper and may not be directly comparable ( for example they do not include any rule compilation time ) - they are just offered to illustrate that the RDFSRuleReasoner has broadly similar scaling and performance to other rule - based implementations .", "label": "", "metadata": {}, "score": "53.146156"}
{"text": "Edited by : Sweet AP , Snow CE .2003 , Guilford Press , 82 - 98 .Kintsch W : Comprehension : A Paradigm for Cognition .1998 , Cambridge University Press .Williams S , Power R : Grouping axioms for more coherent ontology descriptions .", "label": "", "metadata": {}, "score": "53.226078"}
{"text": "J Mol Evol 2004 , 59 : 587 - 597 .View Article PubMed .Prince VE , Pickett FB : Splitting pairs : the diverging fates of duplicated genes .Nat Rev Genet 2002 , 3 : 827 - 837 .", "label": "", "metadata": {}, "score": "53.27905"}
{"text": "Whereas the previous three chapters were very practical , the sixth one is rather theoretical , explaining the theories behind these systems .The final chapter of the book focuses on generating documents rather than simple texts , emphasising the general tendency in natural language processing to process and produce multimedia documents .", "label": "", "metadata": {}, "score": "53.33319"}
{"text": "Currently it is not otherwise connected to the current EulerGUI project , and the data entered in the form are lost .Export as XML .When clicking on \" Export as XML \" in the File pull - down menu , all N3 sources are exported as plain XML files in the xml - export directory in the current directory .", "label": "", "metadata": {}, "score": "53.34774"}
{"text": "This execution strategy , SLG , is essentially the same as that used in the well known XSB system .In the Jena rule engine the goals to be tabled are identified by the property field of the triple .One can request that all goals be tabled by calling the tableAll ( ) primitive or that all goals involving a given property P be tabled by calling table(P ) .", "label": "", "metadata": {}, "score": "53.416786"}
{"text": "Summary of results on natural language definitions for the second iteration ( Survey 2 Part 1 ) .Question ' How well does the text capture the OWL meaning ? 'Judgements range from 1 ( Not at all ) to 5 ( Totall captured meaning ) .", "label": "", "metadata": {}, "score": "53.442898"}
{"text": "The user KB ( Knowledge Base ) .Underlying an N3 project , there is a stateful Drools Working Memory , we call the user Knowledge Base .The user Knowledge Base can be visualized by two commands in the \" Tools \" menu .", "label": "", "metadata": {}, "score": "53.520782"}
{"text": "Like other adaptable and flexible pipelines systems , we did n't choose to rewrite new software for each algorithmic step .We preferred the use of the \" reference \" publicly available software in their command line version ( e.g. sequence similarity search is done by the BLASTALL local runtime , downloadable on NCBI web site ) .", "label": "", "metadata": {}, "score": "53.524914"}
{"text": "In this case also , phylogenies produced by the platform where congruent ( with additional species ) with previously published phylogenies ( e.g. the RXR , Notch , C3 - 4 - 5 , PBX , and LMP families [ 41 ] ) .", "label": "", "metadata": {}, "score": "53.533"}
{"text": "this is both a feature for EulerGUI and D\u00e9ductions generator .- graphviz view also for result .- add the inference result as a new file in the project ( on user choice ) .- button to export the whole project : . - as a zip file , that is , the .", "label": "", "metadata": {}, "score": "53.543076"}
{"text": "b ) ( ?b eg : p ?c ) - & gt ; ( ? a eg : p ? parseRules ( rules ) ) ; reasoner . createInfModel( reasoner , rawData ) ; .Then we can query whether eg : A is related through eg : p to eg : D and list the derivation route using the following code fragment : . listStatements", "label": "", "metadata": {}, "score": "53.571106"}
{"text": "This suggests that domain nomenclature is important to the domain experts when considering ontology definitions .Variations or a loss of precision in these well - accepted naming conventions are clearly unacceptable to users .Repetition of the word ' something ' was seen to be clumsy by many respondants ( for examples see Table 5 ) .", "label": "", "metadata": {}, "score": "53.60007"}
{"text": "( _ , [ Species ] , _ , [ Species ] , 1 , [ Species ] ) .% if one of the two sub - trees is invalidated for merging , the compilation is a tree invalidated for merging . % however we compute the total number of sequences in the sub - tree .", "label": "", "metadata": {}, "score": "53.604305"}
{"text": "To bind the reasoner to the final data set to create an inference model see the ModelFactory methods , particularly ModelFactory.createInfModel .Finally , having created a inference model then any API operations which access RDF statements will be able to access additional statements which are entailed from the bound data by means of the reasoner .", "label": "", "metadata": {}, "score": "53.774986"}
{"text": "In addition to this , comparison with well- known existing systems is made ( two of them being the above mentioned ones for generating weather reports and smoking- cessation letters ) .SYNOPSIS In chapter one , natural language generation is defined as a task which \" typically starts from a non - linguistic representation of information as input ... uses knowledge about language and the application domain to automatically produce reports , documents , explanations and other kind of texts \" .", "label": "", "metadata": {}, "score": "53.789787"}
{"text": "e : findall a rdf : Property ; . rdfs : comment \" builtin that ( ?SCOPE ?SPAN )e : findall ( ?SELECT ?WHERE ?ANSWER ) .unifies ?ANSWER with a list that contains all the instantiations of ?", "label": "", "metadata": {}, "score": "53.91252"}
{"text": "EGJD wrote most of the manuscript .VV participated in designing the structural annotation pipeline , she produced all the tests , checked the validity of gene predictions , and measured the performances of this pipeline , she wrote some parts of the code included in this pipeline .", "label": "", "metadata": {}, "score": "53.983124"}
{"text": "Michael Elhadad , Using argumentation to control lexical choice : a unification - based implementation , PhD thesis , Columbia University , Dept of Computer Science , 1993 , ps gzipped ( 575 K ) .Maria Milosavljevic .The Automatic Generation of Comparisons in Descriptions of Entities .", "label": "", "metadata": {}, "score": "54.087833"}
{"text": "Rule engines .CWM is the historic N3 logic engine in Python , written by the authors of the language ; it had no new releases for years ; .Euler proof engine is a Prolog backward - chaining engine ; it is actively maintained and used in production ; it has many advanced features : proof explanation , building of possible model and counter - model , extensive built - ins , matching of rules .", "label": "", "metadata": {}, "score": "54.092907"}
{"text": "For more details , see [ 28 ] .Generating sentences .The final stage corresponds to the process labelled ' Realiser ' in Figure 4 .For each entity to be described , the text plan specifies a set of ( possibly aggregated ) axioms ; it remains to generate a sentence for each axiom ( or aggregated axiom ) , thus obtaining a description of the class ( or other atomic entity ) .", "label": "", "metadata": {}, "score": "54.122986"}
{"text": "Ontology authoring tools such as Prot\u00e9g\u00e9 [ 21 ] , topBraid Composer [ 22 ] , SWOOP [23 ] and Neon Toolkit [ 24 ] take a different approach .Organisation is achieved partly through structural units such as paragraphs ( the standard one - idea - per - paragraph is a natural correlate of the concept in an ontology ) and partly through ' discourse markers ' - the linking phrases that indicate relationships between portions of text .", "label": "", "metadata": {}, "score": "54.141624"}
{"text": "The company , which specialises in translating raw data into readable text and graphics , said the deal will cover use of its technology on Shell 's offshore platforms across the Americas .There will also be an expansion of an existing deal in upstream operations .", "label": "", "metadata": {}, "score": "54.151207"}
{"text": "For example , to create the same set up manually we could replace \\[1\\ ] by : . createInfModel( reasoner , rdfsExample ) ; . or even more manually by .theInstance ( ) . createInfModel( reasoner , rdfsExample ) ; .", "label": "", "metadata": {}, "score": "54.196198"}
{"text": "Approximately , 10 of the OWL working group tests for the supported OWL subset currently rely on such comprehension inferences .The shipping version of the Jena rule reasoner passes these tests only after they have been rewritten to avoid the comprehension requirements .", "label": "", "metadata": {}, "score": "54.24759"}
{"text": "A HTML report synthesizing functional retrieved data is then built .It includes links to Web database and publication associated to retrieved functional terms .Current implementation of this system manages data coming from : GENE ONTOLOGY [ 51 ] , MGD [ 52 ] , and EST expression data available on NCBI Web site .", "label": "", "metadata": {}, "score": "54.368706"}
{"text": "Then the system property gloze.base is set to the \" root \" RDF resource , as if Gloze in command line were used .Gloze does not cache compiled XML schemas ; but compiling long XML Schema can be long ( e.g. DocBook Schema takes 10 seconds ) .", "label": "", "metadata": {}, "score": "54.402107"}
{"text": "For example , it would be possible to develop a modification to the RDFS reasoner which warned about use of a property on a resource that is not explicitly declared to have the type of the domain of the property .A particular case of this arises in the case of OWL .", "label": "", "metadata": {}, "score": "54.463837"}
{"text": "An informal description of the simplified text rule syntax is : . or [ bare - rule ] or [ ruleName : bare - rule ] . or ( node , node , functor )// extended triple pattern .or builtin ( node , ... node )", "label": "", "metadata": {}, "score": "54.588707"}
{"text": "Sunderland , Massachussetts , Sinauer Associates 2003 .Felsenstein J : PHYLIP -- Phylogeny Inference Package ( Version 3.2 ) .Cladistics 1989 , 5 : 164 - 166 .Schmidt HA , Strimmer K , Vingron M , von Haeseler A : TREE - PUZZLE : maximum likelihood phylogenetic analysis using quartets and parallel computing .", "label": "", "metadata": {}, "score": "54.59806"}
{"text": "Graesser A , Singer M , Trabasso T : Constructing inferences during narrative text comprehension .Psychological Review .10.1037/0033 - 295X.101.3.371 .View Article .Graesser AC , McNamara DS , Louwerse M : What do readers need to learn in order to process coherence relations in narrative and expository text ?", "label": "", "metadata": {}, "score": "54.634407"}
{"text": "This menu entry is a toggle ; in this mode every time an inference engine is started , a new Java objects graph is created from the inference results .This will trigger instantiation of a Java object : . @prefix java : . : myWindow a java : javax_swing_JFrame . tabular view : left click on table : display a small label - values table for the cell , if it is a resource , and otherwise a table for the line .", "label": "", "metadata": {}, "score": "54.669632"}
{"text": "Reiter E , Dale R : Building Natural Language Generation Systems .2000 , Cambridge University Press View Article .Smith B , Ceusters W , Klagges B , Kohler J , Kumar A , Lomax J , Mungall C , Neuhaus F , Rector A , Rosse C : Relations in Biomedical Ontologies .", "label": "", "metadata": {}, "score": "54.685593"}
{"text": "To keep rules readable qname syntax is supported for URI refs .The set of known prefixes is those registered with the PrintUtil object .This initially knows about rdf , rdfs , owl , xsd and a test namespace eg , but more mappings can be registered in java code .", "label": "", "metadata": {}, "score": "54.744728"}
{"text": "p , ? m1 , . mn ) .Matches the lexical form of a literal ( ? t ) against a regular expression pattern given by another literal ( ? p ) .If the match succeeds , and if there are any additional arguments then it will bind the first n capture groups to the arguments ? m1 to ? mn .", "label": "", "metadata": {}, "score": "54.776344"}
{"text": "The majority of the fees relate to ongoing licence payments but there are also some one - off and deployment fees which become payable if certain milestones are hit .There is also an option to extend the use of the technology beyond the Americas .", "label": "", "metadata": {}, "score": "54.78103"}
{"text": "Saitou N , Nei M : The neighbor - joining method : a new method for reconstructing phylogenetic trees .Mol Biol Evol 1987 , 4 : 406 - 425 .PubMed .Fitch WM : Toward defining the course of evolution : Minimum change for a specific tree topology .", "label": "", "metadata": {}, "score": "54.82279"}
{"text": "2005 , 6 : R46 - 10.1186/gb-2005 - 6 - 5-r46 .View Article .Berzlanovich Ildiko , Egg Markus , Redeker Gisela : Coherence structure and lexical cohesion in expository and persuasive texts .Proceedings of the Workshop on Constraints in Discourse .", "label": "", "metadata": {}, "score": "54.95827"}
{"text": "Procedure .In order to evaluate the verbalisations from the two iterations , two on - line surveys were created ( see supplementary information ) .Survey 1 .In the first survey , a sample of 10 of the 50 verbalisations was selected based on the widest range of axioms ( i.e. number and type on each class ) .", "label": "", "metadata": {}, "score": "55.001297"}
{"text": "On exporting XML with Gloze , an XML Schema is mandatory .But again , for well - known XML Schemata , we recorded the \" root \" RDF URI predicates , in class XMLSchemaCatalog .Basically the problem is that in a general RDF graph there is no such thing as a root .", "label": "", "metadata": {}, "score": "55.02489"}
{"text": "FuXi is another N3 logic engine in Python , actively maintained , both forward- and and backward- chaining .Viewers and exports . export result as N3 pretty printed file .export project or result as plain XML , leveraging on XML Schema ( using XML Gloze converter ) .", "label": "", "metadata": {}, "score": "55.07009"}
{"text": "Methods like Inparanoid [ 9 ] or Homologene [ 13 ] already exist to automatically find orthologs and paralogs to a sequence of interest .From these methods , biologists could then extract known biological function of detected orthologous genes to infer , as we do , a biological function to the query sequence .", "label": "", "metadata": {}, "score": "55.12252"}
{"text": "addInfrastructureRules ( ) ; store.fireAllRules ( ) ; .This call sequence is used when the user opens an URL , that can be anything : .Note : if you use plain XML sources , it is better to keep the SourceFactory as a singleton , because it accumulates the compiled XML Schema .", "label": "", "metadata": {}, "score": "55.13852"}
{"text": "There were many comments on questions in which the use of words such as ' quality ' and ' disposition ' in the English definition was disliked , as they did not fit with conventional domain language .This may also suggest that domain terminology needs to be accounted for in such an exercise and that alternative , domain - friendly labels would be one useful addition for ontologies that use such language .", "label": "", "metadata": {}, "score": "55.16001"}
{"text": "EulerGUI is convenient for developing and testing projects composed of various ontologies and data sources , with rules in N3 logic .One can launch 4 reasoning engines : Euler proof engine , CWM , Drools , and FuXi .For each source it can show a Graphviz graph .", "label": "", "metadata": {}, "score": "55.181793"}
{"text": "c eg : concatFirst ?p ) , ( ?c eg : concatSecond ?x ?c ? x ? p ?z ) ( ?z ? q ?When run on a rawData model contain the above four triples this generates the ( correct ) output : . - [ urn : x - hp : eg / A , urn : x - hp : eg / p , urn : x - hp : eg / B ] .", "label": "", "metadata": {}, "score": "55.22512"}
{"text": "The main contribution of this work is the application of a variety of linguistic NLG techniques to produce coherent paragraphs of text for generating natural language style definitions for ontologies authored in OWL .This specific task is a subset of the wider OWL verbalisation task that can be of immediate use to ontology developers .", "label": "", "metadata": {}, "score": "55.3401"}
{"text": "The reasoners can be described using RDF metadata which can be searched to locate reasoners with appropriate properties .The calls Reasoner.getCapabilities and Reasoner.supportsProperty are used to access this descriptive metadata .These initial examples are not designed to illustrate the power of the reasoners but to illustrate the code required to set one up .", "label": "", "metadata": {}, "score": "55.402267"}
{"text": "View Article PubMed .Altschul SF , Madden TL , Schaffer AA , Zhang J , Zhang Z , Miller W , Lipman DJ : Gapped BLAST and PSI - BLAST : a new generation of protein database search programs .Nucleic Acids Res 1997 , 25 : 3389 - 3402 .", "label": "", "metadata": {}, "score": "55.402878"}
{"text": "bashrc : .Under Windows , you 'll have to set the environment variables OPENCCG_HOME , JAVA_HOME and add the full path of your openccg / bin directory to the PATH variable .You can choose between several output formats using the -o or --output - format argument .", "label": "", "metadata": {}, "score": "55.47751"}
{"text": "For point 2 , data persistence , one can use one or more simple generic rules , coupled with updates with SPARQL 1.1 .The workflow to build rule - based applications .EulerGUI is more than a Integrated Development Environment , it is a framework to build rule - based applications on several platforms .", "label": "", "metadata": {}, "score": "55.54206"}
{"text": "n3p : import OWL+SWRL format ; the rule comes from an ATTEMPTO Controled English text entered in the OWL document with the Prot\u00e9g\u00e9 plugin ACE View ; inference works fine with all 4 engines in EulerGUI .IDE Use cases .You have a comprehensive list of ready_made projects in paragraph \" Getting started \" .", "label": "", "metadata": {}, "score": "55.605103"}
{"text": "Once your Java code has been processed as an N3 data structure , all the processing power of N3 rules can be used to achieve queries and inference on those data .For example this query returns all methods having a parameter whose type is eulergui.project.", "label": "", "metadata": {}, "score": "55.624546"}
{"text": "Reliable automation is an absolute necessity for structural and functional annotation of huge amounts of genomic data coming from increasingly prolific sequencing projects .Many automated pipelines or genomic annotation platforms already exist as an answer to various different biological questions .", "label": "", "metadata": {}, "score": "55.75528"}
{"text": "Our prototype tools can generate reasonable paragraphs of English text that can act as definitions .The definitions were found acceptable by our survey and , as a result , the developers of EFO are sufficiently satisfied with the output that the generated definitions have been incorporated into EFO .", "label": "", "metadata": {}, "score": "55.817863"}
{"text": "Table 3 provides some examples of text definitions ; the supplementary information contains the whole set of generated definitions used in this evaluation .We used the output from 10 of these in a simple survey and asked participants to what extent they thought the definitions were readable so that their intention could be understood .", "label": "", "metadata": {}, "score": "55.855194"}
{"text": "Exploring SPARQL public endpoints .Dean Allemang has written a blog post on this exact subject , so I gladly reference his writing on using SPARQL to explore an unknown dataset .Note that using lexicons taylored for each vocabulary like it was presented at CNL 2012 would require more \" GUI sugar \" .", "label": "", "metadata": {}, "score": "55.872513"}
{"text": "Thus we get 6 data , from which an ED unit asks to expert system which fusion must be done in a consensus tree ( Table 2 ) .Table 2 .Data allowing export system to decide what kind of fusion must be done .", "label": "", "metadata": {}, "score": "55.88378"}
{"text": "People wishing to attend the workshop but not submitting papers should . send a notification of attendance : a 1 - 2 page stating interest to . participate , work done in NLG so far , and potential contributions / . material for discussions about one of the topics .", "label": "", "metadata": {}, "score": "55.9004"}
{"text": "This query would be equivalent to the command line queries above .pypolibox is built as a pipeline , where each important step is represented by a class .Each of these classes function as the input of the next class in the pipeline , e.g. : .", "label": "", "metadata": {}, "score": "55.900536"}
{"text": "This query would be equivalent to the command line queries above .pypolibox is built as a pipeline , where each important step is represented by a class .Each of these classes function as the input of the next class in the pipeline , e.g. : .", "label": "", "metadata": {}, "score": "55.900536"}
{"text": "This means that with Drools behind , you can add or remove assertions , and all consequences of the rules is updated after a call to fireRules .I do n't give up objects TriplesResult added to the facts , because there is existing code that depends on it .", "label": "", "metadata": {}, "score": "55.95607"}
{"text": "Different issues involved in the generation of documents are discussed .This chapter is general , without going into too much detail about ways of generating such material .However , this is normal given the fact that almost each of these topics can be the subject of a book .", "label": "", "metadata": {}, "score": "55.995823"}
{"text": "Image et Video .Image Compression and coding , Image Processing Technology , .Cryptology and Watermarking , Image 3D , .Multimedia .Management and Diffusion of Multimedia Applications , .Multimedia Data Base , .Documents Modelisation and Interpretation , .", "label": "", "metadata": {}, "score": "56.022854"}
{"text": "It is also much more human readable than RDF .There is a version of the RDF primer where every example is in N3 , so much more readable than the original above mentionned .N3 has several sub - formats , ordered below with more and more expressive power and syntaxic sugar : . log : notEqualTo Equality in this sense is actually the same URI .", "label": "", "metadata": {}, "score": "56.169014"}
{"text": "Sindice is a nice Semantic Web search engine .It is different from Swoogle in that it searches and shows fact triples , not ontology documents .There is a nice \" advanced \" query where one can enter triples , e.g. : .", "label": "", "metadata": {}, "score": "56.368156"}
{"text": "There are over 3000 entries concerning NLG and updates are welcome .The bibliography is maintained in BibTeX and is linked to / maintained at the Collection of Computer Science Bibliographies with its extensive cross - linking and search facilities .Piwek , P. ( 2003 ) .", "label": "", "metadata": {}, "score": "56.484547"}
{"text": "[ transitiveRule : ( ?A demo : p ?B ) , ( ?B demo : p ?C ) ] [ symmetricRule : ( ?Y demo : p ?X demo : p ?Y ) ] . -", "label": "", "metadata": {}, "score": "56.60707"}
{"text": "Drools must be configured to insert objects by testing uniqueness with equals ( ) , not by object I d ( the default ) ; Triple.equals ( ) is implemented as equality of subject , predicate , and object .The actual automatic translation uses full URI 's , e.g. the first bold line above is actually : .", "label": "", "metadata": {}, "score": "56.617203"}
{"text": "subtree_species(node ( _ , no , no ) , node(1 , no , no , no ) ) : - ! % annotate a node which has only one child is equivalent to annotate this child . %( we have pseudo nodes to force binary structure ) .", "label": "", "metadata": {}, "score": "56.671696"}
{"text": "The format string is the one used in Yap Prolog 's format predicate .The object is calculated from the subject .So one can use logical rules as a template engine like Velocity or FreeMarker to generate any file format .", "label": "", "metadata": {}, "score": "56.70183"}
{"text": "At step 4 the biologist compares the topology of the gene tree to the topology of a reference species ' tree , then deduces the position of duplication and speciation events , and finally infers orthology and paralogy relationships .Once orthologs to a sequence of interest have been identified , biologists then usually look for known functional data in other species and infer for example a likely biochemical function for the unknown gene ( step 5 ) .", "label": "", "metadata": {}, "score": "56.7184"}
{"text": "Remove will propagate the change to other consequent rules including the firing rule ( which must thus be guarded by some other clauses ) .Drop will silently remove the triple(s ) from the graph but not fire any rules as a consequence .", "label": "", "metadata": {}, "score": "56.75705"}
{"text": "that means that for Templeton test , the tree with the best topology is the one built with Neighbor Joining , that tree built with Maximum Parsimony is congruent with a 0.15 rate and that the one built with Maximum Likelihood is congruent with a 0.01 rate . )", "label": "", "metadata": {}, "score": "56.791553"}
{"text": "You can choose between several output formats using the -o or --output - format argument .openccg generates sentences using OpenCCG ( default option ) . textplan - xml generates an XML representation of the textplans . textplan - featstruct generates a feature structure representation ( nltk.featstruct ) .", "label": "", "metadata": {}, "score": "56.884865"}
{"text": "It includes an outline of the general inference API , together with details of the specific rule engines and configurations for RDFS and OWL inference supplied with Jena .Not all of the fine details of the API are covered here : refer to the Jena Javadoc to get the full details of the capabilities of the API .", "label": "", "metadata": {}, "score": "56.91823"}
{"text": "In the reverse direction , to use in EulerGUI an ontology created in Prot\u00e9g\u00e9 , simply add it to the project ( saved in Prot\u00e9g\u00e9 in N3 ( Turtle ) , or RDF , or in OWL / XML format ) .", "label": "", "metadata": {}, "score": "56.943985"}
{"text": "No completion is available in the editor at the moment .But certainly some of the code in ACEWiki could be reused .Anyway completion is not available at the moment in the EulerGUI jEdit editor for any syntax , but it is on the Roadmap for EulerGUI .", "label": "", "metadata": {}, "score": "56.95027"}
{"text": "+ 3 other similar reports .This is due to the two records for the bigName42 configuration referencing two motherboards which are explicitly defined to be different resources and thus violate the FunctionProperty nature of hasMotherBoard .A critical implication of our variant of the instance - based approach is that the reasoner does not directly answer queries relating to dynamically introduced class expressions .", "label": "", "metadata": {}, "score": "56.95983"}
{"text": "SubClassOf : disease .disjoint(normal , uninfected ) .A genetic disorder is a disease .No genetic disorder is any of the following : a normal or an uninfected .Example of natural language definitions generated from corresponding OWL axioms for the second iteration ( Survey 2 ) .", "label": "", "metadata": {}, "score": "57.0214"}
{"text": "Redefer .This feature is currently deactivated , by lack of tests ( can be reactivated in class SourceFilesManagement , method addSourceActions ) .This reuses the ReDeFer project ; more details on the conversion here : the XML2RDF mapping .To import an XML file , push the XML button to the right of the UML button .", "label": "", "metadata": {}, "score": "57.026928"}
{"text": "The Jena inference subsystem is designed to allow a range of inference engines or reasoners to be plugged into Jena .Such engines are used to derive additional RDF assertions which are entailed from some base RDF together with any optional ontology information and the axioms and rules associated with the reasoner .", "label": "", "metadata": {}, "score": "57.123215"}
{"text": "From a data - processing point of view , a procedure , such as phylogenomic inference introduced here , consists of a genomic data flow circulating through a software unit set .This data flow or \" pipeline \" is a directed cyclic graph ( see figure 2 and figure 3 ) .", "label": "", "metadata": {}, "score": "57.159588"}
{"text": "referring expressions , aggregation , lexicalization , and surface .realization , as well as coordination with other media .This workshop is part of a biennial series of workshops about natural .language generation that has been running since 1987 .", "label": "", "metadata": {}, "score": "57.175274"}
{"text": "Y .FactCount : 3 .User input is in green : a rule , a fact , and a query .The first 2 lines can be reversed ; that is , rules can be entered after facts .These test classes should give you an idea of what works in the N3 shell : .", "label": "", "metadata": {}, "score": "57.204105"}
{"text": "In the second part of the survey , we designed several alternative natural language definitions for five OWL axioms , again selecting five fairly different sets of axioms .We asked the participants to rank which of the alternative definitions they thought ( i ) was most natural to read , and ( ii ) captured the meaning of the OWL most accurately .", "label": "", "metadata": {}, "score": "57.218925"}
{"text": "CWM use case . re - use a project like above .If you need the full power of the command line arguments , see below \" Expand engine arguments feature \" .CWM path customization .All the user has to do is to add this : . : cwm a eg : Inference_engine ; rdfs : label \" CWM \" ; eg : absolute_path \" /usr / bin / cwm \" .", "label": "", "metadata": {}, "score": "57.242935"}
{"text": "DESSERT .for one ?MEAL instance , there must not be two different desserts ? DESSERT .For point 1 , we just increment an instance number at runtime .For point 2 , given the uniqueness with triples ' string representation in Drools storage ( see above ) , there can not be more than one value for a subject and a predicate .", "label": "", "metadata": {}, "score": "57.312958"}
{"text": "The final output is a text file organised on the lines of a glossary , listing the classes and other atomic terms in alphabetical order of their English names , each accompanied by a paragraph of description .For an excerpt from the output for the EFO ontology , see Table 3 .", "label": "", "metadata": {}, "score": "57.32442"}
{"text": "The EulerGUI project is strongly connected to the D\u00e9ductions project .The D\u00e9ductions project aims at using Artificial Intelligence techniques for general software development tasks .Currently it has rules in N3 language to generate simple Create - Update applications for Java Swing platform from OWL models .", "label": "", "metadata": {}, "score": "57.34641"}
{"text": "a file - based persistent cache for Drools compiled Rule Bases , using OSCache .The timestamp of the N3 source files and projects is used to recompile only if necessary .the persistant cache maps URL 's of projects to Drools compiled Rule Bases in local files managed by OSCache in $ HOME/. eulergui / rule_bases_cache . application code calls interface URICache . automatically reloads Drools compiled Rule Bases depending to the timestamp of the project URL . safe for concurrent access .", "label": "", "metadata": {}, "score": "57.379803"}
{"text": "This produces the output : .The anonymous rdf : type statement referencesthe \" hasValue(eg : hasComponent , eg : gamingGraphics ) \" restriction mentioned in the definition of GamingComputer .A second , typical operation is instance recognition .Testing if an individual is an instance of a class expression .", "label": "", "metadata": {}, "score": "57.389553"}
{"text": "View Article .Felsenstein J : Evolutionary trees from DNA sequences : a maximum likelihood approach .J Mol Evol 1981 , 17 : 368 - 376 .View Article PubMed .Kishino H , Hasegawa M : Evaluation of the maximum likelihood estimate of the evolutionary tree topologies from DNA sequence data , and the branching order in hominoidea .", "label": "", "metadata": {}, "score": "57.39923"}
{"text": "- show modification status since last run , and watch file modification to restart last run .( leveragin existing file watcher URIModificationChecker , or jnotify ) .- more flexibility to enter CWM parameters . - change the project file format to be N3 or RDF ( instead of Java XMLEncoder today ) ; .", "label": "", "metadata": {}, "score": "57.453625"}
{"text": "In the first step , we convert to a convenient Prolog format , in which each axiom is encoded by a single Prolog term , and identifiers are standardised by replacing abbreviated IRIs by complete ones .The format used in these files is shown below through six representative terms from the EFO ontology ( the actual files contain over 3000 Prolog terms each ) .", "label": "", "metadata": {}, "score": "57.498314"}
{"text": "Our second verbalisation only made small changes to the generated English , mainly with respect to the proper use of labels .This appears to have had a positive effect , suggesting the importance of staying as faithful to domain conventions of nomenclature as possible .", "label": "", "metadata": {}, "score": "57.59944"}
{"text": "EulerGUI includes the full jEdit 4.3.1 , the all - purpose Java editor .JEdit is a powerful editor with tens of plug - ins , and syntax colorings ( \" modes \" ) and tools for the major programming languages .", "label": "", "metadata": {}, "score": "57.693893"}
{"text": "Denaux R , Dimitrova V , Cohn AG , Dolbear C , Hart G : Rabbit to OWL : ontology authoring with a CNL - based tool .Proceedings of the 2009 conference on Controlled natural language .2010 , CNL'09 , Berlin , Heidelberg : Springer - Verlag , 246 - 264 .", "label": "", "metadata": {}, "score": "57.70435"}
{"text": "it is also possible to drag and drop one or more URL ( N3 , RDF , OWL , XMI , UML ) from a file manager or web browser ( tested with Firefox and Konqueror ) , for example the result of a search on Swoogle . edit a N3 or RDF file click on the button bearing the file or URL name .", "label": "", "metadata": {}, "score": "57.765305"}
{"text": "However , other groups have already proposed the complete automation of phylogenetic reconstruction pipelines like RIO [ 50 ] or like PhyloGenie [ 14 ] to address simpler methods'issues .To illustrate benefits from the use of an expert system we will discuss here the differences between the processes automated in these software and the phylogenomic inference pipeline included in FIGENIX ( Table 8 ) .", "label": "", "metadata": {}, "score": "57.829536"}
{"text": "EulerGUI sends the right Accept - Content header for N3 or Turtle .If you use command line tools , you must explicitely add this to arguments : .Otherwise you get JSON .Finding rules on the Web ; rules for OWL concepts .", "label": "", "metadata": {}, "score": "57.91182"}
{"text": "addProperty ( ReasonerVocabulary .theInstance ( ) Create ( config ) ; .If true forces a preprocessing pass which finds all usages of rdf:_n properties and declares them as ContainerMembershipProperties .This is implied by setting the level parameter to \" full \" and is not normally used directly .", "label": "", "metadata": {}, "score": "58.109947"}
{"text": "If true switches on exhaustive tracing of rule executions to the log4j info appender .Boolean .If true causes derivation routes to be recorded internally so that future getDerivation calls can return useful information . . .This defines a property parent from Person to Person , a sub - property mum of parent and an integer - valued property age .", "label": "", "metadata": {}, "score": "58.140305"}
{"text": "The subject resource is the \" prime suspect \" implicated in the inconsistency , the relation rb : violation is a reserved property used to communicate validation reports from the rules to the reasoner , the object is a structured ( functor - valued ) literal .", "label": "", "metadata": {}, "score": "58.179546"}
{"text": "This version of the system has several limitations : .Second , it is implemented in SWI Prolog , a language that is highly suitable for language processing and well - suited to fast prototyping [ 33 ] , but somewhat under - performant .", "label": "", "metadata": {}, "score": "58.22306"}
{"text": "This could be done by writing an RDF / XML or N3 file and reading that in but we have chosen to use the RDF API : . createProperty ( NS , \" q \" ) ; rdfsExample . add ( p , RDFS . subPropertyOf , q ) ; rdfsExample .", "label": "", "metadata": {}, "score": "58.24913"}
{"text": "Binds ? val to the ?index'th entry in the RDF list ? list .If there is no such entry the variable will be unbound and the call will fail .Only useable in rule bodies . listLength ( ?l , ? len ) .", "label": "", "metadata": {}, "score": "58.292625"}
{"text": "The SEARCH button on right launches the search , whose result appear in the result panel below .SPARQL 1.1 Update .One enters SPARQL 1.1 Update text and endpoint in a new window with a jEdit editor for SPARQL text .", "label": "", "metadata": {}, "score": "58.301888"}
{"text": "Assuming it is used for big data , the parse tree is not kept in memory , but the triples are also inserted in internal KB .Reading XMI files ( UML or eCore ) .To read an UML file , push the button with the UML logo , or drop an URL ending with .", "label": "", "metadata": {}, "score": "58.31121"}
{"text": "There are in fact two forward engines included within the Jena code base , an earlier non - RETE implementation is retained for now because it can be more efficient in some circumstances but has identical external semantics .This alternative engine is likely to be eliminated in a future release once more tuning has been done to the default RETE engine .", "label": "", "metadata": {}, "score": "58.445377"}
{"text": "The data file shows information on serveral hypothetical computer configurations including two different descriptions of the configurations \" whiteBoxZX \" and \" bigName42 \" .We can create an instance of the OWL reasoner , specialized to the demo schema and then apply that to the demo data to obtain an inference model , as follows : . get ( ) . loadModel ( \" file : data / owlDemoSchema .", "label": "", "metadata": {}, "score": "58.462868"}
{"text": "v ) makeInstance ( ? x , ?p , ? t , ?v ) .Binds ?v to be a blank node which is asserted as the value of the ?p property on resource ? x and optionally has type ?", "label": "", "metadata": {}, "score": "58.5905"}
{"text": "Hielkema F : Using Natural Language Generation to Provide Access to Semantic Metadata .PhD thesis .2009 , University of Aberdeen .Galanis D , Androutsopoulos I : Generating Multilingual descriptions from Linguistically Annotated OWL Ontologies : the NaturalOWL System .", "label": "", "metadata": {}, "score": "58.595146"}
{"text": "P ?B owl : sameAs ?C ) ] .Rule allID illustrates the functor use for collecting the components of an OWL restriction into a single datastructure which can then fire further rules .Rule all2 illustrates a forward rule which creates a new backward rule and also calls the print procedural primitive .", "label": "", "metadata": {}, "score": "58.60533"}
{"text": "l. .listEqual ( ? la , ? lb ) listNotEqual ( ? la , ? lb ) .listEqual tests if the two arguments are both lists and contain the same elements .The equality test is semantic equality on literals ( sameValueAs ) but will not take into account owl : sameAs aliases .", "label": "", "metadata": {}, "score": "58.664207"}
{"text": "Here is a test I did with Drools before writing an automated transform for EulerGUI .The only rule was this one , defining what an OWL Transitive Property is , taken from rpo - rules .n3 from the Euler project : .", "label": "", "metadata": {}, "score": "58.73918"}
{"text": "( e.g. : at the step named \" Protein \" , the unit \" sequenceProvider \" , whose role is to read protein sequences from a file , will work ) .At the level just next to the current unit , are represented the units that will be activated as its continuation .", "label": "", "metadata": {}, "score": "58.76643"}
{"text": "v ) .True if there is no known triple ( x , p , ) or ( x , p , v ) in the model or the explicit forward deductions so far .remove(n , ... ) drop(n , ... ) .", "label": "", "metadata": {}, "score": "58.805122"}
{"text": "We do n't show here all the intermediate results produced by the task 's execution , nor details on parameters used for each tree building algorithm but FIGENIX users can consult , via the Web interface , all produced genomic results and associated parameters .", "label": "", "metadata": {}, "score": "58.82112"}
{"text": "Tracing is not supported by a convenience API call but , for those reasoners that support it , it can be enabled using : .Dynamic tracing control is sometimes possible on the InfModel itself by retrieving its underlying InfGraph and calling setTraceOn ( ) call .", "label": "", "metadata": {}, "score": "58.857204"}
{"text": "partial_congruence(Test , Label ) : - .topology(Test , Best , [ Label1 , Val1 ] , [ Label2 , Val2 ] ) , .Appendix 2 -Commented prolog code for paralogy groups ' detection .Each node of domain 's phylogenetic tree , given to the \" expert system \" by an EK- unit , can have many children but for implementation reasons , we code it as a binary tree .", "label": "", "metadata": {}, "score": "58.9005"}
{"text": "With regards to the structural annotation pipeline , FIGENIX has already been used to produce results published in peer - reviewed journals .For example we annotated several amphioxus cosmids [ 36 ] and Ciona savignyi scaffolds [ 37 ] from which we deciphered several genes whose orthologs are found in human in the Major Histocompatibility Complex ( MHC ) or paralogous regions .", "label": "", "metadata": {}, "score": "58.922737"}
{"text": "Here is shown a phylogenomic inference task on human Notch1 protein .The graph associated to the phylogenomic pipeline is displayed on the left part of the figure , as a graphical tree .We introduced a virtual concept of \" step of work \" that allows to show a cyclic oriented graph as a tree .", "label": "", "metadata": {}, "score": "58.967987"}
{"text": "The FIGENIX platform currently automates 8 different pipelines of structural and functional annotation .In particular , a structural annotation pipeline , which is a hybrid method coupling ab - initio and homology - based approaches , and a functional annotation pipeline fully automating a complex phylogenomic inference method .", "label": "", "metadata": {}, "score": "58.974075"}
{"text": "To install the syntax , save the downloaded syntax file n3.vim in directory .vim / syntax ( on Windows C:\\Program Files\\Vim\\vimfiles\\syntax ) .n3 , add this in the file .vim / filetype . vim in your home directory ( on Windows C:\\Program Files\\Vim\\vimfiles\\filetype.vim ) : . drl setfiletype perl augroup END .", "label": "", "metadata": {}, "score": "59.005043"}
{"text": "View Article PubMed .Bork P , Koonin EV : Predicting functions from protein sequences -- where are the bottlenecks ?Nat Genet 1998 , 18 : 313 - 318 .View Article PubMed .Searls DB : Pharmacophylogenomics : genes , evolution and drug targets .", "label": "", "metadata": {}, "score": "59.005302"}
{"text": "More precisely , the \" RDF - ization \" is as follows : . tags become RDF properties .Gloze .There is another implementation of a converter for plain XML files or XML Schema , from the Gloze project , a Jena subproject ; see \" XML to RDF & back again \" by S. Battle .", "label": "", "metadata": {}, "score": "59.067688"}
{"text": "Differences which are not at the architecture or conceptual level reside in the type of biological applications which have been integrated in these two different systems .While MAGPIE automates processes mainly dedicated to structural annotation , FIGENIX additionally integrates Phylogenomic inference pipelines .", "label": "", "metadata": {}, "score": "59.1169"}
{"text": "Save in the editor will trigger a re - launch of the last inference run . \" Save as ... \" in the editor will add the newly created file to the project , in the deactivated state .a right - click on a statement in a rule antecedent , and choose \" possibly caused by ... \" will show a tooltip or pop - up showing the rules that can possibly trigger this statement ; . a right - click on a statement in a rule consequent , and choose \" possibly entails ... \" will show a tooltip or pop - up showing the rules that are possibly triggered by this statement ; . after an inference run in \" trace all \" mode , triples in rules will be colored according to the number of times they were activated ; in particular , triples never activated will be in red .", "label": "", "metadata": {}, "score": "59.140358"}
{"text": "C owl : equivalentClass all ( ?P , ?D ) ) ] .[ all2 : ( ?C rdfs : subClassOf all ( ?P , ?C ) [ all1b : ( ?Y rdf : type ?", "label": "", "metadata": {}, "score": "59.228485"}
{"text": "Rector AL : Modularisation of domain ontologies implemented in description logics and related formalisms including OWL .Proceedings of the 2nd International Conference on Knowledge Capture .Kapushesky M , Emam I , Holloway E , Kurnosov P , Zorin A , Malone J , Rustici G , Williams E , Parkinson H , Brazma A : Gene Expression Atlas at the European Bioinformatics Institute .", "label": "", "metadata": {}, "score": "59.385952"}
{"text": "The second part of chapter 3 , introduces these modules giving an overview of the architecture of WeatherReporter .Due to the fact that all the topics discussed here , are reanalysed in the subsequent chapters in much more detail , I found this part a bit too long and too detailed .", "label": "", "metadata": {}, "score": "59.486"}
{"text": "Another way to improve the readability of the text is by using referring expressions .A referring expression is a way of referring to a previously introduced entity , without describing the entity again .Pronouns and noun phrases are the most common ways of referring to an already introduced entity .", "label": "", "metadata": {}, "score": "59.48757"}
{"text": "2004 , Springer Verlag .Kalyanpur A , Parsia B , Sirin E , Grau B , Hendler J : Swoop : a web ontology editing browser .Journal of Web Semantics .Erdman M : Ontology engineering and plug - in development with the NeOn Toolkit .", "label": "", "metadata": {}, "score": "59.50265"}
{"text": "The query is in a local file with a . rq or . sparql suffix .The URL of the SPARQL service ( endpoint ) is chosen through an editable combo box .An empty string means no SPARQL service ; in this case the RDF sources being queried are in the SPARQL query itself , in FROM clause(s ) .", "label": "", "metadata": {}, "score": "59.510574"}
{"text": "This slowness is because diagram editors rely on both the mouse and the keyboard .Syntax .We are working on \" UML Textual \" diagrams , that is to say simplified UML class diagrams that one can type with a simple text editor or send by mail .", "label": "", "metadata": {}, "score": "59.568165"}
{"text": "Here we have three significant groups tagged \" G \" on the figure ( species taxon end the labels ) .Biologists use to determine theses groups by just looking at the tree .This is typically the kind of knowledge that can be modeled in the expert system and that is detailed in Appendix 2 .", "label": "", "metadata": {}, "score": "59.5865"}
{"text": "A positive point that is worth noting is the way the authors develop different arguments .They do not try to persuade the reader that their choice is the correct one .Instead , they present a good balance of pro and contra arguments for their choice .", "label": "", "metadata": {}, "score": "59.63553"}
{"text": "Survey 2 .The generated texts for the second survey were produced by an updated version of the NLG program , with the following changes : .The annotation label was processed differently from the URI fragment for the lexical entry , so that technical terms like ' HeLa ' were no longer subdivided inappropriately into ' he la ' .", "label": "", "metadata": {}, "score": "59.78232"}
{"text": "- avoid messages on the standard output , use a logger and a message tab , . especially for input errors . - read OWL / XML files ( with OWLAPI ) : use case : read files from AceWiki .- add a cache for compiled Drools rules bases ( with OSCache ) .", "label": "", "metadata": {}, "score": "59.8984"}
{"text": "Combining features .Interoperability with Prot\u00e9g\u00e9 .If the N3 view of an ontology is not enough for you , you can open it with Prot\u00e9g\u00e9 4.1 .Prot\u00e9g\u00e9 can read N3 facts ( without rules ) .You can also drag - and - drop an URL on Prot\u00e9g\u00e9 .", "label": "", "metadata": {}, "score": "59.900215"}
{"text": "Performance of two Ab - initio methods vs. FIGENIX 's structural annotation method .Performances were measured on a modified version of the HMR195 [ 53 ] dataset .The new dataset contains 55 sequences from Mouse and Rat genomes .They were annotated with Genscan , HMMGene and FIGENIX ( with the human section of Swissprot [ 54 ] as a reference database for homology - based approach ) .", "label": "", "metadata": {}, "score": "60.002823"}
{"text": "CAVEAT .Beware , on Linux the pulldown menu in dotty does not work if the NumLock key is activated ( GraphViz bug 524 ) .Show N3 parse tree .Click on the PARSE button near each source URL .Show original source of N3 document .", "label": "", "metadata": {}, "score": "60.07203"}
{"text": "( This means that the publisher has sent us a review copy . )Then contact Simin Karimi at simin linguistlist.org or Terry Langendoen at terry linguistlist.org .Directory .Building natural language generation systems Ehud Reiter and Robert Dale Studies in Natural Language Processing Cambridge University Press , 2000 , 248 pages Reviewed by Constantin Orasan Computers are very good at dealing with large amounts of data in a relatively short time .", "label": "", "metadata": {}, "score": "60.082397"}
{"text": "View Article PubMed .Danchin E , Vitiello V , Vienne A , Richard O , Gouret P , McDermott MF , Pontarotti P : The Major Histocompatibility Complex Origin .Immunol Rev 2004 , 198 : 216 - 232 .View Article PubMed .", "label": "", "metadata": {}, "score": "60.104088"}
{"text": "In addition , there are convenience methods on the ReasonerRegistry for locating a prebuilt instance of each of the main reasoners ( getTransitiveReasoner , getRDFSReasoner , getRDFSSimpleReasoner , getOWLReasoner , getOWLMiniReasoner , getOWLMicroReasoner ) .Note that the factory objects for constructing reasoners are just there to simplify the design and extension of the registry service .", "label": "", "metadata": {}, "score": "60.112755"}
{"text": "In three questions ( Q13-Q15 in Figure 3 ) , we explored various combinations of aggregation and elision : .Q13 contrasts a non - aggregated form ( Q13a , one sentence per axiom ) with three aggregated forms of decreasing prolixity .", "label": "", "metadata": {}, "score": "60.127903"}
{"text": "Horridge M , Bechhofer S , Noppens O : Igniting the OWL 1.1 Touch Paper : The OWL API .OWLED 2007 Proceedings of the Third International Workshop on OWL : Experiences and Directions .2007 , Innsbruck , Austria .Gazdar G , Mellish C : Natural Language Processing in PROLOG : an introduction to computational linguistics .", "label": "", "metadata": {}, "score": "60.1836"}
{"text": "Depending on project circonstances and team skills , one can enter the train at any \" station \" .Then either Euler engine can be used for one time ( batch ) run , or Drools for dynamic ( stateful ) processing .", "label": "", "metadata": {}, "score": "60.210907"}
{"text": "Concerning structural annotation pipelines , the size of the input sequence as well as the predicted gene density and complexity ( in terms of number of exons / introns ) all have an impact on the process 's performance .To date , we have annotated amphioxus cosmids of sizes around 40 kb with a mean number of 5 predicted genes in less than half an hour per cosmid .", "label": "", "metadata": {}, "score": "60.224907"}
{"text": "The result is a ValidityReport object which comprises a simple pass / fail flag ( ValidityReport.isValid ( ) ) together with a list of specific reports ( instances of the ValidityReport .Report interface ) which detail any detected inconsistencies .At a minimum the individual reports should be printable descriptions of the problem but they can also contain an arbitrary reasoner - specific object which can be used to pass additional information which can be used for programmatic handling of the violations .", "label": "", "metadata": {}, "score": "60.29361"}
{"text": "A simple example of this is that the interesting bits of RDFS can be captured by enabled TranstiveClosureCaching and including just the four core rules : .[ rdfs2 : ( ? x ? p ?y ) , ( ?p rdfs : domain ? x rdf : type ?", "label": "", "metadata": {}, "score": "60.3535"}
{"text": "P ?Y ) , ( ?X rdf : type ?C ) ] ] .[ max1 : ( ?A rdf : type max ( ?P , 1 ) ) , ( ?A ?P ?B ) , ( ?", "label": "", "metadata": {}, "score": "60.403152"}
{"text": "N - Triples , Turtle , N3 formats .As these formats are the native formats for EulerGUI , the internal N3 parser is used , the parse tree is kept in memory , and the triples are inserted in internal KB .", "label": "", "metadata": {}, "score": "60.409515"}
{"text": "- YAML import and export ( using snakeyaml ) .- component based architecture with on - demand download ( JNLP ? , OSGi ? , Maven based ? )Hopefully this would allow to download the auxiliary jars on demand , .", "label": "", "metadata": {}, "score": "60.467606"}
{"text": "WHERE clause in the ?SCOPE ?SPAN of all asserted n3 formulae and their log : conclusion \" ; . rdfs : domain rdf : List ; . rdfs : range rdf : List .e : notLabel a rdf : Property ; . rdfs : comment \" builtin to test wether the subject is not a blank node with label in object ( this is a level breaker ) \" ; . rdfs : domain rdfs : Resource ; . rdfs : range rdfs : Literal .", "label": "", "metadata": {}, "score": "60.505085"}
{"text": "y ) , ( ?p rdfs : range ?y rdf : type ?c ) ] [ rdfs6 : ( ? a ?p ?b ) , ( ?p rdfs : subPropertyOf ?a ? q ?b ) ] [ rdfs9 : ( ? x rdfs : subClassOf ?", "label": "", "metadata": {}, "score": "60.524456"}
{"text": "Technically , the conversion is performed using freely available software : the Manchester OWL API that transforms from OWL / RDF to OWL / XML , and the Prolog library for transforming any XML file into a list of Prolog terms .", "label": "", "metadata": {}, "score": "60.706116"}
{"text": "User can choose to focus on a specific scope on any node of the tree of life ( the vertebrates , the bilaterians ... ) .In the next step , we produce an alignment with CLUSTALW [ 19 ] .Then the alignment is modified to eliminate large gaps .", "label": "", "metadata": {}, "score": "60.749435"}
{"text": "The link is below : .It is meant as a ' hello - world ' tutorial with links into the more detailed documentation .Which rule engine to use ?With EulerGUI you have 5 engines !In fact most of the N3 engines I know are here , except the newest clone of CWM in Scala ( swap - scala ) by Dan Conolly , and the recent km - rdf - Henry by Yves Raimond in SWI Prolog .", "label": "", "metadata": {}, "score": "60.818928"}
{"text": "full_congruence(templeton , Best ) , . full_congruence ( kishino - hasegawa , Best ) , .get_fusion_label(Best , FusionOnTheBestLabel ) .Information brought by EK unit during the pipeline execution take a form like this : . topology(NameOfTest , Best , [ Label1 , Val1 ] , [ Label2 , Val2 ] ) .", "label": "", "metadata": {}, "score": "60.90361"}
{"text": "FIGENIX 's technical architecture .The FIGENIX ( 1.0 ) platform is structured as a 3 tiered software which means that it is composed of three layers : the database management system , the server - side components and the graphical user interfaces ( Figure 1 ) .", "label": "", "metadata": {}, "score": "60.990677"}
{"text": "allValuesFrom . full , mini .Partial support , forward direction only ( member of a allValuesFrom(p , C ) implies that all p values are of type C ) .Does handle cases where the reverse direction is trivially true ( e.g. by virtue of a global rdfs : range axiom ) .", "label": "", "metadata": {}, "score": "61.05159"}
{"text": "owl : unionOf . all .Partial support .Full supports both directions ( existence of a value implies membership of someValuesFrom restriction , membership of someValuesFrom implies the existence of a bNode representing the value ) .Mini omits the latter \" bNode introduction \" which avoids some infinite closures .", "label": "", "metadata": {}, "score": "61.084415"}
{"text": "This is useful for debugging rather than serious IO work . listContains ( ?l , ? x ) listNotContains ( ?l , ? x ) .Passes if ?l is a list which contains ( does not contain ) the element ?", "label": "", "metadata": {}, "score": "61.162407"}
{"text": "The list of arguments available for Euler using Yap Prolog ( EYE ) can be obtained by running the engine with argument . --help .EulerGUI command line arguments .you can even add a query by preceding it with --query ( or -q ) like in EYE 's arguments ( see above ) ; .", "label": "", "metadata": {}, "score": "61.346252"}
{"text": "- how does a user know when a project need to use cwm , euler , fuxi or reasoner4j .if the N3 rules are specific ?there should be something like : . - save user actions in an N3 file , to facilitate bug reports : . implement as a ProjectListener . - hourglass should show the eclapsed time ( progress of the computation as % not possible , but CPU and elapsed times possible ) .", "label": "", "metadata": {}, "score": "61.408894"}
{"text": "To do so , simply use one of the functions provided in the debug module , either by running the debug.py file in the interpreter or by importing it : . import debug debug.gen_textplans([\"-l \" , \" German \" , \" -p \" , \" Prolog \" ] ) .", "label": "", "metadata": {}, "score": "61.422375"}
{"text": "To do so , simply use one of the functions provided in the debug module , either by running the debug.py file in the interpreter or by importing it : . import debug debug.gen_textplans([\"-l \" , \" German \" , \" -p \" , \" Prolog \" ] ) .", "label": "", "metadata": {}, "score": "61.422375"}
{"text": "To extract information from a Java classes tree , you just have to use the \" Add New Source \" menu and click on \" Add Java classes tree \" as is : .EulerGUI recursively processes the Java classes in the chosen directory ( in this example , \" .", "label": "", "metadata": {}, "score": "61.44905"}
{"text": "This is actually Javascript code generation , but instantiating Java objects .It is not currently activated anymore from EulerGUI 1.8 on .After an Euler run , click on pull - down menu \" Tools \" / \" Javascript console \" .", "label": "", "metadata": {}, "score": "61.548653"}
{"text": "n3 in .The \" Open Mind Common Sense \" project is very interesting , because it asks questions about the users 's sentences in plain english , to precise the inferred meaning .The database content is available as RDF .", "label": "", "metadata": {}, "score": "61.566044"}
{"text": "Detecting genes , their organization , structure and function is a major challenge of the genomic and post - genomic era .Two fields of genomic biology are dedicated to this task and are known as structural and functional annotation .Structural annotation refers to the task of detecting genes , their location on a biological sequence , their exon / intron structure and predicting the protein sequences that they encode .", "label": "", "metadata": {}, "score": "61.652924"}
{"text": "This is particuliarly convenient to consult the documentation of refered ontologies , and also in in conjunction with the Launch OWL reasoner tool .N3 shell ( N3 command line ) .What is it ?It is an interactive way to work with the Knowledge Base in command line mode .", "label": "", "metadata": {}, "score": "61.690437"}
{"text": "This capability is called Truth Maintenance System ( TMS ) .To demonstrate this , you can open this example : domotic.n3p .It has only one rule : .L a ns1:Light .L ns1:hasControl ?SWITCH .", "label": "", "metadata": {}, "score": "61.83764"}
{"text": "or prefix : localname // e.g. rdf : type .or ?varname // variable . or ' a literal ' // a plain string literal .or number // e.g. 42 or 25.5 .The \" , \" separators are optional .", "label": "", "metadata": {}, "score": "61.871883"}
{"text": "During a classification execution with Pellet , the rules are taken into account , complying with a subset of SWRL called DL safe ( but as of july 2010 Pellet does not implement SWRL builtins ) .SWRL rules are stored in OWL / RDF , in the same document as the OWL ontology that they complement .", "label": "", "metadata": {}, "score": "61.97881"}
{"text": "Specifically , it tests for : .Illegal existence of a property restricted by a maxCardinality(0 ) restriction .Two individuals both sameAs and differentFrom each other .Two classes declared as disjoint but where one subsumes the other ( currently reported as a violation concerning the class prototypes , error message to be improved ) .", "label": "", "metadata": {}, "score": "62.002472"}
{"text": "separately CWM ) .- compare results between CWM and Euler runs .- expert system to find a suitable editor on a given machine .- put Prolog console in a console frame , not standard input / output .Implemented features .", "label": "", "metadata": {}, "score": "62.046165"}
{"text": "XMLEncoder file factsTriples.xml .Then to load and run facts and rules independently from EulerGUI , you can use class .Fuzzy logic .There is a rule base for Euler engine for \" Case Based Fuzzy Cognitive Maps \" .This rule base is automatically loaded as a subproject whenever this prefix is added to the project : . @prefix fl : .", "label": "", "metadata": {}, "score": "62.075485"}
{"text": "- open one or more existing N3 files and make a project of it , . by multiple command line arguments .- import SWRL rules from OWL files from Prot\u00e9g\u00e9 . - link to Pellet : show OWL inferred class hierarchy in a JTree window .", "label": "", "metadata": {}, "score": "62.088505"}
{"text": "Results for Survey 1 are summarised in Table 2 An example of verbalisations from this first iteration is shown in Table 3 .Summary of survey results on natural language definitions from iteration 1 .Question : ' How understandable are the definitions ? '", "label": "", "metadata": {}, "score": "62.109516"}
{"text": "There are two ways of achieving this sort of configuration within Jena ( not counting using an external engine that already supports such a combination ) .Firstly , it is possible to cascade reasoners , i.e. to construct one InfModel using another InfModel as the base data .", "label": "", "metadata": {}, "score": "62.121788"}
{"text": "x foaf : name ? name1 ; foaf : mbox ? mbox1 .y foaf : name ? name2 ; foaf : mbox ?mbox2 .FILTER ( ? mbox2 & & ?name1 !Caveats .Note that only CONSTRUCT queries can generate N3 data .", "label": "", "metadata": {}, "score": "62.16395"}
{"text": "In Jena simple entailment can be implemented by translating a graph containing bNodes to an equivalent query containing variables in place of the bNodes .Such a query is can directly match the literal node and the RDF API can be used to extract the datatype of the literal .", "label": "", "metadata": {}, "score": "62.20497"}
{"text": "View Article PubMed .Vienne A , Rasmussen J , Abi - Rached L , Pontarotti P , Gilles A : Systematic phylogenomic evidence of en bloc duplication of the ancestral 8p11.21 - 8p21.3-like region .Mol Biol Evol 2003 , 20 : 1290 - 1298 .", "label": "", "metadata": {}, "score": "62.348312"}
{"text": "The sixth chapter describes the process of mapping abstract text specifications into a surface text by the surface realiser .It consists of two processes : structure and linguistic realiser .The first one is in charge of the layout of the document , mapping the internal representation into coding specific to the medium the generated text is displayed in ( e.g. paragraphs , the way the headings are displayed , etc . ) .", "label": "", "metadata": {}, "score": "62.5591"}
{"text": "It would be nice to export an EulerGUI project as a Joseki configuration .Each data source could be stored in Joseki .In fact , we can either generate a configuration Joseki in N3 or generate SPARQL / Update queries that will create the database for a server ( empty or not ) .", "label": "", "metadata": {}, "score": "62.639843"}
{"text": "// but Drools does n't allow yet implicit variable binding .// cf chat with Mark Proctor 2008 - 11 - 09 :-( .then . insertLogical ( new Triple ( $ S , $ P , $ O ) ) ; . end .", "label": "", "metadata": {}, "score": "62.758526"}
{"text": "Similarly , some comments were also made on the language of ' bearer of ' in the context of a disease ; such relationships come from using the relation ontology [ 30 ] as part of the OBO process .Overall in Survey 1 , the modal answer given was the 2nd highest rank ( a score of 4-see Table 2 ) , which appears to indicate , in this limited response , that answers were at least some way to conveying an understandable meaning .", "label": "", "metadata": {}, "score": "62.890335"}
{"text": "Beyond this the rules implementing the OWL constructs can interact in complex ways leading to serious performance overheads for complex ontologies .Characterising the sorts of ontologies and inference problems that are well tackled by this sort of implementation and those best handled by plugging a Description Logic engine , or a saturation theorem prover , into Jena is a topic for future work .", "label": "", "metadata": {}, "score": "62.93984"}
{"text": "createResource ( ) .addProperty ( ReasonerVocabulary .theInstance ( ) . createInfModel( reasoner , rdfsExample ) ; .This is a rather long winded way of setting a single parameter , though it can be useful in the cases where you want to store this sort of configuration information in a separate ( RDF ) configuration file .", "label": "", "metadata": {}, "score": "62.95714"}
{"text": "SPARQL syntax for queries ( either translating to N3 queries , or reusing ARQ ) .- connect to Sesame , Virtuoso databases : amounts to SPARQL access ; .more to do ? - connect to JDBC database ; ( ? mapping RDBToRDF , embed R2D as an EulerGUI plugin ) .", "label": "", "metadata": {}, "score": "62.963676"}
{"text": "Around tables will be organized to allow for different participants . sharing their experiences on scoops related to the research end . teaching in the telecommunication field .Important Dates : . 30 Novembre 2002 Submission of Abstracts and Invited Session .", "label": "", "metadata": {}, "score": "62.980995"}
{"text": "This idea made some researchers hope that it is possible to make systems which can understand and generate language using common resources .Although , this idea is very appealing , the authors of this book draw attention to the fact that it is very difficult to build effective systems which perform both tasks because the problems to be solved are quite different in each case .", "label": "", "metadata": {}, "score": "62.984894"}
{"text": "For complex reasoning involving peeping into formulas the Euler Prolog engine ( EYE ) is indispensable ( a.k.a .EulerSharp , Eye ) .It also has more built - ins ( math , strings , logic , RIF ) .Also for modify - and - test cycle Euler is generally quicker , because there is no rule compilation step , this a all - in - one reasoning engine .", "label": "", "metadata": {}, "score": "63.031208"}
{"text": "As a result , the materials for the second survey were subtly different from Survey 1 ( though certainly related ) , so that a direct pairwise comparison is not possible .In Survey 2 ( see Table 4 , there were 14 completed sets of answers .", "label": "", "metadata": {}, "score": "63.08204"}
{"text": "n3p .The rule is similar to what FaceBook does , and comes from this ATTEMPTO Controled English text : .If a user U has - as - friend a person X , and has - as - friend a person Y , and X is not Y , .", "label": "", "metadata": {}, "score": "63.175346"}
{"text": "2010 , 38 ( suppl 1 ) : D690-D698 .10.1093/nar / gkp936 .View Article .Rector A , Drummond N , Horridge M , Rogers J , Knublauch H , Stevens R , Wang H , Wroe C : OWL Pizzas : Practical Experience of Teaching OWL - DL : Common Errors & Common Patterns . 14th International Conference on Knowledge Engineering and Knowledge Management EKAW 2004 .", "label": "", "metadata": {}, "score": "63.22268"}
{"text": "Authors ' Affiliations .School of Computer Science , The University of Manchester .European Bioinformatics Institute , Wellcome Trust Genome Campus .Department of Computing , Open University .References .Malone J , Holloway E , Adamusiak T , Kapushesky M , Zheng J , Kolesnikov N , Zhukova A , Brazma A , Parkinson H : Modeling sample variables with an Experimental Factor Ontology .", "label": "", "metadata": {}, "score": "63.232395"}
{"text": "- import from SPARQL data sources : connect to a SPARQL endpoint , viewed as another .N3 source .- import XML Schema and XML documents having a Schema ( or not ) , . by using Gloze add - on to Jena , and ReDeFer project .", "label": "", "metadata": {}, "score": "63.24385"}
{"text": "Note that the capture groups are numbered from 1 and the first capture group will be bound to ? m1 , we ignore the implicit capature group 0 which corresponds to the entire matched string .So for example .regexp('foo bar ' , ' ( . ) m1 , ? m2 ) .", "label": "", "metadata": {}, "score": "63.279373"}
{"text": "This feature is activated by default in the GUI ( it can be switched off in the API ) .EulerGUI application building Framework .Introduction to the framework .EulerGUI is more than a Integrated Development Environment , it is a framework to build rule - based applications on several platforms ; see Overall diagrams .", "label": "", "metadata": {}, "score": "63.305935"}
{"text": "Alternative renderings for a selection of definitions ( Survey 2 , Part 2 ) .Participants were asked , in two separate questions , to pick which they thought was the most natural to read and which best captured the meaning of the OWL .", "label": "", "metadata": {}, "score": "63.433376"}
{"text": "UML , XMI , RDF , ... .- check consistency of the project , whenever the file changes on disk ) .( still need the button in case the GUI ca n't always know when . an HTPP URL has changed ) .", "label": "", "metadata": {}, "score": "63.48149"}
{"text": "Secondly , one can create a single GenericRuleReasoner whose rules combine rules for RDFS or OWL and custom rules .At first glance this looks like it gets round the layering limitation .However , the default Jena RDFS and OWL rulesets use the Hybrid rule engine .", "label": "", "metadata": {}, "score": "63.60038"}
{"text": "Visually the correct installation of the facultative external tools can be seen by the activation ( grey or colored ) of the buttons for CWM , FuXi , and graph visualization .only when NOT on Linux or Windows : . to enable Euler EYE engine for N3 logic , install Yap Prolog platform plus wget and make sure that both are in the PATH environment variable ; .", "label": "", "metadata": {}, "score": "63.62031"}
{"text": "View Article PubMed .Eddy SR : Profile hidden Markov models .Bioinformatics 1998 , 14 : 755 - 763 .View Article PubMed .Abi - Rached L , Gilles A , Shiina T , Pontarotti P , Inoko H : Evidence of en bloc duplication in vertebrate genomes .", "label": "", "metadata": {}, "score": "63.658382"}
{"text": "Constantin Orasan in doing a PhD in Automatic Summarisation at University of Wolverhampton , U.K. In addition to automatic summarisation , his other current research interests are anaphora resolution , corpus building and analysing , and machine learning techniques for natural language .", "label": "", "metadata": {}, "score": "63.66231"}
{"text": "Whilst there remains much to do to improve our verbalisations , we are encouraged by the reactions to these early attempts .Based on the reaction from our Survey , the providers of EFO are now including these generated text definitions in their latest release ( version 2.10 ) .", "label": "", "metadata": {}, "score": "63.743217"}
{"text": "We can test this using : . getResource ( \" urn : x - hp : eg / whiteBoxZX \" ) ; if ( infmodel . contains ( whiteBox , RDF . out . out .Which gnerates the output : .", "label": "", "metadata": {}, "score": "63.747326"}
{"text": "Such dependent entities could , when the entity forms part of another sentence , become adjectival forms of the independent entities in which they inhere ( ' cell that has quality female ' becomes ' female cell ' ) .There are other , simpler forms , of such axioms-'cell x is female ' .", "label": "", "metadata": {}, "score": "63.80184"}
{"text": "isLiteral ( ? x ) notLiteral ( ? x ) isFunctor ( ? x ) notFunctor ( ? x ) isBNode ( ? x ) notBNode ( ? x ) .Test whether the single argument is or is not a literal , a functor - valued literal or a blank - node , respectively . bound ( ?", "label": "", "metadata": {}, "score": "63.90036"}
{"text": "HTTP headers if available are used for timestamps .Export as Drools .If one wants to reuse the facts and Drools rules independently of EulerGUI , one can export the Drools rules base by clicking on File / \" Export as Drools \" .", "label": "", "metadata": {}, "score": "63.92622"}
{"text": "As an alternative we could simply generate a sentence for each axiom , but the resulting text would contain many repetitions ; for example , for the set of axioms for cell line 22rv1 we would obtain : .A 22rv1 is a cell line .", "label": "", "metadata": {}, "score": "63.965805"}
{"text": "Olivier Richard and Mathieu Blanc for the automatic functional information retrieval .Antoine Schellenberger for results display tools .Alexandre Vienne , Jeffrey Rasmussen and C\u00e9line Brochier for discussions and critical review of the manuscript .Authors ' contributions .PG computationally translated all biological methods , protocols and concepts into automated pipelines in FIGENIX , he developed the expert system and the mutli - agents system he produced the vast majority of the code constituting the platform and drafted the manuscript .", "label": "", "metadata": {}, "score": "64.127716"}
{"text": "Given the complexity of this task the authors opt to use an existing realiser , rather than building one from the scratch .Three possible choices are presented : KPML based on systemic functional grammar , SURGE based on functional unification grammar and RealPro based on meaning - text theory , a form of dependency grammar .", "label": "", "metadata": {}, "score": "64.13747"}
{"text": "Our investment in [ research and development ] has helped our technology evolve and today it is more mature , scalable and adaptable than ever .Our articulate intelligence solutions aim to increase profits , lower risk and improve operations for our customers .", "label": "", "metadata": {}, "score": "64.15772"}
{"text": "View Article PubMed .Koski LB , Golding GB : The closest BLAST hit is often not the nearest neighbor .J Mol Evol 2001 , 52 : 540 - 542 .PubMed .Sjolander K : Phylogenomic inference of protein molecular function : advances and challenges .", "label": "", "metadata": {}, "score": "64.28174"}
{"text": "full_congruence(Test , Best ) : - .topology(Test , Best , [ _ , Val1 ] , [ _ , Val2 ] ) , . % we have no congruence when comparing rates are lower than the chosen threshold .no_congruence(Test , Best ) : - .", "label": "", "metadata": {}, "score": "64.36179"}
{"text": "\"Result \" units , or R - units , are in charge of the most important genomic results production .Those results are intended to be the components of a scientific report produced by an annotation task started by the biologist .", "label": "", "metadata": {}, "score": "64.38476"}
{"text": "isDType ( ?l , ? t ) notDType ( ?l , ? t ) .Tests if literal ?l is ( or is not ) an instance of the datatype defined by resource ?t. . print ( ? x , ... ) .", "label": "", "metadata": {}, "score": "64.52136"}
{"text": "- export in common rule formats ( SWRL , RIF , RuleML , Rewerse , Prolog ... ) .- import other rule formats ( RIF ) .- design : introduce some light - weight extensions points ( maybe using AOP ? ) or use Felix OSGi engine .", "label": "", "metadata": {}, "score": "64.52573"}
{"text": "makeSkolem ( ? x , ? v1 , ... ? vn ) .Binds ? x to be a blank node .The blank node is generated based on the values of the remain ?vi arguments , so the same combination of arguments will generate the same bNode .", "label": "", "metadata": {}, "score": "64.55509"}
{"text": "subtree_species(node(Species , LeftChild , RightChild ) , node(N , SpeciesList , Left , Right ) ) : - . subtree_species(LeftChild , Left ) , . subtree_species(RightChild , Right ) , .compile_annotations(NL , SpeciesListL , NR , SpeciesListR , N , SpeciesList ) .", "label": "", "metadata": {}, "score": "64.55609"}
{"text": "processing that focuses on the generation of written texts in English . or other human languages , generally from some non - linguistic data or .knowledge .Accomplishing this goal may be envisioned for a number of . different purposes , including standardized and/or multi - lingual .", "label": "", "metadata": {}, "score": "64.7588"}
{"text": "There are also rules to translate UML or eCore expressed in N3 into OWL .To perform the translation , add uml_owl - rules .n3 or ecore_owl - rules .n3 to your EulerGUI project .Then to get all the translated OWL objects with all their properties , add this to the project query : . @prefix umlowl : .", "label": "", "metadata": {}, "score": "64.92073"}
{"text": "For further testing , try debug.testqueries and debug.error_testqueries , which basically are lists of predefined valid and invalid query arguments and which can be used to query the database ( and see how errors are handled ) .Documentation .The documentation is available online , but you can always get an up - to - date local copy using Sphinx .", "label": "", "metadata": {}, "score": "64.98497"}
{"text": "For further testing , try debug.testqueries and debug.error_testqueries , which basically are lists of predefined valid and invalid query arguments and which can be used to query the database ( and see how errors are handled ) .Documentation .The documentation is available online , but you can always get an up - to - date local copy using Sphinx .", "label": "", "metadata": {}, "score": "64.98497"}
{"text": "Boeckmann B , Bairoch A , Apweiler R , Blatter MC , Estreicher A , Gasteiger E , Martin MJ , Michoud K , O'Donovan C , Phan I , Pilbout S , Schneider M : The SWISS - PROT protein knowledgebase and its supplement TrEMBL in 2003 .", "label": "", "metadata": {}, "score": "64.996735"}
{"text": "c ) max ( ? a , ?b , ?c ) product ( ? a , ?b , ?c ) quotient ( ? a , ?b , ?c ) .Sets c to be ( a+b ) , ( a+1 ) ( a - b ) , min(a , b ) , max(a , b ) , ( a b ) , ( a / b ) .", "label": "", "metadata": {}, "score": "65.07143"}
{"text": "We implement a parser with Parser4J , that interprets and translates this directly into OWL : . m : Permission a owl : Class .m : Document a owl : Class .m : permission a owl : ObjectProperty ; rdfs : domain m : Document ; rdfs : range m : Permission .", "label": "", "metadata": {}, "score": "65.11275"}
{"text": "Here are some example rules which illustrate most of these constructs : .[ allID : ( ?C rdf : type owl : Restriction ) , ( ?C owl : onProperty ?P ) , ( ?C owl :", "label": "", "metadata": {}, "score": "65.139496"}
{"text": "This is the approach used in the default RDFS reasoner .Jena includes a general purpose rule - based reasoner which is used to implement both the RDFS and OWL reasoners but is also available for general use .This reasoner supports rule - based inference over RDF graphs and provides forward chaining , backward chaining and a hybrid execution model .", "label": "", "metadata": {}, "score": "65.217224"}
{"text": "Jena includes an RDFS reasoner ( RDFSRuleReasoner ) which supports almost all of the RDFS entailments described by the RDF Core working group [ RDF Semantics ] .The only omissions are deliberate and are described below .This reasoner is accessed using ModelFactory.createRDFSModel or manually via ReasonerRegistery.getRDFSReasoner ( ) .", "label": "", "metadata": {}, "score": "65.278564"}
{"text": "In addition , the module can produce attribute - value matrices of these textplans as LaTeX / PDF files .Licence .Author .Arne Neumann .Acknowledgements .This software reimplements parts of the Java - based JPolibox text - generation software written by Alexandra Strelakova , Felix Dombek , Mathias Langer and Till Kolter . pypolibox also includes a heavily modified version of Nicholas FitzGerald 's pydocplanner , which he released under a Creative Commons license ( not specified further ) .", "label": "", "metadata": {}, "score": "65.2999"}
{"text": "In addition , the module can produce attribute - value matrices of these textplans as LaTeX / PDF files .Licence .Author .Arne Neumann .Acknowledgements .This software reimplements parts of the Java - based JPolibox text - generation software written by Alexandra Strelakova , Felix Dombek , Mathias Langer and Till Kolter . pypolibox also includes a heavily modified version of Nicholas FitzGerald 's pydocplanner , which he released under a Creative Commons license ( not specified further ) .", "label": "", "metadata": {}, "score": "65.2999"}
{"text": "conference , submissions and presentations can be done either in .french or in english .Selected papers , will be considered for possible . publication in special issues of international journals will be .effectuated in order to be published in international journals .", "label": "", "metadata": {}, "score": "65.314606"}
{"text": "Human TRHDE .ENPEP , LNPEP , ERAP , LRAP , and ANPEP are not detected as paralogous to TRHDE .None .None .Each human gene of this family has been assigned a distinct ortholog in protostomes ( e.g. Drosophila ) suggesting this multigenic family emerged before the separation of Protostomes and Deuterostomes . PSMB5/PSMB8 .", "label": "", "metadata": {}, "score": "65.31571"}
{"text": "biggest_groups(Group , [ Group ] ) : - . diff(TaxeIds , no ) , . % reject subtree as a group .biggest_groups ( _ , [ ] ) .Declarations .Acknowledgements .Thanks to all students and scientists who worked with us in the laboratory this last three years and specially : Sandrine Jacob for the Web interface .", "label": "", "metadata": {}, "score": "65.44672"}
{"text": "Whereas the file testing / reasoners / rdfs / dttest3.nt uses the value \" 25\"^^xsd : decimal instead , which is a valid integer and so passes .Note that the individual validation records can include warnings as well as errors .", "label": "", "metadata": {}, "score": "65.47067"}
{"text": "n3 and .n3p is imported , .or there is a property app : editedClass ; . do so by applying rules in a KB instance dedicated to EulerGUI itself ; . - give ( facultative ) name to projects . - edit an object graph means first visualize it ; use case friendship in FOAF ; . visualize object graph graphically ; . the current GraphViz output is unsuitable for large models ; . should apply the lens feature ; . should be able to visualize also query results .", "label": "", "metadata": {}, "score": "65.52104"}
{"text": "Nucleic Acids Res 1998 , 26 : 130 - 137 .View Article PubMed .Rogic S , Mackworth AK , Ouellette FB : Evaluation of gene - finding programs on mammalian sequences .Genome Res 2001 , 11 : 817 - 832 .", "label": "", "metadata": {}, "score": "65.711815"}
{"text": "If true switches on exhaustive tracing of rule executions to the log4j info appender .PROPderivationLogging .If true causes derivation routes to be recorded internally so that future getDerivation calls can return useful information .As we gain experience with the ways in which OWL is used and the capabilities of the rule - based approach we imagine useful subsets of functionality emerging - like that that supported by the RDFS reasoner in the form of the level settings .", "label": "", "metadata": {}, "score": "65.737915"}
{"text": "frame , to give answers and original innovating ideas and to contribute .for a common language around the information processing and the .Telecommunications .This conference will allow , in one hand , sharing .experiences to make a state of the art of the theory , the research , .", "label": "", "metadata": {}, "score": "65.826096"}
{"text": "For example , common queries in the Gene Expression Atlas [ 7 ] include searches for genes from a particular organism or organisms , for particular types of disease ( e.g. all cancers ) and for particular tissue ( e.g. all cell lines derived from breast ) .", "label": "", "metadata": {}, "score": "65.87906"}
{"text": "An interesting outcome of the first survey was that the new natural language definitions exposed an oddity in one of the EFO classes that had not been previously identified .The definition for ' Ara - C - resistant murine leukemia ' indicated that the subclasses ' b117h ' and ' b140h ' were both types of this class , implying that they were diseases rather than cell lines .", "label": "", "metadata": {}, "score": "65.881874"}
{"text": "Workshop dates : 13 - 14 April 2003 .REGISTRATION .The registration fees include attendance of the workshop and a copy of .workshop proceedings .Follow the registration instructions at the EACL .like to attend the NLG workshop .", "label": "", "metadata": {}, "score": "65.91201"}
{"text": "compile_annotations(NL , _ , NR , no , N , no ) ) : - is(N , NL + NR ) .% if no species is common between the two sub - trees , we can merge all species .compile_annotations(NL , SpeciesListL , NR , SpeciesListR , N , SpeciesList ) ) : - . biggest_groups(Child1 , Groups1 ) , . biggest_groups(Child2 , Groups2 ) , .", "label": "", "metadata": {}, "score": "66.056816"}
{"text": "Competing interests .The authors declare that they have no competing interests .Authors ' contributions .All authors contributed to this article .RP and SW designed and implemented the NLG system .AT implemented the NLG tools website .JM and RS created the study .", "label": "", "metadata": {}, "score": "66.10457"}
{"text": "Table 8 .Comparison of homology inference between FIGENIX 's pipeline and Homologene .Notch2 , Notch3 , and Notch4 are not detected as co - orthologous to Drosophila N. .Amphibian Ray - finned fish Cephalochordata Arachnida .3 different C.elegans genes are detected for Hs Notch1 , Notch2 , and Notch3 , suggesting that duplications giving rise to this family took place before the divergence between protostomes and deuterostomes , and that Notch2 , and Notch3 were lost in Drosophila .", "label": "", "metadata": {}, "score": "66.10734"}
{"text": "EulerGUI should flag non - monotonic ( non Open World Assumption ) , . and non UNA ( Unique Name Assumptions ) rules and documents containing such rules ; . implementation with N3 rules powered by Euler engine . is not parsed right when it contains a non - ASCII character .", "label": "", "metadata": {}, "score": "66.16256"}
{"text": "[ rule1 : ( ?f pre : father ? a ) ( ? u pre : brother ? u pre : uncle ? a ) ] .If the rule reasoner is configured to run in forward mode then only the forward chaining engine will be used .", "label": "", "metadata": {}, "score": "66.231224"}
{"text": "Although multilingual natural language generation is not the topic of this book , several times the authors point out how the described techniques can be used for generation of multilingual text .I recommend this book to all the people involved in building natural generation systems and other kinds of systems for processing language .", "label": "", "metadata": {}, "score": "66.23421"}
{"text": "View Article PubMed .Danchin EGJ : Reconstruction of ancestral genomic regions by comparative analysis of evolutionary conserved syntenies .Towards reconstructing the genome of the ancestor of all Bilaterian species ( Urbilateria ) .Bioinformatics , Structural biochemistry , Genomics Marseilles , Aix - Marseille II 2004 .", "label": "", "metadata": {}, "score": "66.26122"}
{"text": "Composition of TwinESTMatix and ProtPhyloGenix _ _ pipelines .Phylogenomic inference on FASTA databases built with TwinESTMatix This allows construction of phylogenetic tress mixing proteins and translated EST contigs .GenePredix .For larger DNA sequences , SlidingGenePredix can be used .", "label": "", "metadata": {}, "score": "66.29931"}
{"text": "Emiel Krahmer and Paul Piwek .Natural Language Generation for Embodied Agents .At the 7th European Agent Systems Summer School ( EASSS ) ( July 2005 , Utrecht ) .course material .Theses .Charles Callaway , Narrative Prose Generation , Ph.D. Thesis , Department of Computer Science , North Carolina State University , April 2000 .", "label": "", "metadata": {}, "score": "66.35229"}
{"text": "But when we will generate eclipse style plugins , we will try to make it with a rule based architecture , following the ideas of the D\u00e9ductions project 's \" Intelligent Modularity \" .The notion of project used to exist in Prot\u00e9g\u00e9 3 .", "label": "", "metadata": {}, "score": "66.38152"}
{"text": "TBox ' contains the ontology 's classes and properties ; ' ABox ' contains the individuals and the assertions upon them .Coverage is approximate : for instance , ACE and SWAT cover nearly all of OWL-2 , but with a few omissions . '", "label": "", "metadata": {}, "score": "66.43873"}
{"text": "Shares closed up 8.5p at 65p .Professor Reiter , Dr Somayajulu Sripada , Ian Davy and John Perry , of Aberdeen University , formed Data2Text to commercialise part of the natural language generation research being done at the institution 's school of computing science .", "label": "", "metadata": {}, "score": "66.45542"}
{"text": "Power R : Towards a Generation - Based Semantic Web Authoring Tool .Proceedings of the 12th European Workshop on Natural Language Generation .2009 , Athens .Hart G , Johnson M , Dolbear C : Rabbit : Developing a Control Natural Language for authoring ontologies .", "label": "", "metadata": {}, "score": "66.466095"}
{"text": "According to sparql / wiki / Feature : Parameters , Jena ARQ supports that in its core URL .The N3 processor could get the parameter value from the GUI , the API or the HTTP parameter .The parameter could be annotated in the N3 , like this : . @prefix foaf : . @prefix ded : . blog a ded : Parameter .", "label": "", "metadata": {}, "score": "66.5103"}
{"text": "Structural and functional annotation both require the complex chaining of numerous different software , algorithms and methods under the supervision of a biologist .The automation of these pipelines is necessary to manage huge amounts of data released by sequencing projects .", "label": "", "metadata": {}, "score": "66.58324"}
{"text": "Biochimie 1996 , 78 : 302 - 310 .View Article PubMed .Zmasek CM , Eddy SR : RIO : analyzing proteomes by automated phylogenomics using resampled inference of orthologs .BMC Bioinformatics 2002 , 3 : 14 .View Article PubMed .", "label": "", "metadata": {}, "score": "66.761955"}
{"text": "/x.n3 , ./dir / xx .n3 .this will make N3 project directory more manageable by splitting them into sub - directories .Roadmap for EulerGUI .EulerGUI is some way a laboratory for a new rule - based way of developping applications .", "label": "", "metadata": {}, "score": "66.77657"}
{"text": "The strings in most need of revision are those expressing properties - for instance , ' has part ' or ' part of ' , which would be transformed as follows : .For any string of the form has X , make a singular verb phrase has as X and a plural have as Xs ; thus we obtain ' has as part ' and ' have as parts ' .", "label": "", "metadata": {}, "score": "66.84518"}
{"text": "The class definition that was deemed most understandable was BDCM ( described in Table 3 ) , which only asserts that the class is a cell line .The most common remark otherwise was for class GM18507 ( also described in Table 3 ) .", "label": "", "metadata": {}, "score": "66.99643"}
{"text": ": PlayerOfGames a : book .: Ubik a : book .: MazeOfDeath a : book .: PlayerOfGames : writeBy : IainBanks .ns1:book a owl : Class ; rdfs : comment \" ? ? ?\" ; rdfs : label \" book \" .", "label": "", "metadata": {}, "score": "67.0182"}
{"text": "Prot\u00e9g\u00e9 is a wonderful and almost dominant tool for editing OWL ontologies .It comes with many useful plugins , e.g. for SWRL rules , ACE View for Controlled English , etc .So we try to be a complement to Prot\u00e9g\u00e9 , not a concurrent .", "label": "", "metadata": {}, "score": "67.133835"}
{"text": "Mouse / quick copy using middle mouse button ( for Unix or Linux users ) .Shortcuts / complete word / CONTROL SPACE ( for eclipse users ) . check \" highlight word at caret \" ; this highlights every occurence of the word at caret . check \" highlight selection under caret \" ; . opening large ( more than 10 Mb ) file in the editor can freeze the application for some time .", "label": "", "metadata": {}, "score": "67.17668"}
{"text": "Apart from the extension points in the rule reasoner discussed above , the intention is that it should be possible to plug external inference engines into Jena .The core interfaces of InfGraph and Reasoner are kept as simple and generic as we can to make this possible and the ReasonerRegistry provides a means for mapping from reasoner ids ( URIs ) to reasoner instances at run time .", "label": "", "metadata": {}, "score": "67.232254"}
{"text": "Transitive reasoner : Provides support for storing and traversing class and property lattices .This implements just the transitive and reflexive properties of rdfs : subPropertyOf and rdfs : subClassOf .For each type of reasoner there is a factory class ( which conforms to the interface ReasonerFactory ) an instance of which can be used to create instances of the associated Reasoner .", "label": "", "metadata": {}, "score": "67.44541"}
{"text": "For example , this screenhost of the project postproc.n3p shows GUI after clicking on Drools inference button ( the post - processing checkbox has been unchecked , so this is just the result of the main ( first ) project .prefix.cc is a website made by Richard Cyganiak to ease a very common task in the life of RDF developers and SPARQL users : looking up namespace URIs .", "label": "", "metadata": {}, "score": "67.52544"}
{"text": "Sesame .Interoperability with relational database servers .You can wrap an existing relational database in a SPARQL server .A classical tool for that is D2R .When setting up D2R for your relational database , it proposes a generic mapping between the relational schema and a generated OWL ontology ; You can adapt the default mapping to your needs .", "label": "", "metadata": {}, "score": "67.544815"}
{"text": "L ns1:hasState ?Which amounts to say : \" if the switch has a state , then the light has the same state \" .This example project has 2 data files , one with switch \" On \" ( domotic - data .", "label": "", "metadata": {}, "score": "67.822075"}
{"text": "Library usage .If you 'd like to access pypolibox from within a Python interpreter , you can simply use the same arguments .Instead of a string like -l German -p Prolog , you will have to provide your arguments as a list of strings : .", "label": "", "metadata": {}, "score": "67.90971"}
{"text": "Getting started .After having Installed and run EulerGUI , there are lots of ready made projects .Just drag'n'drop them in the middle of the frame , where \" drag'n'drop \" is written .You can also use the menu File / open project from URL .", "label": "", "metadata": {}, "score": "67.915016"}
{"text": "rdfs : subClassOf , rdfs : subPropertyOf , rdf : type .all .Normal RDFS semantics supported including meta use ( e.g. taking the subPropertyOf subClassOf ) .rdfs : domain , rdfs : range .all .Stronger if - and - only - if semantics supported .", "label": "", "metadata": {}, "score": "68.052635"}
{"text": "Thus the triples : . eg : r eg : concatFirst eg : p .eg : r eg : concatSecond eg : q .Suppose we have a Jena Model rawModel which contains the above assertions together with the additional facts : . eg : A eg : p eg : B . eg : B eg : q eg : C .", "label": "", "metadata": {}, "score": "68.0876"}
{"text": "For these alternative definitions , we wanted to gain insight into which of these definitions the participants thought were closest to natural language and therefore easiest to read and also which of the definitions participants thought were closest to capturing the meaning of the OWL .", "label": "", "metadata": {}, "score": "68.22429"}
{"text": "Arria 's natural language generation ( NLG ) engine system is based on research by professor Ehud Reiter and other scientists at Aberdeen University which was then developed by spin - out Data2Text .London - based Arria acquired Data2Text and the business subsequently listed on AIM in December last year with shares priced around 120p .", "label": "", "metadata": {}, "score": "68.24283"}
{"text": "It is just a simpler version for Semantic Web users , who are not interested in other the features of full EulerGUI : importing UML , XMI , XML , and Java framework for application building .Main features : .N3 editor : syntax coloring , tooltip with explanations about the resource under the mouse ; HTTP connection to prefix.cc site for filling missing N3 prefixes ; when an N3 file is modified on disk or Internet , it is re - parsed , and syntax errors are highlighted . button to import from : N3/Turtle , RDF , OWL / XML , SPARQL , from local files or URL .", "label": "", "metadata": {}, "score": "68.2449"}
{"text": "P rdf : type demo : TransProp ) ( ?A ?P ?B ) , ( ?B ?P ?A ?P ?C ) ] [ symmetricRule : ( ?P rdf : type demo : TransProp ) ( ?", "label": "", "metadata": {}, "score": "68.307274"}
{"text": "The local tools are buttons in a row for each N3 source .Show graph .Click on the GRAPH button near each source URL : a new window pops up with the dotty graph displayer / editor from the GraphViz project .", "label": "", "metadata": {}, "score": "68.3236"}
{"text": "News .Release date : 13-May-2014 . installation via pip or python setup.py install now adds two programs to your path : pypolibox and hlds - converter . added new output formats ( --output - format parameter ) : textplan featstructs , HLDS XML Arria NLG 's shares rise following Shell deal .", "label": "", "metadata": {}, "score": "68.33186"}
{"text": "addProperty ( p , \" foo \" ) ; .Now we can create an inference model which performs RDFS inference over this data by using : . createRDFSModel ( rdfsExample ) ; // [ 1 ] .We can then check that resulting model shows that \" a \" also has property \" q \" of value \" foo \" by virtue of the subPropertyOf entailment : . getResource ( NS + \" a \" ) ; System . out . println ( \" Statement : \" + a .", "label": "", "metadata": {}, "score": "68.44293"}
{"text": "now ( ? x ) .Binds ? x to an xsd : dateTime value corresponding to the current time . makeTemp ( ? x ) .Binds ? x to a newly created blank node . makeInstance ( ? x , ?", "label": "", "metadata": {}, "score": "68.54492"}
{"text": "Most languages \u200b\u200bhave their interactive loop : Python , Scala , Perl .So the N3 shell is an interactive loop for the N3 language .Here is a an example of a session ; note that rules can be dynamically added : .", "label": "", "metadata": {}, "score": "68.616196"}
{"text": "R. Michael Young and Johanna D. Moore , DPOCL :A Principled Approach to Discourse Planning , Abstract , 8 pages , cmp - lg , ps gz ( 52 K ) .1995 European NLGW .Brigitte Grote , Nils Lenke and Manfred Stede , Ma(r)king concessions in English and German , ( 23 pages , Abstract , cmp - lg , ps gz 147 K ) Reasoners and rule engines : Jena inference support .", "label": "", "metadata": {}, "score": "68.785805"}
{"text": "We are working on a new N3 format for EulerGUI projects to replace the current XML encoder based format , see project_ontology ; this format will as compatible as possible with Prot\u00e9g\u00e9 4 . SWRL .Several important plugins are still only in Prot\u00e9g\u00e9 3.4.X , especially the Jess bridge .", "label": "", "metadata": {}, "score": "68.88822"}
{"text": "Tests run for more than 15 minutes and they display windows which may be disturbing .On Linux this issue is easy to address with Virtual Desktops .Now open Cygwin Shell from one virtual desktop and start the tests .All the windows displayed by the tests will only be displayed in this virtual desktop and you can switch to the other virtual desktop to work on another task without being disturbed .", "label": "", "metadata": {}, "score": "69.22885"}
{"text": "If you 'd like to access pypolibox from within a Python interpreter , you can simply use the same arguments .Instead of a string like -l German -p Prolog , you will have to provide your arguments as a list of strings : .", "label": "", "metadata": {}, "score": "69.364746"}
{"text": "View Article PubMed .Gu X : Statistical methods for testing functional divergence after gene duplication .Mol Biol Evol 1999 , 16 : 1664 - 1674 .PubMed .Vienne A , Shiina T , Abi - Rached L , Danchin E , Vitiello V , Cartault F , Inoko H , Pontarotti P : Evolution of the proto - MHC ancestral region : more evidence for the plesiomorphic organisation of human chromosome 9q34 region .", "label": "", "metadata": {}, "score": "69.57802"}
{"text": "Homologene considers Notch1 as the only human ortholog to Drosophila N gene .In the case of multiple - copy genes , using such approaches to infer functional data for a gene can be misleading .Indeed after duplication , paralogous genes that are fixed in evolution usually undergo either neo - functionalization or sub - functionalization , compared to the original function of the ancestral gene [ 46 ] .", "label": "", "metadata": {}, "score": "69.818954"}
{"text": "Networks .Networks and telecommunications , communication Protocoles , . Algorithmes'ArchitectureAdequation , Transmission Techniques , .Electronic .Systems on chip , Electronic Integration , .Radiofrequence Circuits and systems , .Telecommunications 's Circuits and systems , .Applications .", "label": "", "metadata": {}, "score": "69.86644"}
{"text": "This website and associated newspapers adhere to the Independent Press Standards Organisation 's Editors ' Code of Practice .If you have a complaint about the editorial content which relates to inaccuracy or intrusion , then please contact the editor here .", "label": "", "metadata": {}, "score": "69.88683"}
{"text": "N3 mode by Jakub Rozto\u010dil .Save in the editor triggers a re - checking of the N3 syntax : errors are underlined in red .when saving an N3 file , undefined N3 prefixes are declared using the prefix.cc site ; .", "label": "", "metadata": {}, "score": "69.926056"}
{"text": "The SWRL to N3 translation is re - done every time a project with an OWL - SWRL source is opened .n3p .Here one can translate the SWRL and launch the translated N3 rules in one EulerGUI run , composed of two Euler Eye runs .", "label": "", "metadata": {}, "score": "69.962906"}
{"text": "View Article PubMed .Eisen JA , Fraser CM : Phylogenomics : intersection of evolution and genomics .Science 2003 , 300 : 1706 - 1707 .View Article PubMed .Genome Biol 2004 , 5 : R7 .View Article PubMed .", "label": "", "metadata": {}, "score": "70.02257"}
{"text": "Another tool is Prot\u00e9g\u00e9 's plugin DataMaster , which imports schema structure and data from relational databases into Prot\u00e9g\u00e9 .EulerGUI server .This paradoxical expression refers to the latest offspring of EulerGUI .It is not , at the moment , EulerGUI 's GUI having server capabilities .", "label": "", "metadata": {}, "score": "70.036865"}
{"text": "If we add the additional code : .Then we get the additional output : . because the age was given using an RDF plain litera where as the schema requires it to be a datatyped literal which is compatible with xsd : integer .", "label": "", "metadata": {}, "score": "70.07782"}
{"text": "UML_THING .OWL_THING ?P ?OWL_THING ?P ?Note that alas general OWL Restrictions have no direct UML equivalent .This is of course because OWL is based on Description Logics , where class membership is computed .On the contrary in UML , class membership is asserted on object creation .", "label": "", "metadata": {}, "score": "70.20854"}
{"text": "Nat Genet 2000 , 25 : 25 - 29 .View Article PubMed .Blake JA , Eppig JT , Richardson JE , Davisson MT : The Mouse Genome Database ( MGD ) : a community resource .Status and enhancements .", "label": "", "metadata": {}, "score": "70.32814"}
{"text": "The included rules will appear before the user defined rules , irrespective of where in the file the @include directive appears .A set of special cases is supported to allow a rule file to include the predefined rules for RDFS and OWL - in place of a real URL for a rule file use one of the keywords RDFS OWL OWLMicro OWLMini ( case insensitive ) .", "label": "", "metadata": {}, "score": "70.57814"}
{"text": "Web Browser on the URI corresponding to the N3 term at caret or cursor position ; . of course we are hoping that the same URI will serve HTML when asked by the browser , which is recommanded practice , but not always followed :( . menu item , \" eulergui - add - uri - to - project \" , adds the URI corresponding to the N3 term at caret or mouse position to the project .", "label": "", "metadata": {}, "score": "70.89671"}
{"text": "How rigorously should the semantics of OWL be preserved ?For example , a simple existential restriction in OWL , such as HeLa derives_from some ' Homo sapiens ' , means that each and every instance of HeLa is derived from at least one Homo sapiens ( but may also derive from some other entity as well ) .", "label": "", "metadata": {}, "score": "71.20402"}
{"text": "To increase computation capabilities and to further offer FIGENIX services to the biologists ' community , deployment on GRID middleware architectures like UNICORE is technically possible and can be considered .FIGENIX software architecture .FIGENIX software servers can be distributed on several CPU .", "label": "", "metadata": {}, "score": "71.20447"}
{"text": "To allow arbitrary configuration information to be passed to reasoners we use RDF to encode the configuration details .The ReasonerFactory.create method can be passed a Jena Resource object , the properties of that object will be used to configure the created reasoner .", "label": "", "metadata": {}, "score": "71.254196"}
{"text": "validate ( ) ; if ( validity . out . out .getReports ( ) ; i . out . println ( \" - \" + i .The file testing / reasoners / rdfs / dttest2.nt declares a property bar with range xsd : integer and attaches a bar value to some resource with the value \" 25.5\"^^xsd : decimal .", "label": "", "metadata": {}, "score": "71.31795"}
{"text": "AG participated in designing parts of the phylogenomics annotation pipeline .All authors read and approved the final manuscript .Authors ' Affiliations .Phylogenomics Laboratory , EA 3781 EGEE ( Evolution , Genome , Environment ) , Universit\u00e9 de Provence .", "label": "", "metadata": {}, "score": "71.35489"}
{"text": "OWL and natural language definitions for the HeLA cell - line .This shows an example of the OWL and hand - written textual definition for the HeLa cell line class as seen in EFO .We can see from this that the definitions are similar , in that they both say what a HeLa cell is , but the hand - written one brings in more background information , such as the name of the individual whence the cells came .", "label": "", "metadata": {}, "score": "71.46716"}
{"text": "- Extension of BLAST 's high scoring pairs ( HSPs ) to splice donor and acceptor sites , start and stop codon is done under supervision of the expert system , as well as the alignment of predicted proteins with the reference protein .", "label": "", "metadata": {}, "score": "71.61112"}
{"text": "The only scripting engine for java installed by default under OSX is AppleScript .If you want use the Java generation feature , it is necessary to install the engine for JavaScript ; the procedure is the following : .EulerGUI minimal .", "label": "", "metadata": {}, "score": "71.61848"}
{"text": "( 16 pages : 53 K ps gz , 62 K dvi ) .1994 International NLGW .Beryl Hoffman , Generating Context - Appropriate Word Orders in Turkish , Abstract , cmp - lg , ps gz ( 53 K ) .", "label": "", "metadata": {}, "score": "71.82182"}
{"text": "Implementation .FIGENIX is an intranet / extranet server system usable through any recent Web browser accepting JAVA 2 Plugin installation .FIGENIX is freely available to academic users through the web interface [ 15 ] .Users first have to contact us to request a login and password .", "label": "", "metadata": {}, "score": "71.97075"}
{"text": "Counter to Ensembl [ 12 ] or BioPipe [ 47 ] , the overall approach in FIGENIX can somewhat be compared to MAGPIE system [ 48 , 49 ] which also includes a kind of expert system .However , FIGENIX automated pipelines are data flow circulating , in a specific order , through computation tools .", "label": "", "metadata": {}, "score": "72.00494"}
{"text": "% the label associated to the fusion type is just the concatenation of label for \" best \" ( see before ) tree and for its congruent tree .partial_congruence(Test , Label ) : - .topology(Test , Best , [ Label1 , Val1 ] , [ Label2 , Val2 ] ) , .", "label": "", "metadata": {}, "score": "72.16727"}
{"text": "For the Gloze converter , there is another button with an XML logo to the right of the ReDeFer logo .Currently the Gloze implementation is more used and tested than Redefer .CAVEAT : .Gloze does not seem to be maintained currently by its author , and the more advanced version in EulerGUI .", "label": "", "metadata": {}, "score": "72.36743"}
{"text": "In the latest version we have now added a rule that tries a verb - phrase first , to obtain ' A HeLa derives from a cervix and derives from an epithelial cell ... ' , before using the previous rule that will work in all cases .", "label": "", "metadata": {}, "score": "72.396545"}
{"text": "Bernstein A , Kaufmann E : Gino - a guided input natural language ontology editor .International Semantic Web Conference .2006 , Springer , 144 - 157 .Copyright .\u00a9 Stevens et al ; licensee BioMed Central Ltd. 2011 .", "label": "", "metadata": {}, "score": "72.42041"}
{"text": "The N3 user preferences file in N3 is in $ HOME/. eulergui_preferences .n3 .It can be edited through the \" File \" Menu .There are settings in the default content that can be uncommented .For example one can set the EulerGUI language to be different from the system language .", "label": "", "metadata": {}, "score": "72.50705"}
{"text": "Giuseppe Carenini , Generating and Evaluating Evaluative Arguments , Ph.D. Thesis , Department of Computer Science , University of Pittsburgh , 2000 .web page .Hercules Dalianis , Concise Natural Language Generation from Formal Specifications , Ph.D. Thesis , ( Teknologie Doktorsavhandling ) , Department of Computer and Systems Sciences , Royal Institute of Technology , Stockholm University , June 1996 , Report Series No . 96 - 008 , ISSN 1101 - 8526 , SRN SU - KTH / DSV / R--96/8 - -SE .", "label": "", "metadata": {}, "score": "72.516525"}
{"text": "Mol Immunol 2003 , 40 : 611 - 616 .View Article PubMed .Hughes AL : Phylogenetic tests of the hypothesis of block duplication of homologous genes on human chromosomes 6 , 9 , and 1 .Mol Biol Evol 1998 , 15 : 854 - 870 .", "label": "", "metadata": {}, "score": "72.799324"}
{"text": "An OWL ontology for SWRL is swrl.owl .Here is an image of this ontology for SWRL in Prot\u00e9g\u00e9 OWL editor : .Running SWRL rules in EulerGUI .The translator is automatically launched when an OWL source has SWRL rules , and the translated N3 rules are added to the project , for each OWL source having SWRL rules .", "label": "", "metadata": {}, "score": "73.06256"}
{"text": "View Article PubMed .Danchin EGJ , Pontarotti P : Towards the reconstruction of the bilaterian ancestral pre - MHC region .Trends in Genetics 2004 , 20 : 587 - 591 .View Article PubMed .Gelfand MS , Mironov AA , Pevzner PA : Gene recognition via spliced sequence alignment .", "label": "", "metadata": {}, "score": "73.14938"}
{"text": "node(TheSpecies , LeftChild , RightChild ) .In the annotated tree , each node knows how many sequences it contains and has the full list of the different species it includes : .node(NumberOfSequences , AllSpecies , LeftChild , RightChild ) .", "label": "", "metadata": {}, "score": "73.309235"}
{"text": "10.1093/bioinformatics / btq099 .View Article .Nature Biotechnology .10.1038/nbt1346 .View Article .Bodenreider O , Stevens R : Bio - ontologies : current trends and future directions .Brief Bioinform .10.1093/bib / bbl027 .", "label": "", "metadata": {}, "score": "73.61909"}
{"text": "Survey 1 .In the first pass we verbalised a subset of 50 cell lines from EFO .We used cell lines as they represent a substantial portion of EFO ; the topic is broadly accessible to the target audience and this portion of EFO lacks definitions .", "label": "", "metadata": {}, "score": "73.731125"}
{"text": "ps.gz ps gz ] . www . . .thai . sbobet . . .com sbobet . ]John Bateman 's Bibliography site [ 1 ] contains a superset of the references used in the above list of NLG systems , including references for all aspects of NLG .", "label": "", "metadata": {}, "score": "73.87799"}
{"text": "Directory .Contact Person : Hanene TRICHILI .Meeting Email : setit2003 voila.fr .Linguistic Subfield(s ) : General Linguistics .Meeting Description : .You are concerned with the filed of electrnic , Information technology .and telecommunications .You are also interested to be up - to - date . in March 17 - 21 , 2003 .", "label": "", "metadata": {}, "score": "73.9231"}
{"text": "Q15 explored a similar within - term elision for a longer list , by offering an alternative ( Q15b ) in which ' leukemia ' was removed from all subclasses .These findings are only indicative since the data are sparse , but they suggest several avenues to explore .", "label": "", "metadata": {}, "score": "74.05608"}
{"text": "European workshops have been held at Royaumont , Edinburgh , Judenstein , .Pisa , Leiden , Duisburg , and Toulouse .The goal of the workshop is to be an informal meeting which .facilitates the dissemination of knowledge and expertise in the field .", "label": "", "metadata": {}, "score": "74.47152"}
{"text": "Mariet Theune , From data to speech : language generation in context , PhD thesis , University of Eindhoven , The Netherlands , 2000 .pdf .Natural Language Generation Workshops . 'Note ' : Proceedings of many NLG workshops are available at the ACL Anthology .", "label": "", "metadata": {}, "score": "74.69813"}
{"text": ": jmvanel : ate : apple_pie .but it will be just the same as saying it just once .I do n't think this is a severe limitation .Automatic retraction and logical insert .Suppose a rule base with a single rule saying \" if the switch has a state , then the light has the same state \" .", "label": "", "metadata": {}, "score": "74.841644"}
{"text": "The task given as an example in the figure was currently running when we took the screenshot .In green are shown units that finished their work , in red those which are running , in blue those which are not running .", "label": "", "metadata": {}, "score": "75.212395"}
{"text": "Natural language generation ( NLG ) is a field developed at the confluence of artificial intelligence with computational linguistics .Even though the field started in late sixties and has been investigated by numerous researchers , there are no books which discuss practical issues in building complete NLG systems .", "label": "", "metadata": {}, "score": "75.26042"}
{"text": "currently , we have an old version of jEdit , and loading jEdit plugin \" Highlight \" may not be possible ; a suitable version version of the plugin should be downloaded here : Highlight.jar and copied into : . $ HOME/. jedit / jars / Highlight . jar .", "label": "", "metadata": {}, "score": "75.39832"}
{"text": "L ns1:hasControl ?SWITCH .SWITCH ns1:hasState ?L ns1:hasState ?When changing the switch 's state , it is desirable to avoid having to explicitly remove the lamp 's old state .And this is achieved using Drools ' insertLogical ( ) feature in the consequents .", "label": "", "metadata": {}, "score": "75.4703"}
{"text": "An ED unit asks the expert system to determine in this tree the paralogy groups .Intermediate domain tree ( NJ ) .This tree , built with Neighbor Joining method , is used by expert module to detect paralogy groups .", "label": "", "metadata": {}, "score": "75.47687"}
{"text": "Questions did not mandatorily require an answer and an optional comment could be made on each question .Declarations .Acknowledgements .Sandra Williams , Richard Power , Allan Third and Robert Stevens are funded by the SWAT project ( EPSRC grants EP / G033579/1 and EP / G032459/1 ) ; James Malone is funded by EMBL and EMERALD ( project number LSHG - CT-2006 - 037686 ) .", "label": "", "metadata": {}, "score": "75.53204"}
{"text": "- allow other simplified file paths than just ./x.n3 or ./dir / xx .n3 , namely ./xx.n3 - the open N3 and orange ?eulergui_preferences .n3 which is updated with the standard N3 editor - re - use the web services at prefix.cc to insert N3 prefixes in the editor .", "label": "", "metadata": {}, "score": "75.57281"}
{"text": "PSMB8 is not detected as paralogous to PSMB5 .PSMB8 is not detected as co - orthologous to the same Drosophila gene than PSMB5 .Ray - finned fish Avian Cephalochordata .Amphibian . PSMB5 and PSMB8 are each assigned a distinct Drosophila ortholog suggesting they already existed as two copies in the last common ancestor of human and Drosophila .", "label": "", "metadata": {}, "score": "76.14024"}
{"text": "Here is an example of such a query : . element table : name ? element table : name ? @prefix xsd : . @prefix table : . table : Te table : name \" tellurium\"^^xsd : string .table : Pb table : name \" lead\"^^xsd : string .", "label": "", "metadata": {}, "score": "76.33026"}
{"text": "The major difference is that , while it usually takes one to several weeks to manually produce phylogenies of this quality , it takes minutes to few hours with FIGENIX .Consensus phylogenetic tree of the Notch family .The tree is midpoint rooted .", "label": "", "metadata": {}, "score": "76.48036"}
{"text": "This produces the output : .This says that colin is both a Teenager ( by direct definition ) , a Person ( because he has a mum which means he has a parent and the domain of parent is Person ) and an rdfs : Resource .", "label": "", "metadata": {}, "score": "76.6375"}
{"text": "workshop , we encourage papers that describe speculative ideas , work in .progress , and discussions of important issues .WORKSHOP CHAIRS .Ehud Reiter , Univ . of Aberdeen .Helmut Horacek , Univ . of the Saarland .Kees van Deemter , Univ . of Brighton .", "label": "", "metadata": {}, "score": "76.667984"}
{"text": "y ) , ge ( ? x , ?y ) . sum ( ? a , ?b , ?c ) addOne ( ? a , ?c ) difference ( ? a , ?b , ?c ) min ( ? a , ?", "label": "", "metadata": {}, "score": "76.73591"}
{"text": "fusion(no_fusion ) : - no_congruence(kishino - hasegawa , _ ) , no_congruence(templeton , _ ) .fusion(Label ) : - partial_congruence(kishino - hasegawa , Label ) , partial_congruence(templeton , Label ) .These rules can be easily maintained .For example , we can decide to do the fusion on the \" best \" tree and not always on NJ tree like we do today by default in the 5 first cases .", "label": "", "metadata": {}, "score": "77.07114"}
{"text": "Owen Rambow , Columbia Univ . , USA .Leo Wanner , Univ . of Stuttgart , Germany .SUBMISSIONS .Papers describing original work in all areas of NLG , in particular . related to the workshop focus topics above , should be submitted . electronically .", "label": "", "metadata": {}, "score": "77.22972"}
{"text": "On MacOSX 10.6 , Java 6 is there already .However , the Yap Prolog engine is not provided in the EulerGUI jar .In order to use the Euler engine , you have to install Yap yourself .And unfortunately , no binary is provided by the Yap team ( as of december 20110 ) .", "label": "", "metadata": {}, "score": "77.451584"}
{"text": "show tree view of OWL inferred class hierarchy using Pellet OWL reasoner .API ( framework ) .the EulerGUI API allows to embed an EulerGUI project with its inference features in your application .EulerGUI is developed on Ubuntu Linux , and tested regularly on Windows , and should run everywhere a Java Runtime Environment exists .", "label": "", "metadata": {}, "score": "77.58353"}
{"text": "Appendix .We modeled biologists ' interpretation in a very natural way in PROLOG by these rules : . fusion(npl_A ) : - full_congruence(templeton , _ ) , full_congruence ( kishino - hasegawa , _ ) .fusion(npl_A ) : - full_congruence ( templeton , _ ) , partial_congruence(kishino - hasegawa , _ ) .", "label": "", "metadata": {}, "score": "77.98459"}
{"text": "To be launched by Euler GUI , all these tools should be in the user path .But ( for Linux users ) using a alias in the shell will not always work , you need to have cwm and FuXi in your path .", "label": "", "metadata": {}, "score": "78.11716"}
{"text": "The equality test is semantic equality so that , for example , the xsd : int 1 and the xsd : decimal 1 would test equal . lessThan ( ? x , ?y ) , greaterThan ( ? x , ?", "label": "", "metadata": {}, "score": "78.15897"}
{"text": "Human PSME1 .PSME2 , and PSME3 are not detected as paralogous to PSME1 .None .Protostomes Ray - finned fish .None .THOP1 , NLN .Human THOP1 .NLN is not detected as paralogous to THOP1 .NLN is not detected as co - orthologous to the same N.crassa gene than THOP1 .", "label": "", "metadata": {}, "score": "78.47023"}
{"text": "Drosophila Avian Amphibian Ray - finned fish .TAP1 , and TAP2 are each assigned a distinct C.elegans ortholog and none in Drosophila , suggesting there was already two copies of these genes in the last common ancestor of these two species , and that the two copies were secondary lost in the Drosophila lineage .", "label": "", "metadata": {}, "score": "78.55488"}
{"text": "pypolibox is a database - to - text generation ( NLG ) software built on Python 2.7 , NLTK and Nicholas FitzGerald 's pydocplanner .Using a database of technical books and some user input , pypolibox generates sentences descriptions .These descriptions are then used by the OpenCCG surface realiser to generate written sentences in German .", "label": "", "metadata": {}, "score": "78.5657"}
{"text": "One respondant provided only comments , largely on the ontological nature of the OWL axioms , rather than a judgement on whether the English was a rendering of the OWL ( whether or not it was a sensible axiom ) .For example , the axiom bearer_of some ' breast carcinoma ' which gives the generated English ' A breast cancer cell line is defined as something that is bearer of a breast carcinoma . '", "label": "", "metadata": {}, "score": "78.73843"}
{"text": "- button to export an N3 file as RDF . - button to export an N3 file as XMI .- button to export an N3 file as JSON or YAML .- add a button for old main class euler .", "label": "", "metadata": {}, "score": "79.14067"}
{"text": "ACE stands for \" Attempto Controlled English \" , and is a syntactically and semantically well defined subset of the english language .Together , this allows to have this workflow : . create an ontology in controlled english within Prot\u00e9g\u00e9 4.0.X with ACE View ; . open this ontology in OWL+SWRL in EulerGUI , which automatically translates SWRL rules to N3 logic rules , and adds them to the project ; . in EulerGUI reuse the business rules translated in N3 logic plus the OWL ontology , for application generation and other software tasks .", "label": "", "metadata": {}, "score": "79.39749"}
{"text": "A cwm built - in logical operator .log : notIncludes The object formula is NOT a subset of subject .True iff log : includes is false .The converse of log : includes .( Understood natively by cwm .", "label": "", "metadata": {}, "score": "79.49029"}
{"text": "xmi , or .ecore , or else push the button with the earth logo .Much like for RDF , the UML ( or eclipse eCore ) is translated on the fly into N3 .Reading XMI from an URL is also possible .", "label": "", "metadata": {}, "score": "79.85376"}
{"text": "An alternative is to use OSGi ; reuse the Maven configuration is possible with .Apache Felix maven - bundle - plugin and Maven SCR Plugin , see my blog on 2010 - 08 - 05 . - in Drools engine , implement : .", "label": "", "metadata": {}, "score": "79.98682"}
{"text": "Human PSMB7 .PSMB10 is not detected as paralogous to PSMB7 .PSMB10 is not detected as co - orthologous to the same Drosophila gene than PSMB7 .Ray - finned fish Avian Cephalochordata .Amphibian .PSMB7 and PSMB10 are each assigned a distinct Drosophila ortholog suggesting they already existed as two copies in the last common ancestor of human and Drosophila .", "label": "", "metadata": {}, "score": "82.111664"}
{"text": "We added an input in the GUI for files having UMLT syntax , through the button \" XMI / UML \" .A . umlt file is translated on the fly directly into an OWL file .We would like to ouput also UML .", "label": "", "metadata": {}, "score": "82.3019"}
{"text": "Many comments on the generated language concerned the nature of the generated nouns .For example , the annotation label HeLa was turned into the lexical entry ' he la ' , HomoSapiens into ' homo sapiens ' , and BCell into ' b cell ' .", "label": "", "metadata": {}, "score": "82.51102"}
{"text": "SubClassOf : ' cell line ' .derives from some ' Mus musculus ' .An Ara - C - resistant murine leukemia is a cell line .B117Hs , and B140Hs are Ara - C - resistant murine leukemias .An Ara - C - resistant murine leukemia derives from a Mus musculus .", "label": "", "metadata": {}, "score": "82.57016"}
{"text": "ATTEMPTO Controled English ( ACE ) is a controlled natural language , i.e. a rich subset of standard English designed to serve as knowledge representation language .ACE appears perfectly natural , but - being a controlled subset of English - is in fact a formal ( logic ) language .", "label": "", "metadata": {}, "score": "82.624794"}
{"text": "will help with the organisation of discussions and allow for an . informal and highly interactive workshop .CONTACT INFO .Notifications of attendance should be sent to Ehud Reiter .( ereiter csd.abdn.ac.uk ) .Affiliated with .Abstract .Background .", "label": "", "metadata": {}, "score": "82.74354"}
{"text": "An example of ( i ) , variations in the English rendering of properties , is the axiom bearer_of some ' cervical carcinoma ' in which we tried the following hand - crafted variations for ' bearer_of ' : . something that is bearer of a cervical carcinoma .", "label": "", "metadata": {}, "score": "83.071976"}
{"text": "27 Janvier 2003 Final camera - ready papers due in electronic form .17 - 21 Mars 2003 Conference SETIT 2003 .Submission Modality .Authors are requested to submit their abstracts and tutorials in .electronic format , Before November 30 , 2002 ( at the adress : . setit enst - bretagne . fr ) .", "label": "", "metadata": {}, "score": "83.381226"}
{"text": "On MacOSX 10.5 , you have to activate Java 6 manually .Procedure : click on \" /Applications / Utilities / Java / Java Preferences \" ; various versions of Java are available and the one by default is Java 5 instead of Java 6 .", "label": "", "metadata": {}, "score": "83.4411"}
{"text": "How much ( if any ) of the formal ontological nature of the logical definitions should be preserved ?EFO uses the Relation Ontology [ 30 ] and so we have axioms such as Homo sapiens bearer_of some cervical_carcinoma ; should we use ' bearer of ' here , or some other rendering of such ontologically formal properties ( or indeed both ) ?", "label": "", "metadata": {}, "score": "83.81717"}
{"text": "ENIS ; PB W , 3038 Sfax Tel .+216 74 27 40 88 Email : hanene.tn voila.fr .TUNISAIR ( Official Transporter of the Conference ) offered for the . participants and their accompaniers a reduction of 50 % for their . tickets .", "label": "", "metadata": {}, "score": "84.17256"}
{"text": "SubClassOf : ' cell line ' .A ara c resistant murine leukemia is a cell line .A b117h , and a b140h are kinds of ara c resistant murine leukemias .GM18507 .SubClassOf : ' cell line ' .", "label": "", "metadata": {}, "score": "84.28105"}
{"text": "Apropos the last line , we would like to guess the type xsd : int , based on linguistic knowledge about the word \" quantity \" ( TODO ) .Besides UML - ish syntax , standard N3 @prefix lines will set the default and named prefixes , e.g. : . @prefix : . @prefix dc : .", "label": "", "metadata": {}, "score": "84.608444"}
{"text": "hlds generates an HLDS XML representations of all the sentences .The following example query will generate HLDS XML snippets describing books about Prolog written in German : . pypolibox --language German --proglang Prolog --output - format hlds .Further usage examples can be found in the pypolibox.database.", "label": "", "metadata": {}, "score": "85.26858"}
{"text": "Department of Computing , Macquarie University .February 1999 .pdf , ps.gz .Jacques Robin , Revision - based generation of natural language summaries providing historical background : corpus - based analysis , design , implementation and evaluation , PhD thesis , Columbia University , Dept of Computer Science , 1994 , ps gzipped ( 762 K ) .", "label": "", "metadata": {}, "score": "85.696014"}
{"text": "derives_from some ' bone marrow ' .SubClassOf : ' cell line ' .A 4470 is both something that derives from a Mus musculus , and something that derives from a bone marrow .A 4470 is a cell line .", "label": "", "metadata": {}, "score": "86.10851"}
{"text": "Robert Dale , Macquarie University , Australia .Claire Gardent , CNRS Nancy , France .Pamela Jordan , Univ . of Pittsburgh , USA .Rodger Kibble , Univ . of London , UK .Emiel Krahmer , Univ . of Tilburg , The Netherlands .", "label": "", "metadata": {}, "score": "86.36853"}
{"text": "Which means , in ordinary developers ' language , instantiation .Here is an example : .MEAL : hasDessert ? which means \" a meal of type \" french \" has a dessert \" .Then the implementation must ensure that : . for each different ?", "label": "", "metadata": {}, "score": "86.49478"}
{"text": "something that carries cervical carcinoma .something that is cervical carcinomic .something that has cervical carcinoma .Taking a similar approach , ' cell has quality female ' becomes ' cell is female ' and so on .Second , we adjusted the form of the filler of the property , so in one case ' carcinoma ' became ' carcinomic ' , to put it into some kind of adjectival form .", "label": "", "metadata": {}, "score": "86.99782"}
{"text": "No elipsis : A geniculate nucleus is defined as something that is a medial geniculate nucleus , or is a lateral geniculate nucleus .Elipsis of ' something that ' and ' is ' : A geniculate nucleus is defined as a medial geniculate nucleus or a lateral geniculate nucleus .", "label": "", "metadata": {}, "score": "87.10006"}
{"text": "News .Release data : 17-May-2014 . added Windows - specific requirements to setup.py ( winpexpect vs. pexpect ) .Release date : 13-May-2014 . installation via pip or python setup.py install now adds two programs to your path : pypolibox and hlds - converter . added new output formats ( --output - format parameter ) : textplan featstructs , HLDS XML Not Logged In . pypolibox 1.0.1 . pypolibox .", "label": "", "metadata": {}, "score": "87.13721"}
{"text": "x foaf : weblog ? blog .x foaf : name ? name .x foaf : weblog ?To create an N3 search , push the second button with a question mark .The buttons for search are different from the unique query orange button , they are green .", "label": "", "metadata": {}, "score": "87.251755"}
{"text": "View Article PubMed .Copyright .\u00a9 Gouret et al .2005 .This article is published under license to BioMed Central Ltd.", "label": "", "metadata": {}, "score": "87.663376"}
{"text": "On Linux 64-bits systems , you may have this message when launching EulerGUI : ./tmp / eye / linux / bin / yap : error while loading shared libraries : libncurses.so.5 : wrong ELF class : ELFCLASS64 .All shared objects copied by Euler from the EulerGUI jar are ELF 32-bit LSB shared object , Intel 80386 .", "label": "", "metadata": {}, "score": "87.80818"}
{"text": "the guidelines at the EACL site .Send your submission to Ehud Reiter ( ereiter csd.abdn.ac.uk ) .IMPORTANT DATES .Paper submissions : 7 January 2003 .Notification of acceptance : 28 January 2003 .Camera - ready copies due : 13 February 2003 .", "label": "", "metadata": {}, "score": "88.34389"}
{"text": "John Bateman , Univ . of Bremen , Germany .Nadjet Bouayad - Agha , Univ .Pompeu Fabra , Spain .Stephan Busemann , DFKI , Germany .Jo Calder , Fourth Person LtD , UK .Charles Callaway , IRST , Italy .", "label": "", "metadata": {}, "score": "88.4424"}
{"text": "to produce a PDF ( docs/_build / latex / pypolibox .pdf ) and .make html .to produce a set of HTML files ( docs/_build / html / index .html ) .Package Overview .The pypolibox package contains the following modules : .", "label": "", "metadata": {}, "score": "88.69542"}
{"text": "to produce a PDF ( docs/_build / latex / pypolibox .pdf ) and .make html .to produce a set of HTML files ( docs/_build / html / index .html ) .Package Overview .The pypolibox package contains the following modules : .", "label": "", "metadata": {}, "score": "88.69542"}
{"text": "Human Calnexin .Calmegin and Calreticulin are not detected as paralogs of Calnexin .Calmegin is not detected as a Human co - ortholog to Drosophila CG9906 gene .Amphibian Ray - finned fish .Calmegin is detected to be orthologous to another Drosophila gene than CG9906 , suggesting Calmegin and Calnexin already existed as two duplicates before the divergence between protostomes and deuterostomes and Calmegin was secondary lost in C. elegans .", "label": "", "metadata": {}, "score": "88.71063"}
{"text": "The following example query will generate HLDS XML snippets describing books about Prolog written in German : . pypolibox --language German --proglang Prolog --output - format hlds .Further usage examples can be found in the pypolibox.database.Query class documentation .", "label": "", "metadata": {}, "score": "90.538635"}
{"text": "Gaasterland T , Sensen CW : MAGPIE : automated genome interpretation .Trends Genet 1996 , 12 : 76 - 78 .View Article PubMed .Gaasterland T , Sensen CW : Fully automated genome analysis that reflects user needs and preferences .", "label": "", "metadata": {}, "score": "90.80792"}
{"text": "add arguments for Euler or CWM that 's mainly for experts ; for Euler the best arguments are automatically added for runs ; for CWM nothing is automatically added ; given arguments are pre - pended to the URL list ; . for Euler if you add any argument , nothing is automatically added ( except the list of URL 's ) , you must provide all arguments , e.g. : . click the button bearing the Euler logo ( the cube ) , or type enter in field for arguments ; .", "label": "", "metadata": {}, "score": "91.24075"}
{"text": "Launch OWL reasoner .To launch the Pellet OWL reasoner successively on all OWL documents in the projects , click on pull - down menu \" Tools \" / \" Launch OWL reasoner \" .Not only documents with suffix .owl are processed ; documents from all origins are also processed .", "label": "", "metadata": {}, "score": "91.81475"}
{"text": "\" ; rdfs : domain ns1:book ; rdfs : label \" writeBy \" ; rdfs : range ns1:scifiWriter .ns1:scifiWriter a owl : Class ; rdfs : comment \" ? ? ?\" ; rdfs : label \" scifiWriter \" .", "label": "", "metadata": {}, "score": "93.50248"}
{"text": "Human Cathepsin R .Cathepsins L , M and P are not detected as paralogous to Cathepsin R. .None .Amphibian Avian Ray - finned fish .Each cathepsin gene is assigned a distinct drosophila ortholog suggesting the cathepsin family emerged before the separation between human and Drosophila .", "label": "", "metadata": {}, "score": "93.52884"}
{"text": "Comments & Moderation .We moderate all comments on Herald Scotland on either a pre - moderated or post - moderated basis .If you 're a relatively new user then your comments will be reviewed before publication and if we know you well and trust you then your comments will be subject to moderation only if other users or the moderators believe you 've broken the rules .", "label": "", "metadata": {}, "score": "93.815956"}
{"text": "The survey was completed by 21 people ( questions did not require an answer ) .A 22rv1 is a cell line .A 22rv1 is all of the following : something that is bearer of a prostate carcinoma , something that derives from a homo sapiens , and something that derives from a prostate .", "label": "", "metadata": {}, "score": "94.03331"}
{"text": "2007 , Morristown , NJ , USA : Association for Computational Linguistics , 143 - 146 .full_text .View Article .Kaljurand K : Attempto Controlled English as a Semantic Web Language .PhD thesis .2007 , Faculty of Mathematics and Computer Science , University of Tartu .", "label": "", "metadata": {}, "score": "94.590546"}
{"text": "There is a wiki page on EulerGUI server .EulerGUI demonstration .There is a shell script for demonstrations ( suitable for Linux or Cygwin ) : demo.sh , with a Windows version : demo.bat .EulerGUI tips . eulergui --pass my.n3 .", "label": "", "metadata": {}, "score": "95.91962"}
{"text": "Using a database of technical books and some user input , pypolibox generates sentences descriptions .These descriptions are then used by the OpenCCG surface realiser to generate written sentences in German .Installation .Install from PyPI . pip install pypolibox # prepend ' sudo ' if needed .", "label": "", "metadata": {}, "score": "96.83183"}
{"text": "Which defines a Teenager called colin who has a mum rosy and an age of 13 .Then the following code fragment can be used to read files containing these definitions , create an inference model and query it for information on the rdf : type of colin and the rdf : type of Person : . get ( ) . loadModel ( \" file : data / rdfsDemoSchema . get ( ) . loadModel ( \" file : data / rdfsDemoData .", "label": "", "metadata": {}, "score": "97.6555"}
{"text": "A 22rv1 derives from a Homo sapiens .A 22rv1 derives from a prostate .To obtain more fluent descriptions , our algorithm combines axioms that share a common pattern and differ in only one constituent .Thus in the example we are considering , it finds three axioms having the following abstract form : .", "label": "", "metadata": {}, "score": "97.97478"}
{"text": "derives_from some ' Homo sapiens ' .derives_from some lymphoblast .A gm18507 is a cell line .A gm18507 is all of the following : something that has as quality a male , something that derives from a homo sapiens , and something that derives from a lymphoblast .", "label": "", "metadata": {}, "score": "98.51079"}
{"text": "DiamondAge : writeBy : NealStephenson .: Neuromancer : writeBy : WilliamGibson . : NealStephenson a : scifiWriter .: Neuromancer a : book . :DiamondAge a : book .: MazeOfDeath : writeBy : PhilipKDick . : WilliamGibson a : scifiWriter .", "label": "", "metadata": {}, "score": "99.86954"}
{"text": "Usage .Command line usage . pypolibox can be used from the command line or from within a Python interpreter .To see all the available options , enter : . pypolibox -h .To find books that are written in German and use the programming language Prolog , type : . pypolibox --language German --proglang Prolog .", "label": "", "metadata": {}, "score": "103.54275"}
{"text": "None ( not a multigenic family ) .None .Amphibian Aplysia Lepidopteran Avian Schistosoma .None .TAP1 , TAP2 , ABCB9 , MDR1 .Human TAP1 .TAP2 , ABCB9 , and MDR1 are not detected as paralogous to TAP1 .", "label": "", "metadata": {}, "score": "103.555176"}
{"text": "fusion(npl_T ) : - full_congruence ( templeton , _ ) , no_congruence(kishino - hasegawa , _ ) .fusion(npl_K ) : - full_congruence ( kishino - hasegawa , _ ) , no_congruence(templeton , _ ) .fusion(no_fusion ) : - partial_congruence(kishino - hasegawa , _ ) , no_congruence(templeton , _ ) .", "label": "", "metadata": {}, "score": "105.01289"}
{"text": "A HeLa is all of the following : something that is bearer of a cervical carcinoma , something that derives from a Homo sapiens , something that derives from an epithelial cell , and something that derives from a cervix .A HeLa is a cell line .", "label": "", "metadata": {}, "score": "110.03248"}
{"text": "A he la is a cell line .A he la is all of the following : something that is bearer of a cervical carcinoma , something that derives from a homo sapiens , something that derives from an epithelial cell , and something that derives from a cervix .", "label": "", "metadata": {}, "score": "118.403854"}
