{"text": "Well , the setup method is defined on the Waveform class template .But the array is hold on the policy , as well as the accessors for the array and the size of the array .Plus , you can extend functionality for the policy .", "label": "", "metadata": {}, "score": "43.440186"}
{"text": "Idea is to inherit from file and create a different templates that can later be spawned when needed .Would this be a good fit for policies or should i just pass the file handle to global static functions or should i just create a class for each type of file ?", "label": "", "metadata": {}, "score": "46.901573"}
{"text": "I 've been reading the book by Andrei Alexandrescu Modern C++ Design .And i have a question about the decomposition of a class into policies .Basically what would be a good policy size ?Most examples show parts like construction , destruction , thread safety and so on .", "label": "", "metadata": {}, "score": "47.017544"}
{"text": "Policies are a clever switch mechanism , they are used for any of the following : .A Factory pattern with one Template Factory that switches between products .A Strategy pattern with one Template class that switches behavior between behavior .", "label": "", "metadata": {}, "score": "47.365368"}
{"text": "Please correct me if I missed the point or if this would be not viable solution .The basic idea is that dynamic properties are specified using a small , external meta - model , in which a set of properties is part of a special container element ( just like Model is in the JWT metamodel ) .", "label": "", "metadata": {}, "score": "47.72468"}
{"text": "Applications include some combination of models , views , templates , template tags , static files , URLs , middleware , etc .They 're generally wired into projects with the INSTALLED_APPS setting and optionally with other mechanisms such as URLconfs , the MIDDLEWARE_CLASSES setting , or template inheritance .", "label": "", "metadata": {}, "score": "47.87165"}
{"text": "The \" old \" properties can be loaded into the view using an adapter , so there is almost no additional effort to this solution ( see attachment ) .Concerning the new dynamic properties , probably a similar approach can be used ( write a propertypage that reads the dynamic properties from the itemproviders , creates the corresponding propertyeditors and can be fitted into the propertyview using the same kind of adapter ) .", "label": "", "metadata": {}, "score": "48.679153"}
{"text": "However besides being difficult to do and maintain , it has not the level of flexibility we need : supporting new Aspect behaviours by adding new information there would be just as costly .solution 3 : using a custom \" metametamodel \" , that would also be in line with future jwt - views management , like Christian Saad advocates .", "label": "", "metadata": {}, "score": "48.72336"}
{"text": "Typing it with a static ( non interface , non abstract , generated ) Aspect class allows either dynamic or static extensions .Trying easy aspect sample .the goal of PropertiesAspectTemplate is to make simple extensions ( i.e. property map like ) trivial .", "label": "", "metadata": {}, "score": "49.16194"}
{"text": "Any changes in the next release should be reflected in the version number , so external code gets compiled , linked and run with the matching version of your library .As you already saw above the version of your library is defined by set_target_properties ( ) : .", "label": "", "metadata": {}, "score": "49.28721"}
{"text": "Most XML schemas are relatively static and you can use the utility to generate the XML serialization classes and include them in your templates directly .Going forward , I think that developing reusable templates is a simpler and better way to package code generation logic than directive processors .", "label": "", "metadata": {}, "score": "49.767864"}
{"text": "workflow : .Workflow sample ( inspired by a jwt2bpmn unit test workflow ) activity_log1 .workflow : .Adding this aspect to an action ( or its application ) specifies a runtime invocation of the given web service .Metamodel extension definition WEMetaModel_ws .", "label": "", "metadata": {}, "score": "49.877094"}
{"text": "STP - IM -like properties are in this case .Christian Saad 's proposition for the \" dynamic properties \" requirement also , but in order to control their semantics and behaviour , uses an additional metamodel that must be provided in workflow model , in workflow bundle , in autodiscovery directory or in plugin.xml . custom designed extension model done with static EMF ( loaded as instances of JET - generated classes ) .", "label": "", "metadata": {}, "score": "50.124474"}
{"text": "Instanciating a model element with different singleton aspect sets can be made available using additional \" newChild \" commands . and to delegate as much of the complex requirements as possible to the aspect implementors : . choice list is done within aspects . as well as more complex features .", "label": "", "metadata": {}, "score": "50.22105"}
{"text": "Therefore , if writeln was changed , it would have to treat structs and classes differently .- tgehr Aug 22 ' 11 at 20:10 .Beta version of T4 Toolbox for Visual Studio 2012 is now available from the Visual Studio Gallery .", "label": "", "metadata": {}, "score": "50.522038"}
{"text": "workflow . other custom rules required by the extension developer would however require coding : either by implementing them in their own custom view UI , or by modifying EMF - generated code or generation templates ( EMF.edit 's ItemProviders ) , or even palette ? policies ? ? specifications .", "label": "", "metadata": {}, "score": "50.56122"}
{"text": "Marc : this alternative can be viewed as being like STP - IM 's properties ( EObject valued static properties ) with an additional metatyping system to manage their consistency ( \" profile \" ) .How the typed dynamic properties extension works : .", "label": "", "metadata": {}, "score": "50.77293"}
{"text": "This would represent a generic interface to JWT .Once a set ( or multiple sets ) of dynamic properties is loaded into JWT , it ( they ) can be added by the user to a model file .This means that when selecting a ModelElement , the itemprovider searches all sets of activated dynamic properties for properties that were declared for this EClass - type and creates corresponding instances of DynamicPropertyValue .", "label": "", "metadata": {}, "score": "50.891373"}
{"text": "Templates are divided into several categories : .Layouts - define general XHTML page layout defining the structure of the page ( i.e. navigation elements and the ' screen placeholder ' for the main content ) .Screen Templates - templates for the main content , specific for each of different pages requested .", "label": "", "metadata": {}, "score": "51.0959"}
{"text": "these information could be provided in an extension to a given WebServiceApplication instance , or to an extension to Activity ( i.e. process ) that configures its runtime platform .MWE Custom Action support .This is the equivalent of EMFT MWE 's Bryan Hunt 's WorkflowComponent concept .", "label": "", "metadata": {}, "score": "51.165524"}
{"text": "This required creating a separate Extension SDK VSIX package and did n't make the first release .Let me know if you are actively using the runtime ( a.k.a . preprocessed ) templates with T4 Toolbox today .API Changes .The original version of the T4 Toolbox was developed with the assumption that code generation is always performed at design time , when you save a template file or Run Custom Tool from the Solution Explorer .", "label": "", "metadata": {}, "score": "51.313576"}
{"text": "So you call setup in the Template Manager , as I said the manager receives an Array , but it calls a method of the policy to receive the array .This method in the policy maps a matrix into an array , or a database into an array .", "label": "", "metadata": {}, "score": "51.45462"}
{"text": "You want to run a set of functions in one thread and another in another thread , thus you create a class manager of functions , with global static functions the refactoring needed could get tiresome .Class for each type of file .", "label": "", "metadata": {}, "score": "52.044334"}
{"text": "The version number of the library is set by set_target_properties ( ) .And install ( ) moves the library to a place where it can be loaded .If a library gets compiled , all functions or class methods it offers get listed as so called symbols in a table .", "label": "", "metadata": {}, "score": "52.151756"}
{"text": "We will here focus on what JWT WE itself provides : the JWT outline and property views , and how it should best behave in the case of metamodel extensions .NB .What is possible with extensions should be as much as possible specified in the ecore metamodel , since not only will it improve what features the generated EMF editors provide by default , but it will also prevent any illegal , non - conforming workflow model .", "label": "", "metadata": {}, "score": "53.330887"}
{"text": "The namespace used for std library extensions ( hashtable classes etc ) . BOOST_STATIC_CONSTANT( Type , assignment ) .On compilers which do n't allow in - class initialization of static integral constant members , we must use enums as a workaround if we want the constants to be available at compile - time .", "label": "", "metadata": {}, "score": "53.612144"}
{"text": "In a few situations this is required ; for instance if the app package is a namespace package with multiple paths .It may be None if the application does n't contain a models module .Note that the database related signals such as pre_migrate and post_migrate are only emitted for applications that have a models module .", "label": "", "metadata": {}, "score": "53.72009"}
{"text": "Simply select TOOLS , Extensions and Updates from the main menu ; search the Visual Studio Gallery for T4 Toolbox and click Download .Changes in this version .This release of T4 Toolbox is significantly different than the previous version for Visual Studio 2010 and 2008 .", "label": "", "metadata": {}, "score": "54.14067"}
{"text": "However , these properties configure how the behaviour of the Aspect type ( how it is instanciated etc . ) , and not of each of the Aspect instances , and therefore are not at the appropriate conceptual level , which complexifies their understanding .", "label": "", "metadata": {}, "score": "54.16055"}
{"text": "You 've include the header files in your code , which gets compiled along with the headers from the library .Actually templates ( class templates and function templates ) can not be compiled into static or dynamic library to be linked to programs .", "label": "", "metadata": {}, "score": "54.168472"}
{"text": "Metamodel extensions and JWT WE behaviour .How do we want extensions / Aspects to behave in the Workflow Editor ? functional needs .Based on the previous metamodel extension ideas , and on trying things with the above sample and others , I 've listed the following functionalities , from \" most required \" to \" nice to have \" ones : . \" single \" and / or \" unique \" : to limit instanciation of an aspect of a given type to at most one , or exactly one ( i.e. pre - instanciated ) .", "label": "", "metadata": {}, "score": "54.192734"}
{"text": "An basic example use of such classes is : .Objects can be also pulled from the database .One can also predefine often used queries .More advanced features like : foreign keys , primary keys management will be available .", "label": "", "metadata": {}, "score": "54.26157"}
{"text": "Alternatively but at the risk of lowering the typing of the whole model , any XML ( without schema ) could be allowed and loaded EMF / XML AnyTypeImpl .Alternatively , loading could be done not by base EMF but delegated to a custom EMF XMLHandler or even any non - EMF parser ; Imixs.org 's Ralph Soika proposal follows this , and alternatively suggests that a model 's extension content could even live in its own file .", "label": "", "metadata": {}, "score": "54.280266"}
{"text": "ActionAspect , ModelAspect ; cons : complexifies aspect creation .other custom rules required by the extension developer . technical solutions .solution 1 : by configuring those features in \" special \" properties of Aspects , like \" singleton \" , \" removable \" .", "label": "", "metadata": {}, "score": "54.422974"}
{"text": "It simplifies deployment of your application down the road , but sometimes at the expense of longer compiler times .The short answer is that templates are much like macros for the compiler to generate code .This is why template classes are included in .", "label": "", "metadata": {}, "score": "54.536903"}
{"text": "Typing aspects relation to EObject ( rather than Aspect ) ?( added 20080527 ) .pros : allows to use Dynamic EMF ( else not DynamicEObjectImpl ) ; but maybe a DynamicAspectEObjectImpl could be written ?JWT metamodel extension - working samples ( added 20080527 ) .", "label": "", "metadata": {}, "score": "54.54149"}
{"text": "Therefore every extensions are put in their own subelement ( below the \" aspects \" relation ) .typing it with EObject makes it more powerful and easier to extend .However it does not take advantage of typing , allows \" illegal \" models ( ex . adding a DataType as aspect ... ) .", "label": "", "metadata": {}, "score": "54.658142"}
{"text": "It covers all the XPDL elements as well as the Bonita engine vendor specific extensions .Being able to store BPMN information that ca n't be mapped to JWT .This allows then to manipulate this information in JWT , but also to provide a perfectly bijective JWT2BPMN reverse transformation ( notional \" pivotal \" metamodels ) .", "label": "", "metadata": {}, "score": "54.766563"}
{"text": "Boost supplies several macros to make it easier to manage symbol visibility in a way that is portable between compilers and operating systems .Defines the syntax of a C++ language extension that indicates a symbol is to be exported from a shared library .", "label": "", "metadata": {}, "score": "55.162468"}
{"text": "But this is no necessity .This version ends in a reference with ABI versioning to the resulting library file , e.g. on Linux in the symbolic link \" libmyshared.so.2 \" , which points to the real library file .These versioned references are used by the dynamic linker to load the version of the library with the matching ABI variant to a running executable .", "label": "", "metadata": {}, "score": "55.40821"}
{"text": "Those classes must be available to JWT and specified in the workflow file . custom designed extension model done with dynamic EMF ( loaded as instances of DynamicEObjectImpl ) .Ecore schema must be specified in schemaLocation and available there , or if loading is customized in workflow bundle , in autodiscovery directory or in plugin.xml . custom designed extension model done with XML following user - defined xsd schemas , loaded as EMF / XML using through XSDEcoreBuilder .", "label": "", "metadata": {}, "score": "55.579323"}
{"text": "PROS .One master interface to rule them all .Creates code on compilation time , thus you are making ONE class for each one that you use .Easy to maintain compared to lots of boilerplatty classes .CONS .As Alexandrescu states , some template coding could render the compile optimizations useless .", "label": "", "metadata": {}, "score": "55.589645"}
{"text": "This decision was based on several factors .Some of these code generators became obsolete with the release of new frameworks and would be a waste of time to move forward .Dropping them , at least for the time being , also allows me to concentrate on improving the tools , and quite frankly , makes this release and the ongoing development feasible .", "label": "", "metadata": {}, "score": "55.67786"}
{"text": "If the compiler has no such extension , the macro is defined with no replacement text .Needed for classes that are not otherwise exported , but are used by RTTI .Examples include class for objects that will be thrown as exceptions or used in dynamic_casts , across shared library boundaries .", "label": "", "metadata": {}, "score": "55.844696"}
{"text": "Both will be explained now .The value of VERSION defines the development state of your library .It is good practice to use a pattern \" major.minor.patch-level \" .For each release you need to update or reset the different parts : .", "label": "", "metadata": {}, "score": "55.91935"}
{"text": "For both of these reasons , VSIX packaging will allow much more rapid delivery of the T4 Toolbox updates going forward .No ready - to - use code generators .T4 Toolbox for Visual Studio 2012 does not include ready - to - use code generators .", "label": "", "metadata": {}, "score": "55.92167"}
{"text": "In that case , either write idempotent methods , or put a flag on your AppConfig classes to prevent re - running code which should be executed exactly one time .Python versions 3.3 and later support Python packages without an _ _ init__. py file .", "label": "", "metadata": {}, "score": "55.94714"}
{"text": "This is a simple template engine which allows you to replace macros within text .This engine allows for attributes and filters .The default implementation provides the entire string module as filters .Trying to use arguments will of course not ... .", "label": "", "metadata": {}, "score": "55.998516"}
{"text": "Using the generic version numbers also helps to identify a version of your library by the general KDE version .E.g. for KDE 4.1.0 these variables are defined in kdelibs / cmake / modules / KDE4Defaults.cmake with .If your shared library contains translations you have to help a little so a program which uses your library can make use of them .", "label": "", "metadata": {}, "score": "56.229904"}
{"text": "And the same with the other class : . # include \" myshared_export .h \" .Beware that header - only classes , even additionally based on templates , must not have an export tag .Their methods do not end as any symbol in the library .", "label": "", "metadata": {}, "score": "56.34258"}
{"text": "This inclusion can be done recursively , so in a subdirectory you can add again the subsubdirectory .Finally you need to tell the buildsystem to also use the static libraries to construct the complete program .You do so by including their names in the target_link_libraries ( ) call for the program .", "label": "", "metadata": {}, "score": "56.386467"}
{"text": "In each of these CMakeLists.txt files you advise the build system to construct a separate package of the compiled sources in the given directory , a so called convenience library or , in technical terms , static library .E.g. for the subdirectory \" myutils \" \" myutils / CMakeLists .", "label": "", "metadata": {}, "score": "56.456215"}
{"text": "Examples : . storing the \" looping \" boolean of BPMN Looping Tasks . storing STP BPMN Editor annotations , including those that may originate from other tools like STP - IM .Bonita v4 XPDL \" hook \" support .Hooks ( as well as other Action - level features ) should be stored in a Bonita specific metamodel extension .", "label": "", "metadata": {}, "score": "56.474693"}
{"text": "Contents .If a part of your code could be used by more than one software module , like other programs or plugins , you should put that part in a shared library .This tutorial tells how to add the library to the buildsystem and how to prepare the source code .", "label": "", "metadata": {}, "score": "56.495224"}
{"text": "Actions are not responsible for content generation but can change the Template / Screen e.g. to produce an error message , or put certain data into content - generation context .Within a single Action class several Events ( specific sub - actions ) are possible to be defined .", "label": "", "metadata": {}, "score": "56.582123"}
{"text": "Another issue is versioning ( csaad ) .Extension versioning : it requires a naming and versioning mechanism for extensions ( a list of which must be centrally stored in the model file , e.g. in the model - element ) to ensure compatibility .", "label": "", "metadata": {}, "score": "56.69731"}
{"text": "XML inlined in an extension point in plugin.xml ; works for XML or EMF / XML ( not static EMF ? ) built extension definitions .files found in a fixed path in the classpath ( i.e. in a vendor 's extension jar ) .", "label": "", "metadata": {}, "score": "56.91719"}
{"text": "As the class template A can not be compiled into static or dynamic library to be linked to your programs , so A can be shipped only as header - only library with full source code .Likewise .Some libraries take the form of a binary file you must link with your project , along with a header file that defines the available classes or functions .", "label": "", "metadata": {}, "score": "57.189312"}
{"text": "Although you can access model classes as described above , avoid interacting with the database in your ready ( ) implementation .This includes model methods that execute queries ( save ( ) , delete ( ) , manager methods etc . ) , and also raw SQL queries via django.db.connection .", "label": "", "metadata": {}, "score": "57.306614"}
{"text": "The instructions are similar to the ones for a shared library .In the call kde4_add_library ( ) you just use the parameter STATIC instead to declare the library is a static one .This library is only used as an intermediate product in the total build process .", "label": "", "metadata": {}, "score": "57.57732"}
{"text": "These samples showcase the mixed static and dynamic EMF technology , thanks to a JWT metamodel with an EObject - typed \" aspects \" relation on ModelElement ( or Action ) .To be loaded in JWT , it also requires some magic in WEEditor.createModel ( ) .", "label": "", "metadata": {}, "score": "57.603355"}
{"text": "The C++ implementation provides the ( SGI ) hash_set and hash_map classes .When defined , BOOST_HASH_SET_HEADER and BOOST_HASH_LIST_HEADER will contain the names of the header needed to access hash_set and hash_map ; BOOST_STD_EXTENSION_NAMESPACE will provide the namespace in which the two class templates reside .", "label": "", "metadata": {}, "score": "57.757534"}
{"text": "And you do not install anything , neither the lib or any header files .You also do not mark exported classes or functions , all will be available to external code .You declare any dynamic libraries used by the library at another place , see below .", "label": "", "metadata": {}, "score": "57.794422"}
{"text": "In a compilation - from - sourcecode - based system this just should not happen , unless you downgrade a library again .And in a package - based system dependency checks on de-/installations of packages which also care for the VERSION version should prevent this .", "label": "", "metadata": {}, "score": "57.98547"}
{"text": "The design is inspired by Apache Jakarta Torque tool which results in very similar structure of configuration files and API of classes generated .FORM TOOL .One can define forms via xml configuration files - their rendering properties ( depending on specific form template macros ) , help messages , error massages , labels and validation rules .", "label": "", "metadata": {}, "score": "58.007664"}
{"text": "In this case , we also create an Aspect class .EMF imposes that either Aspect is a static non abstract class ( with a generated implementation e.g. \" AspectImpl \" ) , or a dynamic interface .Typing it with a dynamic \" Aspect \" interface implies all Aspect implementations will be loaded as DynamicEObjectImpl and not AspectImpl , and therefore fully dynamic .", "label": "", "metadata": {}, "score": "58.109734"}
{"text": "It is only allowed to create completely new dynamic classes or to subclass existing static classes .Unfortunately this makes the whole process of an almost automatic management of extensible metaelements quite difficult ( or maybe I 'm just missing an obvious solution ) .", "label": "", "metadata": {}, "score": "58.31706"}
{"text": "No metamodel extension has to be defined .However there is no proper typing ; therefore property names are to be well managed so properties created by different extension vendors do n't conflict with each other .Typed static extension alternative : typed properties ( Christian Saad ) .", "label": "", "metadata": {}, "score": "58.40782"}
{"text": "Ideally this should be guessed at runtime .other information required by the chosen runtime middleware .NB .these information allow to generate an SCA composite defining a java equivalent of the target web service , which may therefore be called .", "label": "", "metadata": {}, "score": "58.428802"}
{"text": "XHTML / CSS DEFAULT SUPPORT .CACHING .Caching will be implemented to increase performance .The caching mechanism will be flexible enough to provide caching for separate screen components as well as whole ( rendered ) screens .INTERNATIONALIZATION .Each of the messages defined can have multiple language versions .", "label": "", "metadata": {}, "score": "58.45501"}
{"text": "Templates are classes or functions that are customized to their particular use ; they 're typically defined in a header file since the compiler must read their source to customize them .You ca n't compile a template to a binary file until you know exactly how it 's going to be used , so you include the source along with your own code and the compiler can then process them together .", "label": "", "metadata": {}, "score": "58.46962"}
{"text": "Metamodel extension definition WEMetaModel_usermapping . workflow ( added 20080624 ) : .Extract from workflow activity sample ( added 20080624 ) : .Some screenshots ( added 20080624 ) : .Metamodel extensions and JWT WE ( added 20080527 ) .Metamodel extensions and JWT WE - Issue .", "label": "", "metadata": {}, "score": "58.509415"}
{"text": "However this is not enough .Requirements for finding and providing extension definition files .vendors will want to be able to have a more built - in way to provide their ecore extensions , like a path in a plugin jar , if necessary referred to in their plugin.xml .", "label": "", "metadata": {}, "score": "58.67231"}
{"text": "OPTION_USE_ENCODED_ATTRIBUTE_STYLE , Boolean .TRUE ) ; r.getDefaultSaveOptions ( ) .put(XMLResource . OPTION_SCHEMA_LOCATION , Boolean .TRUE ) ; // REQUIRED else no xsi : schemaLocation after save ! //r.getDefaultSaveOptions ( ) .getResourceSet ( ) .LogAspect sample .Here we define a LogAspect extension meant to provide an Action with additional information ( messageFormat and logProtocol attributes ) about how it might be logged at runtime .", "label": "", "metadata": {}, "score": "58.673042"}
{"text": "Extract from workflow activity sample : .UserMappingAspect 's purpose is to allow to provide to an action ( or its application ) more specific user mappings than those defined globally at workflow level .It is useful when all applications executed by a workflow are not using the same user directory as the workflow engine ; in this case , applications that require specific credentials will use this aspect to provide them .", "label": "", "metadata": {}, "score": "58.693665"}
{"text": "You are trying to make two fundamentally different concepts work together , namely templates and dynamic typing .Templates rely very much on static typing , isInputRange works by checking which attributes or methods a type has .Your dynamic type is treated as having every attribute or method at compile time , ergo it is treated as fulfilling every static duck - typing interface .", "label": "", "metadata": {}, "score": "58.816055"}
{"text": "JWT Views are a way to customize how a Model is displayed .For now it is able to configure which model elements and subelements are displayed .Note that in the future , this functional perimeter may be extended / included in the issue of JWT configuration and packaging .", "label": "", "metadata": {}, "score": "58.92888"}
{"text": "-Vladimir Panteleev Aug 18 ' 11 at 23:42 .For the general case Dynamic has to accept any method lookup at compile time , as you said .Suppose for a moment that you could prevent the isInputRange predicate to evaluate to true , now the wrong code will be generated when you try to create a Dynamic from an input range .", "label": "", "metadata": {}, "score": "59.0254"}
{"text": "The framework will be ready to use out - of - the - box with a sample application included .The internal design follows Java coding standards and makes extensive use of new PHP5 features .Parts of the project are already developed and being tested but not released in any form yet .", "label": "", "metadata": {}, "score": "59.18673"}
{"text": "VSIX package .The most obvious benefit is ability to deliver it as a VSIX package via the Extension Manager instead of an MSI installer .Instead of having to check for and download updates manually and wait for several long minutes for installation to complete , you will get automatic update notifications from Visual Studio and can update the package in just a few seconds .", "label": "", "metadata": {}, "score": "59.243294"}
{"text": "SamplePropertiesAspect is such a sample aspect providing information in the form of a mere property map .Trying STP - IM like inlined properties : \" properties \" contained relation to Property under ModelElement .not factorized as Properties with PropertiesAspectTemplate to avoid complexity ( parts ) for now . \" profile \" ( not contained ) relation under Scope ( limitation : not on Action ; though on StructuredActivityNode ) .", "label": "", "metadata": {}, "score": "59.289642"}
{"text": "What if i want to create a file io class , that takes a file type as a policy , e.g. .Idea is to inherit from file and create a different templates that can later be spawned when needed .Would this be a good fit for policies or should i just pass the file handle to global static functions or should i just create a class for each type of file ?", "label": "", "metadata": {}, "score": "59.326473"}
{"text": "Django applications require a single base filesystem path where Django ( depending on configuration ) will search for templates , static assets , etc .Thus , namespace packages may only be Django applications if one of the following is true : .", "label": "", "metadata": {}, "score": "59.339657"}
{"text": "It may be a lot faster .In this case , the container datastructure implemented templated on the type of data it contains , so it can not be fully compiled .For template libraries , it 's possible to provide all of the functionality in just header ( .", "label": "", "metadata": {}, "score": "59.45977"}
{"text": "Finally , EMF extensibility could also provide a simple extension alternative thanks to a base PropertiesAspectTemplate that has only to be extended .Design alternatives .Here is a list of changes to the JWT model that are possible to implement said features . \" aspects \" contained relation to EObject ( better alternative : to Aspect ) under ModelElement .", "label": "", "metadata": {}, "score": "59.484352"}
{"text": "later : change jwt - view to an eclipse plugin with an eclipse UI , make it the bases of the jwt - configuration / packaging / release - builder plugin .Metamodel extensions and JWT WE - finding and loading models and ecores .", "label": "", "metadata": {}, "score": "59.54137"}
{"text": "The Microsoft VC++ compiler has long supplied _ _ declspec ( dllexport ) and _ _ declspec ( dllimport ) extensions for this purpose , as do virtually all other compilers targeting the Windows platform .Modern versions of the GNU GCC compiler provide the _ _ attribute _ _ ( ( visibility ( \" default \" ) ) ) extension to indicate that a symbol should be exported .", "label": "", "metadata": {}, "score": "59.546516"}
{"text": "Eg : .Add a member template to Dynamic , which allows to statically disable some member function names .OP wants to create an object where obj.anything is valid at compile - time ( even though it might not be valid at run - time ) .", "label": "", "metadata": {}, "score": "59.7987"}
{"text": "There is nothing to put in a library unless the library is going to provide pre - instantiated versions or if there is some portion of the template library that does n't need to be templated .It means that you do not have to link any external libraries during the linking phase of your development .", "label": "", "metadata": {}, "score": "59.8183"}
{"text": "You can go any way you just said , here are the pros / cons of each : .Global Static Functions .PROS .If you plan to do a small program then what 's the worry ?Just use them and release and stop developing .", "label": "", "metadata": {}, "score": "59.838196"}
{"text": "So a 128 points per sample Policy would look like .And a 1024 points per sample Policy would look like .As you can see , things can get as long as you want .Another thing is that I implemented my Policies using composition rather than inheritance , which is something that Alexandrescu motivates in his other book of C++ Guidelines with Herb Sutter .", "label": "", "metadata": {}, "score": "59.9299"}
{"text": "That means the library can be used without requiring it to be first compiled and later linked in ; just include the headers in your own source modules .The benefits of this approach are .It 's easier to include , since you do n't need to specify linker options in your build system .", "label": "", "metadata": {}, "score": "60.236862"}
{"text": "Diagram - graph - GEF manipulations .We choose to evacuate this problem by not letting extensions be displayed or handled in any way in the diagram GEF editor .Manipulating them in a generic or vendor specific view is enough .", "label": "", "metadata": {}, "score": "60.311653"}
{"text": "It can be integrated into any static based website ( the site which contents static html - pages ) .Recommended for SEO !Key features - manage web - pages through web - interface - ... .The system is written in PHP and can be used to list data in any mySQL table , all you do is specify the mySQL database details and the engine will automatically generate a data listings table as per the configuration .", "label": "", "metadata": {}, "score": "60.347916"}
{"text": "handled in the org.eclipse.jwt.we.misc.views package of jwt - we : read by ViewResourceManager , Views , list of the read ecore 's packages built by AnalyseEcore .Enabling metamodel extension at JWT views level ( propositions ) : . basis ( works ! ) : Making it visible in the ( outline ) UI !", "label": "", "metadata": {}, "score": "60.547554"}
{"text": "For this project OZONE has undergone radical design changes and now mainly uses AJAX for data exchange .This makes the above description \" a bit \" out of date .The following macros all describe features that are required by the C++ standard , if one of the following macros is defined , then it represents a defect in the compiler 's conformance with the standard .", "label": "", "metadata": {}, "score": "60.54988"}
{"text": "Any of the elements : Action , Screen , Screen Template can request to change Layout , used CSS , JS or other rendering parameters .Figure 2 .Main content - generation ( Screens ) and action ( Actions ) classes .", "label": "", "metadata": {}, "score": "60.563213"}
{"text": "So you get more control with regard to dependencies than with one big central CMakeLists.txt file .To have all the local CMakeLists.txt files get used by the build system you need to add each subdirectory to the CMakeLists.txt file in the upper directory , with the call add_subdirectory ( ) , e.g. .", "label": "", "metadata": {}, "score": "60.638184"}
{"text": "Some solutions I can see : . provide your own dynamically typed implementations for heavily used functions .The whole problem you are having is caused by the fact that you are trying to use generic functions that assume static typing with dynamic types .", "label": "", "metadata": {}, "score": "60.914597"}
{"text": "Are there limitations ? performances .Dynamic EMF and mixed static - dynamic EMF models are slower to load , in proportion to the amount of dynamic EMF within .Most extensions will be small and sparse , and therefore performances will stay OK .", "label": "", "metadata": {}, "score": "60.96662"}
{"text": "RockNRollConfig ' in their INSTALLED_APPS setting .You can even provide several different AppConfig subclasses with different behaviors and allow your users to choose one via their INSTALLED_APPS setting .The recommended convention is to put the configuration class in a submodule of the application called apps .", "label": "", "metadata": {}, "score": "61.019928"}
{"text": "So all strings will end in a catalog named libmyshare .While for programs and most plugins the translations are loaded automatically , for shared libraries you have to do it manually .You do so by adding in the program after the creation of the KApplication or KCoreApplication instance the line : .", "label": "", "metadata": {}, "score": "61.237125"}
{"text": "This might not be as bad as it sounds , because the special cases are rare and using them would result in an obvious compiler error .I think that the best way to salvage this kind of method resolution for Dynamic is to fix writeln and accept that Dynamic will not work with all templated code .", "label": "", "metadata": {}, "score": "61.444717"}
{"text": "In the specific case of Action , Directly extending JWT Action is only possible using static EMF , because it may contain static subelements ( Location , Size ) .So it is possible , but not the most useful .Anyway it is more akin to modifying the core JWT model than to writing an extension ( I think ) , so we wo n't talk about this possibility here .", "label": "", "metadata": {}, "score": "61.563538"}
{"text": "You need also tell the buildsystem to install the header files .Without this external code can not build , as it can not include the files and thus the class and methods declarations of your library .You do this by adding to the library 's CMakeLists.txt : .", "label": "", "metadata": {}, "score": "61.57621"}
{"text": "Lots of tutorials on how to do it .CONS .As a program grows more classes to keep track of .Rewriting of a lot of ....... BOILERPLATE .It is basically the same as using templates , if you can come up with a Template Master Class then some execution problems are limited to that instead of being spread to the rest of the files .", "label": "", "metadata": {}, "score": "61.62834"}
{"text": "USER / GROUP MANAGEMENT / PERMISSION SYSTEM .Nested groups that can have multiple permissions assigned will be supported .User registration / login / logout and session management will be supported out - of - the - box .Also user session storage ( via object serialization ) is supported .", "label": "", "metadata": {}, "score": "61.886826"}
{"text": "Other examples : . action performer assignment .Service ( WebService , SCA ) call support .Requires to store and manage information pertaining to these specific Actions / Application or Action / Application extensions .WebServiceApplication has the following information : .", "label": "", "metadata": {}, "score": "61.916527"}
{"text": "This is good behaviour , because , all default model elements will be specified in the view , and it is still possible to specify not to display one by setting it to false ( unchecking its checkbox in jwt - view ) .", "label": "", "metadata": {}, "score": "62.04568"}
{"text": "External KDE code which should use the library 's classes and functions now can include the headers by the lines : .By installing the header files you are releasing your library officially .External code will rely on the interfaces declared by the headers .", "label": "", "metadata": {}, "score": "62.235233"}
{"text": "Modules - just like Navigation elements but with corresponding context - generation classes ( e.g. poll boxes ) .Each http request can define Action / Event that will be called before Screen is rendered .Each regular request specifies the template of the main content .", "label": "", "metadata": {}, "score": "62.241283"}
{"text": "To use the macro you must first .# if BOOST_WORKAROUND ( MACRONAME , CONDITION )// workaround code goes here ... # else // Standard conforming code goes here ... # endif .where MACRONAME is a macro that usually describes the version number to be tested against , and CONDITION is a comparison operator followed by a value .", "label": "", "metadata": {}, "score": "62.420258"}
{"text": "Download links from rapidshare , depositfiles , megaupload etc not published .I was implementing a dynamic typing library for D when I ran across an interesting problem .Right now , I 've succeeded in making a function called dynamic ( ) which returns a dynamic version of an object .", "label": "", "metadata": {}, "score": "62.427505"}
{"text": "Sharing code with others is one reason to separate code into libraries .Another reason is the need to organize a large code base .A useful approach to give a structure to code is to separate the source files in different subdirectories , each subdirectory containing only code for a certain domain , e.g. a subdirectory \" utils \" for all utility classes or \" gui \" for all gui related code .", "label": "", "metadata": {}, "score": "62.600853"}
{"text": "b ) ca n't be used if your function template is multiply declared .BOOST_USE_FACET ( Type , loc ) .When the standard library does not have a comforming std : : use_facet there are various workarounds available , but they differ from library to library .", "label": "", "metadata": {}, "score": "62.630344"}
{"text": "On the other hand , it means that you can use the library even if the author does n't have access to the same compiler as you , and you 're not forced to use whatever options he used when he compiled the library .", "label": "", "metadata": {}, "score": "62.72756"}
{"text": "JWT metamodel extension in the broader picture ( added 20080527 ) .JWT metamodel extension has an impact on other JWT components : for example , it implies these components have to be extensible themselves , or they may benefit from custom tailored extensions .", "label": "", "metadata": {}, "score": "62.77275"}
{"text": "JWT Workflow Editor tool : model extension display and edition .JWT Transformations : extended model transformation to representation or executable format , enriching existing ones .JWT Runtime technologies : extensions that are custom to a given technology , extensible runtime utilities .", "label": "", "metadata": {}, "score": "63.14772"}
{"text": "It is called as soon as the registry is fully populated .You can not import models in modules that define application configuration classes , but you can use get_model ( ) to access a model class by name , like this : .", "label": "", "metadata": {}, "score": "63.16801"}
{"text": "There is a common concept that is philosophically close to our needs ( anything extensible , extension in their own subelements ) : the concept of \" Aspect \" ( or mixin etc . ) .An Aspect can be viewed as a \" part of a type \" designed to answer or implement a well - defined business or technical need .", "label": "", "metadata": {}, "score": "63.21631"}
{"text": "Such an extension is actually a JWT Action 's implementation .This implies there can only be one such extension per ActivityNode , though nothing says they themselves ca n't be extended somehow .In its concept , it is similar to a custom extension of JWT Application that is inlined ( embedded ) within an Action .", "label": "", "metadata": {}, "score": "63.26581"}
{"text": "If you need to use any of the legacy code generators with Visual Studio 2012 I will do my best to support your effort to upgrade them on CodePlex .No ready - to - use directive processors .T4 Toolbox for Visual Studio 2012 does not include any directive processors you can directly use in your templates .", "label": "", "metadata": {}, "score": "63.66108"}
{"text": "a property map ) .in multiple orthgonal ways ( ex . \" typed \" extensions ) , so different extensions with different aims and features can coexist , and each of them can be easily found and distinguished by their management code and business logic .", "label": "", "metadata": {}, "score": "63.89875"}
{"text": "This macro gets defined automatically if BOOST_NO_MEMBER_TEMPLATES is not defined - in other words this is treated as a strict subset of the features required by the standard .BOOST_HAS_STDINT_H .Platform .This macro is used where a compiler specific workaround is required that is not otherwise described by one of the other Boost .", "label": "", "metadata": {}, "score": "64.144005"}
{"text": "It has been renamed to OutputItem .Its BuildAction property was renamed to ItemType and its BuildProperties property was renamed to Metadata .Roadmap .Going forward I want to take the T4 Toolbox the point where it provides first - class developer experience for working with text templates .", "label": "", "metadata": {}, "score": "64.21471"}
{"text": "either \" singleton \" , i.e. instanciated along with a model element , . or \" feature \" ( transversal , activable feature ) , that can be added or removed on its own ; . configure their behaviour in an additional metamodel comprising . singleton or feature . extension name and version .", "label": "", "metadata": {}, "score": "64.245804"}
{"text": "The alternative would be to create a static metaelement for dynamic properties as described in task 225704 and write code that simulates the behavior of EMF EAttributes or EReferences using instances of this class .I hope I got the basic idea that is behind this extension mechanism right .", "label": "", "metadata": {}, "score": "64.25443"}
{"text": "there exists such a concept in the nowadays JWT metamodel , but it inherits from the Java specific Application whose \" javaClass \" and \" jarArchive \" are meaningless here .NB .this may be implemented in any given way at runtime , including on top of middleware technologies such as SCA .", "label": "", "metadata": {}, "score": "64.3943"}
{"text": "The compiler has C++ extensions _ _ declspec ( dllexport ) and _ _ declspec ( dllimport ) to control export / import of symbols from shared libraries .Deprecated .This macro is no longer necessary since BOOST_SYMBOL_EXPORT and BOOST_SYMBOL_IMPORT are now supplied .", "label": "", "metadata": {}, "score": "64.489784"}
{"text": "In this particular case the best solution I can think of is that Dynamic provides it 's own version of toString , and writeln would prefer that over the inputRange specialization .I believe writeln does n't do this at the moment , at least not for structs , but it probably should .", "label": "", "metadata": {}, "score": "64.86497"}
{"text": "And like you do with programs you have to add a shell script named Messages.sh in the toplevel directory of your shared library to collect all the strings , e.g. : . bin / sh # fetch all strings in files that are not source code $ EXTRACTRC ' find .", "label": "", "metadata": {}, "score": "65.005264"}
{"text": "to configure monitoring .Technologies .Here is a list of available technologies to extend the JWT metamodel : . static , \" fixed \" extension model done in static EMF ( loaded as instances of JET - generated classes ) .", "label": "", "metadata": {}, "score": "65.03935"}
{"text": "( You 'd have to have a custom toString method anyways if the isInputRange issue would not exist , because otherwise its result would again be of Dynamic type ) .This would probably make writeln(d ) ; work .provide wrappers for dynamic that allow you to pass dynamic types into various templated functions .", "label": "", "metadata": {}, "score": "65.042725"}
{"text": "A project 's root directory ( the one that contains manage.py ) is usually the container for all of a project 's applications which are n't installed separately .The term application describes a Python package that provides some set of features .", "label": "", "metadata": {}, "score": "65.33127"}
{"text": "Extension example : A runtime implementation of WebServiceApplication on top of SCA calls requires the following extended information ( in addition to those of WebServiceApplication ) : .SCA binding type .For a WebServiceApplication , must be \" ws \" .", "label": "", "metadata": {}, "score": "65.59635"}
{"text": "Again , defining project - specific configuration classes in a submodule called apps is a convention , not a requirement .Filesystem path to the application directory , e.g. ' /usr / lib / python3.4/dist - packages / django / contrib / admin ' .", "label": "", "metadata": {}, "score": "65.647995"}
{"text": "There are only .h files ( or some other extensions such as .C++ compilers require the definitions of templates to be present in the same file in which they 're declared .As such , the header - only library is neither static library or dynamic library .", "label": "", "metadata": {}, "score": "65.69146"}
{"text": "This is separate from things like threading support , or runtime library variations , which have to be dealt with by build variants .To put this in perspective there is one compiler ( Borland 's ) that has so many compiler options that make subtle changes to the ABI , that at least in theory there 3200 combinations , and that 's without considering runtime library variations .", "label": "", "metadata": {}, "score": "65.766975"}
{"text": "Benefits from the full expressivity of Ecore metamodeling .The dynamic EMF technology is especially interesting , because it blends ease of use ( no code to write or generate ) with power ; therefore we 'll especially consider it in our analysis from now on .", "label": "", "metadata": {}, "score": "65.77946"}
{"text": "Mainly for debugging the configuration .Defined as a string describing the name and version number of the standard library in use .Mainly for debugging the configuration .Defined as a string describing the name of the platform .Mainly for debugging the configuration .", "label": "", "metadata": {}, "score": "65.87744"}
{"text": "This document File : AgilPro MetamodelDescription.pdf describes the metamodel of AgilPro as it is today ( 2007 - 02 - 21 ) .This document will be the basis for discussions on all working groups who have requirements on the meta - model .", "label": "", "metadata": {}, "score": "65.901596"}
{"text": "OZONE should be able to be used as a core - logic for almost any web application / website .In some future other components such as WebServices or RAD - like tools will likely be created .LICENSE .The OZONE Framework will be available under a GNU Lesser General Public License ( LGPL ) which will make it suitable for both free software developers and commercial applications .", "label": "", "metadata": {}, "score": "66.025444"}
{"text": "Developer should simply inherit from the base Screen class and implement certain abstract methods and e.g. pull required data from the database and insert into web context .Templates - OZONE Framework uses Smarty as the powerful template engine .Prepared context is passed to templates and the output is generated .", "label": "", "metadata": {}, "score": "66.03659"}
{"text": "Template Parser Engine is a PHP Project designed to help developer create automatically different file formats .With this free project , developer only needs to set special tags into templates , and this PHP template will then create dynamic code ... .", "label": "", "metadata": {}, "score": "66.23259"}
{"text": "The easier path may allure you and you may quit implementation and go back running to global static functions crying like a little girl .A run method may extend to thousands of lines of code depending on your algorithm .\" Most examples show parts like construction , destruction , thread saftey and so on .", "label": "", "metadata": {}, "score": "66.78751"}
{"text": "There 's no such thing as an Application object .However , there 's a few places where Django needs to interact with installed applications , mainly for configuration and also for introspection .That 's why the application registry maintains metadata in an AppConfig instance for each installed application .", "label": "", "metadata": {}, "score": "66.86775"}
{"text": "Example : POJO Action requires the following information : .POJO class .POJO method .Imixs.org specific Action features support .Imixs.org features depend on numerous Action - level properties that should be stored and accessible in JWT metamodel , and editable typically through an additional property tab(s ) .", "label": "", "metadata": {}, "score": "67.06108"}
{"text": "Mainly Action , but possibly others : . external subprocess to add information about how to execute it .Model to add vendor - specific information about the process model .actually , any model element could be interesting to put Vendor specific information on .", "label": "", "metadata": {}, "score": "67.1129"}
{"text": "This extension should be editable in a custom - built UI view .This extension 's information should be translated to Bonita XPDL in the right format ( using XPDL ExtendedAttributes mainly ) .Example : an Action may have Hooks .", "label": "", "metadata": {}, "score": "67.23872"}
{"text": "This concept of ABI versioning breaks if the executable got linked to a newer version of the library ( e.g. 2.4.0 ) which is backward - compatible to older versions ( all 2.0 - 3 .Because conforming to the concept the older versions have the same ABI version like the newer one ( e.g. 2 ) .", "label": "", "metadata": {}, "score": "67.29181"}
{"text": "Configuring EMF .workflow file loading in WEEditor.createModel ( ) : . getResourceSet ( ) .put(XMLResource .OPTION_EXTENDED_META_DATA , Boolean .TRUE ) ; r.getDefaultLoadOptions ( ) .put(XMLResource .OPTION_USE_LEXICAL_HANDLER , Boolean .TRUE ) ; r.getDefaultLoadOptions ( ) .", "label": "", "metadata": {}, "score": "67.722565"}
{"text": "OZONE will be a complete and powerful object - oriented MVC framework for developing advanced web applications in PHP5 .It will by default have support for XHTML / CSS , Unicode , page templates , xml - defined form validation , object - based ( xml - defined ) database interaction , user / group management .", "label": "", "metadata": {}, "score": "67.96257"}
{"text": "JWT metamodel extension .Goals of JWT metamodel extension ( consolidated ) .allow JWT metamodel to be extended .for JWT developers ( ex .allow complex metadata , using static EMF for performances ) .for users : as easily as possible ( ex .", "label": "", "metadata": {}, "score": "68.4613"}
{"text": "You must include the name attribute for Django to determine which application this configuration applies to .You can define any attributes documented in the AppConfig API reference .Note .If your code imports the application registry in an application 's _ _ init__.", "label": "", "metadata": {}, "score": "68.69191"}
{"text": "ScaServiceApplication has the following information : .SCA service name .SCA service Java interface .Ideally this should be guessed at runtime .SCA service method .NB .the runtime engine must be integrated in an SCA architecture , typically by being configured to load at startup the appropriate SCA composite files .", "label": "", "metadata": {}, "score": "68.78398"}
{"text": "In order to avoid sprinkling # pragma 's all over the boost headers , there are some prefix and suffix headers that do the job .Typical usage is : . my_library . hpp .hpp pragmas # endif // include guard . ...", "label": "", "metadata": {}, "score": "69.073784"}
{"text": "In order to allow supporting this functionality in the future , the T4 Toolbox API was changed to remove direct dependency on Visual Studio API and be consistent with the MSBuild API .TransformationContext .This class now fully implements the Singleton pattern consistently with HttpContext and other similar classes in the .", "label": "", "metadata": {}, "score": "69.196"}
{"text": "For instance , it could as well apply to an Action that calls a web service , as to an Action that asks information to the user as event to a Join node .See Christian Saad 's contribution proposition in the mailing list .", "label": "", "metadata": {}, "score": "69.54384"}
{"text": "BOOST_SYMBOL_IMPORT .Defines the syntax of a C++ language extension that indicates a symbol is to be imported from a shared library .If the compiler has no such extension , the macro is defined with no replacement text .BOOST_SYMBOL_VISIBLE .", "label": "", "metadata": {}, "score": "69.65146"}
{"text": "This tag has to have a different name for each library .For this add a file myshared_export.h to the directory of the library , containing : . # ifndef MYSHARED_EXPORT_H # define MYSHARED_EXPORT_H . # ifndef MYSHARED_EXPORT # if defined(MAKE_MYSHARED_LIB )", "label": "", "metadata": {}, "score": "69.660965"}
{"text": "Microsoft 's broken version of std : : iterator is being used .This implies that std : : iterator takes no more than two template parameters .BOOST_MSVC6_MEMBER_TEMPLATES .Compiler .Microsoft Visual C++ 6.0 has enough member template idiosyncrasies ( being polite ) that BOOST_NO_MEMBER_TEMPLATES is defined for this compiler .", "label": "", "metadata": {}, "score": "69.69066"}
{"text": "The instructions are similar to the ones for a program .But instead of calling kde4_add_executable ( ) you use kde4_add_library ( ) to register the library myshared .The parameter SHARED is needed as this declares the library is a shared one , not a static .", "label": "", "metadata": {}, "score": "69.87475"}
{"text": "I want to be able to use my Waveforms just like Matlab does , only in C++ .What do you mean Policy implementation could get big .Let 's say you are implementing Particle Swarm Optimization .You code the PSO in a template that receives an array of data an optimizes your problem based on it .", "label": "", "metadata": {}, "score": "69.91511"}
{"text": "Which creates a problem .At the moment I have basic C++ knowledge but would like to know what this exactly means and why this people use it on this project .9 Answers 9 .It means all the definitions of template ( function template or class template ) are in the headers only .", "label": "", "metadata": {}, "score": "69.9543"}
{"text": "Host .DTE , Project , ProjectItem , DefaultNamespace and RootNamespace properties are no longer available .They had internal dependencies on the Visual Studio APIs and were not forward compatible with MSBuild .However , TransformationContext now implements the IServiceProvider interface and you can use the new GetService method to access the same information like so . OutputItem .", "label": "", "metadata": {}, "score": "70.111176"}
{"text": "Compiler .Compiler requires inherited operator friend functions to be defined at namespace scope , then using'ed to boost .Probably GCC specific .BOOST_NO_PARTIAL_SPECIALIZATION_IMPLICIT_DEFAULT_ARGS .Compiler .The compiler does not correctly handle partial specializations which depend upon default arguments in the primary template . BOOST_NO_POINTER_TO_MEMBER_CONST .", "label": "", "metadata": {}, "score": "70.531975"}
{"text": "Originally a Borland specific problem with imports to / from the global namespace , extended to MSVC6 which has a specific issue with importing template classes ( but not functions ) .Compiler .The compiler does not allow a void function to return the result of calling another void function .", "label": "", "metadata": {}, "score": "70.55588"}
{"text": "To avoid executing code at import time , you can move it into a function and cache its results .The code will be executed when you first need its results .This concept is known as \" lazy evaluation \" .", "label": "", "metadata": {}, "score": "70.70958"}
{"text": "Note that Model is already versioned .Model update algorithm : it should be modified so it can make the difference between model version error and extension version error ( including unknown extension ) .Note that it is for now limited to the \" addition only \" changes in the ecore , which is enough .", "label": "", "metadata": {}, "score": "70.726395"}
{"text": "They generate code generation code and have to be implemented using CodeDOM .They are also harder to use than templates because code they generate is invisible to you by default .In addition , the VolatileAssembly is no longer necessary because in Visual Studio 2012 the assembly directive shadow - copies the assembly files before loading them .", "label": "", "metadata": {}, "score": "70.831184"}
{"text": "Once this stage completes , APIs that operate on application configurations such as get_app_config ( ) become usable .Then Django attempts to import the models submodule of each application , if there is one .You must define or import all models in your application 's models.py or models/__init__. py .", "label": "", "metadata": {}, "score": "70.934845"}
{"text": "BOOST_FUNCTION_SCOPE_USING_DECLARATION_BREAKS_ADL .Argument dependent lookup fails if there is a using declaration for the symbol being looked up in the current scope .For example , using boost : : get_pointer ; prevents ADL from finding overloads of get_pointer in namespaces nested inside boost ( but not elsewhere ) .", "label": "", "metadata": {}, "score": "71.21412"}
{"text": "# ifndef MYSHARED_EXPORT_DEPRECATED # define MYSHARED_EXPORT_DEPRECATED KDE_DEPRECATED MYSHARED_EXPORT # endif .# endif .This macro code defines the tag MYSHARED_EXPORT for the library .Now you prepare all classes by adding a include for the header with the library 's export tag and putting the export tag defined above in front of the class name , like this : . # include \" myshared_export .", "label": "", "metadata": {}, "score": "71.3212"}
{"text": "Platform .BOOST_HAS_MACRO_USE_FACET .Standard library .The standard library lacks a conforming std : : use_facet , but has a macro _ USE ( loc , Type ) that does the job .This is primarily for the Dinkumware std lib .", "label": "", "metadata": {}, "score": "71.3591"}
{"text": "\" aspect choice list \" : restrain aspect instanciation to at most one of a given list of aspect : \" single \" and / or \" unique \" property on an abstract Aspect that is a common ancestor to all aspects of the list ; ex .", "label": "", "metadata": {}, "score": "71.92099"}
{"text": "Standard library .The C++ implementation fails to provide the std : : iterator class . BOOST_NO_STD_ITERATOR_TRAITS .Standard library .The compiler does not provide a standard compliant implementation of std : : iterator_traits .Note that the compiler may still have a non - standard implementation .", "label": "", "metadata": {}, "score": "72.069885"}
{"text": "Unicode is natively supported in PHP5 .This will allow to create international websites without any extra design issues .ABSTRACT DATABASE OBJECT MODEL .The use of database requires the developer to define database ( tables , columns ) via simple xml configuration files .", "label": "", "metadata": {}, "score": "72.20753"}
{"text": "Your implementation could require extra data from other places , meaning things could grow out of proportion .As a program grows you may want to share things between global static functions , so you remove the static , then you start using global variables , then chaos , it takes around 3 years for this to happen .", "label": "", "metadata": {}, "score": "72.25607"}
{"text": "For example , even though the test database configuration is separate from the production settings , manage.py test would still execute some queries against your production database !Note .In the usual initialization process , the ready method is only called once by Django .", "label": "", "metadata": {}, "score": "72.26637"}
{"text": "Some compilers do n't support the use of typename for dependent types in deduced contexts .This macro expands to nothing on those compilers , and typename elsewhere .BOOST_HASH_MAP_HEADER .The header to include to get the SGI hash_map class .", "label": "", "metadata": {}, "score": "72.31088"}
{"text": "zipped files in a workflow bundle ( zipped .workflow + extension definition files ) .EMF model element in a workflow model , as a subtree of the root Model element ; works for EMF or EMF / XML built extension definitions .", "label": "", "metadata": {}, "score": "72.71069"}
{"text": "To prevent it , change your INSTALLED_APPS to contain ' django.contrib.admin.apps.SimpleAdminConfig ' instead of ' django.contrib.admin ' .This document is for Django 's development version , which can be significantly different from previous releases .For older releases , use the version selector floating in the bottom right corner of this page .", "label": "", "metadata": {}, "score": "72.8159"}
{"text": "The value of SOVERSION defines the ABI variant of your library .It is a single always increasing integer , numbering the versions with non - backward - compatibel changes .If you follow the rules given above for the VERSION version , the value of SOVERSION will of course match the major number of it .", "label": "", "metadata": {}, "score": "72.979355"}
{"text": "Once this stage completes , APIs that operate on models such as get_model ( ) become usable .Finally Django runs the ready ( ) method of each application configuration .Here are some common problems that you may encounter during initialization : .", "label": "", "metadata": {}, "score": "73.00731"}
{"text": "Works with Visual C++/C++ Builder , Visual Basic , Delphi .It is an excellent replacement for larger database engines .Many developers who use the Jet database engine(DAO ) or BDE for their database applications soon realize that Jet and BDE is just too big and difficult to distribute their applications .", "label": "", "metadata": {}, "score": "73.13039"}
{"text": "BOOST_NO_STDC_NAMESPACE .Compiler , Platform .This test is difficult - some libraries \" fake \" the std C functions by adding using declarations to import them into namespace std , unfortunately they do n't necessarily catch all of them ... .", "label": "", "metadata": {}, "score": "73.14984"}
{"text": "JWT EMF outline .JWT EMF property view . aditionally , the JWT EMF property view could be enhanced by custom tabs . aditionally , custom views could be made .As said before , we prioritize manipulating metamodel extensions in a generic ( i.e. JWT outline and property view ) or vendor specific view .", "label": "", "metadata": {}, "score": "73.4188"}
{"text": "OZONE will be a powerfull modern PHP5-based object - oriented MVC application framework .It will have the following features ( some are already implemented ) : .ADVANCED WEBFLOW , TEMPLATES .The main components of the application that are used in processing the user request are : .", "label": "", "metadata": {}, "score": "73.465836"}
{"text": "But it is n't useful for the product dynamic library .If a function \" foo ( ) \" from the static library is not used by the other code in the shared library this function will not be found in resulting shared library product .", "label": "", "metadata": {}, "score": "73.60464"}
{"text": "To make the actual additions to the JWT metamodel , I 've experimented a bit with dynamic EMF .At first , it seemed that possibly the simplest solution to extend existing classes would be to directly inject dynamically created EAttributes or EReferences into the metaobjects because in this case EMF would take care of most issues concerning the management of the new items .", "label": "", "metadata": {}, "score": "73.60549"}
{"text": "BOOST_NO_EXCEPTIONS .The compiler does not support exception handling ( this setting is typically required by many C++ compilers for embedded platforms ) .Note that there is no requirement for boost libraries to honor this configuration setting - indeed doing so may be impossible in some cases .", "label": "", "metadata": {}, "score": "73.60953"}
{"text": "You need to be saving code , the less you code the more value you take home .But this does not mean it will not be hard .So again , it depends on your problem .To use my code for example I do the following .", "label": "", "metadata": {}, "score": "73.9807"}
{"text": "It is however a compromise between performance and configurability - most of the solutions used are hard - coded but provide maximum freedom within them .The non - questionable benefit is that OZONE will work out - of - the - box and will be ready to develop web applications after easy configuration .", "label": "", "metadata": {}, "score": "74.13199"}
{"text": "Let 's say you have a Waveform class that generates waveforms .But you need policies for 128 Samples and for 1024 Samples , you do n't do this on dynamic allocation because you need the sampling rate defined at compilation time rather than on runtime ...", "label": "", "metadata": {}, "score": "74.26025"}
{"text": "Standard library .The standard library lacks a conforming std::use_facet , but has a two argument version that does the job .This is primarily for the Rogue Wave std lib . BOOST_HAS_UNISTD_H .Platform .BOOST_HAS_WINTHREADS .Platform .The platform supports MS Windows style threads . BOOST_MSVC_STD_ITERATOR .", "label": "", "metadata": {}, "score": "74.328766"}
{"text": "But B can be compiled into binary , as the compiler has complete information about it .So you can read the phrase \" class template A \" as : A is a template for a class .A itself is not a class .", "label": "", "metadata": {}, "score": "74.35776"}
{"text": "Personal Preference and some other reasons based on some books .You can use inheritance as long as you do n't go crazy on the base class functionality .Why so much methods in the Policy ?Because the waveform itself is private , a user may create sound , but not alter it .", "label": "", "metadata": {}, "score": "74.498146"}
{"text": "The AppConfig class used to configure the application has a path class attribute , which is the absolute directory path Django will use as the single base path for the application .If it 's an application configuration class , Django imports the root package of the application , defined by its name attribute .", "label": "", "metadata": {}, "score": "74.721664"}
{"text": "The buildsystem up to KDE 4.1 supports the use of static libraries only for programs , not for shared libraries .So use this structuring method only for programs .This restriction is due to the fact that the linker utilities on most platforms supported only import those parts of static libraries into the end product which are referenced by the other code in the product , not simply everything .", "label": "", "metadata": {}, "score": "75.47662"}
{"text": "An XMI file that refers relatively to an available ecore extension file will load as dynamic EMF .If XML rather than XMI is used , EMF can be configured so an XMI file that refers relatively to an available XSD extension file will load as EMF / XML ( thanks to XSDEcoreBuilder ) .", "label": "", "metadata": {}, "score": "75.85414"}
{"text": "Describes the boost version number in XYYYZZ format such that : ( BOOST_VERSION % 100 ) is the sub - minor version , ( ( BOOST_VERSION / 100 ) % 1000 ) is the minor version , and ( BOOST_VERSION / 100000 ) is the major version .", "label": "", "metadata": {}, "score": "76.5631"}
{"text": "Now that we 've got a basic idea of how it could work at model level , let 's focus on what is its first use : display and edition in JWT WE .Let 's remember JWT WE comprises the following display and edition capabilities : .", "label": "", "metadata": {}, "score": "76.57289"}
{"text": "OZONE will provide PHP web developers with unique tools such as abstract OO database layer and advanced templating ( based on Smarty ) .On the other hand it will be core - only framework but allow creating additional components easily .", "label": "", "metadata": {}, "score": "76.68727"}
{"text": "The only time you have to use the directive processors is when you need to change the transformation process itself .For example T4 Toolbox still relies on a directive processor in the T4Toolbox.tt include file to initialize the TransformationContext and save additional output files , however you should n't use this directive processors in your code .", "label": "", "metadata": {}, "score": "76.860275"}
{"text": "Thank you for taking the time to visit my site !If you are looking for information about T4 , this article would be a good place to start .For information about ASP.NET Dynamic Data , my book would be a good place to start .", "label": "", "metadata": {}, "score": "76.911316"}
{"text": "A single service URL that also provides the WSDL by appending \" ? wsdl \" to it is enough .Alternatively could be explicitely provided the WSDL , the service , the portTyp , the location in optional \" overriding \" properties . operation .", "label": "", "metadata": {}, "score": "77.02231"}
{"text": "For example instead of : . use : . BOOST_UNREACHABLE_RETURN( result ) .Normally evaluates to nothing , but evaluates to return x ; if the compiler requires a return , even when it can never be reached . BOOST_EXPLICIT_TEMPLATE_TYPE ( t ) BOOST_EXPLICIT_TEMPLATE_NON_TYPE ( t , v ) BOOST_APPEND_EXPLICIT_TEMPLATE_TYPE ( t ) BOOST_APPEND_EXPLICIT_TEMPLATE_NON_TYPE ( t , v ) .", "label": "", "metadata": {}, "score": "77.34453"}
{"text": "Why ?Because I have to assume that all members which it needs exist , unless I can prove otherwise at run time -- which is too late .So the program tries to call front , popFront , and empty on result , crashing my program .", "label": "", "metadata": {}, "score": "77.38111"}
{"text": "The compiler does not correctly handle pointers to const member functions , preventing use of these in overloaded function templates .BOOST_NO_POINTER_TO_MEMBER_TEMPLATE_PARAMETERS .Compiler .Pointers to members do n't work when used as template parameters .BOOST_NO_PRIVATE_IN_AGGREGATE .Compiler .The compiler misreads 8.5.1 , treating classes as non - aggregate if they contain private or protected member functions .", "label": "", "metadata": {}, "score": "77.4053"}
{"text": "At this stage , your code should n't import any models !In other words , your applications ' root packages and the modules that define your application configuration classes should n't import any models , even indirectly .Strictly speaking , Django allows importing models once their application configuration is loaded .", "label": "", "metadata": {}, "score": "77.41235"}
{"text": "The project Python package is defined primarily by a settings module , but it usually contains other things .For example , when you run django - admin startproject mysite you 'll get a mysite project directory that contains a mysite Python package with settings.py , urls.py , and wsgi.py .", "label": "", "metadata": {}, "score": "77.71547"}
{"text": "For example , ugettext ( ) uses the app registry to look up translation catalogs in applications .To translate at import time , you need ugettext_lazy ( ) instead .( Using ugettext ( ) would be a bug , because the translation would happen at import time , rather than at each request depending on the active language . )", "label": "", "metadata": {}, "score": "78.06535"}
{"text": "The user can disable this mechanism by defining BOOST_DISABLE_ABI_HEADERS , or they can define BOOST_ABI_PREFIX and/or BOOST_ABI_SUFFIX to point to their own prefix / suffix headers if they so wish .Required : An identifier containing the basename of the library , for example ' boost_regex ' .", "label": "", "metadata": {}, "score": "78.29384"}
{"text": "Typical usage : . boost / foo / config .hpp .boost / foo / foo .hpp .boost / libs / foo / src / foo .cpp .When linking against a pre - compiled library it vital that the ABI used by the compiler when building the library matches exactly the ABI used by the code using the library .", "label": "", "metadata": {}, "score": "78.33031"}
{"text": "Instead of multiple static properties , like Transformation and Host it defines a single property called Current which can be used to access instance properties of the singleton object .So instead of accessing transformation host via TransformationContext .Host , you now have to access it via TransformationContext .", "label": "", "metadata": {}, "score": "78.39372"}
{"text": "Compiler .The typename keyword can not be used when creating a temporary of a Dependent type .BOOST_NO_UNREACHABLE_RETURN_DETECTION .Compiler .If a return is unreachable , then no return statement should be required , however some compilers insist on it , while other issue a bunch of warnings if it is in fact present .", "label": "", "metadata": {}, "score": "78.46823"}
{"text": "Standard library .The standard library does not provide templated iterator constructors for its containers .BOOST_NO_TEMPLATE_TEMPLATES .Compiler .The compiler does not support template template parameters .BOOST_NO_TYPEID .Compiler .The compiler does not support the typeid operator at all .", "label": "", "metadata": {}, "score": "78.57338"}
{"text": "So to construct the program myprogram using the static libraries mygui and myutils you write the CMakeLists.txtlike e.g. : . target_link_libraries ( myprogram mygui myutils # and all needed dynamic libraries , like the KDE ones and else , # also the ones needed by your static libraries mygui and myutils ) .", "label": "", "metadata": {}, "score": "78.692726"}
{"text": "Compiler .The C++ implementation does not provide wchar_t , or it is really a synonym for another integral type .Use this symbol to decide whether it is appropriate to explicitly specialize a template on wchar_t if there is already a specialization for other integer types .", "label": "", "metadata": {}, "score": "78.81466"}
{"text": "BOOST_STRINGIZE ( X ) .Converts the parameter X to a string after macro replacement on X has been performed .BOOST_JOIN ( X , Y ) .This piece of macro magic joins the two arguments together , even when one of the arguments is itself a macro ( see 16.3.1 in C++ standard ) .", "label": "", "metadata": {}, "score": "78.939865"}
{"text": "Defined if there are no 64-bit integral types : int64_t , uint64_t etc . .BOOST_NO_INTEGRAL_INT64_T . BOOST_MSVC .Defined if the compiler is really Microsoft Visual C++ , as opposed to one of the many other compilers that also define _ MSC_VER .", "label": "", "metadata": {}, "score": "79.260826"}
{"text": "cpp files .It means that all of the code is in header files ; there are no libraries associated with the library .What that means in practice depends - in the worst case , it means that the author has never even compiled the code:- ) .", "label": "", "metadata": {}, "score": "79.43237"}
{"text": "OZONE uses object oriented design and Java coding standards .It uses most of the new features of PHP5 such as class autoloading , SimpleXML , new Object design ( much closer to Java ) and does not inherit any of the \" old \" PHP4 patterns where new approach is available .", "label": "", "metadata": {}, "score": "79.86889"}
{"text": "put(XMLResource .OPTION_XML_OPTIONS , xmlOptions ) ; // save options ( or in doSave ( ) ) r.getDefaultSaveOptions ( ) .put(XMLResource .OPTION_EXTENDED_META_DATA , Boolean .TRUE ) ; //r.getDefaultSaveOptions ( ) .put(XMLResource .OPTION_LINE_WIDTH , new Integer(80 ) ) ; r.getDefaultSaveOptions ( ) .", "label": "", "metadata": {}, "score": "80.27446"}
{"text": "Defined if the dinkumware standard library is in use , takes the same value as the Dinkumware library version macro _ CPPLIB_VER if defined , otherwise 1 . BOOST_NO_WREGEX .Defined if the regex library does not support wide character regular expressions .", "label": "", "metadata": {}, "score": "80.67709"}
{"text": "Standard library .The header declares type_info in the global namespace instead of namespace std .BOOST_NO_STD_USE_FACET .Standard library .The standard library lacks a conforming std : : use_facet .BOOST_NO_STD_WSTREAMBUF .Standard library .BOOST_NO_STD_WSTRING .Standard library .", "label": "", "metadata": {}, "score": "81.55687"}
{"text": "Defined to a normalised 9 digit version of _ MSC_FULL_VER ( which sometimes only has 8 digits ) , the macro has the form VVMMPPPPP where VV is the major version number , MM is the minor version number , and PPPPP is the compiler build number .", "label": "", "metadata": {}, "score": "81.632385"}
{"text": "Note that a hook may be hooked on many events , which is the same that saying that there may be several identical hooks hooked on different events , since hooks are stateless .the Java Hook class it calls when triggered .", "label": "", "metadata": {}, "score": "81.64609"}
{"text": "Edit : .Thanks @Claudiordgz for a great indept answer .To give another example would be taking the network approach .UPD and TCP are very similar and very different at the same time .They both need a socket but one is connectionless the other connection - oriented .", "label": "", "metadata": {}, "score": "82.053314"}
{"text": "Compiler .The compiler may ( or may not ) have the typeid operator , but RTTI on the dynamic type of an object is not supported .BOOST_NO_SFINAE .Compiler .The compiler does not support the \" Substitution Failure Is Not An Error \" meta - programming idiom .", "label": "", "metadata": {}, "score": "82.202866"}
{"text": "The ORM can not function properly until all models are available .This exception also happens if you forget to call django.setup ( ) in a standalone Python script .ImportError : can not import name ...This happens if the import sequence ends up in a loop .", "label": "", "metadata": {}, "score": "82.26776"}
{"text": "Compiler .The compiler does not support usage of SFINAE with arbitrary expressions .BOOST_NO_STD_ALLOCATOR .Standard library .The C++ standard library does not provide a standards conforming std : : allocator .BOOST_NO_STD_DISTANCE .Standard library .The platform does not have a conforming version of std : : distance .", "label": "", "metadata": {}, "score": "82.41284"}
{"text": "Its design is inspired by the great Apache Jakarta tools that set standards in the web development world .In terms of design and functionality OZONE is ( will be ) also similar to Prado but extensively uses Smarty templates instead of xml - based view components .", "label": "", "metadata": {}, "score": "82.546524"}
{"text": "Then you have a Class TCP_conn and Class UDP_conn that each define packets , headers , and methods , for example : . method send .method receive ( for TCP ) .method setup .Then you inherit like your example : .", "label": "", "metadata": {}, "score": "82.81604"}
{"text": "Optional : when set the header will print out the name of the library selected ( useful for debugging ) .my_library . hpp . ...// // Do n't include auto - linking code if the user has disabled it by // defining BOOST_ALL_NO_LIB , or BOOST_MY_LIBRARY_NO_LIB , or if this // is one of our own source files ( signified by BOOST_MY_LIBRARY_SOURCE ) : // # if ! defined ( BOOST_ALL_NO_LIB ) & & ! defined ( BOOST_MY_LIBRARY_NO_LIB ) & & !", "label": "", "metadata": {}, "score": "82.821915"}
{"text": "Standard library .The standard library lacks std : : locale .BOOST_NO_STD_MESSAGES .Standard library .The standard library lacks a conforming std : : messages facet .BOOST_NO_STD_MIN_MAX .Standard library .BOOST_NO_STD_OUTPUT_ITERATOR_ASSIGN .Standard library .Defined if the standard library 's output iterators are not assignable .", "label": "", "metadata": {}, "score": "83.03079"}
{"text": "BOOST_NO_ADL_BARRIER .Compiler .Compiler .Compiler does not implement argument - dependent lookup ( also named Koenig lookup ) ; see std::3.4.2 [ basic.koenig.lookup ] .Standard library .If the compiler / library supplies non - standard or broken std : : auto_ptr .", "label": "", "metadata": {}, "score": "83.1122"}
{"text": "BOOST_NO_IOSTREAM .std lib .BOOST_NO_IS_ABSTRACT .Compiler .The C++ compiler does not support SFINAE with abstract types , this is covered by Core Language DR337 , but is not part of the current standard .Fortunately most compilers that support SFINAE also support this DR . .", "label": "", "metadata": {}, "score": "83.25755"}
{"text": "Adding also functions or class methods to the table which are not intended to be called from the outside is of no use .It just bloats the table and asks others to make calls to them against your will .For the library myshared you do not want to add the methods of the classes MyInternalCClass and MyInternalDClass .", "label": "", "metadata": {}, "score": "83.956924"}
{"text": "This tutorial assumes you want to create a shared library named myshare , which contains the classes MyAClass and MyBClass .Both classes use internally the classes MyInternalCClass and MyInternalDClass , but these are not found in their public interfaces .The classes are declared and defined in the files myaclass.h , myaclass.cpp , mybclass.h , mybclass.cpp , myinternalcclass.h , myinternalcclass.cpp , myinternaldclass.h , and myinternaldclass.cpp .", "label": "", "metadata": {}, "score": "84.03754"}
{"text": "BOOST_CONSTEXPR tuple ( ) ; . BOOST_CONSTEXPR_OR_CONST .Some compilers do n't support the use of constexpr .This macro expands to const on those compilers , and constexpr elsewhere .For example , when defining const expr variables replace : . BOOST_STATIC_CONSTEXPR .", "label": "", "metadata": {}, "score": "84.08336"}
{"text": "Compiler .The compiler will not accept a using declaration that brings a function from a typename used as a base class into a derived class if functions of the same name are present in the derived class .BOOST_NO_USING_TEMPLATE .Compiler .", "label": "", "metadata": {}, "score": "84.49231"}
{"text": "Standard library .BOOST_NO_NUMERIC_LIMITS_LOWEST .Standard library .BOOST_NO_LIMITS_COMPILE_TIME_CONSTANTS .Standard library .BOOST_NO_LONG_LONG_NUMERIC_LIMITS .Standard library .BOOST_NO_MEMBER_FUNCTION_SPECIALIZATIONS .Compiler .The compiler does not support the specialization of individual member functions of template classes .BOOST_NO_MEMBER_TEMPLATE_KEYWORD .Compiler .If the compiler supports member templates , but not the template keyword when accessing member template classes .", "label": "", "metadata": {}, "score": "85.33496"}
{"text": "Defined if the compiler is an Intel compiler , takes the same value as the compiler version macro . BOOST_CLANG .Defined to 1 if the compiler is the Clang compiler .BOOST_WINDOWS .Defined if the Windows platfrom API is available .", "label": "", "metadata": {}, "score": "86.02941"}
{"text": "Free Source Code and Scripts Downloads .All files and free downloads are copyright of their respective owners .We do not provide any hacked , cracked , illegal , pirated version of scripts , codes , components downloads .All files are downloaded from the publishers website , our file servers or download mirrors .", "label": "", "metadata": {}, "score": "86.81025"}
{"text": "( optional ) \" undeletable \" and / or \" readonly \" : to forbid deleting it ( or require it to be instanciated again ) .\" instanciation \" : to require instanciation of an aspect or aspect list on a model element .", "label": "", "metadata": {}, "score": "87.0121"}
{"text": "For instance : . incorrectly outputs 2 2 double double on VC++ 6 .These macros , to be used in the function parameter list , fix the problem without effects on the calling syntax .For instance , in the case above write : .", "label": "", "metadata": {}, "score": "87.22821"}
{"text": "BOOST_CONSTEXPR .Some compilers do n't support the use of constexpr .This macro expands to nothing on those compilers , and constexpr elsewhere .For example , when defining a constexpr function or constructor replace : . constexpr tuple ( ) ; .", "label": "", "metadata": {}, "score": "87.5377"}
{"text": "BOOST_HAS_FACET ( Type , loc ) .When the standard library does not have a comforming std : : has_facet there are various workarounds available , but they differ from library to library .This macro provides a consistent way to check a locale 's facets .", "label": "", "metadata": {}, "score": "87.81836"}
{"text": "IN THE PRODUCTION .So far we are using OZONE in two production environments .So far it works great - all features mentioned above work 24/7 .One site is an open community - driven photography gallery with over 50k page views per day .", "label": "", "metadata": {}, "score": "87.87612"}
{"text": "BOOST_HAS_TR1_TYPE_TRAITS .Standard library .BOOST_HAS_TR1_UTILITY .Standard library .Standard library .BOOST_HAS_TR1_UNORDERED_SET .Standard library .BOOST_HAS_TR1 .Standard library .BOOST_HAS_THREADS .Platform , Compiler .Defined if the compiler , in its current translation mode , supports multiple threads of execution .", "label": "", "metadata": {}, "score": "88.33563"}
{"text": "The best practice is to move that code to a submodule and import it .A workaround is to import the registry under a different name : .If you 're using \" Rock ' n ' roll \" in a project called anthology , but you want it to show up as \" Jazz Manouche \" instead , you can provide your own configuration : . # anthology / apps .", "label": "", "metadata": {}, "score": "88.4012"}
{"text": "Compiler .BOOST_NO_MEMBER_TEMPLATES .Compiler .Member template functions not fully supported . BOOST_NO_MS_INT64_NUMERIC_LIMITS .Standard library .BOOST_NO_NESTED_FRIENDSHIP .Compiler .Compiler does n't allow a nested class to access private members of its containing class .Probably Borland / CodeGear specific .", "label": "", "metadata": {}, "score": "88.844574"}
{"text": "The problem I 've run across is the fact that writeln tries to use compile - time reflection to figure out how to treat result .What 's the first thing it tries ? isInputRange !( typeof(result ) ) .", "label": "", "metadata": {}, "score": "89.338715"}
{"text": "BOOST_NO_EXPLICIT_FUNCTION_TEMPLATE_ARGUMENTS .Compiler .Can only use deduced template arguments when calling function template instantiations .BOOST_NO_FUNCTION_TEMPLATE_ORDERING .Compiler .The compiler does not perform function template ordering or its function template ordering is incorrect .BOOST_NO_INCLASS_MEMBER_INITIALIZATION .Compiler .Compiler violates std::9.4.2/4 .", "label": "", "metadata": {}, "score": "92.25901"}
{"text": "( which would require adding it to INSTALLED_APPS ) .If you 're creating a pluggable app called \" Rock ' n ' roll \" , here 's how you would provide a proper name for the admin : .You can make your application load this AppConfig subclass by default as follows : . # rock_n_roll/__init__.", "label": "", "metadata": {}, "score": "92.30129"}
{"text": "BOOST_HASH_SET_HEADER .The header to include to get the SGI hash_set class .This macro is only available if BOOST_HAS_HASH is defined . BOOST_SLIST_HEADER .The header to include to get the SGI slist class .This macro is only available if BOOST_HAS_SLIST is defined .", "label": "", "metadata": {}, "score": "92.42749"}
{"text": "Standard library .BOOST_NO_SWPRINTF .Platform .The platform does not have a conforming version of swprintf .BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION .Compiler .Class template partial specialization ( 14.5.4 [ temp.class.spec ] ) not supported .BOOST_NO_TEMPLATED_IOSTREAMS .Standard library .The standard library does not provide templated iostream classes .", "label": "", "metadata": {}, "score": "93.03647"}
{"text": "RockNRollConfig ' .That will cause RockNRollConfig to be used when INSTALLED_APPS just contains ' rock_n_roll ' .This allows you to make use of AppConfig features without requiring your users to update their INSTALLED_APPS setting .Besides this use case , it 's best to avoid using default_app_config and instead specify the app config class in INSTALLED_APPS as described next .", "label": "", "metadata": {}, "score": "93.76206"}
{"text": "The compiler supports the _ _ int64 data type .BOOST_HAS_NANOSLEEP .Platform .The platform has the POSIX API nanosleep .BOOST_HAS_NL_TYPES_H .Platform .BOOST_HAS_NRVO .Compiler .Indicated that the compiler supports the named return value optimization ( NRVO ) .", "label": "", "metadata": {}, "score": "94.73073"}
{"text": "If you do n't do it no one will .And remember Frodo ...This task was appointed to you , and if you do not find a way , no one will .it would at least for me make sense to use the transportlayer as a policy due to its place on the network stack .", "label": "", "metadata": {}, "score": "96.338356"}
{"text": "BOOST_HAS_STLP_USE_FACET .Standard library .The standard library lacks a conforming std : : use_facet , but has a workaround class - version that does the job .This is primarily for the STLport std lib . BOOST_HAS_TR1_ARRAY .Standard library . BOOST_HAS_TR1_COMPLEX_OVERLOADS .", "label": "", "metadata": {}, "score": "96.86276"}
{"text": "BOOST_HAS_PARTIAL_STD_ALLOCATOR .Standard Library .The standard library has a partially conforming std : : allocator class , but without any of the member templates .Platform .The platform support POSIX style threads .BOOST_HAS_SCHED_YIELD .Platform .The platform has the POSIX API sched_yield .", "label": "", "metadata": {}, "score": "97.62494"}
{"text": "Compiler , Standard library .The compiler has native support for SGI style type traits .BOOST_HAS_FENV_H .Platform , Standard library .BOOST_HAS_STDINT_H .Platform .BOOST_HAS_SLIST .Standard library .The C++ implementation provides the ( SGI ) slist class .", "label": "", "metadata": {}, "score": "98.339325"}
{"text": "BOOST_HAS_TR1_COMPLEX_INVERSE_TRIG .Standard library . BOOST_HAS_TR1_REFERENCE_WRAPPER .Standard library .BOOST_HAS_TR1_RESULT_OF .Standard library .BOOST_HAS_TR1_MEM_FN .Standard library .BOOST_HAS_TR1_BIND .Standard library . BOOST_HAS_TR1_FUNCTION .Standard library .BOOST_HAS_TR1_HASH .Standard library .BOOST_HAS_TR1_SHARED_PTR .Standard library .Standard library . BOOST_HAS_TR1_TUPLE .", "label": "", "metadata": {}, "score": "107.95831"}
{"text": "In which 60 is the frequency and 1000 is the amplitude .Both will return arrays , just of different size .The 1024 size will be far smoother when you graph it .This is really comfortable for me when testing things related to waveforms directly in c++ , and I can assemble different waveforms by adding or substracting .", "label": "", "metadata": {}, "score": "110.19066"}
