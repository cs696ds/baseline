{"text": "For instance , here we create a hotpatchable closure and store it in the symbol - function cell of the symbol hotpatch - test for later use : .Have n't we seen this sort of run - time destructuring on keyword symbols before ?", "label": "", "metadata": {}, "score": "28.899868"}
{"text": "The theory is proved to be sound and complete with respect to derivations allowed on programs in \" dynamic - environment passing style \" .From this theory , we derive a sequential evaluation function in a context - rewriting system .", "label": "", "metadata": {}, "score": "29.396902"}
{"text": "( c ) automatically discerning from the text segments a first collection of semantic relation structures ; and .( d ) storing data from the first collection of semantic relation structures as part of the lexical knowledge base ; . step ( B ) includes : .", "label": "", "metadata": {}, "score": "30.634527"}
{"text": "b. A set of logical rules is applied to the syntactic structure to produce a corresponding logical form .A semantic relation structure is then extracted from the logical form .This is done by the application of a set of heuristic rules - these serving to correlate particular syntactic and lexical patterns with corresponding semantic relations .", "label": "", "metadata": {}, "score": "33.40928"}
{"text": "In our implementation , we used a file access method which supports direct access of keys based on a binary search of a key index .The data stored with a key in our implementation may be arbitrarily long , thereby easily accommodating the main semantic relation structures stored in each keyed entry .", "label": "", "metadata": {}, "score": "34.725784"}
{"text": "A method for generating a lexical knowledge base in a memory of a machine , said generating comprising the steps : .( a ) parsing a segment of text to obtain a logical form corresponding thereto using a natural language parser associated with said machine ; .", "label": "", "metadata": {}, "score": "36.533615"}
{"text": "This is accomplished by starting at the new top headword node and traversing , in a top - down manner , the semantic relation links ( original or inverse , depending on the direction ) to other nodes as needed to output the structure .", "label": "", "metadata": {}, "score": "36.781254"}
{"text": "The system and method of the present invention isolates predicate - argument relationships into a consistent format regardless of text types .The predicate - argument relationships can be used in search , grammar - checking , summarization , and categorization applications , among others .", "label": "", "metadata": {}, "score": "36.968525"}
{"text": "( c ) storing in a memory associated with said machine the semantic relation structure in association with the headword in the lexical knowledge base ; and .( d ) augmenting the lexical knowledge base by : .( 1 ) inverting the semantic relation structure ; and .", "label": "", "metadata": {}, "score": "37.110947"}
{"text": "First the argument form is evaluated , as for arguments to any function , by the usual argument evaluation mechanism ( which involves an implicit use of eval ) .Then the argument is passed to the eval function , where another evaluation occurs .", "label": "", "metadata": {}, "score": "37.173157"}
{"text": "Implementation of Backlinks .After a definition and/or example sentence has been parsed , the resulting parse structures are first subjected to a set of heuristic rules whose goal is to identify syntactic and lexical patterns which are consistently associated with some specific semantic relation , such as instrument or location .", "label": "", "metadata": {}, "score": "37.505127"}
{"text": "An idiomatic translation needs to detect as many of these binding constructs as possible and convert them into lexical binding constructs in the target language to achieve readability and efficiency of the target code .The basic prerequisite for such an idiomatic translation is thus a dynamic scope analysis which associates variable . ... tics for these languages are quite rare .", "label": "", "metadata": {}, "score": "37.538445"}
{"text": "In other words , it would be nice if we could use macros to access foreign bindings - in this case object slots - as if they were lexical bindings .Although this is undeniably useful for abbreviation purposes , its most important implication is its ability to give dualities of syntax to our existing and future macros .", "label": "", "metadata": {}, "score": "37.762684"}
{"text": "The following is an example of a sentence and demonstrates both how it is parsed as a sentence within a document , and how a question to an information retrieval system would produce matching predicates to retrieve the document containing this sentence .", "label": "", "metadata": {}, "score": "37.86257"}
{"text": "However , the intended output of the parser is the set of predicate structures that it builds for each sentence , and so the preferred parse tree receiver is a software module called a parse tree converter , which extracts predicate structures from the parse trees .", "label": "", "metadata": {}, "score": "38.009773"}
{"text": "An idiomatic translation needs to detect as many of these binding constructs as possible and convert them into lexical binding constructs in the target language to achieve readability and e#ciency of the target code . ... tics for these languages are quite rare .", "label": "", "metadata": {}, "score": "38.573456"}
{"text": "In our work , we have found it best to use a relatively small set of semantic relations .Of course in other embodiments , larger or smaller sets of relations can be used .Further , our preferred implementation does not extract each of these relations in both the forward linking and backward linking operations .", "label": "", "metadata": {}, "score": "38.582497"}
{"text": "Such a representation scheme gives each node in the tree a unique identifier that completely determines the relative place of that node in the tree structure .It also provides a simple way to compare relative positions of two discovered node instances .", "label": "", "metadata": {}, "score": "38.72907"}
{"text": "( b ) machine - implemented means for extracting from the logical form a semantic relation structure , the semantic relation structure including at least a headword , a semantic relation , and a value ; .( c ) computer memory defining a lexical knowledge base in which the semantic relation structure associated with the headword is stored ; and .", "label": "", "metadata": {}, "score": "39.083336"}
{"text": "The sentence receiver is a software abstraction that may be realized through any number of techniques .The parser 230 takes a sequence of instances from an ontology , in the form of a sentence , and converts them into a collection of parse trees .", "label": "", "metadata": {}, "score": "39.20604"}
{"text": "The data is transformed using a syntactic parser and ontology .The ontology is used as a lexical resource .The output that results is also an ontological entity with a structure that matches the organization of concepts in natural language .", "label": "", "metadata": {}, "score": "39.293743"}
{"text": "The data is transformed using a syntactic parser and ontology .The ontology is used as a lexical resource .The output that results is also an ontological entity with a structure that matches the organization of concepts in natural language .", "label": "", "metadata": {}, "score": "39.293743"}
{"text": "This enables us to combine the stackinspection monad with other monads and to construct abstract machines for languages with properly tail - recursive stack inspection and other computational effects .The construction scales to other monads - including one more properly dedicated to stack inspection than the lifted state monad - and other monadic evaluators .", "label": "", "metadata": {}, "score": "39.374844"}
{"text": "First , we prove that dynamic binding adds expressiveness to a purely functional language .Second , we show that dynamic binding is an essential notion in semantics that can be used to define the semantics of exceptions .Afterwards , we further refin ... . ...", "label": "", "metadata": {}, "score": "39.410995"}
{"text": "The above data structure naturally lends itself to one particular algorithm for comparing the identity or subsumption of ontological features .The algorithm relies on the implementation of the tree by associating with each node in the tree an integer value that represents the position of that node within the hierarchical structure .", "label": "", "metadata": {}, "score": "39.641502"}
{"text": "It has , possibly , failed silently and thus un - safely .However , when you inject a free variable and there is no environment there to capture it , your entire expression has become free .When this happens , you need to decide what to do before you can evaluate that expression .", "label": "", "metadata": {}, "score": "39.72518"}
{"text": "In one sense , what we have done is to formally structure , copy , and redistribute the semantic information throughout the set of entries .This process provides us with important new ways to explore the information which is available .", "label": "", "metadata": {}, "score": "39.8141"}
{"text": "However , appropriate probabilities for each rule can only be determined by experimentation .In the initial version , probabilities will be assigned by linguistic intuition ; as iterations of the design progress , probabilities will be determined through experimentation .Since sentence probabilities are generally very small numbers , the parse probability filter should pass any parse tree with a probability of at least 30 % of the highest probability parse .", "label": "", "metadata": {}, "score": "39.884468"}
{"text": "All applications making use of the fact that the output of the ontology - based parser is an ontological entity may realize enormous speed benefits from the parameterized ontology that the parser utilizes .The present system imposes a logical structure on text , and a semantic representation is the form used for storage .", "label": "", "metadata": {}, "score": "39.8868"}
{"text": "( A ) using a computer to automatically process a text and identify at least a first semantic relation structure therein , said first semantic relation structure including at least four elements ; .( B ) using the computer to invert the first semantic relation structure to yield a second corresponding , inverted semantic relation structure ; and .", "label": "", "metadata": {}, "score": "39.892403"}
{"text": "As the COMPILER is executed it preferably performs lexical , syntactic and semantic analyses of the program source code stored in the SOURCE BUFFER .In the preferred embodiment the COMPILER also emits object code and stores it in the OBJECT BUFFER .", "label": "", "metadata": {}, "score": "40.040657"}
{"text": "In the predicate representation scheme of the present invention , there are only a few distinct frames for predicate structures , as many as needed to cover the different numbers of arguments taken by different verbs .Predicates may be enhanced with selectional restriction information , which can be coded automatically for entire semantic classes of words , rather than on an individual basis , because of the ontological scheme .", "label": "", "metadata": {}, "score": "40.36725"}
{"text": "Once extracted , these relations are explicitly added to the words from whose definitions they were obtained , thus creating a network of labeled links between words in the dictionary ( i.e. the identified semantic relations serve as the links ) .", "label": "", "metadata": {}, "score": "40.369835"}
{"text": "Since algorithm design and implementation are distinct and separable issues , an embodiment of a parameterized ontology 's data structures has not yet been discussed .The following is a suggested implementation .The proposed data structure includes an integer value , where each digit of the integer corresponds to a specific branch taken at the corresponding level in the tree .", "label": "", "metadata": {}, "score": "40.41224"}
{"text": "The RECOMPILE procedure also sets the value of a pointer variable PTR equal to the address of the beginning of the source code buffer .The pointer PTR is the memory pointer of the compiler 's lexical analyser and is successively advanced from byte to byte of the source code to read the latter .", "label": "", "metadata": {}, "score": "40.430443"}
{"text": "This is identical to the sentence produced above , and results in the same parse tree , and the same predicate structure .Thus , when the ontological parser in this example embodiment receives this question , it generates a predicate identical to that from a declarative sentence , and they can be matched .", "label": "", "metadata": {}, "score": "40.449"}
{"text": "This structure guarantees that an arbitrary number of nodes may be inserted into the list without losing track of the locations of existing nodes , as well as enabling the list to be searched from either the top or bottom .However , the great flexibility of tree data structures , which may encompass trees of arbitrary depth , also imposes a significant cost in computability .", "label": "", "metadata": {}, "score": "40.55867"}
{"text": "At every cycle , a new character is read from the input stream and the character and current state are used to look up , in the action table , which action to perform .The actions are in one of the following forms : .", "label": "", "metadata": {}, "score": "40.61875"}
{"text": "The fields of an object - let 's say the fields of an instance of Point -are handled by read and write functions like Point - x or set - Point - y !It would be simpler to handle them directly by the name of their fields , x or y , for example , in the context of defining a method .", "label": "", "metadata": {}, "score": "40.68975"}
{"text": "In addition , the ontology - based parser is designed to permit the use of arithmetic operations instead of string operations in text - processing programs , which employ the ontology - based parser .The output predicate structures contain numeric tags that represent the location of each concept within the ontology .", "label": "", "metadata": {}, "score": "40.71881"}
{"text": "In addition , the ontology - based parser is designed to permit the use of arithmetic operations instead of string operations in text - processing programs , which employ the ontology - based parser .The output predicate structures contain numeric tags that represent the location of each concept within the ontology .", "label": "", "metadata": {}, "score": "40.71881"}
{"text": "FIG .1 : .This step may entail two discrete substeps : .a. A set of syntactic rules is applied to the text segment to produce a corresponding syntactic structure .This can be done using either a grammar designed specifically for the on - line dictionary being used , but more preferably involves the application of a broad - coverage grammar to the definition in order to facilitate processing multiple monolingual dictionaries .", "label": "", "metadata": {}, "score": "41.22191"}
{"text": "No .4,887,212 to Zamora et al . discloses a parser for syntactic analysis of text using a fast and compact technique .After part - of - speech tagging and disambiguation , syntactic analysis occurs in four steps .The grammar of Zamora et al . operates by making multiple passes to guess at noun phrases and verb phrases and then attempts to reconcile the results .", "label": "", "metadata": {}, "score": "41.250298"}
{"text": "More meaningful semantic relations can thereby be found .( In the preferred methodology , the first pass seeks to extract one set of semantic relations [ e.g. hypernym / hyponym ] , and the second pass seeks to extract a different set of semantic relations [ e.g. location , location_of , part , part_of]. )", "label": "", "metadata": {}, "score": "41.49029"}
{"text": "( 1989 ) discuss distributed lexical knowledge , in which the structure of each lexical entry is represented explicitly and the dictionary as a whole can be queried using a strategy of either query - by - example or unification .In accordance with the preferred embodiment of the present invention , a lexical knowledge base is compiled automatically from a machine - readable source , such as an on - line dictionary or unstructured text , obviating many of the drawbacks associated with the foregoing prior art techniques .", "label": "", "metadata": {}, "score": "41.54327"}
{"text": "When the catch block exits , we return to the original lexical environment .This means that the binding for the identifier in the catch block will cease to exist ( since the lexical environment that contained it no longer exists ) .", "label": "", "metadata": {}, "score": "41.632454"}
{"text": "There are many ways we can take advantage of the this anaphor provided by alet .Since the environment is accessed through a dummy closure that forwards all invocations to the real closure pointed to by this , we can pass the dummy closure reference around , copying it as often as needed .", "label": "", "metadata": {}, "score": "41.642174"}
{"text": "For example , in a search engine application , it may be useful to check whether or not a particular noun can serve as an argument of a predicate .The features of the noun should be more specific than the features of the argument position it is attached to .", "label": "", "metadata": {}, "score": "41.868637"}
{"text": "As long as all the states go back to the original state - instead of going to each other - alet over alambda is a convenient way to specify nameless state machines .The following is a typical counter closure that takes an argument n and can have its direction toggled between increment and decrement by n when we pass the symbol invert as the argument instead of a number : .", "label": "", "metadata": {}, "score": "41.912422"}
{"text": "During the sentence lexer stage , words are labeled with information from the ontology , including these numerical codes .The argument position for each predicate structure may be tagged with codes from any level of the ontology .The parser will only output predicate structures where the noun inherits at least those features specified by the code .", "label": "", "metadata": {}, "score": "42.076202"}
{"text": "The second method is to perform research from the ground up in defining an ontology , assigning elements on an as - needed basis .Since minimal representation size is a main goal of parameterizing the ontology , one would want to eliminate many of the redundancies found in general - purpose ontologies such as WordNet .", "label": "", "metadata": {}, "score": "42.279556"}
{"text": "Each symbol macro will expand references to its symbol in the lexical scope of the symbol - macrolet into generalised variable references using our get - pandoric accessor / setter to access the result of evaluating the second argument to the macro : o!box ( stored in g!box ) .", "label": "", "metadata": {}, "score": "42.301468"}
{"text": "Each keystroke on the keyboard of the CRT CONSOLE results in the serial transmission to the UART of a train of bits constituting the ASCII byte corresponding to the struck key .The UART reforms the bits into that byte which is then transmitted in parallel on the data bus to the accumulator of the CPU ( central processor unit ) .", "label": "", "metadata": {}, "score": "42.378864"}
{"text": "( 1991 ) ) is its claim that dictionary entries can be effectively analyzed by a parser designed for broad - coverage text analysis .( It will be understood that a parser is a software tool that takes a text string and produces a structure corresponding thereto . )", "label": "", "metadata": {}, "score": "42.417507"}
{"text": "Applying these patterns to the parsed definitions of \" authority \" and \" storehouse \" yields , in part , the fact that each is the location of \" information .\" It is these patterns , together with the use of a NL parser ( e.g. as described in Jensen , 1986 ) , that enable the automatic extraction of vast numbers of semantic relations across the entire dictionary .", "label": "", "metadata": {}, "score": "42.53177"}
{"text": "Memory system for storing and retrieving experience and knowledge with natural language utilizing state representation data , word sense numbers , function codes , directed graphs , context memory , and/or purpose relations An ontology - based parser incorporates both a system and method for converting natural - language text into predicate - argument format that can be easily used by a variety of applications , including search engines , summarization applications , categorization applications , and word processors .", "label": "", "metadata": {}, "score": "42.92565"}
{"text": "We then derive the corresponding abstract machine by closure - converting , CPS - transforming , and defunctionalizing this specific evaluator .We illustrate the construction with the identity monad , obtaining yet again the CEK machine , and with a lifted state monad , obtaining a variant of the CEK machine with error and state .", "label": "", "metadata": {}, "score": "42.968235"}
{"text": "Often numerous passes through the input sentence(s ) are required to fully parse the input , thereby adding to the time required to parse the input .Often the previous techniques do not have very robust feature checking capabilities .In particular , the techniques do not check for both syntactic and semantic compatibility .", "label": "", "metadata": {}, "score": "43.15693"}
{"text": "But the most interesting possibilities for indirection chains pop up when we add them dynamically .Because we can create new closures at run - time and because we can access the internals of a closure through an anaphor , we can re - write how functions work at run - time .", "label": "", "metadata": {}, "score": "43.28777"}
{"text": "The method of .The method of .claim 15 in which the identifying step includes automatically parsing the text with a natural language parser , the parsing including : . applying a first set of rules to the text to yield a syntactic structure corresponding thereto ; . applying a second set of rules to the syntactic structure to produce a corresponding logical form ; and .", "label": "", "metadata": {}, "score": "43.30514"}
{"text": "The ontology - based parser incorporates both a system and method for converting natural - language text into predicate - argument format that can be easily used by a variety of applications , including search engines , summarization applications , categorization applications , and word processors .", "label": "", "metadata": {}, "score": "43.366447"}
{"text": "For example , in some applications it may be desirable to generate an enhanced knowledge base on an as - needed basis for selected term(s ) out of the entire dictionary or other corpus .This approach is particularly well suited for applications in which the knowledge base is not based on a static source ( i.e. a dictionary ) , but is based on a source that is continuously presented with new information .", "label": "", "metadata": {}, "score": "43.458237"}
{"text": "This address is tested by the COMPARATOR , and if it matches that of the port , the output pin EOUT is activated to signal the DECODER .The byte in the received data register ( not shown ) of the UART is then gated onto the DATA BUS and transmitted to the accumulator within the CPU .", "label": "", "metadata": {}, "score": "43.479862"}
{"text": "The syntax analyser of the compiler then determines if this symbol conforms to CORRECT SYNTAX in accordance with the grammar of the programming language .If the symbol does not conform to the syntax an ERROR MESSAGE is displayed .If the syntax is correct , the READ CHARACTER function is repeated until an error is found or the END OF PROGRAM is reached .", "label": "", "metadata": {}, "score": "43.557915"}
{"text": "values [ R5RS - P25 ] .C OMMON L ISP , of course , is designed right -everything is a boolean .It must also be pointed out that aif and alambda , like all anaphoric macros , violate lexical transparency .", "label": "", "metadata": {}, "score": "43.574394"}
{"text": "The system of the present invention maintains arguments as variables during the parsing process , and automatically fills in long - distance dependencies as part of the parsing process .No post - parsing analysis is needed to obtain this benefit , and the parsing time is not impacted by the maintenance of these variables , thus resulting in faster parsing execution .", "label": "", "metadata": {}, "score": "43.718475"}
{"text": "The compiler then resumes execution from the point where it was interrupted .Referring now to FIG .4 , there is shown the sequence of operations of the compiler .After initialization , the compiler first performs its READ CHARACTER function whereby the byte in the first location of the source code buffer is read .", "label": "", "metadata": {}, "score": "43.771915"}
{"text": "The theory is motivated by an investigation of errors in speech production .It combines what Dell calls a spreading - activation retrieval mechanism with assumptions about linguistic structure and levels of analysis , including morphology .The model envisages lexical entries as a tagged network of ordered semantic , syntactic , phonological and morphological properties of a lexical item .", "label": "", "metadata": {}, "score": "44.16763"}
{"text": "So describing lexical scope as creating variables only accessible to code in the textual body of a binding construct is actually a lie too - macros can inject variable references .Such variables are injected from outside the textual body of the binding construct .", "label": "", "metadata": {}, "score": "44.377373"}
{"text": "In other cases , syntactic ambiguity will result in multiple possible parses .The parser should not generate any output trees for a sentence that does not reduce according to the rules ; rather it should generate a tree for every possible parse of an ambiguous sentence .", "label": "", "metadata": {}, "score": "44.528687"}
{"text": "Are these symbols eq ?Why or why not ?Alet and Finite State Machines .With lambda and if there is only one useful anaphoric configuration .But the most interesting types of anaphoric macros make use of expansions in unforeseen ways .", "label": "", "metadata": {}, "score": "44.74531"}
{"text": "The editor might then compare this address with that of the source location pointed to by the cursor to determine if the editing changes are being made to source code which has already been compiled .Although these alternative schemes result in fewer recompilations , the preferred embodiment has the advantage of simpler implementation .", "label": "", "metadata": {}, "score": "44.792557"}
{"text": "We believe that when this method is applied to any number of dictionaries ( or other texts ) , the resulting semantic knowledge base will be rich enough to support processing unrestricted text in NLP and to provide at least some of the common sense knowledge that AI requires .", "label": "", "metadata": {}, "score": "44.836517"}
{"text": "In this sample embodiment , this predicate is then passed through the parser filters , where it successfully passes the parse probability and selectional feature compatibility tests .In the foregoing example , \" have \" is a verb unlikely to have any selectional restrictions on arguments .", "label": "", "metadata": {}, "score": "44.852455"}
{"text": "has a complicated analysis , and can not afford semantic status to each word relative to all the other words within the dictionary .The Kucera et al . system uses three parsing stages , each of which needs more than one pass through the sentence to complete its analysis .", "label": "", "metadata": {}, "score": "45.002716"}
{"text": "These special patterns extract further semantic relations based on the lexical and syntactic / logical form configuration of which the initial word to be extracted is the center .These special patterns allow very deep levels of embedding of semantic relations to be identified for all levels of the logical form analysis , notably because they apply recursively .", "label": "", "metadata": {}, "score": "45.002766"}
{"text": "They inject the symbol this which we rely on being captured by the expansion of an alet macro .This sort of injection of symbols might seem to be bad style or error - prone , but it is actually a common macro technique .", "label": "", "metadata": {}, "score": "45.0155"}
{"text": "It would certainly be possible to compute these dynamically , since any tree - search algorithm must keep track of which branches it traverses in trying to locate a particular node .However , as the search backtracks and corrects its path a fair number of adjustments and recalculations of the current node value would likely result .", "label": "", "metadata": {}, "score": "45.048435"}
{"text": "Given a dictionary in book form , the only way to find information about a given word involves looking it up , then exploring the semantic properties of any words mentioned in its definition , and so on .Once the data are available on - line , however , we exploit dictionary access strategies which involve not only forward - linking , but also backward - linking .", "label": "", "metadata": {}, "score": "45.152756"}
{"text": "It should be readily apparent that the ordering of elements of the code can be arbitrary , but must be used consistently in order to compare features .There are two ways to construct a parameterized ontology .The first method is to simply freeze an existing ontology , write a program to find the maximum tree depths and number of branches , and then write another program to recode the pointer information into array elements and depths .", "label": "", "metadata": {}, "score": "45.20454"}
{"text": "If the line contains an error these temporary entries are discarded and the compiler pointer is moved back to the end of the previous line , thereby obviating recompilation .However , this scheme will still require recompilation if source lines previous to the last line are modified .", "label": "", "metadata": {}, "score": "45.323986"}
{"text": "Given this grammar , an LALR parser generator would fail to produce a parser because of a shift / reduce conflict .The modified LALR parser generator algorithm that the ontological parser of the present invention uses must be aware of the possibility of more than one possible course of action , and should recursively try both actions .", "label": "", "metadata": {}, "score": "45.459167"}
{"text": "As noted , we believe that such links substantially improve the effectiveness of semantic processing in NLP .This is accomplished by dramatically increasing the relational context for a given word in the knowledge base and therefore increasing the likelihood that other words may be successfully related in a meaningful way to that word .", "label": "", "metadata": {}, "score": "45.53888"}
{"text": "This limits the versatility of the techniques .U.S. Pat .No .4,864,502 to Kucera et al . discloses a device that tags and parses natural - language sentences , and provides interactive facilities for grammar correction by an end user .", "label": "", "metadata": {}, "score": "45.685806"}
{"text": "The lexical analyser embodies another major change in the PL / O compiler .It is embodied in the procedure GETSYM which also has nested therein the procedure GETCH .GETSYM has as its first statement : .This constitutes part of an infinite loop which repeats for as long as the procedure GETCH returns the ASCII code ( 32 ) for a space .", "label": "", "metadata": {}, "score": "45.7248"}
{"text": "The latter includes a subroutine to perform the SAVE REGISTERS procedure shown in the drawing .The EDITOR is then executed by the CPU .If the KEYSTROKE corresponds to a control character , then an editing procedure such as a cursor movement , screen scroll , character deletion , or line deletion is performed .", "label": "", "metadata": {}, "score": "45.757797"}
{"text": "93- 102 . ) , considering the order of acquisition of morphemes by the second language learners , Diane Larsen - Freeman discusses how second language learners regularly produce certain morphemes more accurately than others .She suggests that non - native speakers learn to insert the appropriate morphemes in their speech in an attempt to match the gestalt of the native- speaker input to which they are exposed .", "label": "", "metadata": {}, "score": "45.76104"}
{"text": "The design of the ontology - based parser is based on the premise that predicate structures represent a convenient approach to searching through text .Predicate structures constitute the most compact possible representation for the relations between grammatical entities .Most of the information required to construct predicates does not need to be stored , and once the predicates have been derived from a document , the predicates may be stored as literal text strings , to be used in the same way .", "label": "", "metadata": {}, "score": "45.845345"}
{"text": "Amsler 's concept was also cited by Chodorow et al .( 1985 ) in developing a tool for helping human users disambiguate hyper / hyponym links among pairs of lexical items ; again , however , this approach was limited to hypernym and hypernym_of semantic relations .", "label": "", "metadata": {}, "score": "45.868225"}
{"text": "This operation may be accomplished in several ways : .If the ontology used by the parser only contains string labels for the nodes in a tree structure , the tree leading to the restriction must be established as a sub - tree of the selectional features of the argument .", "label": "", "metadata": {}, "score": "45.952377"}
{"text": "For lexical semantic representation , she gives preference to the predicate decomposition approach ( Carter 1976 , Jackendoff 1976 , 1983 ) over the semantic role list ( Fillmore , 1968 ) .She claims that the predicate decomposition approach is the most successful at allowing the identification of the natural classes of verbs and classes of arguments that figure in the generalizations involving the syntactic properties and entailment of verbs .", "label": "", "metadata": {}, "score": "46.08871"}
{"text": "Instead , the hook function is invoked and is passed the form to be evaluated as its first argument .The hook function is then responsible for evaluating the form ; whatever is returned by the hook function is assumed to be the result of evaluating the form .", "label": "", "metadata": {}, "score": "46.11622"}
{"text": "The parser converts the sequence of ontological entities into predicate structures using a two - stage process that analyzes the grammatical structure of the sentence , and then applies rules to it that bind arguments into predicates .Ontological parsing is a grammatical analysis technique built on the proposition that the most useful information that can be extracted from a sentence is the set of concepts within it , as well as their formal relations to each other .", "label": "", "metadata": {}, "score": "46.180717"}
{"text": "These grammar rules , called productions , specify language that the target parser is supposed to recognize .Each production indicates that a specific combination of input symbols , called terminals , and assembled groups of terminals , called non - terminals , can be assembled into a new non - terminal .", "label": "", "metadata": {}, "score": "46.186424"}
{"text": "( d ) augmenting the lexical knowledge base by : .( 1 ) inverting the semantic relation structure ; and .( 2 ) storing in said memory , in association with the primary value term , the inverted complex semantic relation structure , said stored inverted complex semantic relation structure including the lower level relation and the lower level value term .", "label": "", "metadata": {}, "score": "46.18805"}
{"text": "( e ) inverting the first collection of semantic relation structures to yield a second collection of corresponding , inverted semantic relation structures ; and .( f ) storing data from the second collection of corresponding , inverted semantic relation structures in said memory .", "label": "", "metadata": {}, "score": "46.403435"}
{"text": "Second , on the structural side , we suggest that the semantic content of words can idiosyncratically select one of those predicate - argument structures for the purposes of direct grammatical function assignment .The function eval is the main user interface to the evaluator .", "label": "", "metadata": {}, "score": "46.49268"}
{"text": "The modular design of the ontological parser permits the use of any part - of - speech - tagged ontology , with only minimal rewriting of the lexer and parser to accommodate format - specific issues .However , maximum benefits are recognized through the use of a parameterized ontology , an innovation heretofore unavailable in any parser or information retrieval system .", "label": "", "metadata": {}, "score": "46.521275"}
{"text": "As noted , we have observed that most of the lexical information available in a dictionary for a given term is to be found in the entries for other words that mention that word , rather than in the entry for the term itself .", "label": "", "metadata": {}, "score": "46.542496"}
{"text": "What extra bindings could be useful to forms inside the body of a let form ?The very purpose of let is to create such bindings so capturing the variable introductions given to a let form is already done .However , a macro enhancement to let can have complete access to all the forms given to it , even the body of expressions intended to be evaluated with the new bindings .", "label": "", "metadata": {}, "score": "46.57006"}
{"text": "Second and Subsequent Passes .Certain semantic relations , most notably hypernym , can be extracted reliably in the first pass through an on - line dictionary .( A \" pass \" is here considered to mean the sequence of steps shown in solid lines in .", "label": "", "metadata": {}, "score": "46.599358"}
{"text": "An example of this analysis technique proceeds with reference to two sample definitions from the LDOCE : .In each of these definitions , a location relation holds between the headword ( in boldface ) and the word \" information , \" despite the fact that this relation is expressed differently in each case .", "label": "", "metadata": {}, "score": "46.662903"}
{"text": "We conclude this chapter with such an example .A limitation of lexical scope sometimes lamented upon is the fact that the C OMMON L ISP function eval will throw out your current lexical environment when it evaluates the form passed to it .", "label": "", "metadata": {}, "score": "46.671623"}
{"text": "a gensym to each binding with a print name corresponding to the binding name .Sublet expands into a let form which binds these gensym symbols to the values passed into the binding form , then uses tree - leaves to replace all occurrences of the binding name symbols in the provided code with their corresponding gensyms .", "label": "", "metadata": {}, "score": "46.672897"}
{"text": "This would have the advantage of revealing an error almost instantly upon its entry at the keyboard , instead of waiting until completion of the current line .The disadvantage would be that recompilation would be required for every minor typing error without giving the programmer a chance to correct it before it is scanned and parsed .", "label": "", "metadata": {}, "score": "46.72991"}
{"text": "This distinction may have some psychological validity , but it is not computationally attractive to maintain this distinction in separate array elements .A compromise approach is to attempt to make judgments about redundancy , and write software to merge branches as specified by the judgments of a knowledge engineer .", "label": "", "metadata": {}, "score": "46.75499"}
{"text": "No .5,386,406 to Hedin et al . discloses a system for converting natural - language expressions into a language - independent conceptual schema .The output of the Hedin et al . system is not suitable for use in a wide variety of applications ( e.g. machine translation , document summarization , categorization ) .", "label": "", "metadata": {}, "score": "46.90812"}
{"text": "Considering the nature of source - oriented and product - oriented lexical schemas in the network model , she claims that the interaction of phonological properties of lexical patterns with frequency and the interaction of type and token frequency influence the degree of productivity .", "label": "", "metadata": {}, "score": "46.92599"}
{"text": "Referring now to FIG .2 and to FIG .2a ( except for the clock - activated interrupt modification to be described later below ) , there are shown the circuitry and hardware components directly involved in the interrupt operation .", "label": "", "metadata": {}, "score": "47.11083"}
{"text": "The pointer PTR is repeatedly advanced with each successive call of GETCH until it reaches the new Pause Mark inserted by the editor , as described below .Referring to FIG .5 , there is shown the sequence of operations of the editor .", "label": "", "metadata": {}, "score": "47.136215"}
{"text": "Thus , the primary focus of the book is not Lexical Functional Grammar and especially not its formal aspects .With Bresnan ( 2001 ) this topic has been competently covered .Instead , the book shows how language data can be described and analyzed on the basis of few elementary assumptions derived from Lexical Functional Grammar ( e.g. lexical rules ) and a small set of simple formal notations which describe Argument Structure , Constituent Structure and Functional Structure .", "label": "", "metadata": {}, "score": "47.19157"}
{"text": "If the word exists within the ontology 140 , it is returned as an ontological entity ; if not , it is returned as a word tagged with default assumptions about its ontological status .In one embodiment , words are automatically assumed to be nouns ; however , the words may be other parts of speech .", "label": "", "metadata": {}, "score": "47.201164"}
{"text": "That is , it is assumed that whenever the cursor is moved to point to source code which may have already been compiled that this code will be changed so as to require recompilation .An alternative method would be to set the recompile flag only if the previously compiled code is actually changed , since it is possible that the programmer may scroll the screen up and then scroll down again without making any change in the source code .", "label": "", "metadata": {}, "score": "47.215378"}
{"text": "Execution of an OUT command by the CPU results in the transmission on the data bus of a byte from the accumulator to the UART which may then serially transmit the byte to the CRT CONSOLE for display on the video screen .", "label": "", "metadata": {}, "score": "47.23033"}
{"text": "If a noun is found and it satisfies the restrictions of the adjective , the adjective filter will apply the selectional features of the adjective to the noun by adding all of the adjective 's selectional features to the noun 's set of selectional features .", "label": "", "metadata": {}, "score": "47.300995"}
{"text": "So plambda creates another anaphor- self .While the anaphor this refers to the actual closure that is to be invoked , self refers to the indirection environment that calls this closure .Although it sounds a bit peculiar , code inside our plambda can use self to pandorically access its own lexical environment instead of directly accessing it .", "label": "", "metadata": {}, "score": "47.363228"}
{"text": "To maintain this hypothesis , scholars have in many difficult cases introduced syntactic diacritics in their lexical semantic representations , thereby running the risk of rendering it vacuous .Our answer to this challenge is two - fold .First , on the substantive side , we argue that the problem lies in the assumption that the semantic content of lexical entries consists of a recursive predicate - argument structure .", "label": "", "metadata": {}, "score": "47.379223"}
{"text": "Adverbs detail the meaning of the verbs they accompany , but do not change them .Since the meaning of the sentence remains the same , adverbs can be removed to simplify parsing .The pseudo - predicate filter operates in one embodiment , as a query ontological parser .", "label": "", "metadata": {}, "score": "47.41044"}
{"text": "The approach consists of integrating selected features from Multi - Agent Systems and agent communication , language interpretation in applicative / functional programming and e - learning / human - learning into a unique , original and simple view that privileges interactions , yet including control .", "label": "", "metadata": {}, "score": "47.554638"}
{"text": "Here is a typical use of a sub - lexical G - bang symbol : .Sub - lexical scoping turns up surprisingly often in complex macros .As well as defmacro ! , we 've seen it in at least one other example : the with - all - cxrs macro from section 5.6 , Recursive Solutions sub - lexically binds list accessor functions .", "label": "", "metadata": {}, "score": "47.571125"}
{"text": "But this closure is slightly different than a regular closure .While both this closure and regular closures are pointers to a single environment , one that can have any number of references to it , this closure uses indirection to change which piece of code gets run when it is invoked .", "label": "", "metadata": {}, "score": "47.645134"}
{"text": "The parser converts the sequence of ontological entities into predicate structures using a two - stage process that analyzes the grammatical structure of the sentence , and then applies rules to it that bind arguments into predicates .A system for ontological parsing that converts natural - language text into predicate - argument format comprising : . a sentence lexer for converting a natural language sentence into a sequence of ontological entities that are tagged with part - of - speech information ; and .", "label": "", "metadata": {}, "score": "47.66815"}
{"text": "The ontology - based parser contains functional components for receiving documents in a plurality of formats , tokenizing them into instances of concepts from an ontology , and assembling the resulting concepts into predicates .The ontological parser has two major functional elements , a sentence lexer and a parser .", "label": "", "metadata": {}, "score": "47.687313"}
{"text": "FIG .3 is inverted and stored in the lexical knowledge base ( together with every other semantic relation structure stored in the knowledge base ) .This step entails a 4 part procedure .First , the semantic relation structure is traversed , adding the corresponding inverse semantic relation ( where there is already an existing semantic relation ) between each value and its headword .", "label": "", "metadata": {}, "score": "47.741463"}
{"text": "Plambda can export any variables in your lexical environment , transparently making them available for other lexical scopes to access - even ones written and compiled before or after the plambda form is .This is an incremental improvement to our let over lambda closure system designed to maximise dual syntax .", "label": "", "metadata": {}, "score": "47.911327"}
{"text": "A multithreading computer system as set forth in claim 11 wherein . said user actuated means comprises manually operable means for transmitting to said central processing unit a set of signals occurring at spaced time instants in a sequence having time intervals between pairs of successive signals , . said central processing unit executing said background thread during said time intervals .", "label": "", "metadata": {}, "score": "47.954975"}
{"text": "They propose that pragmatic as well as syntactic considerations play an important role in the creation of verbs from nouns by conversion .Such derivations make use of notions such as kinds of situations , rationality , ready computability , uniqueness , the speaker 's and listener 's mutual knowledge , and certain syntactic constraints .", "label": "", "metadata": {}, "score": "47.989326"}
{"text": "The result is that the time complexity of structure - comparison algorithms attains the polynomial order of the number of features ( or nodes ) being compared .This fact makes the use of ontologies inefficient for high - performance computing applications , such as searching terabyte - sized databases with wide - ranging conceptual content .", "label": "", "metadata": {}, "score": "47.99912"}
{"text": "Closures are no longer closed ; we can open closures as easily as re - writing our lambda forms to be plambda forms .We use plambda to export lexical variables and with - pandoric to import them as completely equivalent lexical variables .", "label": "", "metadata": {}, "score": "48.020805"}
{"text": "A multithreading computer system as set forth in claim 26 and comprising .a system resource , . synchronizing means responsive to execution of one thread for indicating whether said system resource is ready for access by another thread , . said another thread including means for waiting for access to said system resource until the latter is indicated by said synchronizing means to be ready for access by said another thread .", "label": "", "metadata": {}, "score": "48.058258"}
{"text": "For example , in an information retrieval application , it is capable of pulling out stopwords and unintended query words ( as in the pseudo - concept and pseudo - predicate filters ) .In the embodiment discussed above , the grammar violation checking of the system and method of the present invention filters both by the probability of a syntactically successful parse and the compatibility of the lexical semantics of words in the ontology .", "label": "", "metadata": {}, "score": "48.063576"}
{"text": "The latter stores the ASCII code for the letter ' R ' in the memory location immediately preceding the start of the source code buffer so as to constitute the recompile flag noted above .If the input byte is the ASCII code for a carriage return ( 13 ) the procedure CRET is called .", "label": "", "metadata": {}, "score": "48.112473"}
{"text": "As indicated at INSERT NEW PAUSE MARK , a new Pause Mark is inserted adjacent the end of the source code buffer line immediately preceding the line now bearing the new cursor position .The operations REMOVE OLD PAUSE MARK and UPDATE PAUSE REGISTER are then performed in the same manner as described above with respect to FIG .", "label": "", "metadata": {}, "score": "48.154522"}
{"text": "Second , a single syntax for both accessing and setting an accessor is is implemented with get - pandoric and defsetf .Finally , the macro with - pandoric uses symbol - macrolet to install these generalised variables as seemingly new lexical variables with the same names as the closed - over variables .", "label": "", "metadata": {}, "score": "48.196976"}
{"text": "More recently , semantic information has been extracted from on - line dictionaries in a two - step procedure , first parsing the dictionary text ( the definition and/or example sentences ) ; and then applying patterns to this syntactic information in order to improve the accuracy of the identification of semantic information .", "label": "", "metadata": {}, "score": "48.20369"}
{"text": "For example , if all references to a are sub - lexical , it will replace them with gensyms : .However , because sub - lexical scope does n't involve expanding macros , and thus necessarily does n't involve interpreting special forms like quote , instances of the symbol a that are n't supposed to be variable references are also changed : .", "label": "", "metadata": {}, "score": "48.32548"}
{"text": "Not only does alet bind this for us invisibly , but the use of this by our alet - fsm macro is similarly invisible .Alet - fsm injects a free variable into our lexical context without us being able to see it at all in the lexical context .", "label": "", "metadata": {}, "score": "48.435863"}
{"text": "With alambda we capture the name self so that we can use it to refer to the very anonymous function we are building .In other words , recursing is as simple as a call to self .For example , the following function returns a list 2 If the condition is false , an absent tertiary clause on an if form returns nil , which is a list . of the numbers from n down to 1 : .", "label": "", "metadata": {}, "score": "48.470818"}
{"text": "3 and to FIG .3a ( except for the clock - activated interrupt modification to be described later below ) there is shown the sequence of operations of the overall system .The COMPILER normally has control of the CPU and either is in an infinite loop upon reaching a Pause Mark in the source code buffer or is in the process of analysing the source code in the buffer .", "label": "", "metadata": {}, "score": "48.472557"}
{"text": "The difference is simply a digit - by - digit comparison that starts with the most significant bit and continues until the first decimal digit difference is located .Importantly , though , the differences due to inheritance along incompatible sub - trees do not correspond to elements of natural - language meaning .", "label": "", "metadata": {}, "score": "48.512947"}
{"text": "To illustrate one of the many uses of the novel multithreading mode of operation of the invention there is disclosed an embodiment providing for real - time processing of data code concurrently as the code is being entered at the keyboard by an operator .", "label": "", "metadata": {}, "score": "48.694496"}
{"text": "All applications making use of the fact that the output of the ontology - based parser is an ontological entity may realize enormous speed benefits from the parameterized ontology that the parser utilizes .Background of the Invention .Numerous techniques have been developed to process natural language input .", "label": "", "metadata": {}, "score": "48.739315"}
{"text": "Currently , however , none of these techniques appears capable of providing the semantic detail required for processing unrestricted text .Our method is rooted in the tradition which attempts to construct a semantic knowledge base by identifying and extracting semantic information from a machine - readable version of a published dictionary ( henceforth \" on - line dictionary \" ) .", "label": "", "metadata": {}, "score": "48.766113"}
{"text": "Lexical entries are defined consisting of three components : a phonological , a categorial , and a semantic component .The word - formation rules are characterized by the number of arguments they take .Phonological subcategorization and the interaction between morphology and syntax have been considered .", "label": "", "metadata": {}, "score": "48.827"}
{"text": "The latter forms the serial pulse train into an eight - bit byte which is stored in the received data register of the UART .The latter then outputs a data available signal at pin DAV which signal is transmitted by gate G1 to a vectored interrupt input VI of the PRIORITY ENCODER .", "label": "", "metadata": {}, "score": "48.872932"}
{"text": "The study does not make specific predictions about order of acquisition , but shows interesting syntactic parallels between bound and free morphemes within and across categories .It gives insights on the category - specific development of functional projections in L1 acquisition ; and cross - categorial development of functional projections in L2 acquisition .", "label": "", "metadata": {}, "score": "48.950798"}
{"text": "3 ) .The editor then determines if the input byte is a CONTROL CHARACTER .If not , the character is entered into the source code buffer as indicated at CHAR INTO MEM BUFFER .The input character is also displayed on the screen as indicated at CHAR TO VIDEO CONSOLE .", "label": "", "metadata": {}, "score": "48.967056"}
{"text": "The method of . claim 5 which includes : . providing a natural language corpus ; . using the machine to analyze the corpus to identify a collection of text segments therein ; . performing steps ( a)-(d ) a first time on the identified text segments to produce an augmented lexical knowledge base , the augmentation of the knowledge base serving to enhance subsequent text parsing ; and .", "label": "", "metadata": {}, "score": "49.08052"}
{"text": "No .5,146,496 to Jensen discloses a technique for identifying predicate - argument relationships in natural language text .The Jensen system must create intermediate feature structures to store semantic roles , which are then used to fill in predicates whose deep structures have missing arguments .", "label": "", "metadata": {}, "score": "49.162567"}
{"text": "The decision - making process occurs at intermediate parsing stages , and parse probabilities are considered before all parse paths have been pursued .Intermediate parse probability calculations have to be stored , and the system has to check for intermediate feature clashes .", "label": "", "metadata": {}, "score": "49.25953"}
{"text": "These terms , and their associated relations to \" flower , \" are then stored as part of the lexical knowledge base for the term \" flower .\" While the foregoing paragraph illustrates the concept of \" backward linking , \" it omits several of the other steps in our preferred embodiment .", "label": "", "metadata": {}, "score": "49.34282"}
{"text": "If the COMPILER requires more than one pass the first pass should preferably perform the syntax analysis so as to reveal all syntax errors .The interrupt facility enables the programmer to stop execution of the machine code program at any time , examine the values of the variables , and then continue execution .", "label": "", "metadata": {}, "score": "49.343727"}
{"text": "claim 23 in which only the first set of semantic relations includes \" user , \" \" domain \" and \" manner .\" The method of . claim 26 in which the iterative parsing includes : .( 1 ) applying a first set of rules to the collection of texts to yield a collection of syntactic structures corresponding thereto ; .", "label": "", "metadata": {}, "score": "49.36728"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 20 , wherein said parser filters remove parse trees that violate one of statistical and ontological criteria for well - formedness .", "label": "", "metadata": {}, "score": "49.380898"}
{"text": "The finer points are subtle the idea is simple : accessing a generalised variable is syntactically dual to setting it .You have only one setter form , setf , which is capable of setting all types of variables by using the same syntax you would use to access them .", "label": "", "metadata": {}, "score": "49.38875"}
{"text": "We thus witness how a particular choice of a language relates to different phenomena .The reader is invited to think backwards and forwards from relative clause formation to topicalization , reflexive pronouns and filler - gap relations .The number and the kind of strategies a language has chosen and the lexical material used for disambiguation create the unique syntactic structure which is the object of our studies .", "label": "", "metadata": {}, "score": "49.553566"}
{"text": "The ontology - based parser is designed around the idea that predicate structures represent a convenient approach to searching through text .Predicate structures constitute the most compact possible representation for the relations between grammatical entities .Most of the information required to construct predicates does not need to be stored , and once the predicates have been derived from a document , the predicates may be stored as literal text strings , to be used in the same way .", "label": "", "metadata": {}, "score": "49.59099"}
{"text": "\" It is worth noting that once the first digit difference is detected , there is no further need to compute remaining digits .They diverge at level 3 , the third digit in the representation , and thereafter lie along completely different sub - trees that do not intersect .", "label": "", "metadata": {}, "score": "49.682953"}
{"text": "( 3 ) applying a third set of rules to the logical forms to obtain semantic relation structures , said structures including at least one instance of a triple comprising a headword , a semantic relation , and a value .A system comprising : .", "label": "", "metadata": {}, "score": "49.69205"}
{"text": "Furthermore , the recompile flag may be set whenever the compiler determines that the source code contains an error .That is , it may be assumed that whenever an error is revealed the source code will be changed so as to require recompilation .", "label": "", "metadata": {}, "score": "49.69543"}
{"text": "The advantages of the present system are the provision of a semantic representation of comparable utility with significantly reduced processing requirements , and no need to train the system to produce semantic representations of text content .The system and method for ontological parsing of natural language according to the present invention has a far simpler analysis process than conventional parsing techniques , and utilizes a dictionary containing tags with syntactic information .", "label": "", "metadata": {}, "score": "49.712486"}
{"text": "Similarly , for information retrieval purposes , an embodiment of the ontological parser optimized for queries may make use of all these filters , but add a pseudo - predicate filter and a pseudo - concept filter .The stop word filter removes stop words from sentences .", "label": "", "metadata": {}, "score": "49.902855"}
{"text": "system checks only for syntactic correctness .U.S. Pat .No .4,914,590 to Loatman et al . discloses a natural language understanding system .The goal of the Loatman et al . system is to provide a formal representation of the context of a sentence , not merely the sentence itself .", "label": "", "metadata": {}, "score": "49.943657"}
{"text": "Additionally , semantic feature compatibility checking is not possible with Jensen 's system .U.S. Pat .No .5,721,938 to Stuckey discloses a parsing technique , which organizes natural language into symbolic complexes , which treat all words as either nouns or verbs .", "label": "", "metadata": {}, "score": "49.96646"}
{"text": "The programmer may be given the option of saving the source code and/or object code in secondary storage such as disk or tape media .Instead of generating intermediate code ( \" p - code \" ) for interpretation , the compiler may be of the type that emits executable machine code .", "label": "", "metadata": {}, "score": "50.154785"}
{"text": "Instead , they must traverse the list of links and compare structures on a node - by - node basis to guarantee identity .Complicating this procedure is the fact that concepts may be cross - linked across multiple branches of a tree , sharing multiple structures .", "label": "", "metadata": {}, "score": "50.179283"}
{"text": "This macro uses sublet underneath but changes each form in the body by macro expanding them with the macroexpand-1 function .Now , instead of appearing in the raw list structure , references to symbols must occur after the first step of macro expansion .", "label": "", "metadata": {}, "score": "50.213043"}
{"text": "The idea that dictionaries define a huge interconnected network underlies work by Plate ( in Wilks et al . , 1989 ) , who used co - occurrence patterns between words in LDOCE to produce a graphically - displayed statistical measure of semantic relatedness .", "label": "", "metadata": {}, "score": "50.33205"}
{"text": "Each interrupt operation asynchronously preempts the executing compiler thread and passes control of the central processor to an interrupt service routine .The input port is then polled to test if a key has been struck .If not , the interrupt is terminated and control returns to the compiler .", "label": "", "metadata": {}, "score": "50.44747"}
{"text": "References to a sub - lexically scoped variable are only valid if the symbols representing them occur in the raw lists that were passed to lisp before macro - expansion .Because defmacro ! pre - processes the code it was given and creates the list of all the G - bang symbols before the code gets expanded , the G - bang symbols are sub - lexically bound .", "label": "", "metadata": {}, "score": "50.47329"}
{"text": "Parsing / Extracting .The first step in extracting information from lexical entries in a dictionary involves parsing the definition and/or example sentences using a broad - coverage grammar of English .The resulting parse structures are then subjected to a set of heuristic rules whose goal is to identify syntactic and lexical patterns which are consistently associated with some specific semantic relation .", "label": "", "metadata": {}, "score": "50.529457"}
{"text": "Preliminary concrete experimentations illustrate the potential of the model ; they are significant examples for a very wide class of computational and learning situations . ... to evaluate it .Data : EXP , ENV I J Result : value or message(s ) if EXP is not a message then ... . by Matthias Neubauer , Michael Sperber - In Proceedings of ACM SIGPLAN International Conference on Functional Programming , 2001 . \" ...", "label": "", "metadata": {}, "score": "50.618988"}
{"text": "More typically , rich tree structures are formed , with each value itself often being used as a headword , and associated with further relations and values . )The semantic relation structure identified in this fashion is then stored in association with the headword \" flower \" as part of the lexical knowledge base .", "label": "", "metadata": {}, "score": "50.735626"}
{"text": "The previous techniques of natural language processing are often limited to the performance of a particular purpose and can not be used for other purposes .Conventional parsing techniques may be designed to function as part of a grammar checking system , but can not function as part of a search engine , summarization application , or categorization application .", "label": "", "metadata": {}, "score": "50.74918"}
{"text": "Method and system for compiling a lexical knowledge base US 7383169 B1 .Abstract .A lexical knowledge base is compiled automatically from a machine - readable source ( such as an on - line dictionary or unstructured text ) .The preferred embodiment of the invention makes use of \" backward linking , \" by which inverse semantic relations are discerned from the text and used to augment the knowledge base .", "label": "", "metadata": {}, "score": "50.764854"}
{"text": "The Pause Register is also updated to the address of the new Pause Mark location .If the input byte is either the control code for moving the cursor up or for scrolling the screen frame up toward the beginning of the source , the corresponding procedure is called to perform the respective operation .", "label": "", "metadata": {}, "score": "50.904816"}
{"text": "Constructing such semantic knowledge by hand as required in NLP , and possibly AI , is a significant problem .The problem is : how to acquire the semantic knowledge required for an unrestricted domain .There have been some attempts to hand - code highly structured semantic knowledge for unrestricted NLP : Dahlgren ( 1988 ) ; Lenat and Guha ( 1989 ) ; and Miller et al .", "label": "", "metadata": {}, "score": "50.941208"}
{"text": "1 and to FIG .1a ( except for the clock - activated interrupt modification to be described later below ) , there are shown the major hardware components constituting the overall system an embodiment of the present invention .Each component will be referred to by the legend shown in the respective rectangle of the drawing .", "label": "", "metadata": {}, "score": "50.950775"}
{"text": "If the ontological tree structure is carefully crafted , proximity within the tree should , in some measure , correspond to ontological proximity .Therefore , detecting the first digit difference , as above , gives a reasonable measure of the degree of ontological proximity of the two concepts .", "label": "", "metadata": {}, "score": "50.981277"}
{"text": "So this closure we 've created with pandoriclet is actually no longer closed .The environment used by this closure - even when all lexical variable symbols have been removed by the compiler - is still accessible through our anonymous function returned from pandoriclet .", "label": "", "metadata": {}, "score": "51.00534"}
{"text": "The method of .The method of .claim 6 in which the parser is a broad coverage parser .The method of .claim 6 in which the parsing step includes : .( 1 ) applying a first set of rules to the segment of text to yield a syntactic structure corresponding thereto ; and .", "label": "", "metadata": {}, "score": "51.04509"}
{"text": "The storage of the lexical knowledge base is also conventional , and uses the entity - attribute - value type of data structure commonly used in databases .Preferably , each dictionary entry is divided into sense entries , each stored with its own set of semantic relations .", "label": "", "metadata": {}, "score": "51.091377"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 3 , wherein said numbers can be subtracted to determine if features are in agreement , wherein a non - negative number indicates agreement .", "label": "", "metadata": {}, "score": "51.118896"}
{"text": "But there is still nothing to prevent us from installing a new closure , with its own lexical bindings and perhaps with changed behaviour in the indirection environment installed by alet .Much of the remainder of this chapter is about useful things we can do with indirection environments created by alet .", "label": "", "metadata": {}, "score": "51.263798"}
{"text": "The lexical environment maintains a reference to the lexical environment from which it was entered , which means you have access to variables defined in outer scopes .The lexical environment created when entering the catch block gets a binding between the identifier and the exception value passed to the block ( ES5 \u00a7 12.14 ): .", "label": "", "metadata": {}, "score": "51.2691"}
{"text": "More Phors ?Some of the most interesting macros from Paul Graham 's On Lisp are anaphoric macros .An anaphoric macro is one that deliberately captures a variable from forms supplied to the macro .Thanks to their transparent specifications , these deliberately captured variables allow us windows of control over the macro expansion .", "label": "", "metadata": {}, "score": "51.293236"}
{"text": "Two rules are included in this example of a pseudo - concept filter implementation .The first rule is that any word relating to the user , or his current situation , such as \" I \" or \" me \" is always deleted .", "label": "", "metadata": {}, "score": "51.407616"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 1 , wherein said sentence lexer comprises : . a document iterator that receives text input and outputs individual sentences ; . a lexer that receives said individual sentences from said document iterator and outputs individual words ; and . an ontology that receives said individual words from said lexer and returns ontological entities or words tagged with default assumptions about an ontological status of said individual words to said lexer .", "label": "", "metadata": {}, "score": "51.425377"}
{"text": "This example proceeds with reference to the following definition for the term \" market \" : .After application of the syntactic and logical rules , the tree - like logical form of .FIG .2 results .In this representation , the terms followed by the number \" 1 \" denote words found in the definition being parsed ( which definition is the first sense among the many senses defined in the dictionary ) .", "label": "", "metadata": {}, "score": "51.44206"}
{"text": "A multithreading computer system as recited in claim 26 wherein . said program is an operator - selectable user application program , . operator actuated means for selecting said user application program for execution and for loading said user application program into said memory , . operator actuated means for interactively controlling the execution of one of said program threads in the foreground , and .", "label": "", "metadata": {}, "score": "51.444878"}
{"text": "Thus , in the second pass , gold can be recognized as a material , and the semantic relation linking \" chain \" and \" gold \" can thus be accurately identified as that of material rather than part_of .Still further improvements in accuracy may be achieved by performing not just two passes , but three or more .", "label": "", "metadata": {}, "score": "51.616722"}
{"text": "This class of scoping leads into another category of mostly unexplored macros : macros that change how lisp macros work , when they are expanded , where references are valid , how special forms are interpreted , etc .Eventually , a macro - programmable macro expander .", "label": "", "metadata": {}, "score": "51.674103"}
{"text": "Although the topics are very practical for use in real code , their main purpose is as a platform for discussing the properties and variations of anaphoric macros .Using macros to extend the concept of a closure is currently a hot research topic [ FIRST - CLASS - EXTENTS ] [ OPENING - CLOSURES ] .", "label": "", "metadata": {}, "score": "51.679333"}
{"text": "That is an important observation - one with ramifications still not completely explored .Sublet interprets your code differently than does the code - walker provided with C OMMON L ISP .Here we are standing on one of the many edges of macro understanding .", "label": "", "metadata": {}, "score": "51.921062"}
{"text": "A side benefit from this algorithm is that it provides an intuitive , natural ranking algorithm .Larger values from the subtraction operation mean further distance apart in the tree , so even when two concepts are in the same branch , the representation provides a convenient metric of conceptual distance .", "label": "", "metadata": {}, "score": "51.977497"}
{"text": "claim 6 , wherein said predicates and arguments are represented by encodings comprising at least one digit separated into multiple groups to provide multiple ontological levels and a branching factor at each node .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in . claim 2 , further comprising lexer filters for modifying said individual sentences based on word meanings .", "label": "", "metadata": {}, "score": "52.023056"}
{"text": "That is , the compiler may be periodically interrupted and the input port polled to test if a key has been struck .If not , the interrupt is terminated and control returns to the compiler .If polling the port reveals that a key has been struck then the interrupt service routine editor takes control and is executed in the manner described above .", "label": "", "metadata": {}, "score": "52.128696"}
{"text": "Having described several embodiments of the concept - based indexing and search system in accordance with the present invention , it is believed that other modifications , variations and changes will be suggested to those skilled in the art in view of the description set forth above .", "label": "", "metadata": {}, "score": "52.139126"}
{"text": "For example , another possible encoding of the ontology tree might involve a 40-digit decimal number .In such a case , 4 digits could be assigned to each node of the tree , implying that the tree could have up to 10 levels of depth .", "label": "", "metadata": {}, "score": "52.171852"}
{"text": "Instead , while the latter tend to analyze linguistic data from the perspective of a linguistic theory , AS proposes an analysis of languages from a more immediate perspective , their systemic differences and uniqueness .Chapter 1 provides an easy introduction into the three structures which are used for syntactic analysis in AS : The Argument Structure , the Constituent Structure and the Functional Structure .", "label": "", "metadata": {}, "score": "52.248627"}
{"text": "Unlike format , sharp - backquote does n't use sequential positioning .Instead it uses the number on our anaphoric bindings .As a consequence , the order can be mixed up and we can even splice in bindings more than once : .", "label": "", "metadata": {}, "score": "52.390892"}
{"text": "He discusses the status of the hierarchy and the type of predictions it makes .He advocates that agreement is not a discrete phenomenon , rather that some items ' agree more ' than others .The further an element stands from its controller in terms of syntactic distance , the more likely is semantic agreement , and the agreement hierarchy provides the primary measure for this distance .", "label": "", "metadata": {}, "score": "52.396294"}
{"text": "Consider a sample path through an ontology : .In this example , if the argument position of a predicate must be an example of transportation , then any of the three more - specific words will be an acceptable argument for the predicate .", "label": "", "metadata": {}, "score": "52.40575"}
{"text": "The values of these arrays remain fixed throughout execution of the compiler and the above conditional IF statement obviates the need to re - execute all of these assignment statements upon subsequent re - initializations of the compiler for recompilations .That is , after the first test of the variable CONT it is set equal to TRUE so as to bypass the assignment statements thereafter when recompilation is required .", "label": "", "metadata": {}, "score": "52.428535"}
{"text": "The backward linking begins by inverting each of the semantic relation structures generated by the foregoing steps .For example , becomes ( the inverse of the semantic relation part of is part ) .Each inverted semantic relation structure is then used to augment the lexical knowledge base .", "label": "", "metadata": {}, "score": "52.432518"}
{"text": "Tokuume et al . , U.S. Pat .No .5,101,349 , discloses a natural language processing system that makes provisions for validating grammar from the standpoint of syntactic well - formedness , but does not provide facilities for validating the semantic well - formedness of feature structures .", "label": "", "metadata": {}, "score": "52.44243"}
{"text": "Alet - fsm gives us a convenient syntax for expressing multiple possible states for our closure to exist in .As an example , here is a cleaner version of our invertible counter : .Alet - fsm is an instance of a technique we have n't seen before : anaphor injection .", "label": "", "metadata": {}, "score": "52.463394"}
{"text": "Sometimes this access limitation is useful , sometimes not .In with - all - cxrs , sub - lexicality could be considered undesirable .When our accessor is in with - all - cxrs 's sub - lexical scope , there is no problem : .", "label": "", "metadata": {}, "score": "52.538498"}
{"text": "If all that is required for some application is to obtain the current dynamic value of a given symbol , the function symbol - value may be more efficient than eval .X3J13 voted in January 1989 ( MAPPING - DESTRUCTIVE - INTERACTION ) to restrict user side effects ; see section 7.9 .", "label": "", "metadata": {}, "score": "52.637836"}
{"text": "In chapter 66 ' Are inflected forms stored in the lexicon ? '( Source : Michael Hammond and Michael Noonan ( eds ) , Theoretical Morphology : approaches in modern linguistics , London : Academic Press , 1988 , pp .", "label": "", "metadata": {}, "score": "52.74334"}
{"text": "This is actually not true- defmacro ! provides these bindings under a slightly different type of scope called sub - lexical scope .Remember that scope means where references to a variable are valid and lexical scope means that the name is applicable to code in the textual body of a binding construct such as let .", "label": "", "metadata": {}, "score": "52.814255"}
{"text": "1 is a block diagram of the sentence lexer according to the present invention ; .FIG .2 is a block diagram of the parser according to the present invention ; .FIG .3 is a diagram showing two complete parse trees produced according to the present invention ; .", "label": "", "metadata": {}, "score": "52.84639"}
{"text": "a parse tree converter that receives the output of said parser component and converts said parse trees into predicates .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in . claim 19 , wherein said parser component further comprises : . parser filters operating on said predicates to remove erroneous predicates .", "label": "", "metadata": {}, "score": "52.8842"}
{"text": "The compiler may then be prevented from analysing code stored in memory locations beyond this address which may be incremented and decremented by the editor .Furthermore , the interrupt which causes control of the CPU to pass from the compiler to the editor may be activated by a timer or clock instead of by the keyboard , as shown in FIGS .", "label": "", "metadata": {}, "score": "52.896927"}
{"text": "The functions evalhook and applyhook provide alternative interfaces to the evaluator mechanism for use by these debugging routines .[Function ] eval form .The form is evaluated in the current dynamic environment and a null lexical environment .Whatever results from the evaluation is returned from the call to eval .", "label": "", "metadata": {}, "score": "52.908875"}
{"text": "Consequently , a parser that handles both of these conditions is needed .The parser 230 must pursue all possible parse trees , in effect branching and pursuing more than one path at every ambiguity .The standard LALR parser is a finite state machine designed to build a parse tree from the set of grammar rules ( called productions ) one input symbol at a time .", "label": "", "metadata": {}, "score": "52.921356"}
{"text": "Any other answers will lead straight back to the way you probably should have done it in the first place : with a macro .But let 's say that you really do want to eval something , if only you could carry along that pesky lexical context .", "label": "", "metadata": {}, "score": "53.22165"}
{"text": "Sub - Lexical Scope .Our defmacro ! macro - defining macros that we defined in section 3.5 , Unwanted Capture look for the presence of automatic gensyms in the provided code using Graham 's flatten utility .Now is the time to confess a small lie we have been telling through this book .", "label": "", "metadata": {}, "score": "53.26776"}
{"text": "These trees are implemented via a variety of techniques , which are generally equivalent to doubly - linked lists .Doubly - linked lists must be created with head and tail nodes , which terminate the list and are designed to keep traversals of the list in bounds .", "label": "", "metadata": {}, "score": "53.31804"}
{"text": "Finally , the inverted semantic relation structures are stored in the lexical knowledge base on the entries for the top headword of each structure .FIG .4 illustrates the result of this inversion process for the term \" sell \" ( which is stored on the entry \" sell \" in the lexical knowledge base ) .", "label": "", "metadata": {}, "score": "53.562546"}
{"text": "B ) ( 3 . B ) .[Function ] constantp object .If the predicate constantp is true of an object , then that object , when considered as a form to be evaluated , always evaluates to the same thing ; it is a constant .", "label": "", "metadata": {}, "score": "53.579742"}
{"text": "It is important to note , however , that a concordance of such terms does not make explicit the semantic relation , if any , which holds between the headword and a concordance term .As such , the presence of concordance terms for a headword does not augment the semantic information for that headword , nor does it facilitate any NL processing task , such as resolving syntactic ambiguity .", "label": "", "metadata": {}, "score": "53.69458"}
{"text": "A multithreading computer system as set forth in claim 35 wherein . said keyboard has keys which may be struck by the operator at spaced time instants to provide a sequence of keystrokes with respective time intervals between each pair of successive keystrokes , . said central processor executing said foreground thread in response to said keystrokes , and . said central processor executing said background thread during said time intervals between pairs of successive keystrokes .", "label": "", "metadata": {}, "score": "53.706856"}
{"text": "The path starts at the root node ( Level 1 ) and takes the 2nd branch to level 2 , then takes the 3rd branch from that node to get to level 3 .The final \" 0 \" is a terminator , indicating that this particular node of the tree is not at the lowest possible level of the tree ; it does not necessarily indicate that no nodes branch from this level .", "label": "", "metadata": {}, "score": "53.71009"}
{"text": "This statement reads into a variable the ASCII code input from the UART 's received data register .This input byte is tested to determine if it is a control character or alphanumeric character ( greater than 31 ) .If the latter it is entered into the source code buffer and displayed on the video screen in the conventional manner .", "label": "", "metadata": {}, "score": "53.756756"}
{"text": "The parser is a tool for analyzing syntactic relationships between entities .Referring to .FIG .1 , the sentence lexer 100 is shown .Document iterator 120 receives documents or text input 110 , and outputs individual sentences to the lexer 130 .", "label": "", "metadata": {}, "score": "53.818027"}
{"text": "Yes , there are many interesting things we can do with deliberate variable capture .There are a lot more phors .This book and Graham 's On Lisp describe a only a tiny fraction of the potential inherent to this technique .", "label": "", "metadata": {}, "score": "54.129314"}
{"text": "In most cases it is the last form in the body since the results from that form will be returned from the let statement itself 7 Because let provides an implicit progn .We 've seen that when we return a lambda expression that references these bindings created by let , the result is a lexical closure - an object frequently stored and used to later access the variables in the let statement .", "label": "", "metadata": {}, "score": "54.129333"}
{"text": "Related work includes Klavans et al .( 1990 ) , Ravin ( 1990 ) , Verlardi et al ( 1991 ) and Montemagni and Vanderwende ( 1992 ) .Montemagni ( 1992 ) , meanwhile , shows that this same general methodology can be used to acquire semantic information from on - line dictionaries of Italian .", "label": "", "metadata": {}, "score": "54.200047"}
{"text": "As the operator strikes keys at the keyboard the compiler thread executes between each successive pair of keystrokes to process the entered source code concurrently with the editing operation .By the time the operator has finished entering or editing the code the compiler thread will have completed most of the required processing , thereby freeing the operator from lengthy periods of waiting for extensive code processing .", "label": "", "metadata": {}, "score": "54.235847"}
{"text": "The procedure VECTOR calls the external assembly procedure POKE three times to store in low memory ( 20 H ) the jump vector to a subroutine SAVREGS which stores the contents of the CPU registers .In response to an interrupt activated by a keystroke at the console the CPU executes the RST4 call instruction and executes this jump vector and then the SAVREGS subroutine .", "label": "", "metadata": {}, "score": "54.36223"}
{"text": "3a is a flowchart showing the sequence of operations of the illustrative compiler implementation of said preferred embodiment ; .FIG .1 is a schematic diagram showing the relation of the major hardware components constituting another embodiment of the computer system in accordance with the present invention ; .", "label": "", "metadata": {}, "score": "54.38159"}
{"text": "The PRIORITY ENCODER arbitrates competing interrupt requests at its inputs and determines the request having the highest priority .The enable input EI of the PRIORITY ENCODER is grounded as shown .Assuming that the interrupt request from the CONSOLE and the UART win the priority contest , the ENCODER then transmits a three - bit code A0,A1,A2 to the respective inputs of the INTERRUPT VECTOR REGISTER .", "label": "", "metadata": {}, "score": "54.39942"}
{"text": "\" This is shown in .FIG .7 .The discovery of a sequence of links connecting two words in the network is crucially driven by evidence from the syntax of the input sentence .The preposition \" for \" in the prepositional phrase \" for this chapter \" will bias the system to prefer paths which link the verb \" research \" to \" chapter \" through a purpose relation .", "label": "", "metadata": {}, "score": "54.444397"}
{"text": "He discusses the important role played by case in the dependent - marking non - configurational languages .Free word order is made possible by rich inflectional morphology .In chapter 45 ' The evolution of noun incorporation ' ( Source : Language 60 ( 4 ) ( 1984 ) : 847 - 894 . ) , examining noun incorporation across a large number of geographically and genetically diverse languages , Marianne Mithun identifies the phenomenon as a device as it derives lexical items , not sentences .", "label": "", "metadata": {}, "score": "54.457855"}
{"text": "Similarly , the filter would need to check twice to determine that \" car \" is in agreement with \" transportation , \" and once for \" vehicle . \"In contrast , a parameterized ontology assigns numbers to these concepts , such that each level is a larger number than the previous level .", "label": "", "metadata": {}, "score": "54.494495"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 6 , wherein a first digit difference between two nodes provides a measure of the degree of ontological proximity of two concepts .", "label": "", "metadata": {}, "score": "54.548775"}
{"text": "We also show how different approaches to implementing the proof search leads to a family of possible G\u00f6del Machine implementations . ... ve a window into a future time .As we shall see , using continuations will allow us to remove t and T from the utility function while switchprog can be explicitly introduced in the target theorem .", "label": "", "metadata": {}, "score": "54.559235"}
{"text": "The pseudo - concept filter operates in one embodiment , a query ontological parser .It removes concepts from queries , which are not likely to be the actual concept the user intends .Pseudo - concepts are largely nouns , and can be captured by a stop word list .", "label": "", "metadata": {}, "score": "54.58914"}
{"text": "SUMMARY OF THE INVENTION .The foregoing and other deficiencies are addressed by the present invention , which is directed to an ontology - based parser for natural language processing .More particularly , the present invention relates to a system that provides a simple knowledge - base - style representation format for the manipulation of natural - language documents .", "label": "", "metadata": {}, "score": "54.644608"}
{"text": "Each of the phenomena is gently introduced and developed through glossed example sentences in more than one language .From time to time formal notations are worked in to explain the observed data .Then , as a general rule , subclasses of the phenomenon , variants and alternative strategies are discussed with the same thoughtfulness , creating an overall awareness of two important dimensions of languages , their comparability and their uniqueness .", "label": "", "metadata": {}, "score": "54.752384"}
{"text": "A multithreading computer system as recited in claim 10 and comprising . operator actuated means for interacting with the execution of one of said program threads , and .display means for interactively showing to an operator in the foreground the effects of said operator actuated interaction while concurrently therewith another of said threads executes in the background .", "label": "", "metadata": {}, "score": "54.817093"}
{"text": "The parser of the Stuckey system is only suitable for grammar - checking applications .U.S. Pat .No .5,960,384 to Brash discloses a parsing method and apparatus for symbolic expressions of thought such as English - language sentences .The parser of the Brash system assumes a strict compositional semantics , where a sentence 's interpretation is the sum of the lexical meanings of nearby constituents .", "label": "", "metadata": {}, "score": "54.828983"}
{"text": "Crucially , a limitation of this assumption is that substantially more effort must be applied in crafting the ontology , since re - indexing large volumes of text becomes extraordinarily expensive as the text grows .The designers of a parameterized ontology must be certain that their coverage is adequate before making a decision to freeze the structure .", "label": "", "metadata": {}, "score": "54.83673"}
{"text": "Closures are now even more first - class data structures than they used to be .Bindings that were previously closed to outside code are now wide open for us to tinker with , even if those bindings were compiled to something efficient and have long since had their accessor symbols forgotten .", "label": "", "metadata": {}, "score": "54.898415"}
{"text": "As with all chaining constructs , be sure you do n't end up in an infinite loop .Three methods are presented that can be used on our closures created with make - stats - counter or any other pandoric closure that exports the necessary variable names .", "label": "", "metadata": {}, "score": "54.935776"}
{"text": "The latter includes the editor as well as a subroutine to store the contents of the CPU registers .Control of the CPU is then retained by the editor until either a character has been entered into the source code buffer or an editing operation has been completed .", "label": "", "metadata": {}, "score": "55.15703"}
{"text": "The method of .claim 18 in which the natural language parser analyzes for at least 8 of the following semantic relations : part , part_of , typical_subject , typical_subject_of , typical_object , typical_object_of , purpose , purpose_of , location_of , located_at , and synonym .", "label": "", "metadata": {}, "score": "55.17994"}
{"text": "If ECONT is FALSE then it is - set equal to TRUE and the following procedures are called : INIT , NEWFILE , VECTOR and TOPLO .The procedure NEWFILE prompts the programmer to select either a new file for entry of source code or an old file for editing .", "label": "", "metadata": {}, "score": "55.203053"}
{"text": "Using auxiliary functions to help with defining macros is a good habit to pick up .Not only can it make your definitions more readable , but also can help when testing components of the macro and can prove useful in future macros .", "label": "", "metadata": {}, "score": "55.315243"}
{"text": "After drawing the familiar distinction between potential lexicon ( the set of possible words ) and actual lexicon ( the set of existing words ) , Hoeksma outlines a formal model of the potential lexicon ( with word - formation rules formulated ) using categorial grammar .", "label": "", "metadata": {}, "score": "55.33436"}
{"text": "Not unusually , the values themselves can be headwords having one or more semantic relations to further values , etc . .The .FIG .3 structure is stored in association with the entry in the lexical knowledge base for the top headword ( i.e. \" market \" ) .", "label": "", "metadata": {}, "score": "55.42685"}
{"text": "This assumption is that the number of branches in an ontological hierarchy , and their depth , can be determined by designing it to fixed parameters at the time of creation , and by selecting maximum values for the branches and the depths .", "label": "", "metadata": {}, "score": "55.443577"}
{"text": "The parse probability filter vetoes parse trees that fall below a minimum probability for valid semantic interpretation .The parse probability filter will calculate the probability of a sentence parse by taking the product of the probabilities of the syntactic rules used to generate a given parse tree .", "label": "", "metadata": {}, "score": "55.44982"}
{"text": "Moreau [ 20 ] rounded up the view on dy ... . \" ... Abstract .The G\u00f6del Machine is a universal problem solver encoded as a completely self - referential program capable of rewriting any part of itself , provided it can prove that the rewrite is useful according to some utility function , encoded within itself .", "label": "", "metadata": {}, "score": "55.481247"}
{"text": "part_of .book .bibliography .part_of .book . proofread .typical_object . book .Concluding Remarks .As is conventional in natural language processing , the present invention can be implemented using a variety of different computer systems .The one on which we did our work is a personal computer using an Intel 66 MHz 80486 microprocessor , running the Microsoft Windows 3.1 operating system .", "label": "", "metadata": {}, "score": "55.50061"}
{"text": "The last argument passed to either kind of hook function contains information about the lexical environment in an implementation - dependent format .These arguments are suitable for the functions evalhook , applyhook , and macroexpand .This is so that the hook function will not be invoked recursively on evaluations and applications that occur in the course of executing the code of the hook function .", "label": "", "metadata": {}, "score": "55.525608"}
{"text": "When this change occurs the compiler memory pointer is incremented to the next location of the buffer so that the compiler exits from its Pause loop , as indicated by the legend ADVANCE MEMORY POINTER .As indicated by SYMBOL ? , the lexical analyser of the compiler then determines if the source character read in constitutes the last character of a symbol , such as an identifier , operator or punctuation mark .", "label": "", "metadata": {}, "score": "55.539078"}
{"text": "A multithreading computer system as set forth in claim 14 wherein . said clock means comprises means to periodically activate said interrupt input at predetermined time intervals so that said threads obtain control of the central processing unit during alternate time slices of the running time of the latter .", "label": "", "metadata": {}, "score": "55.600647"}
{"text": "X3J13 voted in January 1989 ( APPLYHOOK - ENVIROMENT ) to eliminate the optional env parameter to applyhook , because it is not ( and can not ) be useful .Any function that can be applied carries its own environment and does not need another environment to be specified separately .", "label": "", "metadata": {}, "score": "55.660736"}
{"text": "It will give an opportunity for everyone to compare different approaches taken by scholars of different schools of thought .REFERENCES .Aronoff , M. ( 1976 )Word Formation in Generative Grammar , MIT Press , Cambridge , MA .Bloch , B. ( 1947 )", "label": "", "metadata": {}, "score": "55.66571"}
{"text": "69 and 70 , the focus shifts to cross - linguistic generalizations about the order of morpheme acquisition in second language learning .To what extent does the learning of the morphology of a second language reflect Universal Grammar ?Is it analogous to the acquisition of the morphology of a first language ?", "label": "", "metadata": {}, "score": "55.75934"}
{"text": "Those other concepts are the arguments of the predicate , and are generally nouns , because predicate relationships are usually between entities .As stated previously , the ontological parser has two major components , a sentence lexer 100 and a parser 200 .", "label": "", "metadata": {}, "score": "55.814533"}
{"text": "Instead the system and method of the present invention incorporates a sophisticated syntactic analysis component , which allows facts about parts - of - speech to determine the correct syntactic analysis .Additionally , by incorporating ontologies as the basis for the lexical resource , the present invention permits the output of the parser to be easily modified by other applications .", "label": "", "metadata": {}, "score": "55.87578"}
{"text": "However , it is clear from the tree above that not all differences are equally meaningful .In order for the magnitude of the difference to be relevant , it must first be the case that one of the concepts inherits all the properties of the others .", "label": "", "metadata": {}, "score": "55.93363"}
{"text": "The idea behind pandoriclet is to open closures , allowing their otherwise closed - over lexical variables to be accessed externally .As with some of our previous macros like alet - hotpatch , pandoriclet compiles an indirection environment that chooses different run - time behaviours depending on the arguments passed .", "label": "", "metadata": {}, "score": "56.02207"}
{"text": "Yet further , it will be recognized that some semantic relations are more useful than others in subsequent use of the knowledge base .In a variation of the preferred embodiment , a weighting technique is used in which each semantic relation is assigned a relative weight based on its information value with respect to other semantic relations .", "label": "", "metadata": {}, "score": "56.04065"}
{"text": "The advantage of relying on a broad coverage parser is that the parser need not be modified or rewritten in the course of extending the approach to other dictionaries .We see this as an important consideration , given that the huge semantic resources needed for broad - coverage NLP can only be acquired through the merging of multiple on - line dictionaries , as well as the analysis of encyclopedias and other sources .", "label": "", "metadata": {}, "score": "56.063553"}
{"text": "Alternatively , code generation may be performed concurrently with the lexical and syntactical analyses .The generated code may then be saved on disk and/or executed , at the option of the programmer , as indicated by the legend SAVE / EXECUTE OBJECT CODE .", "label": "", "metadata": {}, "score": "56.204487"}
{"text": "A multithreading computer system as set forth in claim 18 wherein . said memory comprises a plurality of addressable locations , and . means for allocating at least a subset of said addressable memory locations and for designating said allocated subset to be the address space accessible by said program , . whereby a plurality of threads of said program may each have direct access to said program address space , . said central processing means comprising a set of registers having values stored therein , . means responsive to activation of said interrupt operation to save the values stored in said registers , and . means responsive to subsequent return of control of the central processing means to said preempted thread for restoring said saved values back into said registers .", "label": "", "metadata": {}, "score": "56.39024"}
{"text": "Indirection is a concept ubiquitous throughout programming languages for good reason .It lets us change things at run - time that , without indirection , are fixed at compile - time .Lisp lets us use indirection in a more succinct and efficient manner than many other programming languages .", "label": "", "metadata": {}, "score": "56.543056"}
{"text": "That is , each interrupt preempts an executing thread after the thread has executed at most for a brief timeslice during which the thread may have performed only a portion of its task .Control of the processor is thereby taken away from the preempted thread , and control then passes to an interrupt service routine which then passes control to another thread to invoke the latter for execution during the next timeslice .", "label": "", "metadata": {}, "score": "56.552795"}
{"text": "We can then subtract numbers to see if the features are in agreement , and a non - negative result suffices to prove this .Since 1 is nonnegative , we know that the features are in agreement .If concepts are identical , they will subtract to zero , which is equivalent to passing the filter by having two identical strings .", "label": "", "metadata": {}, "score": "56.605194"}
{"text": "The following is a closure whose construction shows a simple example use of alet% that avoids duplicating its reset and initialisation code : .Note that alet% changes the evaluation order of the forms in the let body .If you look at the expansion you will notice that the last form in the body is actually evaluated first , and its results are then bound to the lexical binding this before the preceding forms are evaluated .", "label": "", "metadata": {}, "score": "56.64232"}
{"text": "The latter enters into the source buffer a new Pause Mark adjacent the end of the old line in the case of a cursor down operation , and adjacent the end of the invisible line preceding the first displayed line in the case of a scroll down operation .", "label": "", "metadata": {}, "score": "56.647057"}
{"text": "6 , there is shown the sequence of operations of the editor routines for handling control characters input at the console .The input character is first tested to determine if it is the code for the CURSOR UP operation .If not , it is then tested to determine if it is the code for the SCREEN UP operation .", "label": "", "metadata": {}, "score": "56.74491"}
{"text": "Before we continue with pandoric macros , first we need to point out one of the most important examples of duality of syntax in C OMMON L ISP : generalised variables .The details of this are complicated , and I wo n't describe all of them here .", "label": "", "metadata": {}, "score": "56.751255"}
{"text": "A method of ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 39 , wherein a most significant digit difference between two nodes provides a measure of the degree of ontological proximity of two concepts .", "label": "", "metadata": {}, "score": "56.762054"}
{"text": "A multithreading computer system as set forth in claim 26 and comprising .a memory comprising a plurality of addressable locations , and . means for allocating at least a subset of said addressable memory locations and for providing said allocated subset to be the address space accessible by said software .", "label": "", "metadata": {}, "score": "56.76248"}
{"text": "FIG .1a is a schematic diagram showing the relation of the major hardware components constituting the preferred clock - activated - interrupt embodiment of the computer system in accordance with the present invention ; .FIG .2a is a diagram showing the interrupt logic and circuitry of the system hardware of said preferred embodiment ; .", "label": "", "metadata": {}, "score": "56.796467"}
{"text": "Here is the above inside out expansion of the invertible counter alambda use case : .From this , we notice that alambda can use the labels special form to make all of its bindings available to all of the bodies of its functions .", "label": "", "metadata": {}, "score": "56.81639"}
{"text": "Ichain - before is intended to be expanded in an alet form .It adds a new body of code to be executed before invoking the main closure .Going back to our counter example , ichain - before lets us add a new closure that prints out the previous value of the closed - over acc variable before it goes ahead and increments it : .", "label": "", "metadata": {}, "score": "56.824245"}
{"text": "Remember when we wrote pandoriclet and decided to move the creation of case statements for the getter code to the function pandoriclet - get and the setter code to pandoriclet - get ?Plambda makes use of these same functions .Even though these macros splice the results from these functions into fairly different lexical contexts , since both macros have been written to use the same variable naming convention and inter - closure protocol , the code is re - usable .", "label": "", "metadata": {}, "score": "56.87676"}
{"text": "So , remembering the lexical context , we write pandoriclet - get and pandoriclet - set .For pandoriclet - get , we remember that dlambda has bound a variable sym around where our list will be spliced in .We use sym in a case form that compares it to the symbols that were passed to pandoriclet 19 Recall that case with symbols compiles to a single pointer comparison per case .", "label": "", "metadata": {}, "score": "56.965843"}
{"text": "After the editor changes that byte from the Pause Mark to the ASCII code for a space the loop will be broken because the boolean condition of the IF clause will no longer be satisfied ( variable CH will no longer equal PM ) .", "label": "", "metadata": {}, "score": "56.976692"}
{"text": "Because the only real reason for using alet - hotpatch is to create this sort of hotpatchable closure , we might forget that it also introduces the anaphor this into the scope of the forms provided .When we forget about anaphora we 've created , we risk unwanted variable capture problems .", "label": "", "metadata": {}, "score": "56.978462"}
{"text": "The compiler is stored in an area of main memory designated in FIG .1 as COMPILER .The data available line of the UART is then activated and this in turn activates the INTERRUPT CONTROLLER to cause the CPU to execute the editor .", "label": "", "metadata": {}, "score": "57.005142"}
{"text": "In chapter 53 , ' Producing morphologically complex words'(Source : Linguistics 26 ( 1988 ) : 641 - 655 . ) , Frank Anshen and Mark Aronoff use psychological , historical and statistical evidence to support the hypothesis that certain morphologically complex words are stored fully- formed in the lexicon while others are manufactured as needed .", "label": "", "metadata": {}, "score": "57.00546"}
{"text": "For instance , along with this , the macro ichain - before also injects symbols like let , setq , and lambda to be spliced into wherever the macro is expanded .The difference between symbols like this and pre - defined symbols like setq is that while lambda always refers to a single well - understood ANSI macro , symbols like this can refer to different things depending on the environments in which they are expanded .", "label": "", "metadata": {}, "score": "57.028435"}
{"text": "The method of .claim 11 which includes : . when performing step ( b ) the first time , extracting a first set of semantic relations ; and .when performing step ( b ) the second time , identifying a second set of semantic relations , the second set of semantic relations being different from the first .", "label": "", "metadata": {}, "score": "57.0435"}
{"text": "Making a contrastive study of English and French syntactic constructions like sentence negation , question , adverbs , floating quantifiers , and quantification at a distance , he proposes morphology at the heart of syntax .Of course , such a proposal depends crucially on Chomsky 's ( 1955 ) claim that tense and agreement morphemes should be treated as separate syntactic entities at an abstract level of representation . by R. M. W. Dixon .", "label": "", "metadata": {}, "score": "57.193245"}
{"text": "In chapter 73 ' Morphological Composition in the lexical output system ' ( Source : Cognitive Neuropsychology 8(5 ) ( 1991 ) : 335 - 367 . ) , William Badecker and Alfonso Caramazza investigate acquired lexical impairments that result in morphological errors .", "label": "", "metadata": {}, "score": "57.198128"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 11 , wherein said pseudo - concept filter removes concepts from queries .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "57.19821"}
{"text": "This was unavoidable because when we wrote those macros , closures were closed to us .With alet - hotpatch and let - hotpatch , we had to compile special purpose code into each closure that was capable of setting the this anaphoric lexical binding to its new value .", "label": "", "metadata": {}, "score": "57.244312"}
{"text": "These nodes are interconnected by arcs labeled with semantic relations .A small fragment of the graph surrounding the word \" book \" is shown in Dolan et al .( 1993 ) .The following example is part of the lexical knowledge base entry for \" book \" which results from application of our method to the LDOCE dictionary .", "label": "", "metadata": {}, "score": "57.254242"}
{"text": "Macros are not for inlining , compilers are for inlining .So going back to our pandoric counter stored in the symbol - function of pantest , we can use this new getter function to retrieve the current value of pantest 's acc binding : .", "label": "", "metadata": {}, "score": "57.284958"}
{"text": "IF NOT CONT THEN .The boolean variable CONT is FALSE upon initial entry into the compiler signifying that this is not a continuation of a previous execution .That is , the compiler has just been entered for the first time during the present session .", "label": "", "metadata": {}, "score": "57.304413"}
{"text": "When you turn a macro inside out you pick a typical form that uses a macro similar to the macro you would like to create , and expand it .You then use that expansion as a template for your desired macro .", "label": "", "metadata": {}, "score": "57.384422"}
{"text": "Another common task is checking for the validity of closure data after an invocation of the closure .Ichain - intercept% is another macro designed to be used inside an alet form .The idea is that we would like to be able to intercept invocations of the closure and verify that the actions they performed did n't cause some sort of inconsistent state in the closure .", "label": "", "metadata": {}, "score": "57.39917"}
{"text": "Changing a sharp quoted lambda form to an alambda form also requires deleting two characters .Because of alambda 's transparent specification for the self binding - and the fact that the only reason to ever use alambda is to make use of this binding - unwanted variable capture is never a problem .", "label": "", "metadata": {}, "score": "57.444336"}
{"text": "Thanks to our use of implicitisation with the tree - leaves macro , it is easy to find and understand the code duplication because the code is close together .Sublet takes the form representing the let bindings and applies our let - binding - transform utility , generating new list structure in the process .", "label": "", "metadata": {}, "score": "57.46427"}
{"text": "The lexical model is justified over Anderson 's interpretive model in the following ways : i ) Lexical morphology allows derivational morphology to have access to inflectional forms as a parameter of universal grammar . ii ) Lexical morphology accounts for inflections in terms of independently needed principles such as feature percolation without having to resort to new devices such as Anderson 's stipulated disjunctivity . iii )", "label": "", "metadata": {}, "score": "57.498985"}
{"text": "display means for interactively showing to a user the effects of said user actuated interaction while another of said threads executes concurrently therewith in the background .A multithreading software - programmable general - purpose computer system for concurrent processing and modification of the same body of data code by at least two concurrently executing instruction threads constituting a single program , said computer system comprising : . a central processing unit having an interrupt input , . a memory , . means for entry into said memory of a body of data code to be processed , . means for operator selection and entry into said memory of a program comprising at least two concurrently executable instruction threads for processing said body of data code , .", "label": "", "metadata": {}, "score": "57.509705"}
{"text": "2 is a diagram showing the interrupt logic and circuitry of another embodiment of the system hardware ; .FIG .3 is a flowchart showing the sequence of operations of another embodiment of the illustrative compiler implementation ; .FIG .", "label": "", "metadata": {}, "score": "57.535416"}
{"text": "Remember that a lambda expression 9 Dlambda expands into lambda forms . is a constant value and is thus perfectly suitable for use in alet% .As with many macro enhancements , because of the many degrees of freedom available , improvements to this macro are counterintuitive .", "label": "", "metadata": {}, "score": "57.54853"}
{"text": "Gruber 's ( 1965 ) and Jackendoff 's ( 1976 , 1983 ) notion of field for lexical organization provides taking advantage of economies inherent in the lexicon .In chapter 62 ' Lexical Representation ' ( Source : B. Butterworth ( ed . ) , Language Production .", "label": "", "metadata": {}, "score": "57.560753"}
{"text": "Iteration of this technique can further enhance the results .The foregoing and additional features and advantages of the present invention will be more readily apparent from the following detailed description thereof , which proceeds with reference to the accompanying drawings .", "label": "", "metadata": {}, "score": "57.56437"}
{"text": "As long as grammatical roles can be identified , the present system and method can be easily adapted to any language .For example , certain case - marked languages , such as Japanese or German , can be parsed through a grammar which simply records the grammatical relationships encoded by particular markers , and the resulting output is still compatible with the parsing results achieved for other languages .", "label": "", "metadata": {}, "score": "57.657654"}
{"text": "This was simply a flaw in the first edition .Sorry about that .When a function is about to be applied to a list of arguments , no attempt is made to apply the function .Instead , the hook function is invoked and is passed the function and the list of arguments as its first and second arguments .", "label": "", "metadata": {}, "score": "57.695404"}
{"text": "He presents a theory of inflection whereby the inflectional system of languages will consist of two inventories , a set of syntactic features and a set of morphological subcategories , along with a mapping between them .He stipulates that the set of morphological subcategories must form a connected constellation where each arc meets the definition of ' ' relatedness ' ' , based on the notion ' ' head of a word ' ' .", "label": "", "metadata": {}, "score": "57.70692"}
{"text": "If these drawbacks are taken care of , it would substantially increase the quality of the work .In conclusion , this set of volumes is invaluable both empirically and theoretically .It is highly recommended not only to morphologists , but also to scholars in all other areas in linguistics ( i.e. phonology , syntax , semantics , typology , computational linguistics , psycholinguistics , etc .", "label": "", "metadata": {}, "score": "57.740807"}
{"text": "In particular , we can add functionality , or methods , for closures to use without having to re - instantiate instances of already created objects .Make - stats - counter is a lambda over let over plambda we have created to create counters , except that it maintains three pieces of information .", "label": "", "metadata": {}, "score": "57.743862"}
{"text": "The method of .claim 15 in which : . the identified semantic relation structure includes a headword , a primary relation , and a primary value ; .the primary value includes a primary value term , a lower level relation , and a lower level value term ; and .", "label": "", "metadata": {}, "score": "57.75849"}
{"text": "Already , several macros shown should have used it .Sharp - backquote is a read macro that reads in as a lambda form .By default , this lambda form will take exactly one argument : a1 .The read macro then recursively invokes the read function with the supplied stream .", "label": "", "metadata": {}, "score": "57.80188"}
{"text": "A key to intelligent design is leaving room for expansion .As long as the maximum depth of trees is not reached , adding additional levels is transparent .The trade - off in a parameterized ontology is selecting the size of a data structure so that it is no larger than it needs to be , but with adequate room for correcting mistakes or expanding coverage later on .", "label": "", "metadata": {}, "score": "57.834793"}
{"text": "He suggests that all forms of words including base forms as well as compounds have their own lexical representation in the mind .In chapter 63 ' Regular morphology and the lexicon ' ( Source : Language and Cognitive Processes 10(5 ) ( 1995 ) : 425 - 455 . ) , Joan Bybee examines three models of lexical storage and processing : the dual - processing model of Pinker , Marcus and others , the connectionist model of Marchman , Plunkett , Seidenberg and others and the network model of Bybee and Langacker .", "label": "", "metadata": {}, "score": "57.908073"}
{"text": "The ontological parser is designed to be modular , so that improvements and language - specific changes can be made to individual components without reengineering the other components .The components are discussed in detail below .The ontological parser has two major functional elements , a sentence lexer and a parser .", "label": "", "metadata": {}, "score": "57.970978"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 11 , wherein said adverb filter removes lexemes containing adverb concepts from said individual sentences .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "57.991592"}
{"text": "For most applications clock interrupts at intervals of about every 10 to 30 milliseconds are frequent enough to keep up with keys stroked at the keyboard .It will be readily apparent to those skilled in the art that the novel multithreading system of the present invention may be implemented in other applications and may provide other uses and advantages .", "label": "", "metadata": {}, "score": "58.070015"}
{"text": "Most semantic knowledge which is required in Natural Language Processing ( NLP ) or , e.g. , in Artificial Intelligence ( AI ) , has had to be built by hand , or hand - coded .Because the task of hand - coding semantic knowledge is time - consuming , these applications have necessarily been limited to a specific domain .", "label": "", "metadata": {}, "score": "58.12494"}
{"text": "These attempts all demonstrate that to construct a semantic knowledge base by hand is extremely difficult .While it may be relatively simple to make decisions about how to capture words representing concrete concepts , to adequately capture the meaning of more abstract words can be much more problematic , involving difficult and sometimes arbitrary decisions about what semantic properties of a concept might be relevant .", "label": "", "metadata": {}, "score": "58.177555"}
{"text": "The term \" multithreading \" in each claim is to be understood as defined by the respective limitations reeked in that particular claim .The operation termed \" multithreading \" provides that control of the processor is thus transferred repeatedly back and forth between the threads so rapidly that the threads are run substantially simultaneously .", "label": "", "metadata": {}, "score": "58.357834"}
{"text": "Since every non - terminal call saves and then restores this register , such a ... . by Clement Jonquet , Stefano A. Cerri - Applied Artificial Intelligence , Special issue on Learning Grid Services , 2005 . \" ...This article presents the STROBE model : both an agent representation and an agent communication model based on a social approach , that means interaction centred .", "label": "", "metadata": {}, "score": "58.456497"}
{"text": "Retrieval experiments showed slower retrieval times for complex nouns than simple nouns , which suggests that complex nouns are not stored as wholes but are formed by rule .He proposes a model of lexical retrieval processes incorporating derivational processes .Chapters 65 and 66 deal with the storage of words with inflectional morphemes .", "label": "", "metadata": {}, "score": "58.516266"}
{"text": "They allow you to open up closures whenever needed and represent a beautiful confluence of a variety of C OMMON L ISP language features : anaphoric macros , generalised variables , and symbol macros .But what good are they , really ?", "label": "", "metadata": {}, "score": "58.58864"}
{"text": "Predicate structures are representations of logical relationships between the words in a sentence .Every predicate structure contains a predicate , which is either a verb or a preposition , and a set of arguments , which may be any part of speech .", "label": "", "metadata": {}, "score": "58.600243"}
{"text": "The argument form ( list ' cdr ( car ' ( ( quote ( a .b ) ) c ) ) ) is evaluated in the usual way to produce the argument ( cdr ( quote ( a .b ) ) ) ; this is then given to eval because eval is being called explicitly , and eval evaluates its argument ( cdr ( quote ( a .", "label": "", "metadata": {}, "score": "58.607597"}
{"text": "When we ca n't factor common code in an expression the usual way , sometimes we can gain this brevity advantage by using syntactic duals in other ways .The definition of sublet uses the self - referential read macros described in section 4.5 , Cyclic Expressions .", "label": "", "metadata": {}, "score": "58.632446"}
{"text": "Why do I get this error ?This error is raised to highlight a lack of convention .The obvious issue with assigning something to an exception parameter is that you lose access to the value passed to the catch block completely .", "label": "", "metadata": {}, "score": "58.67655"}
{"text": "FIG .3 , for the input string ' ab . 'An example of a context - free grammar that would be used in implementing the parser is as follows : .The modified LALR parser generator , grammar , and modified LALR parsing engine discussed previously should generate a non - deterministic recursive parser .", "label": "", "metadata": {}, "score": "58.68264"}
{"text": "Luckily , modern lisp compilers are very good at optimising closures .If your application can stand a few pointer dereferences - and often it can - indirection chains might just be the best way to structure it .See section 7.4 , Pointer Scope for another interesting way to think about indirection chains .", "label": "", "metadata": {}, "score": "58.719795"}
{"text": "The model is inscribed within a global approach , defending a shift from the classical algorithmic ( control based ) view to problem solving in computing to an interaction - based view of Social Informatics , where artificial as well as human agents operate by communicating as well as by computing .", "label": "", "metadata": {}, "score": "58.76325"}
{"text": "The threads may thus execute incrementally and piecewise with their successive task portions executed alternately in a mutually interleaved relation and with each thread executed during its respective series of spaced timeslices interleaved with the timeslices of at least one other thread . thereafter returning control of the central processing unit to a previously preempted thread of said same program to enable said previously preempted thread to perform the next successive portion of its respective subtask during the next timeslice of its respective series of spaced timeslices , and . repeating the above - recited cycle of said clock responsive actuation of the interrupt operation , said thread preemption and said thread invocation , until the respective subtasks of the threads of said program are completed , . whereby each subtask portion is executed during a respective timeslice with the subtask portions of one thread interleaved with the subtask portions of at least one other thread to provide concurrent and effectively simultaneous execution of the threads .", "label": "", "metadata": {}, "score": "58.818054"}
{"text": "To use this anaphor we use return - from .The block will return this value from the closure invocation , intercepting the original value .( defmacro !Instead of capturing the block anaphor intercept , ichain - intercept creates a local macro that allows the code inside ichain - intercept to use intercept to expand into a return - from where the block is specified by a gensym .", "label": "", "metadata": {}, "score": "58.975853"}
{"text": ", in which Steven Pinker considers the issue of lexical entries and lexical rules from the point of view of learnability in language acquisition .He shows that by using several types of learning mechanisms the child can acquire a domain of grammatical rules by exploiting certain linguistic regularities .", "label": "", "metadata": {}, "score": "59.009598"}
{"text": "Dynamic binding , which has always been associated with Lisp , is still semantically obscure to many .Although largely replaced by lexical scoping , not only does dynamic binding remain an interesting and expressive programming technique in specialised circumstances , but also it is a key notion in semantics .", "label": "", "metadata": {}, "score": "59.14454"}
{"text": "This book is clearly structured , has an attractive layout and is well written .It provides a large amount of information in a straightforward argumentation .Especially it 's focus on language data may came as a relieve to many students of syntax .", "label": "", "metadata": {}, "score": "59.256607"}
{"text": "Once something is perfectly understood , style becomes irrelevant .Free variable injection is not yet perfectly understood . , but macro programming is , of course , not about style .It is about power .Sometimes free variable injection can create a symbiosis between two macros - one that can better programmatically construct expansions than can two isolated expansions .", "label": "", "metadata": {}, "score": "59.30489"}
{"text": "The system and method of the present invention also provides a robust feature - checking system that accounts for semantic compatibility as well as syntactic compatibility .The ontology of the present invention converts all inflected words to their canonical forms .", "label": "", "metadata": {}, "score": "59.329517"}
{"text": "Some may find this a disadvantage .The casual introductions at the beginning of each chapter may be misleading when students come back to them and read them as containing valid definitions .It might be sufficient to identify the ' real ' definition as such .", "label": "", "metadata": {}, "score": "59.371426"}
{"text": "Like let - hotpatch does , this technique can use defmacro ! to move the anaphor 's scope from the macro expansion to the macro definition .Instead of lexically introducing an anaphor , we introduced another type of anaphor - one that does n't take effect in the full lexical scope of the expansion but only in another , more limited scope .", "label": "", "metadata": {}, "score": "59.377213"}
{"text": "In those browsers , you could accidently be assigning a value to the exception parameter , rather than a variable with the same identifier in an outer scope .For more information , have a read of this excellent article by Ben Alman .", "label": "", "metadata": {}, "score": "59.4178"}
{"text": "280 - 347 , 1976 , Prentice - Hall , Inc. ) may be modified for implementation in the present invention .In the description below the following identifiers have been added and do not appear in the original PL / O compiler as published : CONT , PEEK , RECOMPILE , PTR , PM and SP .", "label": "", "metadata": {}, "score": "59.46424"}
{"text": "Set the running execution context 's LexicalEnvironment to catchEnv .Let B be the result of evaluating Block .Set the running execution context 's LexicalEnvironment to oldEnv .Return B .NOTE No matter how control leaves the Block the LexicalEnvironment is always restored to its former state .", "label": "", "metadata": {}, "score": "59.545044"}
{"text": "By implementing this duality of syntax we cut in half the number of accessors / setters we need to memorise and , most importantly , enable new ways for us to use macros .The function get - pandoric is a wrapper around the inter - closure protocol getter syntax .", "label": "", "metadata": {}, "score": "59.668213"}
{"text": "Strangely , this really is the right thing to do because it allows macros that completely hide the presence of generalised variables from the macro 's users , even if they choose to use setq .When using setq for this remember that it only helps for its splicing safety property ; as we 've seen , a symbol can reference any generalised variable thanks to symbol - macrolet .", "label": "", "metadata": {}, "score": "60.002144"}
{"text": "The noun must follow either immediately after the adjective , or have only adjective and conjunction words appearing between the noun and the adjective .If no such noun or conjunction is found , the adjective filter will veto the sentence .", "label": "", "metadata": {}, "score": "60.069218"}
{"text": "He argues that synchronically , grammaticalization helps to identify the subcategories of a given grammatical category . , Jerzy Kurylowicz considers the role of analogy diachronically in morphological change .The set ends with an index of terminologies used in all the volumes .", "label": "", "metadata": {}, "score": "60.071827"}
{"text": "This read macro abstracts out a common macro pattern .For example , if we have a list of variables and would like to make a list of let bindings that bind each variable to a symbol , say , empty , we can use mapcar like so : .", "label": "", "metadata": {}, "score": "60.09322"}
{"text": "The operation SET RECOMPILE FLAG causes reinitialization of the compiler when the latter resumes control of the CPU after return from the interrupt service routine .This flag is preferably a memory location wherein a predetermined code may be stored to inform the compiler that recompilation of the source code is required .", "label": "", "metadata": {}, "score": "60.11959"}
{"text": "a memory for storing a program comprising a plurality of sets of instructions with each set executable to provide a respective thread of execution and with each thread having a respective task to perform , . central processing means having an interrupt operation , . a clock for periodically actuating said interrupt operation at predetermined time intervals , and . said interrupt service routine passing said control of the central processing means to another thread thereby to invoke said another thread to perform the next successive portion of its task during the next successive timeslice of the respective series of timeslices of said another thread , . whereby the above - recited cycle of clock actuated interrupt , thread preemption and thread invocation , is iterated repeatedly until the respective tasks are completed , and . whereby a multithreading mode of operation is provided with said plurality of threads executing concurrently during their respective spaced interleaved timeslices with the successive executed task portions of each thread interleaved with the successive executed task portions of at least one other thread .", "label": "", "metadata": {}, "score": "60.125916"}
{"text": "The ichain - after macro is similar to the ichain - before macro except it adds the closures to the other end of the execution chain : after the main closure has been invoked .Ichain - after uses prog1 , which executes its provided forms consecutively and then returns the result of evaluating the first form .", "label": "", "metadata": {}, "score": "60.19893"}
{"text": "claim 23 , wherein said parse probability filter vetoes parse trees that fall below a minimum probability for semantic interpretation .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 1 , wherein said system is modular to permit the use of any part - of - speech - tagged ontology .", "label": "", "metadata": {}, "score": "60.211945"}
{"text": "Abstract .The G\u00f6del Machine is a universal problem solver encoded as a completely self - referential program capable of rewriting any part of itself , provided it can prove that the rewrite is useful according to some utility function , encoded within itself .", "label": "", "metadata": {}, "score": "60.2436"}
{"text": "Starting from ( 1 ) a gen ... \" .Abstract .We extend our correspondence between evaluators and abstract machines from the pure setting of the \u03bb - calculus to the impure setting of the computational \u03bb - calculus .We show how to derive new abstract machines from monadic evaluators for the computational \u03bb - calculus .", "label": "", "metadata": {}, "score": "60.26524"}
{"text": "Knowledge bases contain instances of real data , which represent a location somewhere within the ontology .Validating the equivalence of an instance with a concept in an ontology entails comparing the features of an instance with the features of a concept .", "label": "", "metadata": {}, "score": "60.341686"}
{"text": "2 the integrated circuits may be implemented as follows : .UART : 1602 .PRIORITY ENCODER : 74LS148 .INTERRUPT VECTOR REGISTER : 74LS373 .DECODER :74LS155 .COMPARATOR : 25LS2521 .C1 : 1489 .C2 : 1488 .", "label": "", "metadata": {}, "score": "60.696335"}
{"text": "claim 28 , wherein the step of parsing comprises the step of looking ahead one word , scanning input from left - to - right , and constructing said parse tree .A method of ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "60.728325"}
{"text": "If not , the appropriate one of the editor 's routines for handling control characters is called , as indicated by the legend TO CONTROL CHAR ROUTINE , and as described below with reference to FIG .6 .Still referring to FIG .", "label": "", "metadata": {}, "score": "60.774395"}
{"text": "There are some researchers who claim that dictionaries are too impoverished a source of semantic information to ever serve as the lexical knowledge base for sophisticated semantic processing ( e.g. Atkins , Kegl , and Levin , 1986 ) .This pessimistic view seems to be supported by a casual examination of dictionary entries .", "label": "", "metadata": {}, "score": "60.79357"}
{"text": "Let C be the parameter that has been passed to this production .Let oldEnv be the running execution context 's LexicalEnvironment .Let catchEnv be the result of calling NewDeclarativeEnvironment passing oldEnv as the argument .Call the CreateMutableBinding concrete method of catchEnv passing the Identifier String value as the argument .", "label": "", "metadata": {}, "score": "60.827965"}
{"text": "She finds William 's ( cf .next chapter ) ' Righthand Head Rule ' internally inconsistent and argues that heads have no place in morphology .In chapter 47 , On the notions ' ' lexically related ' ' and ' ' head of a word ' ' ( Source : Linguistic Inquiry 12(2 ) ( 1981 ) : 245 - 274 . ) , Edwin Williams proposes a full - fledged syntactic treatment of compounds in terms of heads and maximal projections ( cf .", "label": "", "metadata": {}, "score": "60.84046"}
{"text": "Control of the processor is thereby taken away from the preempted thread , and control then passes to an interrupt service routine which then passes control to another thread to invoke the latter for execution during the next timeslice .Control is thereafter returned to the preempted thread to enable the latter to resume execution at the point where it was previously interrupted .", "label": "", "metadata": {}, "score": "60.862694"}
{"text": "The signal at output pin GS of the PRIORITY ENCODER is transmitted by gate G2 to the latch enable input LE of the INTERRUPT VECTOR REGISTER to cause the latter to latch the RST call instruction into its internal flip - flops .", "label": "", "metadata": {}, "score": "60.90387"}
{"text": "Bresnan , Joan ( 2001 )Lexical - Functional Syntax .Oxford : Blackwell .Carnie , Andrew ( 2002 )Syntax , A Generative Introduction .Oxford : Blackwell .Ouhalla , Jamal ( 1994 )Introducing Transformational Grammar , From Rules to Principles and Parameters .", "label": "", "metadata": {}, "score": "60.95202"}
{"text": "We have now looked at most of the pieces that make up pandoric macros .First , a macro for creating closures : pandoriclet , which captures an anaphor , this , referring to the actual function used when invoking the closure .", "label": "", "metadata": {}, "score": "60.998848"}
{"text": "A predicate structure is a data type that includes a predicate and multiple additional concepts ; as a grouping of concepts , it is itself a concept .An ontology is a hierarchically organized complex data structure that provides a context for the lexical meaning of concepts .", "label": "", "metadata": {}, "score": "61.00583"}
{"text": "In keeping with the maxim that a patent should not teach , but preferably omit , what is known in the prior art , we have not belabored the elements of our preferred implementation which borrow from this prior art .( We have , however , particularly cited certain prior art where it reflects our \" best mode . \")", "label": "", "metadata": {}, "score": "61.064846"}
{"text": "Chapter 7 discusses filler - gap dependencies and relativization , first using English examples of filler - gap relations .Their formalization builds on that of pragmatic functions .While control relations are local , filler - gap relations are not .", "label": "", "metadata": {}, "score": "61.075485"}
{"text": "To address this problem , we have found it advantageous to process the on - line dictionary a second time , making use of the knowledge base assembled in the first pass as an aid to parsing .After the first pass , for example , the knowledge base has assembled a collection of hypernyms for \" gold . \"", "label": "", "metadata": {}, "score": "61.077774"}
{"text": "How do we normally avoid introducing unwanted bindings ?We name the bindings using gensyms of course .( defmacro !Let - hotpatch is an example of closing the this anaphor into a more contained version - a safer version for when hotpatching is all that is required .", "label": "", "metadata": {}, "score": "61.078384"}
{"text": "Those skilled in the art will recognize that knowledge bases produced according to the present invention will permit a large number of NLP and AI systems to overcome longstanding limitations .Rather than undertake an exhaustive listing of such situations , we note simply what may be the archetypical AI application : machine translation .", "label": "", "metadata": {}, "score": "61.18509"}
{"text": "A method as recited in claim 4 wherein each of said threads has a respective task to execute , the further steps comprising . providing in response to said clock driven means activating said interrupt input a respective series of spaced timeslices of execution for each thread with the timeslices of each series interleaved with the timeslices of at least one other series , . preemptively taking control of the microprocessor from an executing thread at the end of its timeslice after the executing thread has executed only a portion of its task , . passing control of the microprocessor to another thread to execute the next successive portion of the task of said another thread during the next successive timeslice of the respective series of timeslices of said another thread , and . thereby executing the task of each thread piecewise with the successive executed task portions of each thread interleaved with the successive executed task portions of at least one other thread . interrupting the execution of an executing thread and taking therefrom control of the central processor upon each said activation of said interrupt operation , . passing control of the central processor to another of said threads of said multithreaded software program for execution of said another thread , . thereafter returning control of the central processor to said interrupted thread , and . repeating the above - recited cycle of steps to switch control of the central processor from one thread to another thread and back again iteratively and rapidly so that the threads effectively execute simultaneously .", "label": "", "metadata": {}, "score": "61.413177"}
{"text": "3 is a semantic relation structure corresponding to the logical form of .FIG .2 . FIG .4 is an inverted semantic relation structure derived from the semantic relation structure of .FIG .3 .FIG .5 is an illustration of an exemplary semantic network discussed in the specification .", "label": "", "metadata": {}, "score": "61.433395"}
{"text": "( f ) augmenting the lexical knowledge base by storing data from the second collection of corresponding , inverted semantic relation structures .The method of .The method of .The method of .claim 23 in which only the first set of semantic relations includes \" hypernym .", "label": "", "metadata": {}, "score": "61.54041"}
{"text": "FIG .1 is a flow chart illustrating a method for generating a lexical knowledge base according to one embodiment of the present invention .FIG .2 is a logical form produced from a definition of the word \" market \" in accordance with one embodiment of the present invention .", "label": "", "metadata": {}, "score": "61.620872"}
{"text": "The configuration of the parser 200 is shown in FIG .2 .First , the sentence receiver 220 obtains sentences 210 consisting of ontological entities produced by the sentence lexer 100 .These sentences are parsed by the parser 230 , which is designed to use a context - free grammar , although other grammatical models may be used without departing from the scope and spirit of the invention .", "label": "", "metadata": {}, "score": "61.651634"}
{"text": "The RST instruction is then input to and executed by the Z80 CPU , causing the latter to push the contents of the program counter onto the stack , and further causing the CPU to jump to a predetermined location in low memory .", "label": "", "metadata": {}, "score": "61.680702"}
{"text": "claim 15 in which the identifying step includes string searching the text to discern semantic relation structures .The method of .claim 15 in which : . step ( A ) includes : .( a ) providing a natural language corpus ; .", "label": "", "metadata": {}, "score": "61.770073"}
{"text": "So , to avoid such problems , she proposes that inflected forms can be base - generated as such and then move to accomplish feature checking .Of course it weakens the predictions about the correlation between morpheme order and syntactic structure in that it allows the agreement morphology to get attached to some other head , but not project its own structure , but that is the desirable result .", "label": "", "metadata": {}, "score": "61.78367"}
{"text": "Pseudo - predicate verbs include \" give \" , \" show \" , and \" find \" .Not all instances of these verbs are pseudo - predicates ; however , the first instance of them in a query often is .", "label": "", "metadata": {}, "score": "61.79767"}
{"text": "If we had used lambda instead of plambda in the definition of make - stats - counter , most of this information would be inaccessible to us .We would be locked out because these variables would be closed to us .", "label": "", "metadata": {}, "score": "61.86216"}
{"text": "Style aside , free variable injection is sometimes just what we need when we want two related macros to communicate back and forth .Injection is really the same operation as that performed by anaphora , just in the opposite direction .", "label": "", "metadata": {}, "score": "61.94493"}
{"text": "Making a closure pandoric is as easy as adding a p character before the lambda and adding a list of variables to export after the lambda arguments .We can the open this closure - and any pandoric closure that exports the symbols a and b -by using with - pandoric like so : .", "label": "", "metadata": {}, "score": "61.964954"}
{"text": "Alet% can be made to not return the last form in its body - which we anticipate to be a lambda form - but instead a function that looks up another function inside the let form 's lexical scope , then calls that function instead .", "label": "", "metadata": {}, "score": "61.98774"}
{"text": "The apparatus of .claim 28 in which the parsing means is a broad coverage parser .Description .FIELD OF THE INVENTION .The present invention relates to the field of natural language processing ( NLP ) , and more particularly relates to a method and system for compiling a lexical knowledge base useful in such processing .", "label": "", "metadata": {}, "score": "62.004158"}
{"text": "each of said threads has a respective task to perform , . said periodic activation of said interrupt operation by said clock timer providing for the execution of each thread a respective series of said spaced time - sliced intervals with the time - sliced intervals of each series interleaved with the time - sliced intervals of at least one other series , . said interrupt service routine repeatedly preemptively taking control of the central processor from at least one executing thread at the end of its time - sliced interval after the executing thread has performed only a portion of its task .", "label": "", "metadata": {}, "score": "62.060764"}
{"text": "In the case of applyhook , the function is applied to the list of arguments args .Furthermore , the env argument is used as the lexical environment for the operation ; env defaults to the null environment .The check for a hook function is bypassed for the evaluation of the form itself ( for evalhook ) or for the application of the function to the args itself ( for applyhook ) , but not for subsidiary evaluations and applications such as evaluations of subforms .", "label": "", "metadata": {}, "score": "62.06127"}
{"text": "The dense writing style does not allow to one to stop at every term and elaborate it .The teacher of syntax will play a primary role in directing the students ' attention to important statements which otherwise , I fear , they might skip over .", "label": "", "metadata": {}, "score": "62.12345"}
{"text": "If not , an error is thrown .Pandoriclet - set is nearly identical , except that dlambda bound one extra symbol for it to use : val .Pandoriclet - set uses setq to change the binding referred to by sym to val .", "label": "", "metadata": {}, "score": "62.13594"}
{"text": "This representation also provides optimized execution of the difference comparison , since using hexadecimals instead of decimals optimizes the logical digit - by - digit comparison to a computer - efficient byte - by - byte comparison .It should also be noted that the above examples of decimal , hexadecimal , or multi - digit hexadecimal are typical parameter choices for the node encoding included in the present invention .", "label": "", "metadata": {}, "score": "62.15477"}
{"text": "A multithreading microcomputer system as recited in claim 24 wherein .each of said threads has a respective task to execute , .each thread having a respective series of spaced timeslices of execution with the timeslices of each series interleaved with the timeslices of at least one other series , . said interrupt service routine preemptively taking control of the microprocessor from an executing thread at the end of its timeslice after the executing thread has executed only a portion of its task , . whereby the task of each thread is executed piecewise with the successive executed task portions of each thread interleaved with the successive executed task portions of at least one other thread .", "label": "", "metadata": {}, "score": "62.23286"}
{"text": "The opening contribution ' The mirror principle and morpho - syntactic explanation ' ( Source : Linguistic Inquiry 16(3 ) ( 1985 ) : 373 - 415 . ) by Mark Baker ( ch 42 ) , advocates the Mirror Principle which claims that there are processes in the languages of the world that have both a syntactic as well as a morphological component .", "label": "", "metadata": {}, "score": "62.296776"}
{"text": "7 is another example parse tree incorporating real words according to the present invention .DETAILED DESCRIPTION OF THE INVENTION .In the following detailed discussion of the present invention , numerous terms , specific to the subject matter of a system and method for concept - based searching , are used .", "label": "", "metadata": {}, "score": "62.334984"}
{"text": "He provides a unified theory of affixational morphology , in which derivational affixes and inflectional affixes need not be separated in the rules of formation .Chapter 48 ' Functional heads and inflectional morphemes ' ( Source : Linguistic Review 8 ( 1984 ) : 389 - 417 . ) , written in the principles and parameters model of generative grammar , also deals with heads in morphology .", "label": "", "metadata": {}, "score": "62.360523"}
{"text": "Modules dependencies usually form a DAG but mutually dependent modules are sometimes supported .This is in contrast with , say the Smalltalk way , where the state of the entire ( development ) system staid in memory ( or in image files ) making notoriously .", "label": "", "metadata": {}, "score": "62.5247"}
{"text": "A better way of thinking about pandoric variables are that they are simply an extension of the original lexical scope .As a simple example use of plambda , here is a pandoric counter that exports variables from two potentially different lexical environments : .", "label": "", "metadata": {}, "score": "62.53588"}
{"text": "Following the IF clause is the assignment : . where SP is equal to the ASCII code ( 32 ) for a space .Control then returns to GETSYM where the condition of the WHILE clause is satisfied so that it again invokes GETCH .", "label": "", "metadata": {}, "score": "62.661407"}
{"text": "Therefore the reduction of the number of recompilations to the absolute minimum is not essential .The editor is written in Pascal with calls to sixteen external assembly language procedures and functions .Those routines unique to the present invention will now be described .", "label": "", "metadata": {}, "score": "62.6856"}
{"text": "authority ( n,7 ) : a person , book , etc . , mentioned as the place where one found certain information .In this example , hypernym indicates an is_a relationship ; the location relation has as its value the verb \" find , \" which has its own semantic relation : typical_object , whose value is \" information . \"", "label": "", "metadata": {}, "score": "62.752735"}
{"text": "Another way to think about sharp - backquote is that it is to list interpolation as the format function is to string interpolation .Just as format lets us use a template with slots that are to be filled with the values of separate arguments , sharp - backquote lets us separate the structure of the list interpolation from the values we want to splice in .", "label": "", "metadata": {}, "score": "62.855896"}
{"text": "Parse tree converter 240 receives the output of the parser 230 , and converts the parse trees into predicates .Following the Parse tree converter , parser filters 250 operate or the predicates to remove erroneously generated predicates based on rules about the probability of syntactic analyses , as well as rules about the compatibility of concepts with each other .", "label": "", "metadata": {}, "score": "62.860962"}
{"text": "A longer section motivating the lexical analysis of passives concludes the chapter .Chapter 4 is dedicated to the analysis of reflexive pronouns .Binding Principle B is shown to be too strong unless the binding domain is assumed to be the predicate and its arguments .", "label": "", "metadata": {}, "score": "62.964123"}
{"text": "The LALR parser is widely used and is better known as the approach used by parser generators such as yacc and bison .While the description is a preferred embodiment , it will be understood that any implementation of a context - free grammar within a similar architecture , including such variants as an LALR-2 parser ( which looks ahead by two words ) , are within the scope of the present invention .", "label": "", "metadata": {}, "score": "63.0275"}
{"text": "The analysis of reflexives , finally , is said to be an important step for the analysis of languages since this will reveal the system of participant reference .Chapter 5 introduces lexically determined control relations ( subject control and object control ) , structurally induced functional control , functional and anaphoric control , equi- and raising predicates .", "label": "", "metadata": {}, "score": "63.077763"}
{"text": "The modal verb filter will contain a set of modal verbs similar to the stop word list contained in stop word filter .Any Lexeme whose text is in that set and whose concept is a verb is identified as a modal verb , and will be removed .", "label": "", "metadata": {}, "score": "63.136665"}
{"text": "The classic anaphora like those in On Lisp are named after the literal words 1 A U - language quotation .anaphor and its plural , anaphora .An anaphor is a means of capturing a free U - language word for use in subsequent U - language .", "label": "", "metadata": {}, "score": "63.262844"}
{"text": "For example although the invention has been described as using structured text - such as a dictionary - for the machine readable knowledge , in other applications unstructured text , such as an encyclopedia or other more general text , can be used .", "label": "", "metadata": {}, "score": "63.26963"}
{"text": "With pandoric macros , additional code is compiled in to provide a way to access the closure from outside .But the power of pandoric macros ca n't be seen by looking at this low - level view of what is happening .", "label": "", "metadata": {}, "score": "63.345963"}
{"text": "A predicate structure built from \" eat \" might thus require that the object of the predicate have a code beginning with \" 112 .\" As can be seen from the tree shown , it is clear that all the foods listed inherit the \" 112 \" prefix .", "label": "", "metadata": {}, "score": "63.427086"}
{"text": "The terminal also comprises a video display for implementation of a screen editor .The keyboard is preferably integral with the video display to form a unitary console having an RS-232-C serial link to the remainder of the system .", "label": "", "metadata": {}, "score": "63.43933"}
{"text": "The TOPLO procedure passes control to the PL / O compiler .It is usually called after the editor has completed the character entry or editing function corresponding to the key struck at the terminal .In this case the procedure is called after initialization of the editor .", "label": "", "metadata": {}, "score": "63.47751"}
{"text": "Preemptive multithreading computer system with clock activated interrupt US 5694604 A .Zusammenfassung .A multithreading computer system provides concurrent asynchronous preemptive time - sliced execution of a plurality of threads of instructions located within the same software program .A clock or timer periodically activates the interrupt operation of the central processor .", "label": "", "metadata": {}, "score": "63.503696"}
{"text": "The term concept as used herein means an abstract formal representation of meaning , which corresponds to multiple generic or specific words in multiple languages .Concepts may represent the meanings of individual words or phrases , or the meanings of entire sentences .", "label": "", "metadata": {}, "score": "63.568638"}
{"text": "Defsetf is an interesting C OMMON L ISP macro not entirely unlike our defmacro ! extension to defmacro in that it implicitly binds gensyms around provided forms .Defsetf works great for defining the setter side of a generalised variable duality as long as the getter can be expressed as a function or macro that evaluates all of its arguments exactly once .", "label": "", "metadata": {}, "score": "63.681847"}
{"text": "Amusingly , most of our solutions rely on continuations .Are browsers and multimedia the future of continuations ? by Mads Sig Ager , Olivier Danvy , Jan Midtgaard - Theoretical Computer Science , 2005 . \" ...Abstract .We extend our correspondence between evaluators and abstract machines from the pure setting of the \u03bb - calculus to the impure setting of the computational \u03bb - calculus .", "label": "", "metadata": {}, "score": "63.886944"}
{"text": "Another object of the present invention is to provide a system and method for parsing natural language input that realizes enormous speed benefits from the parameterized ontology that the parser utilizes .BRIEF DESCRIPTION OF THE DRAWINGS .These and other attributes of the present invention will be described with respect to the following drawings in which : .", "label": "", "metadata": {}, "score": "63.891357"}
{"text": "The contexts in which these associated terms are found are then heuristically analyzed to discern semantic relationships between each of these terms and the original word \" flower . \"( It should be noted that not all definitions which mention \" flower \" will have a semantic relation with \" flower \" as the value . )", "label": "", "metadata": {}, "score": "63.9065"}
{"text": "Chapter 2 contains the obligatory chapter which treats constituency and syntactic categories concisely , advancing however to difficult phenomena such as mixed categories and the English gerund .Chapter 3 tackles passives , applicatives and dative shift .Lexical rules are introduced to account for the observed data .", "label": "", "metadata": {}, "score": "63.93747"}
{"text": "If the macros do n't do either of these things - or if the forms are n't macros at all - this type of super sub - lexical scope acts just like sub - lexical scope : .As mentioned above , super sub - lexical scope is actually an infinite class of scopes , one that is almost completely unexplored intellectually .", "label": "", "metadata": {}, "score": "63.968452"}
{"text": "Speech errors , however , in the theory are seen not as malfunctions , but rather as the consequence of the need for language production to be productive , coupled with some assumptions about the way that linguistic knowledge is represented and retrieved .", "label": "", "metadata": {}, "score": "64.03821"}
{"text": "a microprocessor having an interrupt input , . means to cause the microprocessor to execute one of said threads under control of said one thread , . clock driven means for periodically activating said interrupt input at brief predetermined time intervals so as to interrupt the execution of an executing thread upon each activation of said interrupt input , . an interrupt service routine for preemptively taking control of the microprocessor in response to each said activation of said interrupt input and including means for passing control of the microprocessor to another of said threads of said software program for execution of said another thread , . operator actuated means for interactively controlling the execution of at least one of said program threads during the execution of said one thread , and .", "label": "", "metadata": {}, "score": "64.07674"}
{"text": "With pandoric functions , it is everything .Furthermore , with pandoric functions the order of the arguments does n't matter and you can elect to use as few or as many of the exported lexical variables as you please .Defpan also provides an anaphor called self that allows us to perform a useful technique called anaphor chaining .", "label": "", "metadata": {}, "score": "64.16373"}
{"text": "Alet - hotpatch is a version of alet - hotpatch% that takes advantage of dlambda .Sometimes without even realising it , by using macros we wrote previously in the definition of new macros , we are performing macro combination .With well designed macros the expansion can be fully understood and , although it might violate lexical transparency in many ways , no combination problems emerge because all components fit together meaningfully .", "label": "", "metadata": {}, "score": "64.16667"}
{"text": "Locn .book .Purp . enjoyment .LocnOf . read .HypOf .browse .Using the Semantic Knowledge Base .A semantic knowledge base constructed using the principles of the present invention not only improves the accuracy of natural language processing techniques known in the prior art ; it also enables new analysis techniques not previously possible .", "label": "", "metadata": {}, "score": "64.35101"}
{"text": "A method of ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 28 , further comprising the step of vetoing parse trees that fall below a minimum probability for semantic interpretation .A method of ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "64.397606"}
{"text": "The Brash system makes no provisions for the possibility that immediate relationships are not in fact the correct expression of sentence - level concepts , because it assumes that syntactic constituency is always defined by immediate relationships .The Brash system does not incorporate ontologies as the basis for its lexical resource , and therefore does not permit the output of the parser to be easily modified by other applications .", "label": "", "metadata": {}, "score": "64.43762"}
{"text": "Chapter 8 distinguishes periphrastic , lexical and morphological causatives .The question of the grammatical relation of the causee in causatives derived from transitive verbs leads to a discussion of Baker 's theory .The question of the grammatical relation of the causee in causatives derived from ditransitive roots leads to Comrie 's generalization of the \" next available Grammatical Relation \" .", "label": "", "metadata": {}, "score": "64.45151"}
{"text": "The interrupt service routine then jumps to its subroutine to perform the RESTORE REGISTERS procedure whereby the registers of the CPU are restored to their original values at the instant of the interrupt .The ENABLE INTERRUPT instruction ( EI ) is then executed by the CPU so that the latter may respond to the next interrupt .", "label": "", "metadata": {}, "score": "64.49988"}
{"text": "In the preferred embodiment , the headwords / values in the semantic relation structures may be sense disambiguated , i.e. they may each have an indication of the dictionary sense of the word they denote .Example : \" Book \" .", "label": "", "metadata": {}, "score": "64.516945"}
{"text": "Chapter 9 introduces serial verbs and related issues as clause chaining .These phenomena are difficult to analyze and only loosely related to the other phenomena treated in AS .Chapter 10 discusses irregular correlations between morphological features and grammatical relations , so - called quirky cases , using examples from German , Icelandic , Malayalam , Hindi and Tamil .", "label": "", "metadata": {}, "score": "64.51773"}
{"text": "The Mirror Principle ties morphology and syntax together in such a way that any constraint discovered in one system will automatically constitute a constraint on the other system .Baker focuses on the interaction between syntactic rules that change grammatical functions and the corresponding affixation phenomena in the morphological component that are induced by the changes of grammatical function .", "label": "", "metadata": {}, "score": "64.596725"}
{"text": "After a brief interlude into anaphora introduced by read macros , the remainder of this chapter describes a modest , specific application of anaphora related to one of the central themes of this book : the lexical closure- let over lambda .", "label": "", "metadata": {}, "score": "64.59802"}
{"text": "A method of ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 28 , further comprising the step of vetoing parse trees having conflicts between selectional features of concepts serving as arguments to a second concept and restrictions of said second concept .", "label": "", "metadata": {}, "score": "64.60072"}
{"text": "The benefits of modularization are well known .However , modules are not standard in Scheme .This paper accompanies an invited talk at the Scheme Workshop 2002 on the current state of modules for Scheme .Implementation is not addressed , only linguistic features are covered .", "label": "", "metadata": {}, "score": "64.650566"}
{"text": "These relations may have as their values either ( a ) word(s ) or embedded relation(s ) .A simple semantic relation is composed of a triple including : ( 1 ) a headword ( e.g. \" flower \" ) ; ( 2 ) a semantic relation ( e.g. \" part of \" ) ; and ( 3 ) a value ( e.g. \" plant \" ) .", "label": "", "metadata": {}, "score": "64.75969"}
{"text": "The present invention is believed to finally offer the promise of a solution to this problem .In view of the wide variety of different applications to which the principles of our invention can be put , it should be recognized that the detailed methods and systems are illustrative only and should not be taken as limiting the scope of our invention .", "label": "", "metadata": {}, "score": "64.77389"}
{"text": "6 shows the semantic network of .FIG .6 with elaboration .FIG .7 is an illustration of another exemplary semantic network .DETAILED DESCRIPTION .We now describe our use of DB methods to automatically create a semantic knowledge base from an on - line dictionary .", "label": "", "metadata": {}, "score": "64.88671"}
{"text": "Lambda - calculus , interpreters , abstract machines , closure conversion , transformation into continuation - passing style ( CPS ) , defunctionalization , monads , effects , proper .Dynamic binding , which has always been associated with Lisp , is still semantically obscure to many .", "label": "", "metadata": {}, "score": "64.888885"}
{"text": "Other dictionaries have not limited the vocabulary used to express definitions and so there are no restrictions on the number of backlinks that are found processing these dictionaries . )On - line dictionaries thus represent formidable sources of \" common sense \" knowledge about the world , a long sought - after resource in AI .", "label": "", "metadata": {}, "score": "64.90016"}
{"text": "Although we provide arguments to defpan using the same syntax as in lambda forms - a list of symbols - the arguments to defpan mean something different .Instead of creating a new lexical environment , these pandoric functions extend the lexical environment of the pandoric closures they are applied to .", "label": "", "metadata": {}, "score": "64.90355"}
{"text": "Of course if we wanted to refer to this for some reason other than hotpatching , we should have left the anaphor open .This technique of opening and closing anaphora becomes second nature after you have written enough of such macros .", "label": "", "metadata": {}, "score": "65.068054"}
{"text": "claim 38 , further comprising the step of representing said parse trees by modified hexadecimal numbers that have an octet of hexadecimal pairs to provide eight ontological levels and a branching factor at each node of 256 .A method of ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "65.08284"}
{"text": "The second study confirms that irregular forms as well as high - frequency regular forms appear to be stored in the lexicon .However , low - frequency regular inflected forms are not stored in the lexicon .So , performance factors like frequency are shown to influence lexical storage .", "label": "", "metadata": {}, "score": "65.131905"}
{"text": "The method of . claim 5 in which the semantic relation structure includes at least one element in addition to a headword , a semantic relation , and a value .The method of .claim 6 in which : .the value of the extracted semantic relation structure includes a primary value term , a lower level relation , and a lower level value term ; and .", "label": "", "metadata": {}, "score": "65.29118"}
{"text": "That is , can you use pandoric - eval to evaluate a form that evaluates pandoric - eval ?Why or why not ?Exercise : Although the implementation of pandoric macros here is fairly efficient , it could be improved .", "label": "", "metadata": {}, "score": "65.32749"}
{"text": "Next , the semantic relations are extracted from the logical form representation of .FIG .2 , resulting in the semantic relation structure of .FIG .3 .In this representation , the top headword is the term being defined , \" market . \"", "label": "", "metadata": {}, "score": "65.37714"}
{"text": "Graham 's anaphora and associated code are worth careful study .Especially see the defanaph macro [ ON - LISP - P223 ] which enables some interesting types of automatic anaphor programming .After some period of use , alambda has been found to be the most useful of the anaphoric macros in On Lisp .", "label": "", "metadata": {}, "score": "65.440155"}
{"text": "claim 6 , wherein said parse trees is represented by modified hexadecimal digits that have an octet of hexadecimal pairs to provide eight ontological levels and a branching factor at each node of 256 .A method of ontological parsing that converts natural - language text into predicate - argument format comprising the steps of : . converting a natural language sentence into a sequence of ontological entities that are tagged with part - of - speech information ; and . converting said sequence of ontological entities into predicate structures using a two - stage process that analyzes the grammatical structure of the natural language sentence and binds arguments into predicates .", "label": "", "metadata": {}, "score": "65.51091"}
{"text": "Pandoriclet is similar to other macros we 've seen .As with all of our anaphoric let variants , we assume the final form in the pandoriclet body will be a lambda form .Like alet - hotpatch , pandoriclet uses the dlambda macro to dispatch between different possible pieces of code to execute when the closure returned from pandoriclet is invoked .", "label": "", "metadata": {}, "score": "65.54175"}
{"text": "In April 2013 the message given by JSLint in this situation changed from \" Do not assign to the exception parameter \" to the more generic \" Read only \" , which is given in numerous other scenarios .As of August 2013 this functionality is no longer present in JSLint .", "label": "", "metadata": {}, "score": "65.55902"}
{"text": "The present invention relates to an ontological parser for natural language processing .More particularly , the present invention relates to a system and method for ontological parsing of natural language that provides a simple knowledge - base - style representation format for the manipulation of natural - language documents .", "label": "", "metadata": {}, "score": "65.62511"}
{"text": "The filler bears one grammatical relation and a pragmatic functions .The typology of relative clauses ( restrictive vs. non - restrictive relatives , gap strategy , resumptive pronoun , relative pronoun , relativizer , internally headed relative clauses , correlatives ) leads to questions of word order and the \" accessibility hierarchy \" .", "label": "", "metadata": {}, "score": "65.62956"}
{"text": "In C OMMON L ISP it could n't be any other way : eval is a function .Here is the problem : .Sometimes it would apparently be desirable to extend your lexical environment to eval .But be careful .", "label": "", "metadata": {}, "score": "65.67364"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 11 , wherein said noun filter groups proper nouns into single lexical nouns .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "65.95034"}
{"text": "A 10-digit decimal number allows 10 10 , or 10 billion possible concepts to be stored in the tree .That is a sufficient number of total concepts , but the branching factor is too small .There can be a maximum of ten possible branches out of each node to the next level .", "label": "", "metadata": {}, "score": "66.0182"}
{"text": "Alet - hotpatch% is an expansion of alet with a special lambda form provided .This lambda form checks the first argument 13 With a pointer comparison . to see if it is the keyword symbol : hotpatch and , if so , replaces the indirected closure with another provided argument .", "label": "", "metadata": {}, "score": "66.08424"}
{"text": "Disambiguation .A semantic knowledge base in this form allows a computer important new ways to explore the information available .For example , Jensen and Binot ( 1987 ) show how information automatically extracted from Webster 7 entries can be used to determine the proper attachment of ambiguous prepositional phrases .", "label": "", "metadata": {}, "score": "66.372986"}
{"text": "The next two articles present two models of computational morphology .In chapter 74 ' Lexical knowledge representation and natural language processing ' ( Source : Artificial Intelligence 63(1993 ) : 193 - 223 . ) , James Pustejovsky and Branimir Boguraev defend a rich theory of lexical semantics making use of a knowledge representation framework .", "label": "", "metadata": {}, "score": "66.402664"}
{"text": "It presupposes some familiarity with basic linguistic concepts , but not more .However , the book is densely written and in a few paragraphs goes further than other textbooks on syntax might do in a chapter .The language is clear and unambiguous .", "label": "", "metadata": {}, "score": "66.51042"}
{"text": "claim 3 , wherein said numbers can be subtracted to determine if features are in agreement , wherein a negative number indicates feature incompatibility .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "66.65182"}
{"text": "The stop word filter will contain a set of words accepted as stop words ; any lexeme whose text is in that set is considered to be a stop word .An adjective filter serves to remove lexemes representing adjective concepts from sentences .", "label": "", "metadata": {}, "score": "66.67119"}
{"text": "The standard LALR parser generator algorithm fails when the grammar does not provide the parser generator enough information to decide whether the correction to perform given a certain current state and input symbol is to shift or to reduce .The generator algorithm also fails when the grammar does not provide the parser generator enough information to decide which of two or more rules should be reduced .", "label": "", "metadata": {}, "score": "66.68648"}
{"text": "Most of them have a header , specifying the language , where spoken and their source .Where these data can be found in the text , the header has been omitted .There is however a minor flaw in the Italian example sentences on page 225 .", "label": "", "metadata": {}, "score": "66.72828"}
{"text": "Still another object of the present invention is to provide a system and method for parsing natural language input that transforms data using a syntactic parser and ontology , where the ontology is used as a lexical resource .Yet another object of the present invention is to provide a system and method for parsing natural language input that provides ontological entities as output that are predicate - argument structures .", "label": "", "metadata": {}, "score": "66.77231"}
{"text": "The macro we have used so far to create pandoric closures is pandoriclet .Plambda is an inside out re - write of pandoriclet that adds a few important features .First and foremost , plambda no longer creates the let environment to be used through our pandoric accessors .", "label": "", "metadata": {}, "score": "66.85921"}
{"text": "( In other words , \" meet \" has the purposes \" buy \" and \" sell , \" both of which have a typical object of \" goods , \" and finally , that \" people \" are the ones doing the \" meet\"ing . )", "label": "", "metadata": {}, "score": "66.88608"}
{"text": "The biggest obstacle to such an idiomatic translation from Emacs Lisp i ... \" .It is possible to translate code written in Emacs Lisp or another Lisp dialect which uses dynamic scoping to a more modern programming language with lexical scoping while largely preserving structure and readability of the code .", "label": "", "metadata": {}, "score": "66.90712"}
{"text": "The biggest obstacle to such an idiomatic translation from Emacs Lisp i ... \" .It is possible to translate code written in Emacs Lisp or another Lisp dialect which uses dynamic scoping to a more modern programming language with lexical scoping while largely preserving structure and readability of the code .", "label": "", "metadata": {}, "score": "66.90712"}
{"text": "claim 28 , further comprising the step of modifying said natural language sentence based on word meanings .A method of ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 28 , further comprising the steps of : . receiving sentences including ontological entities ; . parsing said sentences including ontological entities into parse trees representing concepts in the corresponding sentence including ontological entities ; and . converting said parse trees into predicates .", "label": "", "metadata": {}, "score": "66.95839"}
{"text": "If the input control character is the code for the CURSOR UP or SCREEN UP then the respective operation MOVE CURSOR UP or SCROLL SCREEN is performed .In the former case the cursor is moved up one line on the video screen .", "label": "", "metadata": {}, "score": "67.02276"}
{"text": "Although most anaphora are introduced by regular macros , read macros also have the potential to introduce code that invisibly creates bindings for us .When read macros do so , they are called read anaphora .This section presents one such read macro that , while itself very modest , surprised even myself by turning out to be one of the most consistently useful throughout this book .", "label": "", "metadata": {}, "score": "67.146255"}
{"text": "Reflexives and control structures here play a central role .Chapter 11 starts with a distinction of morphological ergative case marking ( Warlpiri ) and syntactic ergativity .In the latter case not only the case marking but also syntactic properties follow the ergative pattern ( Dyribal ) .", "label": "", "metadata": {}, "score": "67.18097"}
{"text": "Here is an example of a very simple tracing routine that uses just the evalhook feature .( let ( ( values ( multiple - value - list .( evalhook form .# ' eval - hook - function nil . env ) ) ) ) .", "label": "", "metadata": {}, "score": "67.20696"}
{"text": "Similar features will have similar paths through the tree .Referring to .FIG .5 , an example is illustrated .Node A is represented with the decimal number \" 1212 . \"Node B is represented with the decimal number \" 1220 .", "label": "", "metadata": {}, "score": "67.26139"}
{"text": "This set is like an encyclopaedia in morphology .Providing a critical introduction to the central concepts and perennial problems of morphology , it equips readers with the skills to analyze a wealth of classic morphological issues .The inclusion of an index of important terms used in the volumes , makes this set very reader - friendly .", "label": "", "metadata": {}, "score": "67.27522"}
{"text": "GETCH has as its first statement : . so as to read into the variable CH the contents of the source memory location pointed to by the pointer variable PTR .The next statement of GETCH is : . thereby testing if the byte read is the Pause Mark PM which is a constant equal to 35 .", "label": "", "metadata": {}, "score": "67.31348"}
{"text": "Although most of the ideas represented in this work were not actually implemented , this dissertation foreshadowed many of the issues which continue to confront researchers in computational lexicography .Chodorow et al .( 1985 ) relied on string - matching to automatically extract genus terms for nouns and verbs from the on - line version of Webster 's Seventh New Collegiate Dictionary ( Webster 7 ) .", "label": "", "metadata": {}, "score": "67.329"}
{"text": "Cave lector , this paper only reflects my own and instantaneous biases !MODULES The benefits of modularization within conventional languages are well known .Modules dissociate interfaces and implementations ; they allow separate compilation ( or at least independent compilation \u00e0 la C ) .", "label": "", "metadata": {}, "score": "67.40917"}
{"text": "The ASCII code for a carriage return ( 13 ) is then entered into the source code buffer adjacent the Pause Mark , as indicated by INSERT CR INTO MEM BUFFER .The ASCII code for a line feed ( 10 ) may be entered after the carriage return if this convention is desired .", "label": "", "metadata": {}, "score": "67.43635"}
{"text": "Anaphoric relations are specified on the basis of semantic roles ( cf .Chapter 4 ) .Chapter 6 introduces the pragmatic functions of topic and focus , looking at English topic and focus constructions , topicalization in Mandarin and Japanese as well as Indonesian and Russian focus marking .", "label": "", "metadata": {}, "score": "67.4565"}
{"text": "In the languages he has studied , he suggests that if a language has two or more different causative mechanisms the mechanisms will contrast semantically .In chapter 51 ' The best clitic : constraint conflict in morphosyntax'(Source : Liliane Haegeman ( ed . ) , Elements of Grammar , Dordrecht : Kluwer Academic , 1997 , pp . 169 - 196 . ) , Jane Grimshaw 's contribution uses Optimality Theory ( OT ) in the domain of morphosyntax .", "label": "", "metadata": {}, "score": "67.46095"}
{"text": "This utility function is necessary to pandoriclet for the same reason that it was necessary for sublet : these macros code - walk the bindings provided to let where our previous macros blindly spliced the bindings into another let .We have put in two calls to list - creating utility functions yet to be defined : pandoriclet - get and pandoriclet - set , each of which accept a list of let bindings .", "label": "", "metadata": {}, "score": "67.513336"}
{"text": "The next two studies treat compounds .In chapter 46 ' Be - heading the word'(Source :Journal of Linguistics 26 ( 1990):1 - 31 . ) , Laurie Bauer takes a highly skeptical view of the analysis of a syntactic , X - bar theoretic analysis of compounds that assumes that they have heads analogous to the heads of syntactic constituents .", "label": "", "metadata": {}, "score": "67.53723"}
{"text": "Thus , for example , the node to Node A 's immediate left , is represented by \" 1211 .\" When the difference comparison is made , it works out to be \" 0001 , \" which implies a correspondingly close ontological relationship between the two concepts .", "label": "", "metadata": {}, "score": "67.55165"}
{"text": "Stats - counter - variance computes the variance of these values by following a link in the chain and stats - counter - stddev follows yet another to compute the standard deviation .Notice that each link in the chain only needs to pass on the anaphor self to refer to the full lexical context of the closure .", "label": "", "metadata": {}, "score": "67.60291"}
{"text": "4 .Each arrowhead in .FIG .4 represents a concept node .The deeper into the tree ( i.e. , the higher the numbered level of the concept node ) , the more specific the concept is .Consider one path through FIG .", "label": "", "metadata": {}, "score": "67.736496"}
{"text": "Consequently , ten is too small to constrain the branching factor for each level .The use of a hexadecimal representation would improve this some by increasing the branching factor to 16 .Thus , using a 16-digit ( i.e. , a 64-bit ) hexadecimal number gives 16 branches at each node for 16 levels : 16 16 possible concepts .", "label": "", "metadata": {}, "score": "68.232315"}
{"text": "Modules discipline name spaces with explicit names exposure , hiding or renaming .Quite often , they also offer qualified naming .These name spaces may cover variables , functions , types , classes , modules , etc .Just as components , modules may explicit their dependences that is , the other modules they require in order to work properly .", "label": "", "metadata": {}, "score": "68.282776"}
{"text": "Lexer filters 150 are modular plug - ins , which modify sentences based on knowledge about word meanings .The preferred embodiment contains several filters 150 , although more may be developed , and existing filters may be removed from future versions , without altering the scope of the invention .", "label": "", "metadata": {}, "score": "68.32466"}
{"text": "This could be confusing to other developers maintaining your code in the future .In JSHint 1.0.0 and above you have the ability to ignore any warning with a special option syntax .The identifier of this warning is W022 .A note regarding the exception parameter .", "label": "", "metadata": {}, "score": "68.443726"}
{"text": "( 1 ) inverting the semantic relation structure ; and .( 2 ) storing , in association with the value , the inverted semantic relation structure .The system of .claim 28 in which : .the value of the extracted semantic relation structure includes a primary value term , a lower level relation , and a lower level value term ; and .", "label": "", "metadata": {}, "score": "68.48921"}
{"text": "This macro is designed to create sub - lexical bindings for code using a syntax similar to the usual let form syntax .The discussion of sublet , as with many lisp macros , begins with a utility .Sublet also uses the tree - leaves utility we defined in section 5.3 , Implicit Contexts .", "label": "", "metadata": {}, "score": "68.53248"}
{"text": "claim 3 in which the parsing step includes string searching the corpus by machine to discern semantic relation structures .A method for generating a lexical knowledge base in a machine , said generating comprising the steps : .( a ) using a natural language parser associated with said machine to parse a segment of text to obtain a logical form ; .", "label": "", "metadata": {}, "score": "68.54622"}
{"text": "Instead , the steps have only been concerned with the original dictionary definition for the word \" flower . \"Further , it should be noted that these steps , per se , are well known in the art , being found in many other NLP analysis systems ( albeit not in the context of extracting semantic relations from the logical form of definitions in on - line dictionaries ) .", "label": "", "metadata": {}, "score": "68.61224"}
{"text": "In chapter 58 ' Theory of the lexicon ' ( Source : Jack Hoeksma , Categorial Morphology , New York : Garland , 1985 , pp . 1 - 31 . ) , Jack Hoeksma outlines a theory of the lexicon in a lexicalist approach .", "label": "", "metadata": {}, "score": "68.840706"}
{"text": "A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 11 , wherein said stop word filter removes stop words from said individual sentences .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .", "label": "", "metadata": {}, "score": "68.8822"}
{"text": "However , modules are not standard in Scheme .This paper accompanies an invited talk at the Scheme Workshop 2002 on the current state of modules for Scheme .Implementation is not addressed , only linguistic features are covered . \" ...", "label": "", "metadata": {}, "score": "69.20732"}
{"text": "FIG .8 , as is familiar to those skilled in the art , a personal computer 100 of the sort referenced above includes a central processing unit ( CPU ) 102 and a memory system 104 that communicate through a bus structure 106 .", "label": "", "metadata": {}, "score": "69.29131"}
{"text": "We can even use pandoric - hotpatch on a pandoric closure we created before we knew we wanted it to be hotpatchable .Remember the counter closure we have been playing with throughout this section ?It should still be bound to the symbol - function of the symbol pantest .", "label": "", "metadata": {}, "score": "69.40381"}
{"text": "This article was written by James Allardice , JavaScript engineer at Mammal in London .Passionate about AngularJS , Node and writing clean and maintainable JavaScript and uses JSHint every day to help achieve this .A multithreading computer system provides concurrent asynchronous preemptive time - sliced execution of a plurality of threads of instructions located within the same software program .", "label": "", "metadata": {}, "score": "69.484314"}
{"text": "A simple search through LDOCE for noun entries which mention flower in their definitions , however , will allow us to arrive at a much more detailed picture of its meaning .It is further possible to compile an exhaustive list of flowers and flowering plants , a few of which are given in ( 8) ( LDOCE contains scores of such entries ) .", "label": "", "metadata": {}, "score": "69.571625"}
{"text": "One such semantic relation is that of hypernym ( Hyp ) .This relation has three values , \" building , \" \" square \" and \" place . \"( That is , a market is a building ; a market is a square ; and a market is a place . )", "label": "", "metadata": {}, "score": "69.64074"}
{"text": "A proper noun is any word or phrase representing a non - generic noun concept .Although a number of proper nouns are already present in the lexicon , they are already properly treated as regular lexical items .Since proper nouns behave syntactically as regular nouns , there is no need to distinguish proper nouns and nouns already in the lexicon .", "label": "", "metadata": {}, "score": "69.69826"}
{"text": "Sometimes abstractions just feel right and it is hard to exactly say why .Probably because most programming is the disharmonious combining of disjoint parts , it is surprising and pleasant when you discover abstractions that - seemingly by chance - fit together perfectly .", "label": "", "metadata": {}, "score": "69.72921"}
{"text": "When we close an anaphor , we do n't need to change the way our anaphoric macros function , just restrict them in the ways they can be combined .Because we have turned the alet expansion inside out , we can lexically see the creation of the this anaphor in the definition of alet - hotpatch .", "label": "", "metadata": {}, "score": "69.79466"}
{"text": "The apply hook function is used only for application of ordinary functions within eval .It is not used for applications via apply or funcall , for applications by such functions as map or reduce , or for invocation of macro - expansion functions by either eval or macroexpand .", "label": "", "metadata": {}, "score": "69.800644"}
{"text": "claim 30 , further comprising the step of assigning numbers to said concepts .A method of ontological parsing that converts natural - language text into predicate - argument format as recited in . claim 34 , further comprising the step of subtracting said numbers to determine if features are in agreement , wherein a negative number indicates feature incompatibility .", "label": "", "metadata": {}, "score": "70.04035"}
{"text": "Despite such an improvement over a decimal representation , the branching factor of only 16 is still unacceptably small .A solution to this is to use a modified hexadecimal representation .Since it is unlikely that a reasonable , specialized ontology will need more than eight levels of general concept representation , a 16-digit hexadecimal number can be interpreted slightly differently , as an octet of hexadecimal pairs : .", "label": "", "metadata": {}, "score": "70.138504"}
{"text": "FIG .5 is a flowchart showing the sequence of operations of the editor thread ; and .FIG .6 is a flowchart showing the sequence of operations of the control - character routines of the editor thread .DETAILED DESCRIPTION .", "label": "", "metadata": {}, "score": "70.20826"}
{"text": "The old Pause Mark is changed to a blank ( space ) , as indicated by the legend REMOVE OLD PAUSE MARK .For convenience in finding the location of the Pause Mark subsequently , a memory word location is reserved as a Pause Register for storage of the location address of the Pause Mark .", "label": "", "metadata": {}, "score": "70.27503"}
{"text": "In addition , a list whose car is quote , such as ( quote foo ) , is considered to be a constant .If constantp is false of an object , then that object , considered as a form , might or might not always evaluate to the same thing .", "label": "", "metadata": {}, "score": "70.27884"}
{"text": "passing control of the central processing unit from an executing thread to another thread before the end of the timeslice of the executing thread whenever the executing thread has completed said portion of its subtask before said end of said timeslice . interrupting the execution of an executing instruction thread and preemptively taking control of the microprocessor away from said executing instruction thread in response to each said activation of said interrupt input , . passing control of the microprocessor to another of said threads of said software program for execution of said another thread , . thereafter returning control of the microprocessor to said interrupted thread to enable the latter to resume execution , at the point where said thread had been interrupted , until the next activation of said interrupt input by said clock driven means , . actuating operator responsive means and thereby interactively controlling the execution of at least one of said program threads during the execution of said one thread , .", "label": "", "metadata": {}, "score": "70.29158"}
{"text": "A feature of the present invention that seeks to redress this deficiency of each definition taken separately is the notion of \" backward linking . \"Instead , such traditional definitional information is here augmented by information gleaned from other dictionary entries which use the term \" flower \" in their definitions .", "label": "", "metadata": {}, "score": "70.30256"}
{"text": "Carter , R. J. ( 1976 ) ' Some Constraints on Possible Words ' , Semantikos , 1 : 27 - 66 .Chomsky , Noam ( 1955 )The Logical Structure of Linguistic Theory , Plenum , New York ( 1975 ) .", "label": "", "metadata": {}, "score": "70.39067"}
{"text": "The disclosed details are merely illustrative of one of the many forms which the invention may take in practise .The invention and novelty reside in neither the hardware nor the software taken separately , but rather in the novel combination of both .", "label": "", "metadata": {}, "score": "70.479256"}
{"text": "For adding semantic relations to the words which are the value of lower level relations , all relations to the original headword must be inverted .The inversion of typical_object is typical_object_of , and the inversion of purpose is purpose_of .The following semantic relation is added to the entry for insect based on the information extracted from \" corolla \" : .", "label": "", "metadata": {}, "score": "70.50813"}
{"text": "Pandoric - eval uses a special variable that we have named pandoric - eval - tunnel to make a pandoric closure available to the eval function through the dynamic environment .We choose exactly which lexical variables to tunnel through the dynamic environment by providing a list of all their symbols as the first argument to pandoric - eval .", "label": "", "metadata": {}, "score": "70.53988"}
{"text": "Do not assign to the exception parameter .When do I get this error ?The \" Do not assign to the exception parameter \" error is thrown when JSLint , JSHint or ESLint encounters an assignment inside a catch block to the identifer associated with that block .", "label": "", "metadata": {}, "score": "70.591324"}
{"text": "This knowledge , which originally was explicit only in the definition of \" flower , \" is now explicit in the entry for \" plant \" as well .After the knowledge base has been augmented with the inverted semantic relation structures , it is sometimes desirable to repeat the entire process .", "label": "", "metadata": {}, "score": "70.99611"}
{"text": "This provides a springboard for a discussion of the status of word - formation rules in the lexicon as well as the role of semantic and pragmatic factors in word - formation .In chapter 57 ' When nouns surface as verbs'(Source : Language 55(4 ) ( 1979 ) : 767 - 811 . ) , Eve V. Clark and Herbert H. Clark explore zero derivation resulting in nouns surfacing as verbs in English .", "label": "", "metadata": {}, "score": "71.036446"}
{"text": "Misuse of eval can result in slower programs because eval can be a very expensive operation - mostly because it needs to expand macros present in the form passed to it .Should you suddenly find a need for eval when programming , ask yourself why you did n't do whatever it is you want to do a lot earlier .", "label": "", "metadata": {}, "score": "71.05699"}
{"text": "Since the parser is both probabilistic and operating on multiple streams of possible ontological entities , it is necessary to prune out spurious parse trees generated by the parser 230 .Parser filters 250 are designed to prune out spurious parse trees generated by the parser 230 , by removing trees that violate either statistical or ontological criteria for well - formed - ness .", "label": "", "metadata": {}, "score": "71.07013"}
{"text": "As an example , we relate this ability to open up closures by comparing it to the hotpatching macros from section 6.5 , Hotpatching Closures .Recall that alet - hotpatch and its closed anaphor cousin , let - hotpatch , create closures with an indirection environment so that the function that is called when the closure is invoked can be changed on the fly .", "label": "", "metadata": {}, "score": "71.0824"}
{"text": "Reduce actions cause the parser to finish the current production and replace the assembled symbols with the symbol that replaces them ; .Accepts cause the parser to finish assembling a complete parse tree and halt ; .Errors cause the parser to give up because no grammar rule is available to reconcile what has already been parsed with what remains in the input stream .", "label": "", "metadata": {}, "score": "71.09013"}
{"text": "Overview .Lexical knowledge is poorly characterized by even the best definition of a word .The foregoing example of the definition for \" flower \" amply proves the point .Humans , by virtue of their ability to understand a definition in the relational context of a well developed prior knowledge base , can intuitively compensate for many such definitional deficiencies .", "label": "", "metadata": {}, "score": "71.12449"}
{"text": "A selectional restriction filter vetoes any parse tree where there are conflicts between the selectional features of the concepts serving as arguments to another concept and the restrictions of that concept .Selectional restrictions are imposed on the argument positions of predicate structures .", "label": "", "metadata": {}, "score": "71.12526"}
{"text": "To set it , you can use ( setf x 5 ) .Similarly , to access the car slot of a cons called , say , x , you use ( car x ) .To set it , you can use the form ( setf ( car x ) 5 ) .", "label": "", "metadata": {}, "score": "71.23236"}
{"text": "This makes languages comparable and , with a minor shift , similar .Resumptive pronouns , for example , are considered ungrammatical in standard English .However , they are used in some English dialects and in Hebrew in similar contexts .", "label": "", "metadata": {}, "score": "71.509796"}
{"text": "Even the important fact that flowers prototypically have a pleasant scent goes unmentioned .In this case , however , such a strategy is not especially productive , yielding general information about plants but no specific details about flowers .The question then remains : how to acquire the semantic knowledge required for an unrestricted domain .", "label": "", "metadata": {}, "score": "71.54649"}
{"text": "claim 1 in which the natural language parser analyzes for at least 8 of the following semantic relations : part , part_of , typical_subject , typical_subject_of , typical_object , typical_object_of , purpose , purpose_of , location_of , located_at , and synonym .", "label": "", "metadata": {}, "score": "71.71274"}
{"text": "Jackendoff , R. S. ( 1983 ) Semantics and Cognition , Cambridge , Mass. : MIT Press .Lees , R. B. ( 1960 )The Grammar of English Nominalizations , Mouton , The Hague .Lieber , R.(1980 )On the Organization of the Lexicon , Doctoral dissertation , MIT , Cambridge , Massachusetts .", "label": "", "metadata": {}, "score": "71.80167"}
{"text": "The next three articles are concerned with the disintegration of morphology in language disorders .In chapter 71 ' Aphasics ' attention to grammatical morphemes ' ( Source : Language and Speech 20 ( 1977 ) : 11 - 19 . ) , Cheryl Goodenough , Edgar B. Zurif and Sandra Weintraub show that agramatism in aphasics results in a failure to attend to normally semantically empty morphemes .", "label": "", "metadata": {}, "score": "71.87581"}
{"text": "Description .Applicants hereby incorporate by reference co - pending application Ser .No .09/627,295 filed in the U.S. Patent and Trademark Office on Jul. 27 , 2000 , entitled \" Concept - Based Search and Retrieval System . \" BACKGROUND OF THE INVENTION .", "label": "", "metadata": {}, "score": "71.910324"}
{"text": "We can simply access the variables using with - pandoric as we have demonstrated above , or , since this is lisp , design a more specific interface .Defpan is a combination of the defun and with - pandoric macros .", "label": "", "metadata": {}, "score": "71.93738"}
{"text": "Our method allows the following information to be extracted from the definition of \" plant , \" and these semantic relations are added to this sense entry for \" plant \" : . flower ( n,1 ) \" the part of a plant , often beautiful and coloured , that produces seeds or fruit \" .", "label": "", "metadata": {}, "score": "71.9792"}
{"text": "Languages such as Japanese or Russian , which permit free ordering of words , but mark intended usage by morphological changes , would be difficult to parse using the Brash system .The patent to Hemphill et al .( U.S. Pat .", "label": "", "metadata": {}, "score": "72.22487"}
{"text": "claim 12 in which only the first set of semantic relations includes \" hypernym .\" The method of .claim 12 in which only the first set of semantic relations includes \" user , \" \" domain \" and \" manner . \"", "label": "", "metadata": {}, "score": "72.231384"}
{"text": "The disclosed structure and operation of the present application as filed are identical to those of said three prior applications and support the claims of the present application which is therefore entitled to an effective filing date of Sep. 28 , 1982 .", "label": "", "metadata": {}, "score": "72.250015"}
{"text": "Symbol - macrolet , like its name implies , allows us to expand symbols into general lisp forms .Since it is intuitive and more flexible to use forms that look like function calls to represent macro transformations 20 Symbol macros take no arguments so a symbol macro definition always expands the same .", "label": "", "metadata": {}, "score": "72.292564"}
{"text": "a central processor having an interrupt operation and means for executing a thread under control of the latter , . a memory , . a clock timer for periodically activating said interrupt operation at brief predetermined time - sliced intervals so as to interrupt the execution of an executing thread and to take therefrom control of the central processor upon each said activation of said interrupt operation , and . an interrupt service routine responsive to each said clock timer activation of said interrupt operation for passing control of the central processor to another of said threads of said multithreaded software program for execution of said another thread , . said clock timer , interrupt operation and interrupt service routine coacting to switch control of the central processor from one thread to another thread repeatedly and rapidly so that the threads effectively execute simultaneously .", "label": "", "metadata": {}, "score": "72.352585"}
{"text": "Similar to the lexer filters 150 , the parser filters 250 may be chained together to form a list of filters to be applied to each candidate parse tree .Each parser filter 250 will keep track of the filter that should be applied immediately before it , and will submit candidate parse trees to that filter before performing a filtering function .", "label": "", "metadata": {}, "score": "72.355576"}
{"text": "Queinnec remarks that when defining a method for a MEROONET class it would be nice to be able to directly refer to the fields of the object being defined instead of using accessors .In Queinnec 's ( translated ) words [ SMALL - PIECES - P340 - 341 ] : .", "label": "", "metadata": {}, "score": "72.51126"}
{"text": "This finding is further elaborated by Elizabeth Bates , Angela Friederici and Beverly Wulfeck in chapter 72 ' Grammatical morphology in aphasia : evidence from three languages ' ( Source : Cortex 23 ( 1987 ) : 545 - 574 . )", "label": "", "metadata": {}, "score": "72.55704"}
{"text": "That is , like a good number of macros in this book , they invisibly introduce lexical bindings and thus can not be created with macro systems that strictly enforce hygiene .Even the vast majority of Scheme systems , the platform that has experimented the most with hygiene , provide unhygienic defmacro - style macros - presumably because not even Scheme implementors take hygiene very seriously .", "label": "", "metadata": {}, "score": "72.593544"}
{"text": "Hotpatching Closures .There are three purposes for this important section .First , another interesting use of the this anaphor from alet is described .Second , the pattern alet over dlambda is discussed .Finally , a useful macro technique called anaphor closing is introduced .", "label": "", "metadata": {}, "score": "72.68643"}
{"text": "The macro pandoric - recode takes a slightly different approach to hotpatching .It conserves the original lexical environment of the code while still managing to change the function to be executed when the closure is invoked to something coded and compiled externally .", "label": "", "metadata": {}, "score": "72.68941"}
{"text": "In chapter 76 ' Morphological change : towards a typology ' ( Source : Jacek Fisiak ( ed . ) , Historical Morphology , Trends in Linguistics .Studies and Monographs 29 , Berlin : Mouton , 1980 , pp . 1 - 50 . ) , Henning Andersen discusses a wide - ranging typological study of morphological change .", "label": "", "metadata": {}, "score": "72.80177"}
{"text": "display means for interactively showing to an operator the effects of said operator actuated control , . whereby a thread of the program may execute interactively with the operator in the foreground while another thread of the same program executes in the background concurrently with the execution of the foreground thread , and . said clock and interrupt service routine coacting to switch control of the central processor means repeatedly between the foreground and background threads so rapidly that an interactive operator perceives the foreground and background threads to be executing simultaneously .", "label": "", "metadata": {}, "score": "72.89815"}
{"text": "The modal verb filter removes modal verbs from sentence objects .Modal verbs are verbs such as \" should \" , \" could \" , and \" would \" .Such verbs alter the conditions under which a sentence is true , but do not affect the basic meaning of the sentence .", "label": "", "metadata": {}, "score": "72.927"}
{"text": "AS does not assume native - speaker intuition about English .English example sentences are glossed wherever needed .A great number of example sentences , maybe more than a half , are taken from other European and non - European languages .", "label": "", "metadata": {}, "score": "73.36063"}
{"text": "Anaphora .Another problem for which a rich semantic knowledge base provides a solution is that of anaphora : pronouns and definite noun phrase 's referring back to some entity introduced earlier in the discourse .Sentences in a discourse are often linked by anaphora and it is important in any NLP or AI application to correctly identify the antecedent , i.e. , the word which the anaphor points back to , ( or forward to in the case of cataphora ) .", "label": "", "metadata": {}, "score": "73.38994"}
{"text": "claim 22 , wherein said parser filters include a selectional restriction filter and a parse probability filter .A system for ontological parsing that converts natural - language text into predicate - argument format as recited in .claim 23 , wherein said selectional restriction filter vetoes parse trees having conflicts between selectional features of concepts serving as arguments to a second concept and restrictions of said second concept .", "label": "", "metadata": {}, "score": "73.57071"}
{"text": "PRIOR APPLICATIONS .This application is a continuation of my prior copending application Ser .No .07/496,282 filed Mar. 20 , 1990 which application was in turn a continuation of my prior applications Ser .No .06/425,612 filed Sep. 28 , 1982 and abandoned Apr. 5 , 1990 , and Ser .", "label": "", "metadata": {}, "score": "73.57558"}
{"text": "Dunja Mladinic , Turning Yahoo into an Automatic Web Page Classifier , ECAI 98:13th European Conference on Artificial Intelligence , Brighton , UK , Aug. 23 to Aug. 28 , 1998 , pp .473 - 474 , John Wiley & Sons , Ltd. .", "label": "", "metadata": {}, "score": "73.583786"}
{"text": "In chapter 43 ' The agreement hierarchy'(Source : Journal of Linguistics 15 ( 1979 ) : 203 - 224 . ) , G. C. Corbett focuses on agreement phenomena , another area of inflectional morphology where there is a clear relatedness of morphology to syntax .", "label": "", "metadata": {}, "score": "73.68649"}
{"text": "display means for interactively showing to an operator the effects of said operator actuated control , . whereby a thread of a program may execute interactively with the operator in the foreground while another thread of the same program executes in the background concurrently with the execution of the foreground thread , and . said clock timer , interrupt operation and interrupt service routine coacting to switch control of the central processor repeatedly between the foreground and background threads so rapidly that an interactive operator perceives the foreground and background threads to be executing simultaneously .", "label": "", "metadata": {}, "score": "73.93727"}
{"text": "Moreau [ 20 ] rounded up the view on dy ... . \" ... 23 things I know about modules for Scheme The benefits of modularization are well known .However , modules are not standard in Scheme .This paper accompanies an invited talk at the Scheme Workshop 2002 on the current state of modules for Scheme .", "label": "", "metadata": {}, "score": "73.96829"}
{"text": "It is shown that individual languages select one or more options from a limited set of strategies .Languages show systematic parallelism where following the same strategy .We learn , for example , that ' while'-clauses in Malayalam function as their English equivalents .", "label": "", "metadata": {}, "score": "74.06331"}
{"text": "A short analysis of Malayalam shows how to distinguish semantic role , word order and grammatical relation in their contribution to define the prominence of an NP , thus making an NP an eligible antecedent .Long - distance reflexives are shown to have mostly subjects as antecedents .", "label": "", "metadata": {}, "score": "74.29451"}
{"text": "Following that , it would be passed to the lexer 120 , which would access the ontology 140 , and return the sequence : .The - det octopus - noun have - verb a - det heart - noun .Here , det stands for determiner , which is a word with a purely grammatical function , namely specifying a noun phrase .", "label": "", "metadata": {}, "score": "74.46798"}
{"text": "They propose a number of statistical measures of productivity which focus on the quantitative weight of linguistic restrictions on word - formation rules ., Ingo Plag puts forward a unifying analysis of the suffix -ize in English .He teases out the various meanings of the -ize suffix and argues that all the meanings of -ize are derived from one single semantic representation , which is claimed to be the underspecified Lexical Conceptual Structure ( LCS ) of possible -ize derivatives .", "label": "", "metadata": {}, "score": "74.670166"}
{"text": "139 - 154 . ) , Jaap van Marle investigates the role of semantics in productivity change diachronically .Considering Dutch deverbal adjectives , he discusses the questions that in the diachronic dimension of morphological productivity , how the change from productive to non - productive and the vice - versa takes place .", "label": "", "metadata": {}, "score": "74.98285"}
{"text": "each thread having a respective series of spaced time - sliced intervals of execution with the time - sliced intervals of each series interleaved with the time - sliced intervals of at least one other series , . said interrupt service routine preemptively taking control of the central processor from an executing thread at the end of its time - sliced interval after the executing thread has performed only a portion of its task , . said interrupt service routine comprising a thread scheduler to pass control of the central processor to another thread to perform the next successive portion of the task of said another thread during the next successive time - sliced interval of the respective series of time - sliced intervals of said another thread , . whereby the task of each thread is performed piecewise with the successive task portions of each thread interleaved with the successive task portions of at least one other thread , . operator actuated means for interactively controlling the execution of one of said program threads , and .", "label": "", "metadata": {}, "score": "75.05657"}
{"text": "This section , although very lengthy , has still only scratched the surface of what is possible with pandoric macros and their many possible variations .I am looking forward to the many interesting future developments that will come out of them .", "label": "", "metadata": {}, "score": "75.14515"}
{"text": "205 - 6 , for a complete list . )It will be noted that the structure may be viewed as circular in arrangement , with a link connecting the \" or1 \" in the bottom right to the \" or1 \" at the top of the diagram ( link not here shown ) .", "label": "", "metadata": {}, "score": "75.16998"}
{"text": "This relation has one value , namely \" meet . \"( That is , a \" market \" is the location of \" meet .The value \" meet , \" however , is a headword itself as respects three further terms in the definition : \" buy , \" \" sell \" and \" people . \" The semantic relation structure reflects this relationship by further labelled links of purpose ( Purp , for the values \" buy \" and \" sell \" ) and typical subject ( Tsub , for the value \" people \" ) .", "label": "", "metadata": {}, "score": "75.2841"}
{"text": "She shows that although Navajo inflectional morphology seems to obey the Mirror Principle ( ch 42 ) to some extent , it fails to confirm to syntactic head - to - head movement .She claims that morpheme order is constrained by head - to - head movement , but is not completely determined by principles of syntax .", "label": "", "metadata": {}, "score": "75.3396"}
{"text": "This paper presents these problems and the solutions we found .Amusingly , most of our solutions rely on continuations .Are browsers and multimedia the future of continuations ?While developing the software of a browser - operated educational CD - ROM , we had to face a number of problems .", "label": "", "metadata": {}, "score": "75.38311"}
{"text": "manually interactively controlling the execution of one of said program threads while said thread executes in the foreground , . displaying to an operator the effects of said manual control , . whereby said one thread executes interactively in the foreground while another thread of the same program executes in the background concurrently with the execution of the foreground thread , and . switching control of the central processing unit repeatedly between the foreground and background threads so rapidly that an interactive operator perceives the foreground and background threads to be executing simultaneously .", "label": "", "metadata": {}, "score": "75.45265"}
{"text": "each of said threads has a respective task to perform , .each thread having a respective series of spaced time - sliced intervals with the intervals of each series interleaved with the intervals of at least one other series , . said interrupt service routine preemptively taking control of the central processor from an executing thread at the end of its then current time - sliced interval at which time the executing thread has performed only a portion of its task , . said interrupt service routine comprising means to pass control of the microprocessor to another thread to perform a next successive portion of the task of said another thread during a next successive time - sliced interval of the respective series of time - sliced intervals of said another thread , . whereby the task of each thread is performed piecewise with the successive task portions of each thread interleaved with the successive task portions of at least one other thread .", "label": "", "metadata": {}, "score": "75.54199"}
{"text": "4 is an example parse tree according to the present invention ; .FIG .5 is another example parse tree according to the present invention ; .FIG .6 is another example parse tree according to the present invention ; and .", "label": "", "metadata": {}, "score": "75.55957"}
{"text": "claim 1 in which the parsing and extracting steps include : .( a ) providing a natural language corpus : .( b ) analyzing the corpus by machine to identify a set of text segments therein ; .( c ) automatically discerning from the text segments a first collection of complex semantic relation structures ; and .", "label": "", "metadata": {}, "score": "75.67123"}
{"text": "I researched the 19th century for this chapter .The book is coming along really well , although it needs to be proofread and the bibliography is too long .Our semantic knowledge base makes it possible to discover the links between these sentences , providing an explanation for the otherwise mysterious use of definite articles preceding \" book \" and \" bibliography \" in the second .", "label": "", "metadata": {}, "score": "75.772644"}
{"text": "Dynamically generated services e ... \" .This article presents the STROBE model : both an agent representation and an agent communication model based on a social approach , that means interaction centred .This model represents how agents may realise the interactive , dynamic generation of services on the Grid .", "label": "", "metadata": {}, "score": "75.876686"}
{"text": "manually interactively controlling the execution of one of said program threads , and . displaying to an operator the effects of said manual control , . whereby a thread of a program may execute interactively with the operator in the foreground while another thread of the same program executes in the background concurrently with the execution of the foreground thread , and . switching control of the central processor repeatedly between the foreground and background threads so rapidly that an interactive operator perceives the foreground and background threads to be executing simultaneously .", "label": "", "metadata": {}, "score": "76.084885"}
{"text": "display means for interactively showing to an operator the effects of said operator actuated interaction .A multithreading computer system as set forth in claim 22 wherein . said operator actuated means comprises a keyboard , and said display means comprises a video monitor having a viewing screen , . whereby the effects of actuation of the keyboard upon execution of said one thread in the foreground are displayed on said screen in real time concurrently with said background execution of another thread , . said keyboard having keys which may be struck by the operator at spaced time instants to provide a sequence of keystrokes with respective time intervals between each pair of successive keystrokes , . said central processing means executing said foreground thread in response to said keystrokes , and . said central processing means executing said background thread during said time intervals between pairs of successive keystrokes .", "label": "", "metadata": {}, "score": "76.5585"}
{"text": "Gruber , J.S. ( 1965 ) ' Studies in Lexical Relations ' , doctoral dissertation , MIT Cambridge , Mass. .Halle , M.(1979 ) ' ' Formal vs Functional Considerations in Phonology ' ' , in B. Brogyany ( ed . )", "label": "", "metadata": {}, "score": "76.61064"}
{"text": "Language 23 : 399 - 418 .Bloomfield , L. ( 1933 ) Language .New York : Holt .Bloomfield , L. ( 1933 ) Language .Reprint , Allen & Unwin , London 1976 .Bresnan , J. ( 1971 ) ' ' Sentence Stress and Syntactic Transformations , ' ' Language 47 , 257 - 281 .", "label": "", "metadata": {}, "score": "77.00169"}
{"text": "This would add 8 bytes of total storage to each node in the tree .For a 10,000-concept tree , this is only 80 KB .For a 100,000-concept tree , it is 800 KB .And for a 1,000,000-concept tree , it is 8 MB .", "label": "", "metadata": {}, "score": "77.13097"}
{"text": "Make - noisy - stats - counter is identical to make - stats - counter except that it uses the self anaphor to invoke our defpan functions stats - counter - mean , stats - counter - variance , and stats - counter - stddev .", "label": "", "metadata": {}, "score": "77.271515"}
{"text": "Just as learning C pointers breeds dubious stylistic advice , so does free variable injection .The most plausible hypothesis for the source of difficulty in understanding free variable injection is its fail - safe behaviour 12 Safe in the sense that , contrary to the real world , failing as quickly and as loudly as possible is safest .", "label": "", "metadata": {}, "score": "77.53375"}
{"text": "In chapter 68 ' The child 's learning of English morphology ' ( Source : Word 14(1958 ) : 150 - 177 . ) , Jean Berko investigates how children , ranging from four to seven years in age , acquire English morphology .", "label": "", "metadata": {}, "score": "79.21573"}
{"text": "( 5 ) I researched the 19th century for this chapter .The prepositional phrase attachment in this sentence is unambiguous : any native speaker of English will infer first of all that writing / reading the chapter in question required researching the 19th century , and further , that the speaker is writing / reading a book .", "label": "", "metadata": {}, "score": "79.33765"}
{"text": "2 , 3 and 4 .The sequence of steps , and the rich tree - like representations of the resultant logical form and semantic relation structures that can thereby develop , may be better appreciated by consideration of .FIGS .", "label": "", "metadata": {}, "score": "79.5416"}
{"text": "As mentioned above , this definition is noteworthy more for the information that it omits than for what it provides .Missing from this definition is any detailed description of the physical structure of flowers , information about what kinds of plants have flowers , and so on .", "label": "", "metadata": {}, "score": "79.97516"}
{"text": "The hook feature is provided as an aid to debugging .The step facility is implemented using this hook .[Function ] .evalhook form evalhookfn applyhookfn & optional env .applyhook function args evalhookfn applyhookfn & optional env .The functions evalhook and applyhook are provided to make it easier to exploit the hook feature .", "label": "", "metadata": {}, "score": "79.98501"}
{"text": "The same is shown for the anti - passive .Finally the case of Western Austronesian Languages like Balinese and Sama is discussed where transitive verbs may appear in two forms , one similar to absolutive - ergative and the other as nominative - accusative .", "label": "", "metadata": {}, "score": "80.14665"}
{"text": "repeatedly preemptively taking control of the central processor from at least one executing thread at the end of its time - sliced interval after the executing thread has performed only a portion of its respective subtask .In a method as recited in claim 6 wherein said program has a task to be performed , said task comprising a plurality of subtasks each executable by a respective one of said threads , the further steps comprising . providing in response to said clock timer activating said interrupt operation a respective series of spaced time - sliced intervals for the execution of each thread with the intervals of each series interleaved with the intervals of at least one other series , . preemptively taking control of the central processor from an executing thread at the end of its then current time - sliced interval at which time the executing thread has performed only a portion of its subtask , . passing control of the central processor to another thread to perform a next successive portion of the subtask of said another thread during a next successive time - sliced interval of the respective series of time - sliced intervals of said another thread , and . thereby performing the subtask of each thread piecewise with the successive portions of each thread subtask interleaved with the successive portions of at least one other thread subtask .", "label": "", "metadata": {}, "score": "80.30798"}
{"text": "59 ' Morphology is in the lexicon ! '( Source : Linguistic Inquiry 15(3 ) ( 1984 ) : 474 - 498 . ) , in answer to Anderson 's ' ' where is morphology ? ' ' ( ch.12 ) , John Jensen and Margaret Stong - Jensen argue for a Strong Lexicalist Hypothesis where all morphology is placed unequivocally in the lexicon .", "label": "", "metadata": {}, "score": "80.94867"}
{"text": "VOLUME IV -- MORPHOLOGY : ITS RELATION TO SYNTAX A major theme running through many of the papers in this volume is how similar or different is morphology to syntax ?Many linguists have argued for an intimate relationship between syntactic operations and word formation .", "label": "", "metadata": {}, "score": "81.28635"}
{"text": "A typical case is the word \" flower \" in Longman Dictionary of Contemporary English ( henceforth , LDOCE ) whose primary sense is noteworthy more for the information it omits than for what it provides : . flower ( n,1 ) \" the part of a plant , often beautiful and coloured , that produces seeds or fruit \" .", "label": "", "metadata": {}, "score": "81.847"}
{"text": "Adding sense numbers wherever they are available produces the following entry of \" flower \" : .The second semantic relation extracted for the word \" corolla \" is : corolla purpose attract .Finally , this semantic relation is also added to the entry for the words which are the value of the lower level relations , in this example : \" insect .", "label": "", "metadata": {}, "score": "82.399734"}
{"text": "Like many programming books , Lisp in Small Pieces takes us to and leaves us at an implementation of a system for object - oriented programming .Usually these implementations serve to outline a subset of CLOS , the C OMMON L ISP Object System .", "label": "", "metadata": {}, "score": "82.80339"}
{"text": "They claim that such an approach of the lexicon can be used to improve the overall robustness of automatic natural language processing - both in terms of lexicon acquisition and language learnability .In chapter 75 ' Network morphology : a DATR account of Russian nominal inflection ' ( Source : Journal of Linguistics 29 ( 1993 ) : 113 - 142 . ) , Greville G.Corbett and Norman M. Fraser argue for an analysis of Russian inflectional morphology using the monostratal declarative theory called Network Morphology , which uses the lexical representation language DATR .", "label": "", "metadata": {}, "score": "83.036285"}
{"text": "However , the relation between \" chain \" and \" gold \" is more tricky .Given the definition 's structure , it would appear that the semantic relation linking \" chain \" and \" gold \" is part_of ( i.e. chain part_of gold ) ; this , however , is not correct .", "label": "", "metadata": {}, "score": "84.11839"}
{"text": "This is an example of C OMMON L ISP doing what it was designed to do : allowing abstractions based on a refined , standardised macro system .While most languages are designed to be easy to implement , C OMMON L ISP is designed to be powerful to program .", "label": "", "metadata": {}, "score": "84.23389"}
{"text": "Sanskrit Grammar .Cambridge , Mass , Harvard University Press .Williams , E. ( 1981 ) ' 'On the notions ' Lexically Related ' and ' Head of a Word ' , ' 'Linguistic Inquiry 12 , 245 - 274 .", "label": "", "metadata": {}, "score": "84.28216"}
{"text": "47 could have preceded ch .46 as ch .46 deals directly contra ch .47 William 's notion of ' head of a word ' .In ch .46 , be- heading the word Bauer claims that ' ' heads have no place in morphology ' ' .", "label": "", "metadata": {}, "score": "84.54187"}
{"text": "Although C OMMON L ISP still allows a large number of legal ways to implement macro systems , it is designed to provide general meta - programming tools that come together in standard and portable ways .The two advanced C OMMON L ISP macro features that allow us to implement things like CLOS 's with - slots are generalised variables and symbol macros .", "label": "", "metadata": {}, "score": "84.61217"}
{"text": "In chapter 52 ' Form and Meaning - their interplay in morphology ' ( Source : Travaux linguistiques de Prague 4 ( 1971 ) : 157 - 187 . ) , Ivan Poldauf explores the interplay between form and meaning in morphology .", "label": "", "metadata": {}, "score": "84.65328"}
{"text": "Consider sitting in a house full of fragile glass .You can safely throw objects to people outside the house , even if they do n't bother catching them , but you had better make sure you catch any objects thrown back at you .", "label": "", "metadata": {}, "score": "85.02866"}
{"text": "Input device 118 can be a keyboard , mouse , or other device for providing input data to the computer .Output device 116 can be a display device , printer , or other device for providing output data from the computer .", "label": "", "metadata": {}, "score": "85.13844"}
{"text": "Oliver Streiter teaches syntax and corpus linguistics at the National University of Kaohsiung , Taiwan .His research interests include computational linguistics , corpus linguistics and computer assisted language learning .Let Over Lambda-50 Years of Lisp . by Doug Hoyte .", "label": "", "metadata": {}, "score": "85.23279"}
{"text": "( 1 ) I ate a fish with bones .The relevant semantic information from Webster 7 that allows a heuristic to decide that \" with bones \" should be attached to \" fish \" is : .The semantic network that allows this attachment to be made is shown in .", "label": "", "metadata": {}, "score": "86.0517"}
{"text": "John Benjamins B. V. , Amsterdam .Harris , Z. ( 1941 ) ' ' Linguistic Structure of Hebrew ' ' , Journal of the American Oriental Society 62 , 143 - 167 .Harris , Z. ( 1951 ) Methods in Structural Linguistics , University of Chicago Press , Chicago , Illinois .", "label": "", "metadata": {}, "score": "86.25035"}
{"text": "23 things I know about modules for Scheme The benefits of modularization are well known .However , modules are not standard in Scheme .This paper accompanies an invited talk at the Scheme Workshop 2002 on the current state of modules for Scheme .", "label": "", "metadata": {}, "score": "87.73564"}
{"text": "In C OMMON L ISP , any non - nil value is a true boolean value so C OMMON L ISP programmers typically embed interesting information in truth values .Languages that have reserved true and false values - notably Scheme - employ explicit booleans , which sometimes force you to throw out extra information to satisfy redundant type constraints .", "label": "", "metadata": {}, "score": "88.744156"}
{"text": "For example , consider a tree shown in FIG .7 .It is clear that in some cases , it is useful to know the distance between words , but that it is not equally useful in all cases .However , since neither of these terms shares any properties beyond \" organic \" with \" amino acid , \" it is not helpful to know the distance between \" bread \" and \" amino acid , \" even though they are only one level apart .", "label": "", "metadata": {}, "score": "89.33511"}
{"text": "In Lisp in Small Pieces there is a short but interesting discussion on macros .Much of it relates to describing the different macro system variations possible thanks to the ambiguity of the Scheme macro specification 18 Thanks , but no thanks . , but there are also a few interesting notes on why we might want to use macros and how to go about using them .", "label": "", "metadata": {}, "score": "90.55298"}
{"text": "Kalyanamalini Sahoo has extensively worked on morphosyntactic investigations in the South - Asian language Oriya , including applicational fields like computational morphology .She received her Ph.D. from Norwegian University of Science & Technology , Trondheim , Norway , in the year 2001 and is primarily interested in computational morphology and syntax . \" ...", "label": "", "metadata": {}, "score": "90.97743"}
{"text": "Memory system 104 generally includes high - speed main memory 114 in the form of a medium such as random access memory ( RAM ) and read only memory ( ROM ) semiconductor devices .Main memory 114 stores programs such as a computer 's operating system and currently running application programs .", "label": "", "metadata": {}, "score": "92.12153"}
{"text": "Investigate your favourite CLOS implementation , imitate how dispatching is done there , re - benchmark .All material is ( C ) Doug Hoyte unless otherwise noted or implied .All rights reserved .It is widely accepted that the semantic content of a lexical entry determines to a large extent its syntactic subcategorization or other contexts of occurrence .", "label": "", "metadata": {}, "score": "92.15209"}
{"text": "The inversion of the part_of relationship is the part relationship .The following semantic relation will be added to the entry for \" flower \" : . flower part : corolla .Having processed the definition of \" flower \" and the definition of \" corolla , \" the entry for \" flower \" now is the following : . flower ( n,1 ) \" the part of a plant , often beautiful and coloured , that produces seeds or fruit \" .", "label": "", "metadata": {}, "score": "92.85829"}
{"text": "1 . )Other semantic relations , however , are more difficult to identify without an established knowledge base .A simple example may help illustrate the point .Consider the following definition of necklace : . necklace : a chain of gold .", "label": "", "metadata": {}, "score": "94.920944"}
{"text": "For example , when the headword \" corolla \" is being processed , first its definition is parsed and then the heuristic rules are applied .Below are shown some of the semantic relations which have been extracted from the parsed definition of \" corolla \" ; these relations are added to this sense entry of \" corolla \" : . corolla ( n , 1 ) \" the part of a flower formed by the petals , usu . brightly coloured to attract insects \" .", "label": "", "metadata": {}, "score": "96.30638"}
{"text": "Open the box .First we take a slight detour through another famous lisp book : Lisp in Small Pieces [ SMALL - PIECES ] by Christian Queinnec .Queinnec is a widely respected lisp expert and has contributed much to our lisp knowledge .", "label": "", "metadata": {}, "score": "96.3398"}
{"text": "The colloquial rendering would be \" hanno fatto lavorare \" ( active impersonal ) .Changing the verb however , the passive becomes natural : \" e stato fatto notare \" .Another example sentence thus might do the job better .", "label": "", "metadata": {}, "score": "97.285904"}
{"text": "5 .If we replace the word \" fish \" in this sentence with any of its hyponyms , such as \" salmon , \" the heuristic above will fail to find any semantic association between this prepositional phrase and the noun it modifies : .", "label": "", "metadata": {}, "score": "97.36454"}
{"text": "From : Kalyanamalini Sahoo Subject : Morphology : Critical Concepts in Linguistics .EDITOR :Katamba , Francis X. TITLE : Morphology SUBTITLE : Critical Concepts in Linguistics SERIES : Critical Concepts in Linguistics YEAR : 2003 PUBLISHER : Routledge ( Taylor and Francis )", "label": "", "metadata": {}, "score": "97.543236"}
{"text": "Memory system 104 further generally includes secondary storage 122 in the form of floppy disks , hard disks , or CD - ROM storage for long term mass storage .Personal computer 100 further typically includes one or more input devices 118 and output devices 116 .", "label": "", "metadata": {}, "score": "97.76015"}
{"text": "Thus , when the sentence passes through the lexer filters 150 as discussed in the previous example embodiment , the stop word filter removes \" a \" and \" the , \" leaving : . octopus - noun have - verb heart - noun .", "label": "", "metadata": {}, "score": "99.49691"}
{"text": "The example sentence is : .The octopus has a heart .First , the sentence lexer 100 would process this sentence .The first component of the sentence lexer 100 , the document iterator 110 , would extract this sentence from the document it was contained in .", "label": "", "metadata": {}, "score": "100.194214"}
{"text": "Suppose that a user of a search engine which makes use of this parser asks the question : .Do octopuses have hearts ?The sentence lexer 100 will read the question , and a sentence made of ontological entities is produced .", "label": "", "metadata": {}, "score": "100.539825"}
{"text": "In the parser 220 , the tree shown in .FIG .6 is produced .The parse tree converter 230 then converts this tree into a predicate , where octopus is the subject of have , and heart is the object .", "label": "", "metadata": {}, "score": "102.012085"}
{"text": "Do - verb octopus - noun have - verb heart - noun .In the preferred embodiment 's lexer filters , the pseudo predicate filter removes the first verb \" do , \" because it is not the main verb of the sentence . \"", "label": "", "metadata": {}, "score": "103.9621"}
{"text": "Pandora 's box is a Greek myth about the world 's first woman : Pandora .Pandora , the U - language symbol , translates from Greek into all - gifted .Pandora , the woman , was tempted by curiosity to open a small box which irreparably unleashed all of humanity 's evil and sins upon the world .", "label": "", "metadata": {}, "score": "107.13695"}
{"text": "\" We can thus discover a complete path through the dictionary linking \" bone \" to \" salmon , \" as shown in .FIG .6 .However , even if we allow such chains of hypernym links to be exploited in processing , this approach sometimes fails to discover what might intuitively be an obvious semantic connection between two words .", "label": "", "metadata": {}, "score": "108.38939"}
{"text": "One more drawback is that the set is not proofread well .And a very sad thing is that even the authors names have been misspelt , e.g. ' Gleville Corbett and Norma Fraser ' for ' Greville Corbett and Norman Fraser'(p12 ) .", "label": "", "metadata": {}, "score": "109.615234"}
{"text": "From : Oliver Streiter Subject : Analyzing Syntax : A Lexical - functional Approach .AUTHOR : Kroeger , Paul R. TITLE :Analyzing Syntax SUBTITLE :A Lexical - functional Approach YEAR :2004 PUBLISHER : Cambridge University Press . Oliver Streiter , National University of Kaohsiung , Taiwan .", "label": "", "metadata": {}, "score": "110.11444"}
